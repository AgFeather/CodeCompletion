{
  "type": "Program",
  "body": [
    {
      "type": "IfStatement",
      "test": {
        "type": "BinaryExpression",
        "operator": "==",
        "left": {
          "type": "UnaryExpression",
          "operator": "typeof",
          "argument": {
            "type": "Identifier",
            "name": "_yuitest_coverage"
          },
          "prefix": true
        },
        "right": {
          "type": "Literal",
          "value": "undefined"
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "Identifier",
                "name": "_yuitest_coverage"
              },
              "right": {
                "type": "ObjectExpression",
                "properties": []
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "Identifier",
                "name": "_yuitest_coverline"
              },
              "right": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "src"
                  },
                  {
                    "type": "Identifier",
                    "name": "line"
                  }
                ],
                "defaults": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "VariableDeclaration",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "Identifier",
                            "name": "coverage"
                          },
                          "init": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                              "type": "Identifier",
                              "name": "_yuitest_coverage"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "src"
                            }
                          }
                        }
                      ],
                      "kind": "var"
                    },
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                          "type": "MemberExpression",
                          "computed": true,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "coverage"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "lines"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "line"
                          }
                        },
                        "prefix": true
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "UpdateExpression",
                              "operator": "++",
                              "argument": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "coverage"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "calledLines"
                                }
                              },
                              "prefix": false
                            }
                          }
                        ]
                      },
                      "alternate": null
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "UpdateExpression",
                        "operator": "++",
                        "argument": {
                          "type": "MemberExpression",
                          "computed": true,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "coverage"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "lines"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "line"
                          }
                        },
                        "prefix": false
                      }
                    }
                  ]
                },
                "rest": null,
                "generator": false,
                "expression": false
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "Identifier",
                "name": "_yuitest_coverfunc"
              },
              "right": {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "src"
                  },
                  {
                    "type": "Identifier",
                    "name": "name"
                  },
                  {
                    "type": "Identifier",
                    "name": "line"
                  }
                ],
                "defaults": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "VariableDeclaration",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "Identifier",
                            "name": "coverage"
                          },
                          "init": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                              "type": "Identifier",
                              "name": "_yuitest_coverage"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "src"
                            }
                          }
                        },
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "Identifier",
                            "name": "funcId"
                          },
                          "init": {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "Identifier",
                                "name": "name"
                              },
                              "right": {
                                "type": "Literal",
                                "value": ":"
                              }
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "line"
                            }
                          }
                        }
                      ],
                      "kind": "var"
                    },
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                          "type": "MemberExpression",
                          "computed": true,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "coverage"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "functions"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "funcId"
                          }
                        },
                        "prefix": true
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "UpdateExpression",
                              "operator": "++",
                              "argument": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "coverage"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "calledFunctions"
                                }
                              },
                              "prefix": false
                            }
                          }
                        ]
                      },
                      "alternate": null
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "UpdateExpression",
                        "operator": "++",
                        "argument": {
                          "type": "MemberExpression",
                          "computed": true,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "coverage"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "functions"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "funcId"
                          }
                        },
                        "prefix": false
                      }
                    }
                  ]
                },
                "rest": null,
                "generator": false,
                "expression": false
              }
            }
          }
        ]
      },
      "alternate": null
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": true,
          "object": {
            "type": "Identifier",
            "name": "_yuitest_coverage"
          },
          "property": {
            "type": "Literal",
            "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
          }
        },
        "right": {
          "type": "ObjectExpression",
          "properties": [
            {
              "type": "Property",
              "key": {
                "type": "Identifier",
                "name": "lines"
              },
              "value": {
                "type": "ObjectExpression",
                "properties": []
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Identifier",
                "name": "functions"
              },
              "value": {
                "type": "ObjectExpression",
                "properties": []
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Identifier",
                "name": "coveredLines"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Identifier",
                "name": "calledLines"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Identifier",
                "name": "coveredFunctions"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Identifier",
                "name": "calledFunctions"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Identifier",
                "name": "path"
              },
              "value": {
                "type": "Literal",
                "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Identifier",
                "name": "code"
              },
              "value": {
                "type": "ArrayExpression",
                "elements": []
              },
              "kind": "init"
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "MemberExpression",
            "computed": true,
            "object": {
              "type": "Identifier",
              "name": "_yuitest_coverage"
            },
            "property": {
              "type": "Literal",
              "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
            }
          },
          "property": {
            "type": "Identifier",
            "name": "code"
          }
        },
        "right": {
          "type": "ArrayExpression",
          "elements": [
            {
              "type": "Literal",
              "value": "YUI.add('datatable-sort-deprecated', function(Y) {"
            },
            {
              "type": "Literal",
              "value": ""
            },
            {
              "type": "Literal",
              "value": "// API Doc comments disabled to avoid deprecated class leakage into"
            },
            {
              "type": "Literal",
              "value": "// non-deprecated class API docs.  See the 3.4.1 datatable API doc files in the"
            },
            {
              "type": "Literal",
              "value": "// download at http://yui.zenfs.com/releases/yui3/yui_3.4.1.zip for reference."
            },
            {
              "type": "Literal",
              "value": "/**"
            },
            {
              "type": "Literal",
              "value": "Plugs DataTable with sorting functionality."
            },
            {
              "type": "Literal",
              "value": ""
            },
            {
              "type": "Literal",
              "value": "DEPRECATED. As of YUI 3.5.0, DataTable has been rebuilt.  This module"
            },
            {
              "type": "Literal",
              "value": "is designed to work with `datatable-base-deprecated` (effectively the 3.4.1"
            },
            {
              "type": "Literal",
              "value": "version of DataTable) and will be removed from the library in a future version."
            },
            {
              "type": "Literal",
              "value": ""
            },
            {
              "type": "Literal",
              "value": "See http://yuilibrary.com/yui/docs/migration.html for help upgrading to the"
            },
            {
              "type": "Literal",
              "value": "latest version."
            },
            {
              "type": "Literal",
              "value": ""
            },
            {
              "type": "Literal",
              "value": "For complete API docs for the classes in this and other deprecated"
            },
            {
              "type": "Literal",
              "value": "DataTable-related modules, refer to the static API doc files in the 3.4.1"
            },
            {
              "type": "Literal",
              "value": "download at http://yui.zenfs.com/releases/yui3/yui_3.4.1.zip"
            },
            {
              "type": "Literal",
              "value": ""
            },
            {
              "type": "Literal",
              "value": "@module datatable-deprecated"
            },
            {
              "type": "Literal",
              "value": "@submodule datatable-sort-deprecated"
            },
            {
              "type": "Literal",
              "value": "@deprecated"
            },
            {
              "type": "Literal",
              "value": "**/"
            },
            {
              "type": "Literal",
              "value": ""
            },
            {
              "type": "Literal",
              "value": "/*"
            },
            {
              "type": "Literal",
              "value": " * Adds column sorting to DataTable."
            },
            {
              "type": "Literal",
              "value": " * @class DataTableSort"
            },
            {
              "type": "Literal",
              "value": " * @extends Plugin.Base"
            },
            {
              "type": "Literal",
              "value": " */"
            },
            {
              "type": "Literal",
              "value": "var YgetClassName = Y.ClassNameManager.getClassName,"
            },
            {
              "type": "Literal",
              "value": ""
            },
            {
              "type": "Literal",
              "value": "    DATATABLE = \"datatable\","
            },
            {
              "type": "Literal",
              "value": "    COLUMN = \"column\","
            },
            {
              "type": "Literal",
              "value": "    ASC = \"asc\","
            },
            {
              "type": "Literal",
              "value": "    DESC = \"desc\","
            },
            {
              "type": "Literal",
              "value": ""
            },
            {
              "type": "Literal",
              "value": "    //TODO: Don't use hrefs - use tab/arrow/enter"
            },
            {
              "type": "Literal",
              "value": "    TEMPLATE = '<a class=\"{link_class}\" title=\"{link_title}\" href=\"{link_href}\">{value}</a>';"
            },
            {
              "type": "Literal",
              "value": ""
            },
            {
              "type": "Literal",
              "value": ""
            },
            {
              "type": "Literal",
              "value": "function DataTableSort() {"
            },
            {
              "type": "Literal",
              "value": "    DataTableSort.superclass.constructor.apply(this, arguments);"
            },
            {
              "type": "Literal",
              "value": "}"
            },
            {
              "type": "Literal",
              "value": ""
            },
            {
              "type": "Literal",
              "value": "/////////////////////////////////////////////////////////////////////////////"
            },
            {
              "type": "Literal",
              "value": "//"
            },
            {
              "type": "Literal",
              "value": "// STATIC PROPERTIES"
            },
            {
              "type": "Literal",
              "value": "//"
            },
            {
              "type": "Literal",
              "value": "/////////////////////////////////////////////////////////////////////////////"
            },
            {
              "type": "Literal",
              "value": "Y.mix(DataTableSort, {"
            },
            {
              "type": "Literal",
              "value": "    /*"
            },
            {
              "type": "Literal",
              "value": "     * The namespace for the plugin. This will be the property on the host which"
            },
            {
              "type": "Literal",
              "value": "     * references the plugin instance."
            },
            {
              "type": "Literal",
              "value": "     *"
            },
            {
              "type": "Literal",
              "value": "     * @property NS"
            },
            {
              "type": "Literal",
              "value": "     * @type String"
            },
            {
              "type": "Literal",
              "value": "     * @static"
            },
            {
              "type": "Literal",
              "value": "     * @final"
            },
            {
              "type": "Literal",
              "value": "     * @value \"sort\""
            },
            {
              "type": "Literal",
              "value": "     */"
            },
            {
              "type": "Literal",
              "value": "    NS: \"sort\","
            },
            {
              "type": "Literal",
              "value": ""
            },
            {
              "type": "Literal",
              "value": "    /*"
            },
            {
              "type": "Literal",
              "value": "     * Class name."
            },
            {
              "type": "Literal",
              "value": "     *"
            },
            {
              "type": "Literal",
              "value": "     * @property NAME"
            },
            {
              "type": "Literal",
              "value": "     * @type String"
            },
            {
              "type": "Literal",
              "value": "     * @static"
            },
            {
              "type": "Literal",
              "value": "     * @final"
            },
            {
              "type": "Literal",
              "value": "     * @value \"dataTableSort\""
            },
            {
              "type": "Literal",
              "value": "     */"
            },
            {
              "type": "Literal",
              "value": "    NAME: \"dataTableSort\","
            },
            {
              "type": "Literal",
              "value": ""
            },
            {
              "type": "Literal",
              "value": "/////////////////////////////////////////////////////////////////////////////"
            },
            {
              "type": "Literal",
              "value": "//"
            },
            {
              "type": "Literal",
              "value": "// ATTRIBUTES"
            },
            {
              "type": "Literal",
              "value": "//"
            },
            {
              "type": "Literal",
              "value": "/////////////////////////////////////////////////////////////////////////////"
            },
            {
              "type": "Literal",
              "value": "    ATTRS: {"
            },
            {
              "type": "Literal",
              "value": "        /*"
            },
            {
              "type": "Literal",
              "value": "        * @attribute trigger"
            },
            {
              "type": "Literal",
              "value": "        * @description Defines the trigger that causes a column to be sorted:"
            },
            {
              "type": "Literal",
              "value": "        * {event, selector}, where \"event\" is an event type and \"selector\" is"
            },
            {
              "type": "Literal",
              "value": "        * is a node query selector."
            },
            {
              "type": "Literal",
              "value": "        * @type Object"
            },
            {
              "type": "Literal",
              "value": "        * @default {event:\"click\", selector:\"th\"}"
            },
            {
              "type": "Literal",
              "value": "        * @writeOnce \"initOnly\""
            },
            {
              "type": "Literal",
              "value": "        */"
            },
            {
              "type": "Literal",
              "value": "        trigger: {"
            },
            {
              "type": "Literal",
              "value": "            value: {event:\"click\", selector:\"th\"},"
            },
            {
              "type": "Literal",
              "value": "            writeOnce: \"initOnly\""
            },
            {
              "type": "Literal",
              "value": "        },"
            },
            {
              "type": "Literal",
              "value": "        "
            },
            {
              "type": "Literal",
              "value": "        /*"
            },
            {
              "type": "Literal",
              "value": "        * @attribute lastSortedBy"
            },
            {
              "type": "Literal",
              "value": "        * @description Describes last known sort state: {key,dir}, where"
            },
            {
              "type": "Literal",
              "value": "        * \"key\" is column key and \"dir\" is either \"asc\" or \"desc\"."
            },
            {
              "type": "Literal",
              "value": "        * @type Object"
            },
            {
              "type": "Literal",
              "value": "        */"
            },
            {
              "type": "Literal",
              "value": "        lastSortedBy: {"
            },
            {
              "type": "Literal",
              "value": "            setter: \"_setLastSortedBy\","
            },
            {
              "type": "Literal",
              "value": "            lazyAdd: false"
            },
            {
              "type": "Literal",
              "value": "        },"
            },
            {
              "type": "Literal",
              "value": "        "
            },
            {
              "type": "Literal",
              "value": "        /*"
            },
            {
              "type": "Literal",
              "value": "        * @attribute template"
            },
            {
              "type": "Literal",
              "value": "        * @description Tokenized markup template for TH sort element."
            },
            {
              "type": "Literal",
              "value": "        * @type String"
            },
            {
              "type": "Literal",
              "value": "        * @default '<a class=\"{link_class}\" title=\"{link_title}\" href=\"{link_href}\">{value}</a>'"
            },
            {
              "type": "Literal",
              "value": "        */"
            },
            {
              "type": "Literal",
              "value": "        template: {"
            },
            {
              "type": "Literal",
              "value": "            value: TEMPLATE"
            },
            {
              "type": "Literal",
              "value": "        },"
            },
            {
              "type": "Literal",
              "value": ""
            },
            {
              "type": "Literal",
              "value": "        /*"
            },
            {
              "type": "Literal",
              "value": "         * Strings used in the UI elements."
            },
            {
              "type": "Literal",
              "value": "         *"
            },
            {
              "type": "Literal",
              "value": "         * The strings used are defaulted from the datatable-sort language pack"
            },
            {
              "type": "Literal",
              "value": "         * for the language identified in the YUI \"lang\" configuration (which"
            },
            {
              "type": "Literal",
              "value": "         * defaults to \"en\")."
            },
            {
              "type": "Literal",
              "value": "         *"
            },
            {
              "type": "Literal",
              "value": "         * Configurable strings are \"sortBy\" and \"reverseSortBy\", which are"
            },
            {
              "type": "Literal",
              "value": "         * assigned to the sort link's title attribute."
            },
            {
              "type": "Literal",
              "value": "         *"
            },
            {
              "type": "Literal",
              "value": "         * @attribute strings"
            },
            {
              "type": "Literal",
              "value": "         * @type {Object}"
            },
            {
              "type": "Literal",
              "value": "         */"
            },
            {
              "type": "Literal",
              "value": "        strings: {"
            },
            {
              "type": "Literal",
              "value": "            valueFn: function () { return Y.Intl.get('datatable-sort-deprecated'); }"
            },
            {
              "type": "Literal",
              "value": "        }"
            },
            {
              "type": "Literal",
              "value": "    }"
            },
            {
              "type": "Literal",
              "value": "});"
            },
            {
              "type": "Literal",
              "value": ""
            },
            {
              "type": "Literal",
              "value": "/////////////////////////////////////////////////////////////////////////////"
            },
            {
              "type": "Literal",
              "value": "//"
            },
            {
              "type": "Literal",
              "value": "// PROTOTYPE"
            },
            {
              "type": "Literal",
              "value": "//"
            },
            {
              "type": "Literal",
              "value": "/////////////////////////////////////////////////////////////////////////////"
            },
            {
              "type": "Literal",
              "value": "Y.extend(DataTableSort, Y.Plugin.Base, {"
            },
            {
              "type": "Literal",
              "value": ""
            },
            {
              "type": "Literal",
              "value": "    /////////////////////////////////////////////////////////////////////////////"
            },
            {
              "type": "Literal",
              "value": "    //"
            },
            {
              "type": "Literal",
              "value": "    // METHODS"
            },
            {
              "type": "Literal",
              "value": "    //"
            },
            {
              "type": "Literal",
              "value": "    /////////////////////////////////////////////////////////////////////////////"
            },
            {
              "type": "Literal",
              "value": "    /*"
            },
            {
              "type": "Literal",
              "value": "    * Initializer."
            },
            {
              "type": "Literal",
              "value": "    *"
            },
            {
              "type": "Literal",
              "value": "    * @method initializer"
            },
            {
              "type": "Literal",
              "value": "    * @param config {Object} Config object."
            },
            {
              "type": "Literal",
              "value": "    * @private"
            },
            {
              "type": "Literal",
              "value": "    */"
            },
            {
              "type": "Literal",
              "value": "    initializer: function(config) {"
            },
            {
              "type": "Literal",
              "value": "        var dt = this.get(\"host\"),"
            },
            {
              "type": "Literal",
              "value": "            trigger = this.get(\"trigger\");"
            },
            {
              "type": "Literal",
              "value": "            "
            },
            {
              "type": "Literal",
              "value": "        dt.get(\"recordset\").plug(Y.Plugin.RecordsetSort, {dt: dt});"
            },
            {
              "type": "Literal",
              "value": "        dt.get(\"recordset\").sort.addTarget(dt);"
            },
            {
              "type": "Literal",
              "value": "        "
            },
            {
              "type": "Literal",
              "value": "        // Wrap link around TH value"
            },
            {
              "type": "Literal",
              "value": "        this.doBefore(\"_createTheadThNode\", this._beforeCreateTheadThNode);"
            },
            {
              "type": "Literal",
              "value": "        "
            },
            {
              "type": "Literal",
              "value": "        // Add class"
            },
            {
              "type": "Literal",
              "value": "        this.doBefore(\"_attachTheadThNode\", this._beforeAttachTheadThNode);"
            },
            {
              "type": "Literal",
              "value": "        this.doBefore(\"_attachTbodyTdNode\", this._beforeAttachTbodyTdNode);"
            },
            {
              "type": "Literal",
              "value": ""
            },
            {
              "type": "Literal",
              "value": "        // Attach trigger handlers"
            },
            {
              "type": "Literal",
              "value": "        dt.delegate(trigger.event, Y.bind(this._onEventSortColumn,this), trigger.selector);"
            },
            {
              "type": "Literal",
              "value": ""
            },
            {
              "type": "Literal",
              "value": "        // Attach UI hooks"
            },
            {
              "type": "Literal",
              "value": "        dt.after(\"recordsetSort:sort\", function() {"
            },
            {
              "type": "Literal",
              "value": "            this._uiSetRecordset(this.get(\"recordset\"));"
            },
            {
              "type": "Literal",
              "value": "        });"
            },
            {
              "type": "Literal",
              "value": "        this.on(\"lastSortedByChange\", function(e) {"
            },
            {
              "type": "Literal",
              "value": "            this._uiSetLastSortedBy(e.prevVal, e.newVal, dt);"
            },
            {
              "type": "Literal",
              "value": "        });"
            },
            {
              "type": "Literal",
              "value": ""
            },
            {
              "type": "Literal",
              "value": "        //TODO"
            },
            {
              "type": "Literal",
              "value": "        //dt.after(\"recordset:mutation\", function() {//reset lastSortedBy});"
            },
            {
              "type": "Literal",
              "value": "        "
            },
            {
              "type": "Literal",
              "value": "        //TODO"
            },
            {
              "type": "Literal",
              "value": "        //add Column sortFn ATTR"
            },
            {
              "type": "Literal",
              "value": "        "
            },
            {
              "type": "Literal",
              "value": "        // Update UI after the fact (render-then-plug case)"
            },
            {
              "type": "Literal",
              "value": "        if(dt.get(\"rendered\")) {"
            },
            {
              "type": "Literal",
              "value": "            dt._uiSetColumnset(dt.get(\"columnset\"));"
            },
            {
              "type": "Literal",
              "value": "            this._uiSetLastSortedBy(null, this.get(\"lastSortedBy\"), dt);"
            },
            {
              "type": "Literal",
              "value": "        }"
            },
            {
              "type": "Literal",
              "value": "    },"
            },
            {
              "type": "Literal",
              "value": ""
            },
            {
              "type": "Literal",
              "value": "    /*"
            },
            {
              "type": "Literal",
              "value": "    * @method _setLastSortedBy"
            },
            {
              "type": "Literal",
              "value": "    * @description Normalizes lastSortedBy"
            },
            {
              "type": "Literal",
              "value": "    * @param val {String | Object} {key, dir} or \"key\""
            },
            {
              "type": "Literal",
              "value": "    * @return {key, dir, notdir}"
            },
            {
              "type": "Literal",
              "value": "    * @private"
            },
            {
              "type": "Literal",
              "value": "    */"
            },
            {
              "type": "Literal",
              "value": "    _setLastSortedBy: function(val) {"
            },
            {
              "type": "Literal",
              "value": "        if (Y.Lang.isString(val)) {"
            },
            {
              "type": "Literal",
              "value": "            val = { key: val, dir: \"desc\" };"
            },
            {
              "type": "Literal",
              "value": "        }"
            },
            {
              "type": "Literal",
              "value": ""
            },
            {
              "type": "Literal",
              "value": "        if (val) {"
            },
            {
              "type": "Literal",
              "value": "            return (val.dir === \"desc\") ?"
            },
            {
              "type": "Literal",
              "value": "                { key: val.key, dir: \"desc\", notdir: \"asc\" } :"
            },
            {
              "type": "Literal",
              "value": "                { key: val.key, dir: \"asc\",  notdir:\"desc\" };"
            },
            {
              "type": "Literal",
              "value": "        } else {"
            },
            {
              "type": "Literal",
              "value": "            return null;"
            },
            {
              "type": "Literal",
              "value": "        }"
            },
            {
              "type": "Literal",
              "value": "    },"
            },
            {
              "type": "Literal",
              "value": ""
            },
            {
              "type": "Literal",
              "value": "    /*"
            },
            {
              "type": "Literal",
              "value": "     * Updates sort UI."
            },
            {
              "type": "Literal",
              "value": "     *"
            },
            {
              "type": "Literal",
              "value": "     * @method _uiSetLastSortedBy"
            },
            {
              "type": "Literal",
              "value": "     * @param val {Object} New lastSortedBy object {key,dir}."
            },
            {
              "type": "Literal",
              "value": "     * @param dt {Y.DataTable.Base} Host."
            },
            {
              "type": "Literal",
              "value": "     * @protected"
            },
            {
              "type": "Literal",
              "value": "     */"
            },
            {
              "type": "Literal",
              "value": "    _uiSetLastSortedBy: function(prevVal, newVal, dt) {"
            },
            {
              "type": "Literal",
              "value": "        var strings    = this.get('strings'),"
            },
            {
              "type": "Literal",
              "value": "            columnset  = dt.get(\"columnset\"),"
            },
            {
              "type": "Literal",
              "value": "            prevKey    = prevVal && prevVal.key,"
            },
            {
              "type": "Literal",
              "value": "            newKey     = newVal && newVal.key,"
            },
            {
              "type": "Literal",
              "value": "            prevClass  = prevVal && dt.getClassName(prevVal.dir),"
            },
            {
              "type": "Literal",
              "value": "            newClass   = newVal && dt.getClassName(newVal.dir),"
            },
            {
              "type": "Literal",
              "value": "            prevColumn = columnset.keyHash[prevKey],"
            },
            {
              "type": "Literal",
              "value": "            newColumn  = columnset.keyHash[newKey],"
            },
            {
              "type": "Literal",
              "value": "            tbodyNode  = dt._tbodyNode,"
            },
            {
              "type": "Literal",
              "value": "            fromTemplate = Y.Lang.sub,"
            },
            {
              "type": "Literal",
              "value": "            th, sortArrow, sortLabel;"
            },
            {
              "type": "Literal",
              "value": ""
            },
            {
              "type": "Literal",
              "value": "        // Clear previous UI"
            },
            {
              "type": "Literal",
              "value": "        if (prevColumn && prevClass) {"
            },
            {
              "type": "Literal",
              "value": "            th = prevColumn.thNode;"
            },
            {
              "type": "Literal",
              "value": "            sortArrow = th.one('a');"
            },
            {
              "type": "Literal",
              "value": ""
            },
            {
              "type": "Literal",
              "value": "            if (sortArrow) {"
            },
            {
              "type": "Literal",
              "value": "                sortArrow.set('title', fromTemplate(strings.sortBy, {"
            },
            {
              "type": "Literal",
              "value": "                    column: prevColumn.get('label')"
            },
            {
              "type": "Literal",
              "value": "                }));"
            },
            {
              "type": "Literal",
              "value": "            }"
            },
            {
              "type": "Literal",
              "value": ""
            },
            {
              "type": "Literal",
              "value": "            th.removeClass(prevClass);"
            },
            {
              "type": "Literal",
              "value": "            tbodyNode.all(\".\" + YgetClassName(COLUMN, prevColumn.get(\"id\")))"
            },
            {
              "type": "Literal",
              "value": "                .removeClass(prevClass);"
            },
            {
              "type": "Literal",
              "value": "        }"
            },
            {
              "type": "Literal",
              "value": ""
            },
            {
              "type": "Literal",
              "value": "        // Add new sort UI"
            },
            {
              "type": "Literal",
              "value": "        if (newColumn && newClass) {"
            },
            {
              "type": "Literal",
              "value": "            th = newColumn.thNode;"
            },
            {
              "type": "Literal",
              "value": "            sortArrow = th.one('a');"
            },
            {
              "type": "Literal",
              "value": ""
            },
            {
              "type": "Literal",
              "value": "            if (sortArrow) {"
            },
            {
              "type": "Literal",
              "value": "                sortLabel = (newVal.dir === ASC) ? \"reverseSortBy\" : \"sortBy\";"
            },
            {
              "type": "Literal",
              "value": ""
            },
            {
              "type": "Literal",
              "value": "                sortArrow.set('title', fromTemplate(strings[sortLabel], {"
            },
            {
              "type": "Literal",
              "value": "                    column: newColumn.get('label')"
            },
            {
              "type": "Literal",
              "value": "                }));"
            },
            {
              "type": "Literal",
              "value": "            }"
            },
            {
              "type": "Literal",
              "value": ""
            },
            {
              "type": "Literal",
              "value": "            th.addClass(newClass);"
            },
            {
              "type": "Literal",
              "value": ""
            },
            {
              "type": "Literal",
              "value": "            tbodyNode.all(\".\" + YgetClassName(COLUMN, newColumn.get(\"id\")))"
            },
            {
              "type": "Literal",
              "value": "                .addClass(newClass);"
            },
            {
              "type": "Literal",
              "value": "        }"
            },
            {
              "type": "Literal",
              "value": "    },"
            },
            {
              "type": "Literal",
              "value": ""
            },
            {
              "type": "Literal",
              "value": "    /*"
            },
            {
              "type": "Literal",
              "value": "    * Before header cell element is created, inserts link markup around {value}."
            },
            {
              "type": "Literal",
              "value": "    *"
            },
            {
              "type": "Literal",
              "value": "    * @method _beforeCreateTheadThNode"
            },
            {
              "type": "Literal",
              "value": "    * @param o {Object} {value, column, tr}."
            },
            {
              "type": "Literal",
              "value": "    * @protected"
            },
            {
              "type": "Literal",
              "value": "    */"
            },
            {
              "type": "Literal",
              "value": "    _beforeCreateTheadThNode: function(o) {"
            },
            {
              "type": "Literal",
              "value": "        var sortedBy, sortLabel;"
            },
            {
              "type": "Literal",
              "value": ""
            },
            {
              "type": "Literal",
              "value": "        if (o.column.get(\"sortable\")) {"
            },
            {
              "type": "Literal",
              "value": "            sortedBy = this.get('lastSortedBy');"
            },
            {
              "type": "Literal",
              "value": ""
            },
            {
              "type": "Literal",
              "value": "            sortLabel = (sortedBy && sortedBy.dir === ASC &&"
            },
            {
              "type": "Literal",
              "value": "                         sortedBy.key === o.column.get('key')) ?"
            },
            {
              "type": "Literal",
              "value": "                            \"reverseSortBy\" : \"sortBy\";"
            },
            {
              "type": "Literal",
              "value": ""
            },
            {
              "type": "Literal",
              "value": "            o.value = Y.Lang.sub(this.get(\"template\"), {"
            },
            {
              "type": "Literal",
              "value": "                link_class: o.link_class || \"\","
            },
            {
              "type": "Literal",
              "value": "                link_title: Y.Lang.sub(this.get('strings.' + sortLabel), {"
            },
            {
              "type": "Literal",
              "value": "                                column: o.column.get('label')"
            },
            {
              "type": "Literal",
              "value": "                            }),"
            },
            {
              "type": "Literal",
              "value": "                link_href: \"#\","
            },
            {
              "type": "Literal",
              "value": "                value: o.value"
            },
            {
              "type": "Literal",
              "value": "            });"
            },
            {
              "type": "Literal",
              "value": "        }"
            },
            {
              "type": "Literal",
              "value": "    },"
            },
            {
              "type": "Literal",
              "value": ""
            },
            {
              "type": "Literal",
              "value": "    /*"
            },
            {
              "type": "Literal",
              "value": "    * Before header cell element is attached, sets applicable class names."
            },
            {
              "type": "Literal",
              "value": "    *"
            },
            {
              "type": "Literal",
              "value": "    * @method _beforeAttachTheadThNode"
            },
            {
              "type": "Literal",
              "value": "    * @param o {Object} {value, column, tr}."
            },
            {
              "type": "Literal",
              "value": "    * @protected"
            },
            {
              "type": "Literal",
              "value": "    */"
            },
            {
              "type": "Literal",
              "value": "    _beforeAttachTheadThNode: function(o) {"
            },
            {
              "type": "Literal",
              "value": "        var lastSortedBy = this.get(\"lastSortedBy\"),"
            },
            {
              "type": "Literal",
              "value": "            key = lastSortedBy && lastSortedBy.key,"
            },
            {
              "type": "Literal",
              "value": "            dir = lastSortedBy && lastSortedBy.dir,"
            },
            {
              "type": "Literal",
              "value": "            notdir = lastSortedBy && lastSortedBy.notdir;"
            },
            {
              "type": "Literal",
              "value": ""
            },
            {
              "type": "Literal",
              "value": "        // This Column is sortable"
            },
            {
              "type": "Literal",
              "value": "        if(o.column.get(\"sortable\")) {"
            },
            {
              "type": "Literal",
              "value": "            o.th.addClass(YgetClassName(DATATABLE, \"sortable\"));"
            },
            {
              "type": "Literal",
              "value": "        }"
            },
            {
              "type": "Literal",
              "value": "        // This Column is currently sorted"
            },
            {
              "type": "Literal",
              "value": "        if(key && (key === o.column.get(\"key\"))) {"
            },
            {
              "type": "Literal",
              "value": "            o.th.replaceClass(YgetClassName(DATATABLE, notdir), YgetClassName(DATATABLE, dir));"
            },
            {
              "type": "Literal",
              "value": "        }"
            },
            {
              "type": "Literal",
              "value": "    },"
            },
            {
              "type": "Literal",
              "value": ""
            },
            {
              "type": "Literal",
              "value": "    /*"
            },
            {
              "type": "Literal",
              "value": "    * Before header cell element is attached, sets applicable class names."
            },
            {
              "type": "Literal",
              "value": "    *"
            },
            {
              "type": "Literal",
              "value": "    * @method _beforeAttachTbodyTdNode"
            },
            {
              "type": "Literal",
              "value": "    * @param o {Object} {record, column, tr, headers, classnames, value}."
            },
            {
              "type": "Literal",
              "value": "    * @protected"
            },
            {
              "type": "Literal",
              "value": "    */"
            },
            {
              "type": "Literal",
              "value": "    _beforeAttachTbodyTdNode: function(o) {"
            },
            {
              "type": "Literal",
              "value": "        var lastSortedBy = this.get(\"lastSortedBy\"),"
            },
            {
              "type": "Literal",
              "value": "            key = lastSortedBy && lastSortedBy.key,"
            },
            {
              "type": "Literal",
              "value": "            dir = lastSortedBy && lastSortedBy.dir,"
            },
            {
              "type": "Literal",
              "value": "            notdir = lastSortedBy && lastSortedBy.notdir;"
            },
            {
              "type": "Literal",
              "value": ""
            },
            {
              "type": "Literal",
              "value": "        // This Column is sortable"
            },
            {
              "type": "Literal",
              "value": "        if(o.column.get(\"sortable\")) {"
            },
            {
              "type": "Literal",
              "value": "            o.td.addClass(YgetClassName(DATATABLE, \"sortable\"));"
            },
            {
              "type": "Literal",
              "value": "        }"
            },
            {
              "type": "Literal",
              "value": "        // This Column is currently sorted"
            },
            {
              "type": "Literal",
              "value": "        if(key && (key === o.column.get(\"key\"))) {"
            },
            {
              "type": "Literal",
              "value": "            o.td.replaceClass(YgetClassName(DATATABLE, notdir), YgetClassName(DATATABLE, dir));"
            },
            {
              "type": "Literal",
              "value": "        }"
            },
            {
              "type": "Literal",
              "value": "    },"
            },
            {
              "type": "Literal",
              "value": "    /*"
            },
            {
              "type": "Literal",
              "value": "    * In response to the \"trigger\" event, sorts the underlying Recordset and"
            },
            {
              "type": "Literal",
              "value": "    * updates the lastSortedBy attribute."
            },
            {
              "type": "Literal",
              "value": "    *"
            },
            {
              "type": "Literal",
              "value": "    * @method _onEventSortColumn"
            },
            {
              "type": "Literal",
              "value": "    * @param o {Object} {value, column, tr}."
            },
            {
              "type": "Literal",
              "value": "    * @protected"
            },
            {
              "type": "Literal",
              "value": "    */"
            },
            {
              "type": "Literal",
              "value": "    _onEventSortColumn: function(e) {"
            },
            {
              "type": "Literal",
              "value": "        e.halt();"
            },
            {
              "type": "Literal",
              "value": "        //TODO: normalize e.currentTarget to TH"
            },
            {
              "type": "Literal",
              "value": "        var table  = this.get(\"host\"),"
            },
            {
              "type": "Literal",
              "value": "            column = table.get(\"columnset\").idHash[e.currentTarget.get(\"id\")],"
            },
            {
              "type": "Literal",
              "value": "            key, field, lastSort, desc, sorter;"
            },
            {
              "type": "Literal",
              "value": ""
            },
            {
              "type": "Literal",
              "value": "        if (column.get(\"sortable\")) {"
            },
            {
              "type": "Literal",
              "value": "            key       = column.get(\"key\");"
            },
            {
              "type": "Literal",
              "value": "            field     = column.get(\"field\");"
            },
            {
              "type": "Literal",
              "value": "            lastSort  = this.get(\"lastSortedBy\") || {};"
            },
            {
              "type": "Literal",
              "value": "            desc      = (lastSort.key === key && lastSort.dir === ASC);"
            },
            {
              "type": "Literal",
              "value": "            sorter    = column.get(\"sortFn\");"
            },
            {
              "type": "Literal",
              "value": ""
            },
            {
              "type": "Literal",
              "value": "            table.get(\"recordset\").sort.sort(field, desc, sorter);"
            },
            {
              "type": "Literal",
              "value": ""
            },
            {
              "type": "Literal",
              "value": "            this.set(\"lastSortedBy\", {"
            },
            {
              "type": "Literal",
              "value": "                key: key,"
            },
            {
              "type": "Literal",
              "value": "                dir: (desc) ? DESC : ASC"
            },
            {
              "type": "Literal",
              "value": "            });"
            },
            {
              "type": "Literal",
              "value": "        }"
            },
            {
              "type": "Literal",
              "value": "    }"
            },
            {
              "type": "Literal",
              "value": "});"
            },
            {
              "type": "Literal",
              "value": ""
            },
            {
              "type": "Literal",
              "value": "Y.namespace(\"Plugin\").DataTableSort = DataTableSort;"
            },
            {
              "type": "Literal",
              "value": ""
            },
            {
              "type": "Literal",
              "value": ""
            },
            {
              "type": "Literal",
              "value": ""
            },
            {
              "type": "Literal",
              "value": ""
            },
            {
              "type": "Literal",
              "value": ""
            },
            {
              "type": "Literal",
              "value": "}, '3.7.3' ,{requires:['datatable-base-deprecated','plugin','recordset-sort'], lang:['en']});"
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "MemberExpression",
            "computed": true,
            "object": {
              "type": "Identifier",
              "name": "_yuitest_coverage"
            },
            "property": {
              "type": "Literal",
              "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
            }
          },
          "property": {
            "type": "Identifier",
            "name": "lines"
          }
        },
        "right": {
          "type": "ObjectExpression",
          "properties": [
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "1"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "30"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "41"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "42"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "50"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "129"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "139"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "154"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "157"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "158"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "161"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "164"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "165"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "168"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "171"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "172"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "174"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "175"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "185"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "186"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "187"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "199"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "200"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "203"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "204"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "208"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "221"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "234"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "235"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "236"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "238"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "239"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "244"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "245"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "250"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "251"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "252"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "254"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "255"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "257"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "262"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "264"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "277"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "279"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "280"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "282"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "286"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "305"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "311"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "312"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "315"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "316"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "328"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "334"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "335"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "338"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "339"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "351"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "353"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "357"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "358"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "359"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "360"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "361"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "362"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "364"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "366"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "374"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "MemberExpression",
            "computed": true,
            "object": {
              "type": "Identifier",
              "name": "_yuitest_coverage"
            },
            "property": {
              "type": "Literal",
              "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
            }
          },
          "property": {
            "type": "Identifier",
            "name": "functions"
          }
        },
        "right": {
          "type": "ObjectExpression",
          "properties": [
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "DataTableSort:41"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "valueFn:129"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "(anonymous 2):171"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "(anonymous 3):174"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "initializer:153"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "_setLastSortedBy:198"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "_uiSetLastSortedBy:220"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "_beforeCreateTheadThNode:276"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "_beforeAttachTheadThNode:304"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "_beforeAttachTbodyTdNode:327"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "_onEventSortColumn:350"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            },
            {
              "type": "Property",
              "key": {
                "type": "Literal",
                "value": "(anonymous 1):1"
              },
              "value": {
                "type": "Literal",
                "value": 0
              },
              "kind": "init"
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "MemberExpression",
            "computed": true,
            "object": {
              "type": "Identifier",
              "name": "_yuitest_coverage"
            },
            "property": {
              "type": "Literal",
              "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
            }
          },
          "property": {
            "type": "Identifier",
            "name": "coveredLines"
          }
        },
        "right": {
          "type": "Literal",
          "value": 68
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "MemberExpression",
            "computed": true,
            "object": {
              "type": "Identifier",
              "name": "_yuitest_coverage"
            },
            "property": {
              "type": "Literal",
              "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
            }
          },
          "property": {
            "type": "Identifier",
            "name": "coveredFunctions"
          }
        },
        "right": {
          "type": "Literal",
          "value": 12
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "_yuitest_coverline"
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
          },
          {
            "type": "Literal",
            "value": 1
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "YUI"
          },
          "property": {
            "type": "Identifier",
            "name": "add"
          }
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "datatable-sort-deprecated"
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "Y"
              }
            ],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "_yuitest_coverfunc"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                      },
                      {
                        "type": "Literal",
                        "value": "(anonymous 1)"
                      },
                      {
                        "type": "Literal",
                        "value": 1
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "_yuitest_coverline"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                      },
                      {
                        "type": "Literal",
                        "value": 30
                      }
                    ]
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "YgetClassName"
                      },
                      "init": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "Y"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "ClassNameManager"
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "getClassName"
                        }
                      }
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "DATATABLE"
                      },
                      "init": {
                        "type": "Literal",
                        "value": "datatable"
                      }
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "COLUMN"
                      },
                      "init": {
                        "type": "Literal",
                        "value": "column"
                      }
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "ASC"
                      },
                      "init": {
                        "type": "Literal",
                        "value": "asc"
                      }
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "DESC"
                      },
                      "init": {
                        "type": "Literal",
                        "value": "desc"
                      }
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "TEMPLATE"
                      },
                      "init": {
                        "type": "Literal",
                        "value": "<a class=\"{link_class}\" title=\"{link_title}\" href=\"{link_href}\">{value}</a>"
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "_yuitest_coverline"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                      },
                      {
                        "type": "Literal",
                        "value": 41
                      }
                    ]
                  }
                },
                {
                  "type": "FunctionDeclaration",
                  "id": {
                    "type": "Identifier",
                    "name": "DataTableSort"
                  },
                  "params": [],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "_yuitest_coverfunc"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                            },
                            {
                              "type": "Literal",
                              "value": "DataTableSort"
                            },
                            {
                              "type": "Literal",
                              "value": 41
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "_yuitest_coverline"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                            },
                            {
                              "type": "Literal",
                              "value": 42
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "DataTableSort"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "superclass"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "constructor"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "apply"
                            }
                          },
                          "arguments": [
                            {
                              "type": "ThisExpression"
                            },
                            {
                              "type": "Identifier",
                              "name": "arguments"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "_yuitest_coverline"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                      },
                      {
                        "type": "Literal",
                        "value": 50
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Y"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "mix"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "DataTableSort"
                      },
                      {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "NS"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "sort"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "NAME"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "dataTableSort"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "ATTRS"
                            },
                            "value": {
                              "type": "ObjectExpression",
                              "properties": [
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "trigger"
                                  },
                                  "value": {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Identifier",
                                          "name": "value"
                                        },
                                        "value": {
                                          "type": "ObjectExpression",
                                          "properties": [
                                            {
                                              "type": "Property",
                                              "key": {
                                                "type": "Identifier",
                                                "name": "event"
                                              },
                                              "value": {
                                                "type": "Literal",
                                                "value": "click"
                                              },
                                              "kind": "init"
                                            },
                                            {
                                              "type": "Property",
                                              "key": {
                                                "type": "Identifier",
                                                "name": "selector"
                                              },
                                              "value": {
                                                "type": "Literal",
                                                "value": "th"
                                              },
                                              "kind": "init"
                                            }
                                          ]
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Identifier",
                                          "name": "writeOnce"
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": "initOnly"
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "lastSortedBy"
                                  },
                                  "value": {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Identifier",
                                          "name": "setter"
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": "_setLastSortedBy"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Identifier",
                                          "name": "lazyAdd"
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": false
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "template"
                                  },
                                  "value": {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Identifier",
                                          "name": "value"
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "TEMPLATE"
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "strings"
                                  },
                                  "value": {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Identifier",
                                          "name": "valueFn"
                                        },
                                        "value": {
                                          "type": "FunctionExpression",
                                          "id": null,
                                          "params": [],
                                          "defaults": [],
                                          "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "_yuitest_coverfunc"
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "valueFn"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 129
                                                    }
                                                  ]
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "_yuitest_coverline"
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 129
                                                    }
                                                  ]
                                                }
                                              },
                                              {
                                                "type": "ReturnStatement",
                                                "argument": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "Y"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "Intl"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "get"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "datatable-sort-deprecated"
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          },
                                          "rest": null,
                                          "generator": false,
                                          "expression": false
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  },
                                  "kind": "init"
                                }
                              ]
                            },
                            "kind": "init"
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "_yuitest_coverline"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                      },
                      {
                        "type": "Literal",
                        "value": 139
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Y"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "extend"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "DataTableSort"
                      },
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "Y"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "Plugin"
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "Base"
                        }
                      },
                      {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "initializer"
                            },
                            "value": {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [
                                {
                                  "type": "Identifier",
                                  "name": "config"
                                }
                              ],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "_yuitest_coverfunc"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                        },
                                        {
                                          "type": "Literal",
                                          "value": "initializer"
                                        },
                                        {
                                          "type": "Literal",
                                          "value": 153
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "_yuitest_coverline"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                        },
                                        {
                                          "type": "Literal",
                                          "value": 154
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "dt"
                                        },
                                        "init": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "get"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": "host"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "trigger"
                                        },
                                        "init": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "get"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": "trigger"
                                            }
                                          ]
                                        }
                                      }
                                    ],
                                    "kind": "var"
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "_yuitest_coverline"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                        },
                                        {
                                          "type": "Literal",
                                          "value": 157
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "dt"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "get"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": "recordset"
                                            }
                                          ]
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "plug"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "Y"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "Plugin"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "RecordsetSort"
                                          }
                                        },
                                        {
                                          "type": "ObjectExpression",
                                          "properties": [
                                            {
                                              "type": "Property",
                                              "key": {
                                                "type": "Identifier",
                                                "name": "dt"
                                              },
                                              "value": {
                                                "type": "Identifier",
                                                "name": "dt"
                                              },
                                              "kind": "init"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "_yuitest_coverline"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                        },
                                        {
                                          "type": "Literal",
                                          "value": 158
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "dt"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "get"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "recordset"
                                              }
                                            ]
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "sort"
                                          }
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "addTarget"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Identifier",
                                          "name": "dt"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "_yuitest_coverline"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                        },
                                        {
                                          "type": "Literal",
                                          "value": 161
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "doBefore"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "_createTheadThNode"
                                        },
                                        {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "ThisExpression"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "_beforeCreateTheadThNode"
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "_yuitest_coverline"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                        },
                                        {
                                          "type": "Literal",
                                          "value": 164
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "doBefore"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "_attachTheadThNode"
                                        },
                                        {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "ThisExpression"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "_beforeAttachTheadThNode"
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "_yuitest_coverline"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                        },
                                        {
                                          "type": "Literal",
                                          "value": 165
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "doBefore"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "_attachTbodyTdNode"
                                        },
                                        {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "ThisExpression"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "_beforeAttachTbodyTdNode"
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "_yuitest_coverline"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                        },
                                        {
                                          "type": "Literal",
                                          "value": 168
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "dt"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "delegate"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "trigger"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "event"
                                          }
                                        },
                                        {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "Y"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "bind"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ThisExpression"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "_onEventSortColumn"
                                              }
                                            },
                                            {
                                              "type": "ThisExpression"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "trigger"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "selector"
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "_yuitest_coverline"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                        },
                                        {
                                          "type": "Literal",
                                          "value": 171
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "dt"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "after"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "recordsetSort:sort"
                                        },
                                        {
                                          "type": "FunctionExpression",
                                          "id": null,
                                          "params": [],
                                          "defaults": [],
                                          "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "_yuitest_coverfunc"
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "(anonymous 2)"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 171
                                                    }
                                                  ]
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "_yuitest_coverline"
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 172
                                                    }
                                                  ]
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "_uiSetRecordset"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "get"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Literal",
                                                          "value": "recordset"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          },
                                          "rest": null,
                                          "generator": false,
                                          "expression": false
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "_yuitest_coverline"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                        },
                                        {
                                          "type": "Literal",
                                          "value": 174
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "on"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "lastSortedByChange"
                                        },
                                        {
                                          "type": "FunctionExpression",
                                          "id": null,
                                          "params": [
                                            {
                                              "type": "Identifier",
                                              "name": "e"
                                            }
                                          ],
                                          "defaults": [],
                                          "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "_yuitest_coverfunc"
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "(anonymous 3)"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 174
                                                    }
                                                  ]
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "_yuitest_coverline"
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 175
                                                    }
                                                  ]
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "_uiSetLastSortedBy"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "e"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "prevVal"
                                                      }
                                                    },
                                                    {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "e"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "newVal"
                                                      }
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "dt"
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          },
                                          "rest": null,
                                          "generator": false,
                                          "expression": false
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "_yuitest_coverline"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                        },
                                        {
                                          "type": "Literal",
                                          "value": 185
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "IfStatement",
                                    "test": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "dt"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "get"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "rendered"
                                        }
                                      ]
                                    },
                                    "consequent": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "_yuitest_coverline"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": 186
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "dt"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "_uiSetColumnset"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "dt"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "get"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Literal",
                                                    "value": "columnset"
                                                  }
                                                ]
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "_yuitest_coverline"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": 187
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ThisExpression"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "_uiSetLastSortedBy"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": null
                                              },
                                              {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "get"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Literal",
                                                    "value": "lastSortedBy"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "Identifier",
                                                "name": "dt"
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    },
                                    "alternate": null
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "_setLastSortedBy"
                            },
                            "value": {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [
                                {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              ],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "_yuitest_coverfunc"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                        },
                                        {
                                          "type": "Literal",
                                          "value": "_setLastSortedBy"
                                        },
                                        {
                                          "type": "Literal",
                                          "value": 198
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "_yuitest_coverline"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                        },
                                        {
                                          "type": "Literal",
                                          "value": 199
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "IfStatement",
                                    "test": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "Y"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "Lang"
                                          }
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "isString"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Identifier",
                                          "name": "val"
                                        }
                                      ]
                                    },
                                    "consequent": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "_yuitest_coverline"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": 200
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "val"
                                            },
                                            "right": {
                                              "type": "ObjectExpression",
                                              "properties": [
                                                {
                                                  "type": "Property",
                                                  "key": {
                                                    "type": "Identifier",
                                                    "name": "key"
                                                  },
                                                  "value": {
                                                    "type": "Identifier",
                                                    "name": "val"
                                                  },
                                                  "kind": "init"
                                                },
                                                {
                                                  "type": "Property",
                                                  "key": {
                                                    "type": "Identifier",
                                                    "name": "dir"
                                                  },
                                                  "value": {
                                                    "type": "Literal",
                                                    "value": "desc"
                                                  },
                                                  "kind": "init"
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "alternate": null
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "_yuitest_coverline"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                        },
                                        {
                                          "type": "Literal",
                                          "value": 203
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "IfStatement",
                                    "test": {
                                      "type": "Identifier",
                                      "name": "val"
                                    },
                                    "consequent": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "_yuitest_coverline"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": 204
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ReturnStatement",
                                          "argument": {
                                            "type": "ConditionalExpression",
                                            "test": {
                                              "type": "BinaryExpression",
                                              "operator": "===",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "val"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "dir"
                                                }
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": "desc"
                                              }
                                            },
                                            "consequent": {
                                              "type": "ObjectExpression",
                                              "properties": [
                                                {
                                                  "type": "Property",
                                                  "key": {
                                                    "type": "Identifier",
                                                    "name": "key"
                                                  },
                                                  "value": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "val"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "key"
                                                    }
                                                  },
                                                  "kind": "init"
                                                },
                                                {
                                                  "type": "Property",
                                                  "key": {
                                                    "type": "Identifier",
                                                    "name": "dir"
                                                  },
                                                  "value": {
                                                    "type": "Literal",
                                                    "value": "desc"
                                                  },
                                                  "kind": "init"
                                                },
                                                {
                                                  "type": "Property",
                                                  "key": {
                                                    "type": "Identifier",
                                                    "name": "notdir"
                                                  },
                                                  "value": {
                                                    "type": "Literal",
                                                    "value": "asc"
                                                  },
                                                  "kind": "init"
                                                }
                                              ]
                                            },
                                            "alternate": {
                                              "type": "ObjectExpression",
                                              "properties": [
                                                {
                                                  "type": "Property",
                                                  "key": {
                                                    "type": "Identifier",
                                                    "name": "key"
                                                  },
                                                  "value": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "val"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "key"
                                                    }
                                                  },
                                                  "kind": "init"
                                                },
                                                {
                                                  "type": "Property",
                                                  "key": {
                                                    "type": "Identifier",
                                                    "name": "dir"
                                                  },
                                                  "value": {
                                                    "type": "Literal",
                                                    "value": "asc"
                                                  },
                                                  "kind": "init"
                                                },
                                                {
                                                  "type": "Property",
                                                  "key": {
                                                    "type": "Identifier",
                                                    "name": "notdir"
                                                  },
                                                  "value": {
                                                    "type": "Literal",
                                                    "value": "desc"
                                                  },
                                                  "kind": "init"
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "alternate": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "_yuitest_coverline"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": 208
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ReturnStatement",
                                          "argument": {
                                            "type": "Literal",
                                            "value": null
                                          }
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "_uiSetLastSortedBy"
                            },
                            "value": {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [
                                {
                                  "type": "Identifier",
                                  "name": "prevVal"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "newVal"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "dt"
                                }
                              ],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "_yuitest_coverfunc"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                        },
                                        {
                                          "type": "Literal",
                                          "value": "_uiSetLastSortedBy"
                                        },
                                        {
                                          "type": "Literal",
                                          "value": 220
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "_yuitest_coverline"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                        },
                                        {
                                          "type": "Literal",
                                          "value": 221
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "strings"
                                        },
                                        "init": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "get"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": "strings"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "columnset"
                                        },
                                        "init": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "dt"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "get"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": "columnset"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "prevKey"
                                        },
                                        "init": {
                                          "type": "LogicalExpression",
                                          "operator": "&&",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "prevVal"
                                          },
                                          "right": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "prevVal"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "key"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "newKey"
                                        },
                                        "init": {
                                          "type": "LogicalExpression",
                                          "operator": "&&",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "newVal"
                                          },
                                          "right": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "newVal"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "key"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "prevClass"
                                        },
                                        "init": {
                                          "type": "LogicalExpression",
                                          "operator": "&&",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "prevVal"
                                          },
                                          "right": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "dt"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "getClassName"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "prevVal"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "dir"
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "newClass"
                                        },
                                        "init": {
                                          "type": "LogicalExpression",
                                          "operator": "&&",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "newVal"
                                          },
                                          "right": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "dt"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "getClassName"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "newVal"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "dir"
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "prevColumn"
                                        },
                                        "init": {
                                          "type": "MemberExpression",
                                          "computed": true,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "columnset"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "keyHash"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "prevKey"
                                          }
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "newColumn"
                                        },
                                        "init": {
                                          "type": "MemberExpression",
                                          "computed": true,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "columnset"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "keyHash"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "newKey"
                                          }
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "tbodyNode"
                                        },
                                        "init": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "dt"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "_tbodyNode"
                                          }
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "fromTemplate"
                                        },
                                        "init": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "Y"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "Lang"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "sub"
                                          }
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "th"
                                        },
                                        "init": null
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "sortArrow"
                                        },
                                        "init": null
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "sortLabel"
                                        },
                                        "init": null
                                      }
                                    ],
                                    "kind": "var"
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "_yuitest_coverline"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                        },
                                        {
                                          "type": "Literal",
                                          "value": 234
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "IfStatement",
                                    "test": {
                                      "type": "LogicalExpression",
                                      "operator": "&&",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "prevColumn"
                                      },
                                      "right": {
                                        "type": "Identifier",
                                        "name": "prevClass"
                                      }
                                    },
                                    "consequent": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "_yuitest_coverline"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": 235
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "th"
                                            },
                                            "right": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "prevColumn"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "thNode"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "_yuitest_coverline"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": 236
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "sortArrow"
                                            },
                                            "right": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "th"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "one"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": "a"
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "_yuitest_coverline"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": 238
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "IfStatement",
                                          "test": {
                                            "type": "Identifier",
                                            "name": "sortArrow"
                                          },
                                          "consequent": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "_yuitest_coverline"
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 239
                                                    }
                                                  ]
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "sortArrow"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "set"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "title"
                                                    },
                                                    {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "Identifier",
                                                        "name": "fromTemplate"
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "strings"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "sortBy"
                                                          }
                                                        },
                                                        {
                                                          "type": "ObjectExpression",
                                                          "properties": [
                                                            {
                                                              "type": "Property",
                                                              "key": {
                                                                "type": "Identifier",
                                                                "name": "column"
                                                              },
                                                              "value": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "prevColumn"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "get"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Literal",
                                                                    "value": "label"
                                                                  }
                                                                ]
                                                              },
                                                              "kind": "init"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          },
                                          "alternate": null
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "_yuitest_coverline"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": 244
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "th"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "removeClass"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "prevClass"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "_yuitest_coverline"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": 245
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "tbodyNode"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "all"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "Literal",
                                                      "value": "."
                                                    },
                                                    "right": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "Identifier",
                                                        "name": "YgetClassName"
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "COLUMN"
                                                        },
                                                        {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "prevColumn"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "get"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Literal",
                                                              "value": "id"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "removeClass"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "prevClass"
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    },
                                    "alternate": null
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "_yuitest_coverline"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                        },
                                        {
                                          "type": "Literal",
                                          "value": 250
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "IfStatement",
                                    "test": {
                                      "type": "LogicalExpression",
                                      "operator": "&&",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "newColumn"
                                      },
                                      "right": {
                                        "type": "Identifier",
                                        "name": "newClass"
                                      }
                                    },
                                    "consequent": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "_yuitest_coverline"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": 251
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "th"
                                            },
                                            "right": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "newColumn"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "thNode"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "_yuitest_coverline"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": 252
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "sortArrow"
                                            },
                                            "right": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "th"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "one"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": "a"
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "_yuitest_coverline"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": 254
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "IfStatement",
                                          "test": {
                                            "type": "Identifier",
                                            "name": "sortArrow"
                                          },
                                          "consequent": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "_yuitest_coverline"
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 255
                                                    }
                                                  ]
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "sortLabel"
                                                  },
                                                  "right": {
                                                    "type": "ConditionalExpression",
                                                    "test": {
                                                      "type": "BinaryExpression",
                                                      "operator": "===",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "newVal"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "dir"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "ASC"
                                                      }
                                                    },
                                                    "consequent": {
                                                      "type": "Literal",
                                                      "value": "reverseSortBy"
                                                    },
                                                    "alternate": {
                                                      "type": "Literal",
                                                      "value": "sortBy"
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "_yuitest_coverline"
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 257
                                                    }
                                                  ]
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "sortArrow"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "set"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "title"
                                                    },
                                                    {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "Identifier",
                                                        "name": "fromTemplate"
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "strings"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "sortLabel"
                                                          }
                                                        },
                                                        {
                                                          "type": "ObjectExpression",
                                                          "properties": [
                                                            {
                                                              "type": "Property",
                                                              "key": {
                                                                "type": "Identifier",
                                                                "name": "column"
                                                              },
                                                              "value": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "newColumn"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "get"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Literal",
                                                                    "value": "label"
                                                                  }
                                                                ]
                                                              },
                                                              "kind": "init"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          },
                                          "alternate": null
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "_yuitest_coverline"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": 262
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "th"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "addClass"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "newClass"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "_yuitest_coverline"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": 264
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "tbodyNode"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "all"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "Literal",
                                                      "value": "."
                                                    },
                                                    "right": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "Identifier",
                                                        "name": "YgetClassName"
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "COLUMN"
                                                        },
                                                        {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "newColumn"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "get"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Literal",
                                                              "value": "id"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "addClass"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "newClass"
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    },
                                    "alternate": null
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "_beforeCreateTheadThNode"
                            },
                            "value": {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [
                                {
                                  "type": "Identifier",
                                  "name": "o"
                                }
                              ],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "_yuitest_coverfunc"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                        },
                                        {
                                          "type": "Literal",
                                          "value": "_beforeCreateTheadThNode"
                                        },
                                        {
                                          "type": "Literal",
                                          "value": 276
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "_yuitest_coverline"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                        },
                                        {
                                          "type": "Literal",
                                          "value": 277
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "sortedBy"
                                        },
                                        "init": null
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "sortLabel"
                                        },
                                        "init": null
                                      }
                                    ],
                                    "kind": "var"
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "_yuitest_coverline"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                        },
                                        {
                                          "type": "Literal",
                                          "value": 279
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "IfStatement",
                                    "test": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "o"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "column"
                                          }
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "get"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "sortable"
                                        }
                                      ]
                                    },
                                    "consequent": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "_yuitest_coverline"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": 280
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "sortedBy"
                                            },
                                            "right": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ThisExpression"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "get"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": "lastSortedBy"
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "_yuitest_coverline"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": 282
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "sortLabel"
                                            },
                                            "right": {
                                              "type": "ConditionalExpression",
                                              "test": {
                                                "type": "LogicalExpression",
                                                "operator": "&&",
                                                "left": {
                                                  "type": "LogicalExpression",
                                                  "operator": "&&",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "sortedBy"
                                                  },
                                                  "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "===",
                                                    "left": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "sortedBy"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "dir"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "Identifier",
                                                      "name": "ASC"
                                                    }
                                                  }
                                                },
                                                "right": {
                                                  "type": "BinaryExpression",
                                                  "operator": "===",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "sortedBy"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "key"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "o"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "column"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "get"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Literal",
                                                        "value": "key"
                                                      }
                                                    ]
                                                  }
                                                }
                                              },
                                              "consequent": {
                                                "type": "Literal",
                                                "value": "reverseSortBy"
                                              },
                                              "alternate": {
                                                "type": "Literal",
                                                "value": "sortBy"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "_yuitest_coverline"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": 286
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "o"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "value"
                                              }
                                            },
                                            "right": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "Y"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "Lang"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "sub"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "get"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "template"
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "ObjectExpression",
                                                  "properties": [
                                                    {
                                                      "type": "Property",
                                                      "key": {
                                                        "type": "Identifier",
                                                        "name": "link_class"
                                                      },
                                                      "value": {
                                                        "type": "LogicalExpression",
                                                        "operator": "||",
                                                        "left": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "o"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "link_class"
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": ""
                                                        }
                                                      },
                                                      "kind": "init"
                                                    },
                                                    {
                                                      "type": "Property",
                                                      "key": {
                                                        "type": "Identifier",
                                                        "name": "link_title"
                                                      },
                                                      "value": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "Y"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "Lang"
                                                            }
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "sub"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ThisExpression"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "get"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                  "type": "Literal",
                                                                  "value": "strings."
                                                                },
                                                                "right": {
                                                                  "type": "Identifier",
                                                                  "name": "sortLabel"
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          {
                                                            "type": "ObjectExpression",
                                                            "properties": [
                                                              {
                                                                "type": "Property",
                                                                "key": {
                                                                  "type": "Identifier",
                                                                  "name": "column"
                                                                },
                                                                "value": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "o"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "column"
                                                                      }
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "get"
                                                                    }
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "Literal",
                                                                      "value": "label"
                                                                    }
                                                                  ]
                                                                },
                                                                "kind": "init"
                                                              }
                                                            ]
                                                          }
                                                        ]
                                                      },
                                                      "kind": "init"
                                                    },
                                                    {
                                                      "type": "Property",
                                                      "key": {
                                                        "type": "Identifier",
                                                        "name": "link_href"
                                                      },
                                                      "value": {
                                                        "type": "Literal",
                                                        "value": "#"
                                                      },
                                                      "kind": "init"
                                                    },
                                                    {
                                                      "type": "Property",
                                                      "key": {
                                                        "type": "Identifier",
                                                        "name": "value"
                                                      },
                                                      "value": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "o"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "value"
                                                        }
                                                      },
                                                      "kind": "init"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "alternate": null
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "_beforeAttachTheadThNode"
                            },
                            "value": {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [
                                {
                                  "type": "Identifier",
                                  "name": "o"
                                }
                              ],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "_yuitest_coverfunc"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                        },
                                        {
                                          "type": "Literal",
                                          "value": "_beforeAttachTheadThNode"
                                        },
                                        {
                                          "type": "Literal",
                                          "value": 304
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "_yuitest_coverline"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                        },
                                        {
                                          "type": "Literal",
                                          "value": 305
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "lastSortedBy"
                                        },
                                        "init": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "get"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": "lastSortedBy"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "key"
                                        },
                                        "init": {
                                          "type": "LogicalExpression",
                                          "operator": "&&",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "lastSortedBy"
                                          },
                                          "right": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "lastSortedBy"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "key"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "dir"
                                        },
                                        "init": {
                                          "type": "LogicalExpression",
                                          "operator": "&&",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "lastSortedBy"
                                          },
                                          "right": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "lastSortedBy"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "dir"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "notdir"
                                        },
                                        "init": {
                                          "type": "LogicalExpression",
                                          "operator": "&&",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "lastSortedBy"
                                          },
                                          "right": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "lastSortedBy"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "notdir"
                                            }
                                          }
                                        }
                                      }
                                    ],
                                    "kind": "var"
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "_yuitest_coverline"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                        },
                                        {
                                          "type": "Literal",
                                          "value": 311
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "IfStatement",
                                    "test": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "o"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "column"
                                          }
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "get"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "sortable"
                                        }
                                      ]
                                    },
                                    "consequent": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "_yuitest_coverline"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": 312
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "o"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "th"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "addClass"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "YgetClassName"
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "DATATABLE"
                                                  },
                                                  {
                                                    "type": "Literal",
                                                    "value": "sortable"
                                                  }
                                                ]
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    },
                                    "alternate": null
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "_yuitest_coverline"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                        },
                                        {
                                          "type": "Literal",
                                          "value": 315
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "IfStatement",
                                    "test": {
                                      "type": "LogicalExpression",
                                      "operator": "&&",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "key"
                                      },
                                      "right": {
                                        "type": "BinaryExpression",
                                        "operator": "===",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "key"
                                        },
                                        "right": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "o"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "column"
                                              }
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "get"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": "key"
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    "consequent": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "_yuitest_coverline"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": 316
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "o"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "th"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "replaceClass"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "YgetClassName"
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "DATATABLE"
                                                  },
                                                  {
                                                    "type": "Identifier",
                                                    "name": "notdir"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "YgetClassName"
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "DATATABLE"
                                                  },
                                                  {
                                                    "type": "Identifier",
                                                    "name": "dir"
                                                  }
                                                ]
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    },
                                    "alternate": null
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "_beforeAttachTbodyTdNode"
                            },
                            "value": {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [
                                {
                                  "type": "Identifier",
                                  "name": "o"
                                }
                              ],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "_yuitest_coverfunc"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                        },
                                        {
                                          "type": "Literal",
                                          "value": "_beforeAttachTbodyTdNode"
                                        },
                                        {
                                          "type": "Literal",
                                          "value": 327
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "_yuitest_coverline"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                        },
                                        {
                                          "type": "Literal",
                                          "value": 328
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "lastSortedBy"
                                        },
                                        "init": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "get"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": "lastSortedBy"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "key"
                                        },
                                        "init": {
                                          "type": "LogicalExpression",
                                          "operator": "&&",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "lastSortedBy"
                                          },
                                          "right": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "lastSortedBy"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "key"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "dir"
                                        },
                                        "init": {
                                          "type": "LogicalExpression",
                                          "operator": "&&",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "lastSortedBy"
                                          },
                                          "right": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "lastSortedBy"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "dir"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "notdir"
                                        },
                                        "init": {
                                          "type": "LogicalExpression",
                                          "operator": "&&",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "lastSortedBy"
                                          },
                                          "right": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "lastSortedBy"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "notdir"
                                            }
                                          }
                                        }
                                      }
                                    ],
                                    "kind": "var"
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "_yuitest_coverline"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                        },
                                        {
                                          "type": "Literal",
                                          "value": 334
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "IfStatement",
                                    "test": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "o"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "column"
                                          }
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "get"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "sortable"
                                        }
                                      ]
                                    },
                                    "consequent": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "_yuitest_coverline"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": 335
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "o"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "td"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "addClass"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "YgetClassName"
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "DATATABLE"
                                                  },
                                                  {
                                                    "type": "Literal",
                                                    "value": "sortable"
                                                  }
                                                ]
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    },
                                    "alternate": null
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "_yuitest_coverline"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                        },
                                        {
                                          "type": "Literal",
                                          "value": 338
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "IfStatement",
                                    "test": {
                                      "type": "LogicalExpression",
                                      "operator": "&&",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "key"
                                      },
                                      "right": {
                                        "type": "BinaryExpression",
                                        "operator": "===",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "key"
                                        },
                                        "right": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "o"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "column"
                                              }
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "get"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": "key"
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    "consequent": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "_yuitest_coverline"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": 339
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "o"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "td"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "replaceClass"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "YgetClassName"
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "DATATABLE"
                                                  },
                                                  {
                                                    "type": "Identifier",
                                                    "name": "notdir"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "YgetClassName"
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "DATATABLE"
                                                  },
                                                  {
                                                    "type": "Identifier",
                                                    "name": "dir"
                                                  }
                                                ]
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    },
                                    "alternate": null
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "_onEventSortColumn"
                            },
                            "value": {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [
                                {
                                  "type": "Identifier",
                                  "name": "e"
                                }
                              ],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "_yuitest_coverfunc"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                        },
                                        {
                                          "type": "Literal",
                                          "value": "_onEventSortColumn"
                                        },
                                        {
                                          "type": "Literal",
                                          "value": 350
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "_yuitest_coverline"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                        },
                                        {
                                          "type": "Literal",
                                          "value": 351
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "e"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "halt"
                                        }
                                      },
                                      "arguments": []
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "_yuitest_coverline"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                        },
                                        {
                                          "type": "Literal",
                                          "value": 353
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "table"
                                        },
                                        "init": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "get"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": "host"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "column"
                                        },
                                        "init": {
                                          "type": "MemberExpression",
                                          "computed": true,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "table"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "get"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": "columnset"
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "idHash"
                                            }
                                          },
                                          "property": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "e"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "currentTarget"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "get"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "id"
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "key"
                                        },
                                        "init": null
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "field"
                                        },
                                        "init": null
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "lastSort"
                                        },
                                        "init": null
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "desc"
                                        },
                                        "init": null
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "sorter"
                                        },
                                        "init": null
                                      }
                                    ],
                                    "kind": "var"
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "_yuitest_coverline"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                        },
                                        {
                                          "type": "Literal",
                                          "value": 357
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "IfStatement",
                                    "test": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "column"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "get"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "sortable"
                                        }
                                      ]
                                    },
                                    "consequent": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "_yuitest_coverline"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": 358
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "key"
                                            },
                                            "right": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "column"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "get"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": "key"
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "_yuitest_coverline"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": 359
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "field"
                                            },
                                            "right": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "column"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "get"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": "field"
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "_yuitest_coverline"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": 360
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "lastSort"
                                            },
                                            "right": {
                                              "type": "LogicalExpression",
                                              "operator": "||",
                                              "left": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "get"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Literal",
                                                    "value": "lastSortedBy"
                                                  }
                                                ]
                                              },
                                              "right": {
                                                "type": "ObjectExpression",
                                                "properties": []
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "_yuitest_coverline"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": 361
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "desc"
                                            },
                                            "right": {
                                              "type": "LogicalExpression",
                                              "operator": "&&",
                                              "left": {
                                                "type": "BinaryExpression",
                                                "operator": "===",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "lastSort"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "key"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "key"
                                                }
                                              },
                                              "right": {
                                                "type": "BinaryExpression",
                                                "operator": "===",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "lastSort"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "dir"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "ASC"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "_yuitest_coverline"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": 362
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "sorter"
                                            },
                                            "right": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "column"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "get"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": "sortFn"
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "_yuitest_coverline"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": 364
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "table"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "get"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "recordset"
                                                    }
                                                  ]
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "sort"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "sort"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "field"
                                              },
                                              {
                                                "type": "Identifier",
                                                "name": "desc"
                                              },
                                              {
                                                "type": "Identifier",
                                                "name": "sorter"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "_yuitest_coverline"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": 366
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ThisExpression"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "set"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "lastSortedBy"
                                              },
                                              {
                                                "type": "ObjectExpression",
                                                "properties": [
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Identifier",
                                                      "name": "key"
                                                    },
                                                    "value": {
                                                      "type": "Identifier",
                                                      "name": "key"
                                                    },
                                                    "kind": "init"
                                                  },
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Identifier",
                                                      "name": "dir"
                                                    },
                                                    "value": {
                                                      "type": "ConditionalExpression",
                                                      "test": {
                                                        "type": "Identifier",
                                                        "name": "desc"
                                                      },
                                                      "consequent": {
                                                        "type": "Identifier",
                                                        "name": "DESC"
                                                      },
                                                      "alternate": {
                                                        "type": "Identifier",
                                                        "name": "ASC"
                                                      }
                                                    },
                                                    "kind": "init"
                                                  }
                                                ]
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    },
                                    "alternate": null
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            },
                            "kind": "init"
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "_yuitest_coverline"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "/build/datatable-sort-deprecated/datatable-sort-deprecated.js"
                      },
                      {
                        "type": "Literal",
                        "value": 374
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "Y"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "namespace"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "Plugin"
                          }
                        ]
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "DataTableSort"
                      }
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "DataTableSort"
                    }
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          },
          {
            "type": "Literal",
            "value": "3.7.3"
          },
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "requires"
                },
                "value": {
                  "type": "ArrayExpression",
                  "elements": [
                    {
                      "type": "Literal",
                      "value": "datatable-base-deprecated"
                    },
                    {
                      "type": "Literal",
                      "value": "plugin"
                    },
                    {
                      "type": "Literal",
                      "value": "recordset-sort"
                    }
                  ]
                },
                "kind": "init"
              },
              {
                "type": "Property",
                "key": {
                  "type": "Identifier",
                  "name": "lang"
                },
                "value": {
                  "type": "ArrayExpression",
                  "elements": [
                    {
                      "type": "Literal",
                      "value": "en"
                    }
                  ]
                },
                "kind": "init"
              }
            ]
          }
        ]
      }
    }
  ]
}
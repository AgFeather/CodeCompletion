{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "FunctionExpression",
            "id": null,
            "params": [],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "Literal",
                    "value": "use strict"
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "root"
                      },
                      "init": {
                        "type": "ThisExpression"
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "_"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "Backbone"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "BackboneModel"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "BackboneCollection"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "ModelProto"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "CollectionProto"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "defaultEvents"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "AssociatedModel"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "pathChecker"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "collectionEvents"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "delimiters"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "pathSeparator"
                      },
                      "init": null
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "operator": "!==",
                    "left": {
                      "type": "UnaryExpression",
                      "operator": "typeof",
                      "argument": {
                        "type": "Identifier",
                        "name": "exports"
                      },
                      "prefix": true
                    },
                    "right": {
                      "type": "Literal",
                      "value": "undefined"
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "_"
                          },
                          "right": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "require"
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "underscore"
                              }
                            ]
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "Backbone"
                          },
                          "right": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "require"
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "backbone"
                              }
                            ]
                          }
                        }
                      },
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "LogicalExpression",
                          "operator": "&&",
                          "left": {
                            "type": "BinaryExpression",
                            "operator": "!==",
                            "left": {
                              "type": "UnaryExpression",
                              "operator": "typeof",
                              "argument": {
                                "type": "Identifier",
                                "name": "module"
                              },
                              "prefix": true
                            },
                            "right": {
                              "type": "Literal",
                              "value": "undefined"
                            }
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "module"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "exports"
                            }
                          }
                        },
                        "consequent": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "module"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "exports"
                                  }
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "Backbone"
                                }
                              }
                            }
                          ]
                        },
                        "alternate": null
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "exports"
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "Backbone"
                          }
                        }
                      }
                    ]
                  },
                  "alternate": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "_"
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "root"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_"
                            }
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "Backbone"
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "root"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "Backbone"
                            }
                          }
                        }
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "BackboneModel"
                    },
                    "right": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Backbone"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "Model"
                      }
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "BackboneCollection"
                    },
                    "right": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Backbone"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "Collection"
                      }
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "ModelProto"
                    },
                    "right": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "BackboneModel"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "prototype"
                      }
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "CollectionProto"
                    },
                    "right": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "BackboneCollection"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "prototype"
                      }
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "defaultEvents"
                    },
                    "right": {
                      "type": "ArrayExpression",
                      "elements": [
                        {
                          "type": "Literal",
                          "value": "change"
                        },
                        {
                          "type": "Literal",
                          "value": "add"
                        },
                        {
                          "type": "Literal",
                          "value": "remove"
                        },
                        {
                          "type": "Literal",
                          "value": "reset"
                        },
                        {
                          "type": "Literal",
                          "value": "sort"
                        },
                        {
                          "type": "Literal",
                          "value": "destroy"
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "collectionEvents"
                    },
                    "right": {
                      "type": "ArrayExpression",
                      "elements": [
                        {
                          "type": "Literal",
                          "value": "reset"
                        },
                        {
                          "type": "Literal",
                          "value": "sort"
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Backbone"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "Associations"
                      }
                    },
                    "right": {
                      "type": "ObjectExpression",
                      "properties": [
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "VERSION"
                          },
                          "value": {
                            "type": "Literal",
                            "value": "0.5.3"
                          },
                          "kind": "init"
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Object"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "defineProperty"
                      }
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "Backbone"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "Associations"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "SEPARATOR"
                      },
                      {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "enumerable"
                            },
                            "value": {
                              "type": "Literal",
                              "value": true
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "get"
                            },
                            "value": {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "Identifier",
                                      "name": "pathSeparator"
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "set"
                            },
                            "value": {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [
                                {
                                  "type": "Identifier",
                                  "name": "value"
                                }
                              ],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "IfStatement",
                                    "test": {
                                      "type": "LogicalExpression",
                                      "operator": "||",
                                      "left": {
                                        "type": "UnaryExpression",
                                        "operator": "!",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "_"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "isString"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "value"
                                            }
                                          ]
                                        },
                                        "prefix": true
                                      },
                                      "right": {
                                        "type": "BinaryExpression",
                                        "operator": "<",
                                        "left": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "_"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "size"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "value"
                                            }
                                          ]
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": 1
                                        }
                                      }
                                    },
                                    "consequent": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "value"
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": "."
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "alternate": null
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "pathSeparator"
                                      },
                                      "right": {
                                        "type": "Identifier",
                                        "name": "value"
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "pathChecker"
                                      },
                                      "right": {
                                        "type": "NewExpression",
                                        "callee": {
                                          "type": "Identifier",
                                          "name": "RegExp"
                                        },
                                        "arguments": [
                                          {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "Literal",
                                                "value": "[\\"
                                              },
                                              "right": {
                                                "type": "Identifier",
                                                "name": "pathSeparator"
                                              }
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": "\\[\\]]+"
                                            }
                                          },
                                          {
                                            "type": "Literal",
                                            "value": "g"
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "delimiters"
                                      },
                                      "right": {
                                        "type": "NewExpression",
                                        "callee": {
                                          "type": "Identifier",
                                          "name": "RegExp"
                                        },
                                        "arguments": [
                                          {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "Literal",
                                                "value": "[^\\"
                                              },
                                              "right": {
                                                "type": "Identifier",
                                                "name": "pathSeparator"
                                              }
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": "\\[\\]]+"
                                            }
                                          },
                                          {
                                            "type": "Literal",
                                            "value": "g"
                                          }
                                        ]
                                      }
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            },
                            "kind": "init"
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "Backbone"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "Associations"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "Many"
                      }
                    },
                    "right": {
                      "type": "AssignmentExpression",
                      "operator": "=",
                      "left": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "Backbone"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "Many"
                        }
                      },
                      "right": {
                        "type": "Literal",
                        "value": "Many"
                      }
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "Backbone"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "Associations"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "One"
                      }
                    },
                    "right": {
                      "type": "AssignmentExpression",
                      "operator": "=",
                      "left": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "Backbone"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "One"
                        }
                      },
                      "right": {
                        "type": "Literal",
                        "value": "One"
                      }
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "Backbone"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "Associations"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "Self"
                      }
                    },
                    "right": {
                      "type": "AssignmentExpression",
                      "operator": "=",
                      "left": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "Backbone"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "Self"
                        }
                      },
                      "right": {
                        "type": "Literal",
                        "value": "Self"
                      }
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "Backbone"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "Associations"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "SEPARATOR"
                      }
                    },
                    "right": {
                      "type": "Literal",
                      "value": "."
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "AssociatedModel"
                    },
                    "right": {
                      "type": "AssignmentExpression",
                      "operator": "=",
                      "left": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "Backbone"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "AssociatedModel"
                        }
                      },
                      "right": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "Backbone"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "Associations"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "AssociatedModel"
                          }
                        },
                        "right": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "BackboneModel"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "extend"
                            }
                          },
                          "arguments": [
                            {
                              "type": "ObjectExpression",
                              "properties": [
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "relations"
                                  },
                                  "value": {
                                    "type": "Identifier",
                                    "name": "undefined"
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "_proxyCalls"
                                  },
                                  "value": {
                                    "type": "Identifier",
                                    "name": "undefined"
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "get"
                                  },
                                  "value": {
                                    "type": "FunctionExpression",
                                    "id": null,
                                    "params": [
                                      {
                                        "type": "Identifier",
                                        "name": "attr"
                                      }
                                    ],
                                    "defaults": [],
                                    "body": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "VariableDeclaration",
                                          "declarations": [
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "obj"
                                              },
                                              "init": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "ModelProto"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "get"
                                                    }
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "call"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "ThisExpression"
                                                  },
                                                  {
                                                    "type": "Identifier",
                                                    "name": "attr"
                                                  }
                                                ]
                                              }
                                            }
                                          ],
                                          "kind": "var"
                                        },
                                        {
                                          "type": "ReturnStatement",
                                          "argument": {
                                            "type": "ConditionalExpression",
                                            "test": {
                                              "type": "Identifier",
                                              "name": "obj"
                                            },
                                            "consequent": {
                                              "type": "Identifier",
                                              "name": "obj"
                                            },
                                            "alternate": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "_getAttr"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "apply"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "ThisExpression"
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "arguments"
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "rest": null,
                                    "generator": false,
                                    "expression": false
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "set"
                                  },
                                  "value": {
                                    "type": "FunctionExpression",
                                    "id": null,
                                    "params": [
                                      {
                                        "type": "Identifier",
                                        "name": "key"
                                      },
                                      {
                                        "type": "Identifier",
                                        "name": "value"
                                      },
                                      {
                                        "type": "Identifier",
                                        "name": "options"
                                      }
                                    ],
                                    "defaults": [],
                                    "body": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "VariableDeclaration",
                                          "declarations": [
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "attributes"
                                              },
                                              "init": null
                                            },
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "result"
                                              },
                                              "init": null
                                            }
                                          ],
                                          "kind": "var"
                                        },
                                        {
                                          "type": "IfStatement",
                                          "test": {
                                            "type": "LogicalExpression",
                                            "operator": "||",
                                            "left": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "_"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "isObject"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "key"
                                                }
                                              ]
                                            },
                                            "right": {
                                              "type": "BinaryExpression",
                                              "operator": "==",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "key"
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": null
                                              }
                                            }
                                          },
                                          "consequent": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "attributes"
                                                  },
                                                  "right": {
                                                    "type": "Identifier",
                                                    "name": "key"
                                                  }
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "options"
                                                  },
                                                  "right": {
                                                    "type": "Identifier",
                                                    "name": "value"
                                                  }
                                                }
                                              }
                                            ]
                                          },
                                          "alternate": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "attributes"
                                                  },
                                                  "right": {
                                                    "type": "ObjectExpression",
                                                    "properties": []
                                                  }
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "attributes"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "key"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "Identifier",
                                                    "name": "value"
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "result"
                                            },
                                            "right": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ThisExpression"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "_set"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "attributes"
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "options"
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ThisExpression"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "_processPendingEvents"
                                              }
                                            },
                                            "arguments": []
                                          }
                                        },
                                        {
                                          "type": "ReturnStatement",
                                          "argument": {
                                            "type": "Identifier",
                                            "name": "result"
                                          }
                                        }
                                      ]
                                    },
                                    "rest": null,
                                    "generator": false,
                                    "expression": false
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "_set"
                                  },
                                  "value": {
                                    "type": "FunctionExpression",
                                    "id": null,
                                    "params": [
                                      {
                                        "type": "Identifier",
                                        "name": "attributes"
                                      },
                                      {
                                        "type": "Identifier",
                                        "name": "options"
                                      }
                                    ],
                                    "defaults": [],
                                    "body": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "VariableDeclaration",
                                          "declarations": [
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "attr"
                                              },
                                              "init": null
                                            },
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "modelMap"
                                              },
                                              "init": null
                                            },
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "modelId"
                                              },
                                              "init": null
                                            },
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "obj"
                                              },
                                              "init": null
                                            },
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "result"
                                              },
                                              "init": {
                                                "type": "ThisExpression"
                                              }
                                            }
                                          ],
                                          "kind": "var"
                                        },
                                        {
                                          "type": "IfStatement",
                                          "test": {
                                            "type": "UnaryExpression",
                                            "operator": "!",
                                            "argument": {
                                              "type": "Identifier",
                                              "name": "attributes"
                                            },
                                            "prefix": true
                                          },
                                          "consequent": {
                                            "type": "ReturnStatement",
                                            "argument": {
                                              "type": "ThisExpression"
                                            }
                                          },
                                          "alternate": null
                                        },
                                        {
                                          "type": "ForInStatement",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "attr"
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "attributes"
                                          },
                                          "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "LogicalExpression",
                                                  "operator": "||",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "modelMap"
                                                  },
                                                  "right": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "modelMap"
                                                    },
                                                    "right": {
                                                      "type": "ObjectExpression",
                                                      "properties": []
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "type": "IfStatement",
                                                "test": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "attr"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "match"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "pathChecker"
                                                    }
                                                  ]
                                                },
                                                "consequent": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "VariableDeclaration",
                                                      "declarations": [
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "pathTokens"
                                                          },
                                                          "init": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "Identifier",
                                                              "name": "getPathArray"
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Identifier",
                                                                "name": "attr"
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "initials"
                                                          },
                                                          "init": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "_"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "initial"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Identifier",
                                                                "name": "pathTokens"
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "last"
                                                          },
                                                          "init": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "pathTokens"
                                                            },
                                                            "property": {
                                                              "type": "BinaryExpression",
                                                              "operator": "-",
                                                              "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "pathTokens"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "length"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": 1
                                                              }
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "parentModel"
                                                          },
                                                          "init": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ThisExpression"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "get"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Identifier",
                                                                "name": "initials"
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      ],
                                                      "kind": "var"
                                                    },
                                                    {
                                                      "type": "IfStatement",
                                                      "test": {
                                                        "type": "BinaryExpression",
                                                        "operator": "instanceof",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "parentModel"
                                                        },
                                                        "right": {
                                                          "type": "Identifier",
                                                          "name": "AssociatedModel"
                                                        }
                                                      },
                                                      "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "AssignmentExpression",
                                                              "operator": "=",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "obj"
                                                              },
                                                              "right": {
                                                                "type": "LogicalExpression",
                                                                "operator": "||",
                                                                "left": {
                                                                  "type": "MemberExpression",
                                                                  "computed": true,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "modelMap"
                                                                  },
                                                                  "property": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "parentModel"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "cid"
                                                                    }
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "AssignmentExpression",
                                                                  "operator": "=",
                                                                  "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "modelMap"
                                                                    },
                                                                    "property": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "parentModel"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "cid"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "ObjectExpression",
                                                                    "properties": [
                                                                      {
                                                                        "type": "Property",
                                                                        "key": {
                                                                          "type": "Literal",
                                                                          "value": "model"
                                                                        },
                                                                        "value": {
                                                                          "type": "Identifier",
                                                                          "name": "parentModel"
                                                                        },
                                                                        "kind": "init"
                                                                      },
                                                                      {
                                                                        "type": "Property",
                                                                        "key": {
                                                                          "type": "Literal",
                                                                          "value": "data"
                                                                        },
                                                                        "value": {
                                                                          "type": "ObjectExpression",
                                                                          "properties": []
                                                                        },
                                                                        "kind": "init"
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "AssignmentExpression",
                                                              "operator": "=",
                                                              "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "obj"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "data"
                                                                  }
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "last"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "attributes"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "attr"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "alternate": null
                                                    }
                                                  ]
                                                },
                                                "alternate": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "obj"
                                                        },
                                                        "right": {
                                                          "type": "LogicalExpression",
                                                          "operator": "||",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "modelMap"
                                                            },
                                                            "property": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ThisExpression"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "cid"
                                                              }
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": true,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "modelMap"
                                                              },
                                                              "property": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "cid"
                                                                }
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "ObjectExpression",
                                                              "properties": [
                                                                {
                                                                  "type": "Property",
                                                                  "key": {
                                                                    "type": "Literal",
                                                                    "value": "model"
                                                                  },
                                                                  "value": {
                                                                    "type": "ThisExpression"
                                                                  },
                                                                  "kind": "init"
                                                                },
                                                                {
                                                                  "type": "Property",
                                                                  "key": {
                                                                    "type": "Literal",
                                                                    "value": "data"
                                                                  },
                                                                  "value": {
                                                                    "type": "ObjectExpression",
                                                                    "properties": []
                                                                  },
                                                                  "kind": "init"
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "obj"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "data"
                                                            }
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "attr"
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "attributes"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "attr"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          },
                                          "each": false
                                        },
                                        {
                                          "type": "IfStatement",
                                          "test": {
                                            "type": "Identifier",
                                            "name": "modelMap"
                                          },
                                          "consequent": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ForInStatement",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "modelId"
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "modelMap"
                                                },
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "obj"
                                                        },
                                                        "right": {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "modelMap"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "modelId"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "LogicalExpression",
                                                        "operator": "||",
                                                        "left": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ThisExpression"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "_setAttr"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "call"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "obj"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "model"
                                                              }
                                                            },
                                                            {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "obj"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "data"
                                                              }
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "name": "options"
                                                            }
                                                          ]
                                                        },
                                                        "right": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "result"
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": false
                                                          }
                                                        }
                                                      }
                                                    }
                                                  ]
                                                },
                                                "each": false
                                              }
                                            ]
                                          },
                                          "alternate": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "result"
                                                  },
                                                  "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "_setAttr"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "call"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "ThisExpression"
                                                      },
                                                      {
                                                        "type": "Identifier",
                                                        "name": "attributes"
                                                      },
                                                      {
                                                        "type": "Identifier",
                                                        "name": "options"
                                                      }
                                                    ]
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ReturnStatement",
                                          "argument": {
                                            "type": "Identifier",
                                            "name": "result"
                                          }
                                        }
                                      ]
                                    },
                                    "rest": null,
                                    "generator": false,
                                    "expression": false
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "_setAttr"
                                  },
                                  "value": {
                                    "type": "FunctionExpression",
                                    "id": null,
                                    "params": [
                                      {
                                        "type": "Identifier",
                                        "name": "attributes"
                                      },
                                      {
                                        "type": "Identifier",
                                        "name": "options"
                                      }
                                    ],
                                    "defaults": [],
                                    "body": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "VariableDeclaration",
                                          "declarations": [
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "attr"
                                              },
                                              "init": null
                                            }
                                          ],
                                          "kind": "var"
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "LogicalExpression",
                                            "operator": "||",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "options"
                                            },
                                            "right": {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "options"
                                              },
                                              "right": {
                                                "type": "ObjectExpression",
                                                "properties": []
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "IfStatement",
                                          "test": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "options"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "unset"
                                            }
                                          },
                                          "consequent": {
                                            "type": "ForInStatement",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "attr"
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "attributes"
                                            },
                                            "body": {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": true,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "attributes"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "attr"
                                                  }
                                                },
                                                "right": {
                                                  "type": "UnaryExpression",
                                                  "operator": "void",
                                                  "argument": {
                                                    "type": "Literal",
                                                    "value": 0
                                                  },
                                                  "prefix": true
                                                }
                                              }
                                            },
                                            "each": false
                                          },
                                          "alternate": null
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ThisExpression"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "parents"
                                              }
                                            },
                                            "right": {
                                              "type": "LogicalExpression",
                                              "operator": "||",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ThisExpression"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "parents"
                                                }
                                              },
                                              "right": {
                                                "type": "ArrayExpression",
                                                "elements": []
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "IfStatement",
                                          "test": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "relations"
                                            }
                                          },
                                          "consequent": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "_"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "each"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "ThisExpression"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "relations"
                                                      }
                                                    },
                                                    {
                                                      "type": "FunctionExpression",
                                                      "id": null,
                                                      "params": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "relation"
                                                        }
                                                      ],
                                                      "defaults": [],
                                                      "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "VariableDeclaration",
                                                            "declarations": [
                                                              {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                  "type": "Identifier",
                                                                  "name": "relationKey"
                                                                },
                                                                "init": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "relation"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "key"
                                                                  }
                                                                }
                                                              },
                                                              {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                  "type": "Identifier",
                                                                  "name": "relatedModel"
                                                                },
                                                                "init": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "relation"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "relatedModel"
                                                                  }
                                                                }
                                                              },
                                                              {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                  "type": "Identifier",
                                                                  "name": "collectionType"
                                                                },
                                                                "init": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "relation"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "collectionType"
                                                                  }
                                                                }
                                                              },
                                                              {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                  "type": "Identifier",
                                                                  "name": "map"
                                                                },
                                                                "init": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "relation"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "map"
                                                                  }
                                                                }
                                                              },
                                                              {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                  "type": "Identifier",
                                                                  "name": "currVal"
                                                                },
                                                                "init": {
                                                                  "type": "MemberExpression",
                                                                  "computed": true,
                                                                  "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "attributes"
                                                                    }
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "relationKey"
                                                                  }
                                                                }
                                                              },
                                                              {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                  "type": "Identifier",
                                                                  "name": "idKey"
                                                                },
                                                                "init": {
                                                                  "type": "LogicalExpression",
                                                                  "operator": "&&",
                                                                  "left": {
                                                                    "type": "Identifier",
                                                                    "name": "currVal"
                                                                  },
                                                                  "right": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "currVal"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "idAttribute"
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                  "type": "Identifier",
                                                                  "name": "val"
                                                                },
                                                                "init": null
                                                              },
                                                              {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                  "type": "Identifier",
                                                                  "name": "relationOptions"
                                                                },
                                                                "init": null
                                                              },
                                                              {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                  "type": "Identifier",
                                                                  "name": "data"
                                                                },
                                                                "init": null
                                                              },
                                                              {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                  "type": "Identifier",
                                                                  "name": "relationValue"
                                                                },
                                                                "init": null
                                                              },
                                                              {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                  "type": "Identifier",
                                                                  "name": "newCtx"
                                                                },
                                                                "init": {
                                                                  "type": "Literal",
                                                                  "value": false
                                                                }
                                                              }
                                                            ],
                                                            "kind": "var"
                                                          },
                                                          {
                                                            "type": "IfStatement",
                                                            "test": {
                                                              "type": "LogicalExpression",
                                                              "operator": "&&",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "relatedModel"
                                                              },
                                                              "right": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "instanceof",
                                                                  "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "relatedModel"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "prototype"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "Identifier",
                                                                    "name": "BackboneModel"
                                                                  }
                                                                },
                                                                "prefix": true
                                                              }
                                                            },
                                                            "consequent": {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                  "type": "Identifier",
                                                                  "name": "relatedModel"
                                                                },
                                                                "right": {
                                                                  "type": "ConditionalExpression",
                                                                  "test": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "_"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "isFunction"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "relatedModel"
                                                                      }
                                                                    ]
                                                                  },
                                                                  "consequent": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "relatedModel"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "call"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "ThisExpression"
                                                                      },
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "relation"
                                                                      },
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "attributes"
                                                                      }
                                                                    ]
                                                                  },
                                                                  "alternate": {
                                                                    "type": "Identifier",
                                                                    "name": "relatedModel"
                                                                  }
                                                                }
                                                              }
                                                            },
                                                            "alternate": null
                                                          },
                                                          {
                                                            "type": "IfStatement",
                                                            "test": {
                                                              "type": "LogicalExpression",
                                                              "operator": "&&",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "relatedModel"
                                                              },
                                                              "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "_"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "isString"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "relatedModel"
                                                                  }
                                                                ]
                                                              }
                                                            },
                                                            "consequent": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                      "type": "Identifier",
                                                                      "name": "relatedModel"
                                                                    },
                                                                    "right": {
                                                                      "type": "ConditionalExpression",
                                                                      "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "===",
                                                                        "left": {
                                                                          "type": "Identifier",
                                                                          "name": "relatedModel"
                                                                        },
                                                                        "right": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "Backbone"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "Self"
                                                                          }
                                                                        }
                                                                      },
                                                                      "consequent": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "constructor"
                                                                        }
                                                                      },
                                                                      "alternate": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "Identifier",
                                                                          "name": "map2Scope"
                                                                        },
                                                                        "arguments": [
                                                                          {
                                                                            "type": "Identifier",
                                                                            "name": "relatedModel"
                                                                          }
                                                                        ]
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "alternate": null
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "LogicalExpression",
                                                              "operator": "&&",
                                                              "left": {
                                                                "type": "LogicalExpression",
                                                                "operator": "&&",
                                                                "left": {
                                                                  "type": "Identifier",
                                                                  "name": "collectionType"
                                                                },
                                                                "right": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "_"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "isString"
                                                                    }
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "collectionType"
                                                                    }
                                                                  ]
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                  "type": "Identifier",
                                                                  "name": "collectionType"
                                                                },
                                                                "right": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "map2Scope"
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "collectionType"
                                                                    }
                                                                  ]
                                                                }
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "LogicalExpression",
                                                              "operator": "&&",
                                                              "left": {
                                                                "type": "LogicalExpression",
                                                                "operator": "&&",
                                                                "left": {
                                                                  "type": "Identifier",
                                                                  "name": "map"
                                                                },
                                                                "right": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "_"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "isString"
                                                                    }
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "map"
                                                                    }
                                                                  ]
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                  "type": "Identifier",
                                                                  "name": "map"
                                                                },
                                                                "right": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "map2Scope"
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "map"
                                                                    }
                                                                  ]
                                                                }
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "AssignmentExpression",
                                                              "operator": "=",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "relationOptions"
                                                              },
                                                              "right": {
                                                                "type": "ConditionalExpression",
                                                                "test": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "relation"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "options"
                                                                  }
                                                                },
                                                                "consequent": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "_"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "extend"
                                                                    }
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "ObjectExpression",
                                                                      "properties": []
                                                                    },
                                                                    {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "relation"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "options"
                                                                      }
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "options"
                                                                    }
                                                                  ]
                                                                },
                                                                "alternate": {
                                                                  "type": "Identifier",
                                                                  "name": "options"
                                                                }
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "type": "IfStatement",
                                                            "test": {
                                                              "type": "LogicalExpression",
                                                              "operator": "&&",
                                                              "left": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                  "type": "Identifier",
                                                                  "name": "relatedModel"
                                                                },
                                                                "prefix": true
                                                              },
                                                              "right": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                  "type": "Identifier",
                                                                  "name": "collectionType"
                                                                },
                                                                "prefix": true
                                                              }
                                                            },
                                                            "consequent": {
                                                              "type": "ThrowStatement",
                                                              "argument": {
                                                                "type": "NewExpression",
                                                                "callee": {
                                                                  "type": "Identifier",
                                                                  "name": "Error"
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Literal",
                                                                    "value": "specify either a relatedModel or collectionType"
                                                                  }
                                                                ]
                                                              }
                                                            },
                                                            "alternate": null
                                                          },
                                                          {
                                                            "type": "IfStatement",
                                                            "test": {
                                                              "type": "MemberExpression",
                                                              "computed": true,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "attributes"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "relationKey"
                                                              }
                                                            },
                                                            "consequent": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                      "type": "Identifier",
                                                                      "name": "val"
                                                                    },
                                                                    "right": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "_"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "result"
                                                                        }
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "name": "attributes"
                                                                        },
                                                                        {
                                                                          "type": "Identifier",
                                                                          "name": "relationKey"
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                },
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                      "type": "Identifier",
                                                                      "name": "val"
                                                                    },
                                                                    "right": {
                                                                      "type": "ConditionalExpression",
                                                                      "test": {
                                                                        "type": "Identifier",
                                                                        "name": "map"
                                                                      },
                                                                      "consequent": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "map"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "call"
                                                                          }
                                                                        },
                                                                        "arguments": [
                                                                          {
                                                                            "type": "ThisExpression"
                                                                          },
                                                                          {
                                                                            "type": "Identifier",
                                                                            "name": "val"
                                                                          },
                                                                          {
                                                                            "type": "ConditionalExpression",
                                                                            "test": {
                                                                              "type": "Identifier",
                                                                              "name": "collectionType"
                                                                            },
                                                                            "consequent": {
                                                                              "type": "Identifier",
                                                                              "name": "collectionType"
                                                                            },
                                                                            "alternate": {
                                                                              "type": "Identifier",
                                                                              "name": "relatedModel"
                                                                            }
                                                                          }
                                                                        ]
                                                                      },
                                                                      "alternate": {
                                                                        "type": "Identifier",
                                                                        "name": "val"
                                                                      }
                                                                    }
                                                                  }
                                                                },
                                                                {
                                                                  "type": "IfStatement",
                                                                  "test": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "===",
                                                                    "left": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "relation"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "type"
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "Backbone"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "Many"
                                                                      }
                                                                    }
                                                                  },
                                                                  "consequent": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                      {
                                                                        "type": "IfStatement",
                                                                        "test": {
                                                                          "type": "LogicalExpression",
                                                                          "operator": "&&",
                                                                          "left": {
                                                                            "type": "Identifier",
                                                                            "name": "collectionType"
                                                                          },
                                                                          "right": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "instanceof",
                                                                            "left": {
                                                                              "type": "UnaryExpression",
                                                                              "operator": "!",
                                                                              "argument": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "collectionType"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "prototype"
                                                                                }
                                                                              },
                                                                              "prefix": true
                                                                            },
                                                                            "right": {
                                                                              "type": "Identifier",
                                                                              "name": "BackboneCollection"
                                                                            }
                                                                          }
                                                                        },
                                                                        "consequent": {
                                                                          "type": "BlockStatement",
                                                                          "body": [
                                                                            {
                                                                              "type": "ThrowStatement",
                                                                              "argument": {
                                                                                "type": "NewExpression",
                                                                                "callee": {
                                                                                  "type": "Identifier",
                                                                                  "name": "Error"
                                                                                },
                                                                                "arguments": [
                                                                                  {
                                                                                    "type": "Literal",
                                                                                    "value": "collectionType must inherit from Backbone.Collection"
                                                                                  }
                                                                                ]
                                                                              }
                                                                            }
                                                                          ]
                                                                        },
                                                                        "alternate": null
                                                                      },
                                                                      {
                                                                        "type": "IfStatement",
                                                                        "test": {
                                                                          "type": "Identifier",
                                                                          "name": "currVal"
                                                                        },
                                                                        "consequent": {
                                                                          "type": "BlockStatement",
                                                                          "body": [
                                                                            {
                                                                              "type": "ExpressionStatement",
                                                                              "expression": {
                                                                                "type": "AssignmentExpression",
                                                                                "operator": "=",
                                                                                "left": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "currVal"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_deferEvents"
                                                                                  }
                                                                                },
                                                                                "right": {
                                                                                  "type": "Literal",
                                                                                  "value": true
                                                                                }
                                                                              }
                                                                            },
                                                                            {
                                                                              "type": "ExpressionStatement",
                                                                              "expression": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": true,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "currVal"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "ConditionalExpression",
                                                                                    "test": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "relationOptions"
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "reset"
                                                                                      }
                                                                                    },
                                                                                    "consequent": {
                                                                                      "type": "Literal",
                                                                                      "value": "reset"
                                                                                    },
                                                                                    "alternate": {
                                                                                      "type": "Literal",
                                                                                      "value": "set"
                                                                                    }
                                                                                  }
                                                                                },
                                                                                "arguments": [
                                                                                  {
                                                                                    "type": "ConditionalExpression",
                                                                                    "test": {
                                                                                      "type": "BinaryExpression",
                                                                                      "operator": "instanceof",
                                                                                      "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "val"
                                                                                      },
                                                                                      "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "BackboneCollection"
                                                                                      }
                                                                                    },
                                                                                    "consequent": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "val"
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "models"
                                                                                      }
                                                                                    },
                                                                                    "alternate": {
                                                                                      "type": "Identifier",
                                                                                      "name": "val"
                                                                                    }
                                                                                  },
                                                                                  {
                                                                                    "type": "Identifier",
                                                                                    "name": "relationOptions"
                                                                                  }
                                                                                ]
                                                                              }
                                                                            },
                                                                            {
                                                                              "type": "ExpressionStatement",
                                                                              "expression": {
                                                                                "type": "AssignmentExpression",
                                                                                "operator": "=",
                                                                                "left": {
                                                                                  "type": "Identifier",
                                                                                  "name": "data"
                                                                                },
                                                                                "right": {
                                                                                  "type": "Identifier",
                                                                                  "name": "currVal"
                                                                                }
                                                                              }
                                                                            }
                                                                          ]
                                                                        },
                                                                        "alternate": {
                                                                          "type": "BlockStatement",
                                                                          "body": [
                                                                            {
                                                                              "type": "ExpressionStatement",
                                                                              "expression": {
                                                                                "type": "AssignmentExpression",
                                                                                "operator": "=",
                                                                                "left": {
                                                                                  "type": "Identifier",
                                                                                  "name": "newCtx"
                                                                                },
                                                                                "right": {
                                                                                  "type": "Literal",
                                                                                  "value": true
                                                                                }
                                                                              }
                                                                            },
                                                                            {
                                                                              "type": "IfStatement",
                                                                              "test": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "instanceof",
                                                                                "left": {
                                                                                  "type": "Identifier",
                                                                                  "name": "val"
                                                                                },
                                                                                "right": {
                                                                                  "type": "Identifier",
                                                                                  "name": "BackboneCollection"
                                                                                }
                                                                              },
                                                                              "consequent": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                  {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                      "type": "AssignmentExpression",
                                                                                      "operator": "=",
                                                                                      "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "data"
                                                                                      },
                                                                                      "right": {
                                                                                        "type": "Identifier",
                                                                                        "name": "val"
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                ]
                                                                              },
                                                                              "alternate": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                  {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                      "type": "AssignmentExpression",
                                                                                      "operator": "=",
                                                                                      "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "data"
                                                                                      },
                                                                                      "right": {
                                                                                        "type": "ConditionalExpression",
                                                                                        "test": {
                                                                                          "type": "Identifier",
                                                                                          "name": "collectionType"
                                                                                        },
                                                                                        "consequent": {
                                                                                          "type": "NewExpression",
                                                                                          "callee": {
                                                                                            "type": "Identifier",
                                                                                            "name": "collectionType"
                                                                                          },
                                                                                          "arguments": []
                                                                                        },
                                                                                        "alternate": {
                                                                                          "type": "CallExpression",
                                                                                          "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                              "type": "ThisExpression"
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "Identifier",
                                                                                              "name": "_createCollection"
                                                                                            }
                                                                                          },
                                                                                          "arguments": [
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "name": "relatedModel"
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                      "type": "CallExpression",
                                                                                      "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "data"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "ConditionalExpression",
                                                                                          "test": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                              "type": "Identifier",
                                                                                              "name": "relationOptions"
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "Identifier",
                                                                                              "name": "reset"
                                                                                            }
                                                                                          },
                                                                                          "consequent": {
                                                                                            "type": "Literal",
                                                                                            "value": "reset"
                                                                                          },
                                                                                          "alternate": {
                                                                                            "type": "Literal",
                                                                                            "value": "set"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "arguments": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "name": "val"
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "name": "relationOptions"
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  }
                                                                                ]
                                                                              }
                                                                            }
                                                                          ]
                                                                        }
                                                                      }
                                                                    ]
                                                                  },
                                                                  "alternate": {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "===",
                                                                      "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "relation"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "type"
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "Backbone"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "One"
                                                                        }
                                                                      }
                                                                    },
                                                                    "consequent": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "IfStatement",
                                                                          "test": {
                                                                            "type": "UnaryExpression",
                                                                            "operator": "!",
                                                                            "argument": {
                                                                              "type": "Identifier",
                                                                              "name": "relatedModel"
                                                                            },
                                                                            "prefix": true
                                                                          },
                                                                          "consequent": {
                                                                            "type": "ThrowStatement",
                                                                            "argument": {
                                                                              "type": "NewExpression",
                                                                              "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "Error"
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "Literal",
                                                                                  "value": "specify a relatedModel for Backbone.One type"
                                                                                }
                                                                              ]
                                                                            }
                                                                          },
                                                                          "alternate": null
                                                                        },
                                                                        {
                                                                          "type": "IfStatement",
                                                                          "test": {
                                                                            "type": "UnaryExpression",
                                                                            "operator": "!",
                                                                            "argument": {
                                                                              "type": "BinaryExpression",
                                                                              "operator": "instanceof",
                                                                              "left": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "relatedModel"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "prototype"
                                                                                }
                                                                              },
                                                                              "right": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "Backbone"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "AssociatedModel"
                                                                                }
                                                                              }
                                                                            },
                                                                            "prefix": true
                                                                          },
                                                                          "consequent": {
                                                                            "type": "ThrowStatement",
                                                                            "argument": {
                                                                              "type": "NewExpression",
                                                                              "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "Error"
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "Literal",
                                                                                  "value": "specify an AssociatedModel for Backbone.One type"
                                                                                }
                                                                              ]
                                                                            }
                                                                          },
                                                                          "alternate": null
                                                                        },
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "AssignmentExpression",
                                                                            "operator": "=",
                                                                            "left": {
                                                                              "type": "Identifier",
                                                                              "name": "data"
                                                                            },
                                                                            "right": {
                                                                              "type": "ConditionalExpression",
                                                                              "test": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "instanceof",
                                                                                "left": {
                                                                                  "type": "Identifier",
                                                                                  "name": "val"
                                                                                },
                                                                                "right": {
                                                                                  "type": "Identifier",
                                                                                  "name": "AssociatedModel"
                                                                                }
                                                                              },
                                                                              "consequent": {
                                                                                "type": "Identifier",
                                                                                "name": "val"
                                                                              },
                                                                              "alternate": {
                                                                                "type": "NewExpression",
                                                                                "callee": {
                                                                                  "type": "Identifier",
                                                                                  "name": "relatedModel"
                                                                                },
                                                                                "arguments": [
                                                                                  {
                                                                                    "type": "Identifier",
                                                                                    "name": "val"
                                                                                  },
                                                                                  {
                                                                                    "type": "Identifier",
                                                                                    "name": "relationOptions"
                                                                                  }
                                                                                ]
                                                                              }
                                                                            }
                                                                          }
                                                                        },
                                                                        {
                                                                          "type": "IfStatement",
                                                                          "test": {
                                                                            "type": "LogicalExpression",
                                                                            "operator": "&&",
                                                                            "left": {
                                                                              "type": "LogicalExpression",
                                                                              "operator": "&&",
                                                                              "left": {
                                                                                "type": "Identifier",
                                                                                "name": "currVal"
                                                                              },
                                                                              "right": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "data"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "idKey"
                                                                                }
                                                                              }
                                                                            },
                                                                            "right": {
                                                                              "type": "BinaryExpression",
                                                                              "operator": "===",
                                                                              "left": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "currVal"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "idKey"
                                                                                }
                                                                              },
                                                                              "right": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "data"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "idKey"
                                                                                }
                                                                              }
                                                                            }
                                                                          },
                                                                          "consequent": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "AssignmentExpression",
                                                                                  "operator": "=",
                                                                                  "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "currVal"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "_deferEvents"
                                                                                    }
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "Literal",
                                                                                    "value": true
                                                                                  }
                                                                                }
                                                                              },
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "currVal"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "_set"
                                                                                    }
                                                                                  },
                                                                                  "arguments": [
                                                                                    {
                                                                                      "type": "ConditionalExpression",
                                                                                      "test": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "instanceof",
                                                                                        "left": {
                                                                                          "type": "Identifier",
                                                                                          "name": "val"
                                                                                        },
                                                                                        "right": {
                                                                                          "type": "Identifier",
                                                                                          "name": "AssociatedModel"
                                                                                        }
                                                                                      },
                                                                                      "consequent": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "val"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "attributes"
                                                                                        }
                                                                                      },
                                                                                      "alternate": {
                                                                                        "type": "Identifier",
                                                                                        "name": "val"
                                                                                      }
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "name": "relationOptions"
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              },
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "AssignmentExpression",
                                                                                  "operator": "=",
                                                                                  "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "data"
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "Identifier",
                                                                                    "name": "currVal"
                                                                                  }
                                                                                }
                                                                              }
                                                                            ]
                                                                          },
                                                                          "alternate": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "AssignmentExpression",
                                                                                  "operator": "=",
                                                                                  "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "newCtx"
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "Literal",
                                                                                    "value": true
                                                                                  }
                                                                                }
                                                                              }
                                                                            ]
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "alternate": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "ThrowStatement",
                                                                          "argument": {
                                                                            "type": "NewExpression",
                                                                            "callee": {
                                                                              "type": "Identifier",
                                                                              "name": "Error"
                                                                            },
                                                                            "arguments": [
                                                                              {
                                                                                "type": "Literal",
                                                                                "value": "type attribute must be specified and have the values Backbone.One or Backbone.Many"
                                                                              }
                                                                            ]
                                                                          }
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                },
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                      "type": "MemberExpression",
                                                                      "computed": true,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "attributes"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "relationKey"
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "Identifier",
                                                                      "name": "data"
                                                                    }
                                                                  }
                                                                },
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                      "type": "Identifier",
                                                                      "name": "relationValue"
                                                                    },
                                                                    "right": {
                                                                      "type": "Identifier",
                                                                      "name": "data"
                                                                    }
                                                                  }
                                                                },
                                                                {
                                                                  "type": "IfStatement",
                                                                  "test": {
                                                                    "type": "LogicalExpression",
                                                                    "operator": "||",
                                                                    "left": {
                                                                      "type": "Identifier",
                                                                      "name": "newCtx"
                                                                    },
                                                                    "right": {
                                                                      "type": "LogicalExpression",
                                                                      "operator": "&&",
                                                                      "left": {
                                                                        "type": "Identifier",
                                                                        "name": "relationValue"
                                                                      },
                                                                      "right": {
                                                                        "type": "UnaryExpression",
                                                                        "operator": "!",
                                                                        "argument": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "relationValue"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "_proxyCallback"
                                                                          }
                                                                        },
                                                                        "prefix": true
                                                                      }
                                                                    }
                                                                  },
                                                                  "consequent": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "AssignmentExpression",
                                                                          "operator": "=",
                                                                          "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "Identifier",
                                                                              "name": "relationValue"
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "_proxyCallback"
                                                                            }
                                                                          },
                                                                          "right": {
                                                                            "type": "FunctionExpression",
                                                                            "id": null,
                                                                            "params": [],
                                                                            "defaults": [],
                                                                            "body": {
                                                                              "type": "BlockStatement",
                                                                              "body": [
                                                                                {
                                                                                  "type": "ReturnStatement",
                                                                                  "argument": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "ThisExpression"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "_bubbleEvent"
                                                                                        }
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "call"
                                                                                      }
                                                                                    },
                                                                                    "arguments": [
                                                                                      {
                                                                                        "type": "ThisExpression"
                                                                                      },
                                                                                      {
                                                                                        "type": "Identifier",
                                                                                        "name": "relationKey"
                                                                                      },
                                                                                      {
                                                                                        "type": "Identifier",
                                                                                        "name": "relationValue"
                                                                                      },
                                                                                      {
                                                                                        "type": "Identifier",
                                                                                        "name": "arguments"
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                }
                                                                              ]
                                                                            },
                                                                            "rest": null,
                                                                            "generator": false,
                                                                            "expression": false
                                                                          }
                                                                        }
                                                                      },
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "Identifier",
                                                                              "name": "relationValue"
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "on"
                                                                            }
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "Literal",
                                                                              "value": "all"
                                                                            },
                                                                            {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "relationValue"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "_proxyCallback"
                                                                              }
                                                                            },
                                                                            {
                                                                              "type": "ThisExpression"
                                                                            }
                                                                          ]
                                                                        }
                                                                      }
                                                                    ]
                                                                  },
                                                                  "alternate": null
                                                                }
                                                              ]
                                                            },
                                                            "alternate": null
                                                          },
                                                          {
                                                            "type": "IfStatement",
                                                            "test": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "attributes"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "hasOwnProperty"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "relationKey"
                                                                }
                                                              ]
                                                            },
                                                            "consequent": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "VariableDeclaration",
                                                                  "declarations": [
                                                                    {
                                                                      "type": "VariableDeclarator",
                                                                      "id": {
                                                                        "type": "Identifier",
                                                                        "name": "updated"
                                                                      },
                                                                      "init": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "attributes"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "relationKey"
                                                                        }
                                                                      }
                                                                    }
                                                                  ],
                                                                  "kind": "var"
                                                                },
                                                                {
                                                                  "type": "VariableDeclaration",
                                                                  "declarations": [
                                                                    {
                                                                      "type": "VariableDeclarator",
                                                                      "id": {
                                                                        "type": "Identifier",
                                                                        "name": "original"
                                                                      },
                                                                      "init": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "ThisExpression"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "attributes"
                                                                          }
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "relationKey"
                                                                        }
                                                                      }
                                                                    }
                                                                  ],
                                                                  "kind": "var"
                                                                },
                                                                {
                                                                  "type": "IfStatement",
                                                                  "test": {
                                                                    "type": "Identifier",
                                                                    "name": "updated"
                                                                  },
                                                                  "consequent": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "AssignmentExpression",
                                                                          "operator": "=",
                                                                          "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "Identifier",
                                                                              "name": "updated"
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "parents"
                                                                            }
                                                                          },
                                                                          "right": {
                                                                            "type": "LogicalExpression",
                                                                            "operator": "||",
                                                                            "left": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "updated"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "parents"
                                                                              }
                                                                            },
                                                                            "right": {
                                                                              "type": "ArrayExpression",
                                                                              "elements": []
                                                                            }
                                                                          }
                                                                        }
                                                                      },
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "LogicalExpression",
                                                                          "operator": "&&",
                                                                          "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "==",
                                                                            "left": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "_"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "indexOf"
                                                                                }
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "updated"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "parents"
                                                                                  }
                                                                                },
                                                                                {
                                                                                  "type": "ThisExpression"
                                                                                }
                                                                              ]
                                                                            },
                                                                            "right": {
                                                                              "type": "UnaryExpression",
                                                                              "operator": "-",
                                                                              "argument": {
                                                                                "type": "Literal",
                                                                                "value": 1
                                                                              },
                                                                              "prefix": true
                                                                            }
                                                                          },
                                                                          "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "updated"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "parents"
                                                                                }
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "push"
                                                                              }
                                                                            },
                                                                            "arguments": [
                                                                              {
                                                                                "type": "ThisExpression"
                                                                              }
                                                                            ]
                                                                          }
                                                                        }
                                                                      }
                                                                    ]
                                                                  },
                                                                  "alternate": {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                      "type": "LogicalExpression",
                                                                      "operator": "&&",
                                                                      "left": {
                                                                        "type": "Identifier",
                                                                        "name": "original"
                                                                      },
                                                                      "right": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": ">",
                                                                        "left": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "Identifier",
                                                                              "name": "original"
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "parents"
                                                                            }
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "length"
                                                                          }
                                                                        },
                                                                        "right": {
                                                                          "type": "Literal",
                                                                          "value": 0
                                                                        }
                                                                      }
                                                                    },
                                                                    "consequent": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "AssignmentExpression",
                                                                            "operator": "=",
                                                                            "left": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "original"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "parents"
                                                                              }
                                                                            },
                                                                            "right": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "_"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "difference"
                                                                                }
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "original"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "parents"
                                                                                  }
                                                                                },
                                                                                {
                                                                                  "type": "ArrayExpression",
                                                                                  "elements": [
                                                                                    {
                                                                                      "type": "ThisExpression"
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            }
                                                                          }
                                                                        },
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "LogicalExpression",
                                                                            "operator": "&&",
                                                                            "left": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "original"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "_proxyCallback"
                                                                              }
                                                                            },
                                                                            "right": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "original"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "off"
                                                                                }
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "Literal",
                                                                                  "value": "all"
                                                                                },
                                                                                {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "original"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "_proxyCallback"
                                                                                  }
                                                                                },
                                                                                {
                                                                                  "type": "ThisExpression"
                                                                                }
                                                                              ]
                                                                            }
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "alternate": null
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "alternate": null
                                                          }
                                                        ]
                                                      },
                                                      "rest": null,
                                                      "generator": false,
                                                      "expression": false
                                                    },
                                                    {
                                                      "type": "ThisExpression"
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          },
                                          "alternate": null
                                        },
                                        {
                                          "type": "ReturnStatement",
                                          "argument": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "ModelProto"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "set"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "call"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "ThisExpression"
                                              },
                                              {
                                                "type": "Identifier",
                                                "name": "attributes"
                                              },
                                              {
                                                "type": "Identifier",
                                                "name": "options"
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    },
                                    "rest": null,
                                    "generator": false,
                                    "expression": false
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "_bubbleEvent"
                                  },
                                  "value": {
                                    "type": "FunctionExpression",
                                    "id": null,
                                    "params": [
                                      {
                                        "type": "Identifier",
                                        "name": "relationKey"
                                      },
                                      {
                                        "type": "Identifier",
                                        "name": "relationValue"
                                      },
                                      {
                                        "type": "Identifier",
                                        "name": "eventArguments"
                                      }
                                    ],
                                    "defaults": [],
                                    "body": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "VariableDeclaration",
                                          "declarations": [
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "args"
                                              },
                                              "init": {
                                                "type": "Identifier",
                                                "name": "eventArguments"
                                              }
                                            },
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "opt"
                                              },
                                              "init": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "args"
                                                    },
                                                    "property": {
                                                      "type": "Literal",
                                                      "value": 0
                                                    }
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "split"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Literal",
                                                    "value": ":"
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "eventType"
                                              },
                                              "init": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "opt"
                                                },
                                                "property": {
                                                  "type": "Literal",
                                                  "value": 0
                                                }
                                              }
                                            },
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "catch_all"
                                              },
                                              "init": {
                                                "type": "BinaryExpression",
                                                "operator": "==",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": true,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "args"
                                                  },
                                                  "property": {
                                                    "type": "Literal",
                                                    "value": 0
                                                  }
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": "nested-change"
                                                }
                                              }
                                            },
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "eventObject"
                                              },
                                              "init": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "args"
                                                },
                                                "property": {
                                                  "type": "Literal",
                                                  "value": 1
                                                }
                                              }
                                            },
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "colObject"
                                              },
                                              "init": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "args"
                                                },
                                                "property": {
                                                  "type": "Literal",
                                                  "value": 2
                                                }
                                              }
                                            },
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "indexEventObject"
                                              },
                                              "init": {
                                                "type": "UnaryExpression",
                                                "operator": "-",
                                                "argument": {
                                                  "type": "Literal",
                                                  "value": 1
                                                },
                                                "prefix": true
                                              }
                                            },
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "_proxyCalls"
                                              },
                                              "init": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "relationValue"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "_proxyCalls"
                                                }
                                              }
                                            },
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "cargs"
                                              },
                                              "init": null
                                            },
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "eventPath"
                                              },
                                              "init": null
                                            },
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "basecolEventPath"
                                              },
                                              "init": null
                                            },
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "isDefaultEvent"
                                              },
                                              "init": {
                                                "type": "BinaryExpression",
                                                "operator": "!==",
                                                "left": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "_"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "indexOf"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "defaultEvents"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "eventType"
                                                    }
                                                  ]
                                                },
                                                "right": {
                                                  "type": "UnaryExpression",
                                                  "operator": "-",
                                                  "argument": {
                                                    "type": "Literal",
                                                    "value": 1
                                                  },
                                                  "prefix": true
                                                }
                                              }
                                            }
                                          ],
                                          "kind": "var"
                                        },
                                        {
                                          "type": "IfStatement",
                                          "test": {
                                            "type": "Identifier",
                                            "name": "catch_all"
                                          },
                                          "consequent": {
                                            "type": "ReturnStatement",
                                            "argument": null
                                          },
                                          "alternate": null
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "LogicalExpression",
                                            "operator": "&&",
                                            "left": {
                                              "type": "BinaryExpression",
                                              "operator": ">",
                                              "left": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "_"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "size"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "opt"
                                                  }
                                                ]
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": 1
                                              }
                                            },
                                            "right": {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "eventPath"
                                              },
                                              "right": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "opt"
                                                },
                                                "property": {
                                                  "type": "Literal",
                                                  "value": 1
                                                }
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "IfStatement",
                                          "test": {
                                            "type": "BinaryExpression",
                                            "operator": "!==",
                                            "left": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "_"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "indexOf"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "collectionEvents"
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "eventType"
                                                }
                                              ]
                                            },
                                            "right": {
                                              "type": "UnaryExpression",
                                              "operator": "-",
                                              "argument": {
                                                "type": "Literal",
                                                "value": 1
                                              },
                                              "prefix": true
                                            }
                                          },
                                          "consequent": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "colObject"
                                                  },
                                                  "right": {
                                                    "type": "Identifier",
                                                    "name": "eventObject"
                                                  }
                                                }
                                              }
                                            ]
                                          },
                                          "alternate": null
                                        },
                                        {
                                          "type": "IfStatement",
                                          "test": {
                                            "type": "LogicalExpression",
                                            "operator": "&&",
                                            "left": {
                                              "type": "LogicalExpression",
                                              "operator": "&&",
                                              "left": {
                                                "type": "BinaryExpression",
                                                "operator": "instanceof",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "relationValue"
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "BackboneCollection"
                                                }
                                              },
                                              "right": {
                                                "type": "Identifier",
                                                "name": "isDefaultEvent"
                                              }
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "eventObject"
                                            }
                                          },
                                          "consequent": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                  {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "pathTokens"
                                                    },
                                                    "init": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "Identifier",
                                                        "name": "getPathArray"
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "eventPath"
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "initialTokens"
                                                    },
                                                    "init": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "_"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "initial"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "pathTokens"
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "colModel"
                                                    },
                                                    "init": null
                                                  }
                                                ],
                                                "kind": "var"
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "colModel"
                                                  },
                                                  "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "relationValue"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "find"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "model"
                                                          }
                                                        ],
                                                        "defaults": [],
                                                        "body": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "IfStatement",
                                                              "test": {
                                                                "type": "BinaryExpression",
                                                                "operator": "===",
                                                                "left": {
                                                                  "type": "Identifier",
                                                                  "name": "eventObject"
                                                                },
                                                                "right": {
                                                                  "type": "Identifier",
                                                                  "name": "model"
                                                                }
                                                              },
                                                              "consequent": {
                                                                "type": "ReturnStatement",
                                                                "argument": {
                                                                  "type": "Literal",
                                                                  "value": true
                                                                }
                                                              },
                                                              "alternate": null
                                                            },
                                                            {
                                                              "type": "IfStatement",
                                                              "test": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                  "type": "Identifier",
                                                                  "name": "model"
                                                                },
                                                                "prefix": true
                                                              },
                                                              "consequent": {
                                                                "type": "ReturnStatement",
                                                                "argument": {
                                                                  "type": "Literal",
                                                                  "value": false
                                                                }
                                                              },
                                                              "alternate": null
                                                            },
                                                            {
                                                              "type": "VariableDeclaration",
                                                              "declarations": [
                                                                {
                                                                  "type": "VariableDeclarator",
                                                                  "id": {
                                                                    "type": "Identifier",
                                                                    "name": "changedModel"
                                                                  },
                                                                  "init": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "model"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "get"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "initialTokens"
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              ],
                                                              "kind": "var"
                                                            },
                                                            {
                                                              "type": "IfStatement",
                                                              "test": {
                                                                "type": "LogicalExpression",
                                                                "operator": "&&",
                                                                "left": {
                                                                  "type": "LogicalExpression",
                                                                  "operator": "||",
                                                                  "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "instanceof",
                                                                    "left": {
                                                                      "type": "Identifier",
                                                                      "name": "changedModel"
                                                                    },
                                                                    "right": {
                                                                      "type": "Identifier",
                                                                      "name": "AssociatedModel"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "instanceof",
                                                                    "left": {
                                                                      "type": "Identifier",
                                                                      "name": "changedModel"
                                                                    },
                                                                    "right": {
                                                                      "type": "Identifier",
                                                                      "name": "BackboneCollection"
                                                                    }
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "===",
                                                                  "left": {
                                                                    "type": "Identifier",
                                                                    "name": "eventObject"
                                                                  },
                                                                  "right": {
                                                                    "type": "Identifier",
                                                                    "name": "changedModel"
                                                                  }
                                                                }
                                                              },
                                                              "consequent": {
                                                                "type": "ReturnStatement",
                                                                "argument": {
                                                                  "type": "Literal",
                                                                  "value": true
                                                                }
                                                              },
                                                              "alternate": null
                                                            },
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "AssignmentExpression",
                                                                "operator": "=",
                                                                "left": {
                                                                  "type": "Identifier",
                                                                  "name": "changedModel"
                                                                },
                                                                "right": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "model"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "get"
                                                                    }
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "pathTokens"
                                                                    }
                                                                  ]
                                                                }
                                                              }
                                                            },
                                                            {
                                                              "type": "IfStatement",
                                                              "test": {
                                                                "type": "LogicalExpression",
                                                                "operator": "&&",
                                                                "left": {
                                                                  "type": "LogicalExpression",
                                                                  "operator": "||",
                                                                  "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "instanceof",
                                                                    "left": {
                                                                      "type": "Identifier",
                                                                      "name": "changedModel"
                                                                    },
                                                                    "right": {
                                                                      "type": "Identifier",
                                                                      "name": "AssociatedModel"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "instanceof",
                                                                    "left": {
                                                                      "type": "Identifier",
                                                                      "name": "changedModel"
                                                                    },
                                                                    "right": {
                                                                      "type": "Identifier",
                                                                      "name": "BackboneCollection"
                                                                    }
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "===",
                                                                  "left": {
                                                                    "type": "Identifier",
                                                                    "name": "eventObject"
                                                                  },
                                                                  "right": {
                                                                    "type": "Identifier",
                                                                    "name": "changedModel"
                                                                  }
                                                                }
                                                              },
                                                              "consequent": {
                                                                "type": "ReturnStatement",
                                                                "argument": {
                                                                  "type": "Literal",
                                                                  "value": true
                                                                }
                                                              },
                                                              "alternate": null
                                                            },
                                                            {
                                                              "type": "IfStatement",
                                                              "test": {
                                                                "type": "LogicalExpression",
                                                                "operator": "&&",
                                                                "left": {
                                                                  "type": "LogicalExpression",
                                                                  "operator": "&&",
                                                                  "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "instanceof",
                                                                    "left": {
                                                                      "type": "Identifier",
                                                                      "name": "changedModel"
                                                                    },
                                                                    "right": {
                                                                      "type": "Identifier",
                                                                      "name": "BackboneCollection"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "Identifier",
                                                                    "name": "colObject"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "===",
                                                                  "left": {
                                                                    "type": "Identifier",
                                                                    "name": "colObject"
                                                                  },
                                                                  "right": {
                                                                    "type": "Identifier",
                                                                    "name": "changedModel"
                                                                  }
                                                                }
                                                              },
                                                              "consequent": {
                                                                "type": "ReturnStatement",
                                                                "argument": {
                                                                  "type": "Literal",
                                                                  "value": true
                                                                }
                                                              },
                                                              "alternate": null
                                                            }
                                                          ]
                                                        },
                                                        "rest": null,
                                                        "generator": false,
                                                        "expression": false
                                                      }
                                                    ]
                                                  }
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "LogicalExpression",
                                                  "operator": "&&",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "colModel"
                                                  },
                                                  "right": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "indexEventObject"
                                                    },
                                                    "right": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "relationValue"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "indexOf"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "colModel"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                }
                                              }
                                            ]
                                          },
                                          "alternate": null
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "eventPath"
                                            },
                                            "right": {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "relationKey"
                                                },
                                                "right": {
                                                  "type": "ConditionalExpression",
                                                  "test": {
                                                    "type": "LogicalExpression",
                                                    "operator": "&&",
                                                    "left": {
                                                      "type": "BinaryExpression",
                                                      "operator": "!==",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "indexEventObject"
                                                      },
                                                      "right": {
                                                        "type": "UnaryExpression",
                                                        "operator": "-",
                                                        "argument": {
                                                          "type": "Literal",
                                                          "value": 1
                                                        },
                                                        "prefix": true
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "LogicalExpression",
                                                      "operator": "||",
                                                      "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "===",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "eventType"
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": "change"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "eventPath"
                                                      }
                                                    }
                                                  },
                                                  "consequent": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "BinaryExpression",
                                                      "operator": "+",
                                                      "left": {
                                                        "type": "Literal",
                                                        "value": "["
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "indexEventObject"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": "]"
                                                    }
                                                  },
                                                  "alternate": {
                                                    "type": "Literal",
                                                    "value": ""
                                                  }
                                                }
                                              },
                                              "right": {
                                                "type": "ConditionalExpression",
                                                "test": {
                                                  "type": "Identifier",
                                                  "name": "eventPath"
                                                },
                                                "consequent": {
                                                  "type": "BinaryExpression",
                                                  "operator": "+",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "pathSeparator"
                                                  },
                                                  "right": {
                                                    "type": "Identifier",
                                                    "name": "eventPath"
                                                  }
                                                },
                                                "alternate": {
                                                  "type": "Literal",
                                                  "value": ""
                                                }
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "IfStatement",
                                          "test": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Literal",
                                                "value": {}
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "test"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "eventPath"
                                              }
                                            ]
                                          },
                                          "consequent": {
                                            "type": "ReturnStatement",
                                            "argument": {
                                              "type": "ThisExpression"
                                            }
                                          },
                                          "alternate": null
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "basecolEventPath"
                                            },
                                            "right": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "eventPath"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "replace"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": {}
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": "[*]"
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "cargs"
                                            },
                                            "right": {
                                              "type": "ArrayExpression",
                                              "elements": []
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "cargs"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "push"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "apply"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "cargs"
                                              },
                                              {
                                                "type": "Identifier",
                                                "name": "args"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": true,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "cargs"
                                              },
                                              "property": {
                                                "type": "Literal",
                                                "value": 0
                                              }
                                            },
                                            "right": {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "eventType"
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": ":"
                                                }
                                              },
                                              "right": {
                                                "type": "Identifier",
                                                "name": "eventPath"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "_proxyCalls"
                                            },
                                            "right": {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "relationValue"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "_proxyCalls"
                                                }
                                              },
                                              "right": {
                                                "type": "LogicalExpression",
                                                "operator": "||",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "_proxyCalls"
                                                },
                                                "right": {
                                                  "type": "ObjectExpression",
                                                  "properties": []
                                                }
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "IfStatement",
                                          "test": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ThisExpression"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "_isEventAvailable"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "call"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "ThisExpression"
                                              },
                                              {
                                                "type": "Identifier",
                                                "name": "_proxyCalls"
                                              },
                                              {
                                                "type": "Identifier",
                                                "name": "eventPath"
                                              }
                                            ]
                                          },
                                          "consequent": {
                                            "type": "ReturnStatement",
                                            "argument": {
                                              "type": "ThisExpression"
                                            }
                                          },
                                          "alternate": null
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": true,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "_proxyCalls"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "eventPath"
                                              }
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": true
                                            }
                                          }
                                        },
                                        {
                                          "type": "IfStatement",
                                          "test": {
                                            "type": "BinaryExpression",
                                            "operator": "===",
                                            "left": {
                                              "type": "Literal",
                                              "value": "change"
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "eventType"
                                            }
                                          },
                                          "consequent": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "ThisExpression"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "_previousAttributes"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "relationKey"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "relationValue"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "_previousAttributes"
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "ThisExpression"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "changed"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "relationKey"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "Identifier",
                                                    "name": "relationValue"
                                                  }
                                                }
                                              }
                                            ]
                                          },
                                          "alternate": null
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ThisExpression"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "trigger"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "apply"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "ThisExpression"
                                              },
                                              {
                                                "type": "Identifier",
                                                "name": "cargs"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "IfStatement",
                                          "test": {
                                            "type": "LogicalExpression",
                                            "operator": "&&",
                                            "left": {
                                              "type": "BinaryExpression",
                                              "operator": "===",
                                              "left": {
                                                "type": "Literal",
                                                "value": "change"
                                              },
                                              "right": {
                                                "type": "Identifier",
                                                "name": "eventType"
                                              }
                                            },
                                            "right": {
                                              "type": "BinaryExpression",
                                              "operator": "!=",
                                              "left": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "get"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "eventPath"
                                                  }
                                                ]
                                              },
                                              "right": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "args"
                                                },
                                                "property": {
                                                  "type": "Literal",
                                                  "value": 2
                                                }
                                              }
                                            }
                                          },
                                          "consequent": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                  {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "ncargs"
                                                    },
                                                    "init": {
                                                      "type": "ArrayExpression",
                                                      "elements": [
                                                        {
                                                          "type": "Literal",
                                                          "value": "nested-change"
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "name": "eventPath"
                                                        },
                                                        {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "args"
                                                          },
                                                          "property": {
                                                            "type": "Literal",
                                                            "value": 1
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ],
                                                "kind": "var"
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "LogicalExpression",
                                                  "operator": "&&",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "args"
                                                    },
                                                    "property": {
                                                      "type": "Literal",
                                                      "value": 2
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "ncargs"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "push"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "args"
                                                        },
                                                        "property": {
                                                          "type": "Literal",
                                                          "value": 2
                                                        }
                                                      }
                                                    ]
                                                  }
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "ThisExpression"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "trigger"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "apply"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "ThisExpression"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "ncargs"
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          },
                                          "alternate": null
                                        },
                                        {
                                          "type": "IfStatement",
                                          "test": {
                                            "type": "LogicalExpression",
                                            "operator": "&&",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "_proxyCalls"
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "eventPath"
                                            }
                                          },
                                          "consequent": {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "UnaryExpression",
                                              "operator": "delete",
                                              "argument": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "_proxyCalls"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "eventPath"
                                                }
                                              },
                                              "prefix": true
                                            }
                                          },
                                          "alternate": null
                                        },
                                        {
                                          "type": "IfStatement",
                                          "test": {
                                            "type": "BinaryExpression",
                                            "operator": "!==",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "eventPath"
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "basecolEventPath"
                                            }
                                          },
                                          "consequent": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "cargs"
                                                    },
                                                    "property": {
                                                      "type": "Literal",
                                                      "value": 0
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "BinaryExpression",
                                                      "operator": "+",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "eventType"
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": ":"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "Identifier",
                                                      "name": "basecolEventPath"
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "ThisExpression"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "trigger"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "apply"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "ThisExpression"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "cargs"
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          },
                                          "alternate": null
                                        },
                                        {
                                          "type": "ReturnStatement",
                                          "argument": {
                                            "type": "ThisExpression"
                                          }
                                        }
                                      ]
                                    },
                                    "rest": null,
                                    "generator": false,
                                    "expression": false
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "_isEventAvailable"
                                  },
                                  "value": {
                                    "type": "FunctionExpression",
                                    "id": null,
                                    "params": [
                                      {
                                        "type": "Identifier",
                                        "name": "_proxyCalls"
                                      },
                                      {
                                        "type": "Identifier",
                                        "name": "path"
                                      }
                                    ],
                                    "defaults": [],
                                    "body": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ReturnStatement",
                                          "argument": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "_"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "find"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "_proxyCalls"
                                              },
                                              {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "value"
                                                  },
                                                  {
                                                    "type": "Identifier",
                                                    "name": "eventKey"
                                                  }
                                                ],
                                                "defaults": [],
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "ReturnStatement",
                                                      "argument": {
                                                        "type": "BinaryExpression",
                                                        "operator": "!==",
                                                        "left": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "path"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "indexOf"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "eventKey"
                                                            },
                                                            {
                                                              "type": "BinaryExpression",
                                                              "operator": "-",
                                                              "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "path"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "length"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "eventKey"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "length"
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "right": {
                                                          "type": "UnaryExpression",
                                                          "operator": "-",
                                                          "argument": {
                                                            "type": "Literal",
                                                            "value": 1
                                                          },
                                                          "prefix": true
                                                        }
                                                      }
                                                    }
                                                  ]
                                                },
                                                "rest": null,
                                                "generator": false,
                                                "expression": false
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    },
                                    "rest": null,
                                    "generator": false,
                                    "expression": false
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "_createCollection"
                                  },
                                  "value": {
                                    "type": "FunctionExpression",
                                    "id": null,
                                    "params": [
                                      {
                                        "type": "Identifier",
                                        "name": "type"
                                      }
                                    ],
                                    "defaults": [],
                                    "body": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "VariableDeclaration",
                                          "declarations": [
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "collection"
                                              },
                                              "init": null
                                            },
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "relatedModel"
                                              },
                                              "init": {
                                                "type": "Identifier",
                                                "name": "type"
                                              }
                                            }
                                          ],
                                          "kind": "var"
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "LogicalExpression",
                                            "operator": "&&",
                                            "left": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "_"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "isString"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "relatedModel"
                                                }
                                              ]
                                            },
                                            "right": {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "relatedModel"
                                              },
                                              "right": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "map2Scope"
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "relatedModel"
                                                  }
                                                ]
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "IfStatement",
                                          "test": {
                                            "type": "LogicalExpression",
                                            "operator": "&&",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "relatedModel"
                                            },
                                            "right": {
                                              "type": "BinaryExpression",
                                              "operator": "instanceof",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "relatedModel"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "prototype"
                                                }
                                              },
                                              "right": {
                                                "type": "Identifier",
                                                "name": "AssociatedModel"
                                              }
                                            }
                                          },
                                          "consequent": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "collection"
                                                  },
                                                  "right": {
                                                    "type": "NewExpression",
                                                    "callee": {
                                                      "type": "Identifier",
                                                      "name": "BackboneCollection"
                                                    },
                                                    "arguments": []
                                                  }
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "collection"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "model"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "Identifier",
                                                    "name": "relatedModel"
                                                  }
                                                }
                                              }
                                            ]
                                          },
                                          "alternate": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ThrowStatement",
                                                "argument": {
                                                  "type": "NewExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "Error"
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "type must inherit from Backbone.AssociatedModel"
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ReturnStatement",
                                          "argument": {
                                            "type": "Identifier",
                                            "name": "collection"
                                          }
                                        }
                                      ]
                                    },
                                    "rest": null,
                                    "generator": false,
                                    "expression": false
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "_processPendingEvents"
                                  },
                                  "value": {
                                    "type": "FunctionExpression",
                                    "id": null,
                                    "params": [],
                                    "defaults": [],
                                    "body": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "IfStatement",
                                          "test": {
                                            "type": "UnaryExpression",
                                            "operator": "!",
                                            "argument": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ThisExpression"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "_processedEvents"
                                              }
                                            },
                                            "prefix": true
                                          },
                                          "consequent": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "_processedEvents"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": true
                                                  }
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "_deferEvents"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": false
                                                  }
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "_"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "each"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "ThisExpression"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "_pendingEvents"
                                                      }
                                                    },
                                                    {
                                                      "type": "FunctionExpression",
                                                      "id": null,
                                                      "params": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "e"
                                                        }
                                                      ],
                                                      "defaults": [],
                                                      "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "e"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "c"
                                                                    }
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "trigger"
                                                                  }
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "apply"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "e"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "c"
                                                                  }
                                                                },
                                                                {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "e"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "a"
                                                                  }
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "rest": null,
                                                      "generator": false,
                                                      "expression": false
                                                    }
                                                  ]
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "_pendingEvents"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "ArrayExpression",
                                                    "elements": []
                                                  }
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "_"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "each"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "ThisExpression"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "relations"
                                                      }
                                                    },
                                                    {
                                                      "type": "FunctionExpression",
                                                      "id": null,
                                                      "params": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "relation"
                                                        }
                                                      ],
                                                      "defaults": [],
                                                      "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "VariableDeclaration",
                                                            "declarations": [
                                                              {
                                                                "type": "VariableDeclarator",
                                                                "id": {
                                                                  "type": "Identifier",
                                                                  "name": "val"
                                                                },
                                                                "init": {
                                                                  "type": "MemberExpression",
                                                                  "computed": true,
                                                                  "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "attributes"
                                                                    }
                                                                  },
                                                                  "property": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "relation"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "key"
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            ],
                                                            "kind": "var"
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "LogicalExpression",
                                                              "operator": "&&",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "val"
                                                              },
                                                              "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "val"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_processPendingEvents"
                                                                  }
                                                                },
                                                                "arguments": []
                                                              }
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "rest": null,
                                                      "generator": false,
                                                      "expression": false
                                                    },
                                                    {
                                                      "type": "ThisExpression"
                                                    }
                                                  ]
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "UnaryExpression",
                                                  "operator": "delete",
                                                  "argument": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "_processedEvents"
                                                    }
                                                  },
                                                  "prefix": true
                                                }
                                              }
                                            ]
                                          },
                                          "alternate": null
                                        }
                                      ]
                                    },
                                    "rest": null,
                                    "generator": false,
                                    "expression": false
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "trigger"
                                  },
                                  "value": {
                                    "type": "FunctionExpression",
                                    "id": null,
                                    "params": [
                                      {
                                        "type": "Identifier",
                                        "name": "name"
                                      }
                                    ],
                                    "defaults": [],
                                    "body": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "IfStatement",
                                          "test": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "_deferEvents"
                                            }
                                          },
                                          "consequent": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "_pendingEvents"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "LogicalExpression",
                                                    "operator": "||",
                                                    "left": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "ThisExpression"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "_pendingEvents"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "ArrayExpression",
                                                      "elements": []
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "ThisExpression"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "_pendingEvents"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "push"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "ObjectExpression",
                                                      "properties": [
                                                        {
                                                          "type": "Property",
                                                          "key": {
                                                            "type": "Identifier",
                                                            "name": "c"
                                                          },
                                                          "value": {
                                                            "type": "ThisExpression"
                                                          },
                                                          "kind": "init"
                                                        },
                                                        {
                                                          "type": "Property",
                                                          "key": {
                                                            "type": "Identifier",
                                                            "name": "a"
                                                          },
                                                          "value": {
                                                            "type": "Identifier",
                                                            "name": "arguments"
                                                          },
                                                          "kind": "init"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          },
                                          "alternate": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "ModelProto"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "trigger"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "apply"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "ThisExpression"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "arguments"
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    },
                                    "rest": null,
                                    "generator": false,
                                    "expression": false
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "toJSON"
                                  },
                                  "value": {
                                    "type": "FunctionExpression",
                                    "id": null,
                                    "params": [
                                      {
                                        "type": "Identifier",
                                        "name": "options"
                                      }
                                    ],
                                    "defaults": [],
                                    "body": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "VariableDeclaration",
                                          "declarations": [
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "json"
                                              },
                                              "init": {
                                                "type": "ObjectExpression",
                                                "properties": []
                                              }
                                            },
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "aJson"
                                              },
                                              "init": null
                                            }
                                          ],
                                          "kind": "var"
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": true,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "json"
                                              },
                                              "property": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ThisExpression"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "idAttribute"
                                                }
                                              }
                                            },
                                            "right": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ThisExpression"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "id"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "IfStatement",
                                          "test": {
                                            "type": "UnaryExpression",
                                            "operator": "!",
                                            "argument": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ThisExpression"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "visited"
                                              }
                                            },
                                            "prefix": true
                                          },
                                          "consequent": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "visited"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": true
                                                  }
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "json"
                                                  },
                                                  "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "ModelProto"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "toJSON"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "apply"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "ThisExpression"
                                                      },
                                                      {
                                                        "type": "Identifier",
                                                        "name": "arguments"
                                                      }
                                                    ]
                                                  }
                                                }
                                              },
                                              {
                                                "type": "IfStatement",
                                                "test": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "relations"
                                                  }
                                                },
                                                "consequent": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "_"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "each"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "relations"
                                                            }
                                                          },
                                                          {
                                                            "type": "FunctionExpression",
                                                            "id": null,
                                                            "params": [
                                                              {
                                                                "type": "Identifier",
                                                                "name": "relation"
                                                              }
                                                            ],
                                                            "defaults": [],
                                                            "body": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "VariableDeclaration",
                                                                  "declarations": [
                                                                    {
                                                                      "type": "VariableDeclarator",
                                                                      "id": {
                                                                        "type": "Identifier",
                                                                        "name": "attr"
                                                                      },
                                                                      "init": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "ThisExpression"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "attributes"
                                                                          }
                                                                        },
                                                                        "property": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "relation"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "key"
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  ],
                                                                  "kind": "var"
                                                                },
                                                                {
                                                                  "type": "IfStatement",
                                                                  "test": {
                                                                    "type": "Identifier",
                                                                    "name": "attr"
                                                                  },
                                                                  "consequent": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "AssignmentExpression",
                                                                          "operator": "=",
                                                                          "left": {
                                                                            "type": "Identifier",
                                                                            "name": "aJson"
                                                                          },
                                                                          "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "attr"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "toJSON"
                                                                              }
                                                                            },
                                                                            "arguments": [
                                                                              {
                                                                                "type": "Identifier",
                                                                                "name": "options"
                                                                              }
                                                                            ]
                                                                          }
                                                                        }
                                                                      },
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "AssignmentExpression",
                                                                          "operator": "=",
                                                                          "left": {
                                                                            "type": "MemberExpression",
                                                                            "computed": true,
                                                                            "object": {
                                                                              "type": "Identifier",
                                                                              "name": "json"
                                                                            },
                                                                            "property": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "relation"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "key"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right": {
                                                                            "type": "ConditionalExpression",
                                                                            "test": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "_"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "isArray"
                                                                                }
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "aJson"
                                                                                }
                                                                              ]
                                                                            },
                                                                            "consequent": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "_"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "compact"
                                                                                }
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "aJson"
                                                                                }
                                                                              ]
                                                                            },
                                                                            "alternate": {
                                                                              "type": "Identifier",
                                                                              "name": "aJson"
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    ]
                                                                  },
                                                                  "alternate": null
                                                                }
                                                              ]
                                                            },
                                                            "rest": null,
                                                            "generator": false,
                                                            "expression": false
                                                          },
                                                          {
                                                            "type": "ThisExpression"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ]
                                                },
                                                "alternate": null
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "UnaryExpression",
                                                  "operator": "delete",
                                                  "argument": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "visited"
                                                    }
                                                  },
                                                  "prefix": true
                                                }
                                              }
                                            ]
                                          },
                                          "alternate": null
                                        },
                                        {
                                          "type": "ReturnStatement",
                                          "argument": {
                                            "type": "Identifier",
                                            "name": "json"
                                          }
                                        }
                                      ]
                                    },
                                    "rest": null,
                                    "generator": false,
                                    "expression": false
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "clone"
                                  },
                                  "value": {
                                    "type": "FunctionExpression",
                                    "id": null,
                                    "params": [],
                                    "defaults": [],
                                    "body": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ReturnStatement",
                                          "argument": {
                                            "type": "NewExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ThisExpression"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "constructor"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "toJSON"
                                                  }
                                                },
                                                "arguments": []
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    },
                                    "rest": null,
                                    "generator": false,
                                    "expression": false
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "cleanup"
                                  },
                                  "value": {
                                    "type": "FunctionExpression",
                                    "id": null,
                                    "params": [],
                                    "defaults": [],
                                    "body": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "_"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "each"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ThisExpression"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "relations"
                                                }
                                              },
                                              {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "relation"
                                                  }
                                                ],
                                                "defaults": [],
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "VariableDeclaration",
                                                      "declarations": [
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "val"
                                                          },
                                                          "init": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ThisExpression"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "attributes"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "relation"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "key"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      ],
                                                      "kind": "var"
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "LogicalExpression",
                                                        "operator": "&&",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "val"
                                                        },
                                                        "right": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "val"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "parents"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "_"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "difference"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "val"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "parents"
                                                                }
                                                              },
                                                              {
                                                                "type": "ArrayExpression",
                                                                "elements": [
                                                                  {
                                                                    "type": "ThisExpression"
                                                                  }
                                                                ]
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      }
                                                    }
                                                  ]
                                                },
                                                "rest": null,
                                                "generator": false,
                                                "expression": false
                                              },
                                              {
                                                "type": "ThisExpression"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ThisExpression"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "off"
                                              }
                                            },
                                            "arguments": []
                                          }
                                        }
                                      ]
                                    },
                                    "rest": null,
                                    "generator": false,
                                    "expression": false
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "_getAttr"
                                  },
                                  "value": {
                                    "type": "FunctionExpression",
                                    "id": null,
                                    "params": [
                                      {
                                        "type": "Identifier",
                                        "name": "path"
                                      }
                                    ],
                                    "defaults": [],
                                    "body": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "VariableDeclaration",
                                          "declarations": [
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "result"
                                              },
                                              "init": {
                                                "type": "ThisExpression"
                                              }
                                            },
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "attrs"
                                              },
                                              "init": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "getPathArray"
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "path"
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "key"
                                              },
                                              "init": null
                                            },
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "i"
                                              },
                                              "init": null
                                            }
                                          ],
                                          "kind": "var"
                                        },
                                        {
                                          "type": "IfStatement",
                                          "test": {
                                            "type": "BinaryExpression",
                                            "operator": "<",
                                            "left": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "_"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "size"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "attrs"
                                                }
                                              ]
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": 1
                                            }
                                          },
                                          "consequent": {
                                            "type": "ReturnStatement",
                                            "argument": null
                                          },
                                          "alternate": null
                                        },
                                        {
                                          "type": "ForStatement",
                                          "init": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "i"
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": 0
                                            }
                                          },
                                          "test": {
                                            "type": "BinaryExpression",
                                            "operator": "<",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "i"
                                            },
                                            "right": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "attrs"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "length"
                                              }
                                            }
                                          },
                                          "update": {
                                            "type": "UpdateExpression",
                                            "operator": "++",
                                            "argument": {
                                              "type": "Identifier",
                                              "name": "i"
                                            },
                                            "prefix": false
                                          },
                                          "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "key"
                                                  },
                                                  "right": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "attrs"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "i"
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "type": "IfStatement",
                                                "test": {
                                                  "type": "UnaryExpression",
                                                  "operator": "!",
                                                  "argument": {
                                                    "type": "Identifier",
                                                    "name": "result"
                                                  },
                                                  "prefix": true
                                                },
                                                "consequent": {
                                                  "type": "BreakStatement",
                                                  "label": null
                                                },
                                                "alternate": null
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "result"
                                                  },
                                                  "right": {
                                                    "type": "ConditionalExpression",
                                                    "test": {
                                                      "type": "BinaryExpression",
                                                      "operator": "instanceof",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "result"
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "BackboneCollection"
                                                      }
                                                    },
                                                    "consequent": {
                                                      "type": "ConditionalExpression",
                                                      "test": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "Identifier",
                                                          "name": "isNaN"
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "key"
                                                          }
                                                        ]
                                                      },
                                                      "consequent": {
                                                        "type": "Identifier",
                                                        "name": "undefined"
                                                      },
                                                      "alternate": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "result"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "at"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "key"
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    "alternate": {
                                                      "type": "MemberExpression",
                                                      "computed": true,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "result"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "attributes"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "key"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ReturnStatement",
                                          "argument": {
                                            "type": "Identifier",
                                            "name": "result"
                                          }
                                        }
                                      ]
                                    },
                                    "rest": null,
                                    "generator": false,
                                    "expression": false
                                  },
                                  "kind": "init"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    }
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "getPathArray"
                      },
                      "init": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "path"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "IfStatement",
                              "test": {
                                "type": "BinaryExpression",
                                "operator": "===",
                                "left": {
                                  "type": "Identifier",
                                  "name": "path"
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": ""
                                }
                              },
                              "consequent": {
                                "type": "ReturnStatement",
                                "argument": {
                                  "type": "ArrayExpression",
                                  "elements": [
                                    {
                                      "type": "Literal",
                                      "value": ""
                                    }
                                  ]
                                }
                              },
                              "alternate": null
                            },
                            {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "ConditionalExpression",
                                "test": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "_"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "isString"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "path"
                                    }
                                  ]
                                },
                                "consequent": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "path"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "match"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "delimiters"
                                    }
                                  ]
                                },
                                "alternate": {
                                  "type": "LogicalExpression",
                                  "operator": "||",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "path"
                                  },
                                  "right": {
                                    "type": "ArrayExpression",
                                    "elements": []
                                  }
                                }
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "map2Scope"
                      },
                      "init": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "path"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "_"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "reduce"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "path"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "split"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "pathSeparator"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "FunctionExpression",
                                    "id": null,
                                    "params": [
                                      {
                                        "type": "Identifier",
                                        "name": "memo"
                                      },
                                      {
                                        "type": "Identifier",
                                        "name": "elem"
                                      }
                                    ],
                                    "defaults": [],
                                    "body": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ReturnStatement",
                                          "argument": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "memo"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "elem"
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "rest": null,
                                    "generator": false,
                                    "expression": false
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "root"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "map2models"
                      },
                      "init": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "parents"
                          },
                          {
                            "type": "Identifier",
                            "name": "target"
                          },
                          {
                            "type": "Identifier",
                            "name": "models"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "VariableDeclaration",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "relation"
                                  },
                                  "init": null
                                },
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "surrogate"
                                  },
                                  "init": null
                                }
                              ],
                              "kind": "var"
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "_"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "find"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "parents"
                                  },
                                  {
                                    "type": "FunctionExpression",
                                    "id": null,
                                    "params": [
                                      {
                                        "type": "Identifier",
                                        "name": "parent"
                                      }
                                    ],
                                    "defaults": [],
                                    "body": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "relation"
                                            },
                                            "right": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "_"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "find"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "parent"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "relations"
                                                  }
                                                },
                                                {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "rel"
                                                    }
                                                  ],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                          "type": "BinaryExpression",
                                                          "operator": "===",
                                                          "left": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "parent"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "get"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "rel"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "key"
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "right": {
                                                            "type": "Identifier",
                                                            "name": "target"
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                },
                                                {
                                                  "type": "ThisExpression"
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "type": "IfStatement",
                                          "test": {
                                            "type": "Identifier",
                                            "name": "relation"
                                          },
                                          "consequent": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "surrogate"
                                                  },
                                                  "right": {
                                                    "type": "Identifier",
                                                    "name": "parent"
                                                  }
                                                }
                                              },
                                              {
                                                "type": "ReturnStatement",
                                                "argument": {
                                                  "type": "Literal",
                                                  "value": true
                                                }
                                              }
                                            ]
                                          },
                                          "alternate": null
                                        }
                                      ]
                                    },
                                    "rest": null,
                                    "generator": false,
                                    "expression": false
                                  },
                                  {
                                    "type": "ThisExpression"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "IfStatement",
                              "test": {
                                "type": "LogicalExpression",
                                "operator": "&&",
                                "left": {
                                  "type": "Identifier",
                                  "name": "relation"
                                },
                                "right": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "relation"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "map"
                                  }
                                }
                              },
                              "consequent": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "relation"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "map"
                                          }
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "call"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Identifier",
                                          "name": "surrogate"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "models"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "target"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "alternate": null
                            },
                            {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "Identifier",
                                "name": "models"
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "proxies"
                      },
                      "init": {
                        "type": "ObjectExpression",
                        "properties": []
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "_"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "each"
                      }
                    },
                    "arguments": [
                      {
                        "type": "ArrayExpression",
                        "elements": [
                          {
                            "type": "Literal",
                            "value": "set"
                          },
                          {
                            "type": "Literal",
                            "value": "remove"
                          },
                          {
                            "type": "Literal",
                            "value": "reset"
                          }
                        ]
                      },
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "method"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": true,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "proxies"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "method"
                                  }
                                },
                                "right": {
                                  "type": "MemberExpression",
                                  "computed": true,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "BackboneCollection"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "prototype"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "method"
                                  }
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": true,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "CollectionProto"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "method"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "models"
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "options"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "LogicalExpression",
                                          "operator": "&&",
                                          "left": {
                                            "type": "BinaryExpression",
                                            "operator": "instanceof",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ThisExpression"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "model"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "prototype"
                                              }
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "AssociatedModel"
                                            }
                                          },
                                          "right": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "parents"
                                            }
                                          }
                                        },
                                        "consequent": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": true,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "arguments"
                                                  },
                                                  "property": {
                                                    "type": "Literal",
                                                    "value": 0
                                                  }
                                                },
                                                "right": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "map2models"
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "ThisExpression"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "parents"
                                                      }
                                                    },
                                                    {
                                                      "type": "ThisExpression"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "models"
                                                    }
                                                  ]
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "alternate": null
                                      },
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": true,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "proxies"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "method"
                                              }
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "apply"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "ThisExpression"
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "arguments"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": true,
                      "object": {
                        "type": "Identifier",
                        "name": "proxies"
                      },
                      "property": {
                        "type": "Literal",
                        "value": "trigger"
                      }
                    },
                    "right": {
                      "type": "MemberExpression",
                      "computed": true,
                      "object": {
                        "type": "Identifier",
                        "name": "CollectionProto"
                      },
                      "property": {
                        "type": "Literal",
                        "value": "trigger"
                      }
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": true,
                      "object": {
                        "type": "Identifier",
                        "name": "CollectionProto"
                      },
                      "property": {
                        "type": "Literal",
                        "value": "trigger"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "name"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "ThisExpression"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_deferEvents"
                              }
                            },
                            "consequent": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "ThisExpression"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "_pendingEvents"
                                      }
                                    },
                                    "right": {
                                      "type": "LogicalExpression",
                                      "operator": "||",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "_pendingEvents"
                                        }
                                      },
                                      "right": {
                                        "type": "ArrayExpression",
                                        "elements": []
                                      }
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "_pendingEvents"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "push"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "ObjectExpression",
                                        "properties": [
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "c"
                                            },
                                            "value": {
                                              "type": "ThisExpression"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "a"
                                            },
                                            "value": {
                                              "type": "Identifier",
                                              "name": "arguments"
                                            },
                                            "kind": "init"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "alternate": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "proxies"
                                        },
                                        "property": {
                                          "type": "Literal",
                                          "value": "trigger"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "apply"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "ThisExpression"
                                      },
                                      {
                                        "type": "Identifier",
                                        "name": "arguments"
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "CollectionProto"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_processPendingEvents"
                      }
                    },
                    "right": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "AssociatedModel"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "prototype"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_processPendingEvents"
                      }
                    }
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          },
          "property": {
            "type": "Identifier",
            "name": "call"
          }
        },
        "arguments": [
          {
            "type": "ThisExpression"
          }
        ]
      }
    }
  ]
}
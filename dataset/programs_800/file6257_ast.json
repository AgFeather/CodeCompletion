{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "define"
        },
        "arguments": [
          {
            "type": "ArrayExpression",
            "elements": []
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "ObjectExpression",
                    "properties": [
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "strings"
                        },
                        "value": {
                          "type": "ObjectExpression",
                          "properties": [
                            {
                              "type": "Property",
                              "key": {
                                "type": "Identifier",
                                "name": "widget"
                              },
                              "value": {
                                "type": "ObjectExpression",
                                "properties": [
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "connect-remotestorage"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": "Connect <strong>remoteStorage</strong>"
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "connect"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": "connect"
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "sync"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": "sync"
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "disconnect"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": "disconnect"
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "permissions"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": "Permissions"
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "all-data"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": "All data"
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "synchronizing"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": "Syncing <strong>{userAddress}</strong>"
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "connecting"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": "Connecting <strong>{userAddress}</strong>"
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "offline"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": "<strong>{userAddress}</strong> (offline)"
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "unauthorized"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": "Unauthorized! Click to reconnect."
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "redirecting"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": "Redirecting to <strong>{hostName}</strong>"
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "typing-hint"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": "This app allows you to use your own storage! Find more info on <a href=\"http://remotestorage.io/\" target=\"_blank\">remotestorage.io</a>"
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "last-synced"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": "{t}"
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "webfinger-failed"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": "{message}"
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "webfinger-error-no-at"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": "There is no @-sign in the user address."
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "webfinger-error-multiple-at"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": "There is more than one @-sign in the user address."
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "webfinger-error-non-dotalphanum"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": "There are invalid characters in the user address."
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "webfinger-error-invalid-xml"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": "Server doesn't support remoteStorage."
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "webfinger-error-invalid-jrd"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": "Server doesn't support remoteStorage."
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "webfinger-error-requests-failed"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": "Failed to contact the storage server."
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "webfinger-error-not-supported"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": "Server doesn't support remoteStorage."
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "error"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": "Sorry! An error occurred."
                                    },
                                    "kind": "init"
                                  }
                                ]
                              },
                              "kind": "init"
                            }
                          ]
                        },
                        "kind": "init"
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "helpers"
                        },
                        "value": {
                          "type": "ObjectExpression",
                          "properties": [
                            {
                              "type": "Property",
                              "key": {
                                "type": "Identifier",
                                "name": "timeAgo"
                              },
                              "value": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [
                                  {
                                    "type": "Identifier",
                                    "name": "usec"
                                  }
                                ],
                                "defaults": [],
                                "body": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "FunctionDeclaration",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "format"
                                      },
                                      "params": [
                                        {
                                          "type": "Identifier",
                                          "name": "time"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "unit"
                                        }
                                      ],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "time"
                                              },
                                              "right": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "Math"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "round"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "time"
                                                  }
                                                ]
                                              }
                                            }
                                          },
                                          {
                                            "type": "IfStatement",
                                            "test": {
                                              "type": "BinaryExpression",
                                              "operator": "!=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "time"
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": 1
                                              }
                                            },
                                            "consequent": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "+=",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "unit"
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": "s"
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            "alternate": null
                                          },
                                          {
                                            "type": "ReturnStatement",
                                            "argument": {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                  "type": "BinaryExpression",
                                                  "operator": "+",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "time"
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": " "
                                                  }
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "unit"
                                                }
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": " ago"
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    },
                                    {
                                      "type": "VariableDeclaration",
                                      "declarations": [
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "sec"
                                          },
                                          "init": {
                                            "type": "BinaryExpression",
                                            "operator": "/",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "usec"
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": 1000
                                            }
                                          }
                                        }
                                      ],
                                      "kind": "var"
                                    },
                                    {
                                      "type": "IfStatement",
                                      "test": {
                                        "type": "BinaryExpression",
                                        "operator": ">",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "sec"
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": 3600
                                        }
                                      },
                                      "consequent": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ReturnStatement",
                                            "argument": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "format"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "BinaryExpression",
                                                  "operator": "/",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "sec"
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": 3600
                                                  }
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": "hour"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      },
                                      "alternate": {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "BinaryExpression",
                                          "operator": ">",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "sec"
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": 60
                                          }
                                        },
                                        "consequent": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "format"
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "BinaryExpression",
                                                    "operator": "/",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "sec"
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": 60
                                                    }
                                                  },
                                                  {
                                                    "type": "Literal",
                                                    "value": "minute"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "alternate": {
                                          "type": "IfStatement",
                                          "test": {
                                            "type": "BinaryExpression",
                                            "operator": "<",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "sec"
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": 5
                                            }
                                          },
                                          "consequent": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ReturnStatement",
                                                "argument": {
                                                  "type": "Literal",
                                                  "value": "just now"
                                                }
                                              }
                                            ]
                                          },
                                          "alternate": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ReturnStatement",
                                                "argument": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "format"
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "sec"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "second"
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                              },
                              "kind": "init"
                            }
                          ]
                        },
                        "kind": "init"
                      }
                    ]
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    }
  ]
}
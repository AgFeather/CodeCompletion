{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "define"
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "dijit/typematic"
          },
          {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": "dojo/_base/array"
              },
              {
                "type": "Literal",
                "value": "dojo/_base/connect"
              },
              {
                "type": "Literal",
                "value": "dojo/_base/event"
              },
              {
                "type": "Literal",
                "value": "dojo/_base/kernel"
              },
              {
                "type": "Literal",
                "value": "dojo/_base/lang"
              },
              {
                "type": "Literal",
                "value": "dojo/_base/sniff"
              },
              {
                "type": "Literal",
                "value": "."
              }
            ]
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "array"
              },
              {
                "type": "Identifier",
                "name": "connect"
              },
              {
                "type": "Identifier",
                "name": "event"
              },
              {
                "type": "Identifier",
                "name": "kernel"
              },
              {
                "type": "Identifier",
                "name": "lang"
              },
              {
                "type": "Identifier",
                "name": "has"
              },
              {
                "type": "Identifier",
                "name": "dijit"
              }
            ],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "dijit"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "typematic"
                      }
                    },
                    "right": {
                      "type": "ObjectExpression",
                      "properties": [
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "_fireEventAndReload"
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "ThisExpression"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "_timer"
                                      }
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": null
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "ThisExpression"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "_callback"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "UpdateExpression",
                                        "operator": "++",
                                        "argument": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "ThisExpression"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "_count"
                                          }
                                        },
                                        "prefix": true
                                      },
                                      {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "_node"
                                        }
                                      },
                                      {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "_evt"
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "ThisExpression"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "_currentTimeout"
                                      }
                                    },
                                    "right": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "Math"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "max"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "ConditionalExpression",
                                          "test": {
                                            "type": "BinaryExpression",
                                            "operator": "<",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ThisExpression"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "_currentTimeout"
                                              }
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": 0
                                            }
                                          },
                                          "consequent": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "_initialDelay"
                                            }
                                          },
                                          "alternate": {
                                            "type": "ConditionalExpression",
                                            "test": {
                                              "type": "BinaryExpression",
                                              "operator": ">",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ThisExpression"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "_subsequentDelay"
                                                }
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": 1
                                              }
                                            },
                                            "consequent": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ThisExpression"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "_subsequentDelay"
                                              }
                                            },
                                            "alternate": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "Math"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "round"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "BinaryExpression",
                                                  "operator": "*",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "_currentTimeout"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ThisExpression"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "_subsequentDelay"
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "ThisExpression"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "_minDelay"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "ThisExpression"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "_timer"
                                      }
                                    },
                                    "right": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "setTimeout"
                                      },
                                      "arguments": [
                                        {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "lang"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "hitch"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "ThisExpression"
                                            },
                                            {
                                              "type": "Literal",
                                              "value": "_fireEventAndReload"
                                            }
                                          ]
                                        },
                                        {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "ThisExpression"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "_currentTimeout"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          "kind": "init"
                        },
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "trigger"
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "evt"
                              },
                              {
                                "type": "Identifier",
                                "name": "_this"
                              },
                              {
                                "type": "Identifier",
                                "name": "node"
                              },
                              {
                                "type": "Identifier",
                                "name": "callback"
                              },
                              {
                                "type": "Identifier",
                                "name": "obj"
                              },
                              {
                                "type": "Identifier",
                                "name": "subsequentDelay"
                              },
                              {
                                "type": "Identifier",
                                "name": "initialDelay"
                              },
                              {
                                "type": "Identifier",
                                "name": "minDelay"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "IfStatement",
                                  "test": {
                                    "type": "BinaryExpression",
                                    "operator": "!=",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "obj"
                                    },
                                    "right": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "ThisExpression"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "_obj"
                                      }
                                    }
                                  },
                                  "consequent": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "stop"
                                            }
                                          },
                                          "arguments": []
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "_initialDelay"
                                            }
                                          },
                                          "right": {
                                            "type": "LogicalExpression",
                                            "operator": "||",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "initialDelay"
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": 500
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "_subsequentDelay"
                                            }
                                          },
                                          "right": {
                                            "type": "LogicalExpression",
                                            "operator": "||",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "subsequentDelay"
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": 0.9
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "_minDelay"
                                            }
                                          },
                                          "right": {
                                            "type": "LogicalExpression",
                                            "operator": "||",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "minDelay"
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": 10
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "_obj"
                                            }
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "obj"
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "_evt"
                                            }
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "evt"
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "_node"
                                            }
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "node"
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "_currentTimeout"
                                            }
                                          },
                                          "right": {
                                            "type": "UnaryExpression",
                                            "operator": "-",
                                            "argument": {
                                              "type": "Literal",
                                              "value": 1
                                            },
                                            "prefix": true
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "_count"
                                            }
                                          },
                                          "right": {
                                            "type": "UnaryExpression",
                                            "operator": "-",
                                            "argument": {
                                              "type": "Literal",
                                              "value": 1
                                            },
                                            "prefix": true
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "_callback"
                                            }
                                          },
                                          "right": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "lang"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "hitch"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "_this"
                                              },
                                              {
                                                "type": "Identifier",
                                                "name": "callback"
                                              }
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "_fireEventAndReload"
                                            }
                                          },
                                          "arguments": []
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "_evt"
                                            }
                                          },
                                          "right": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "lang"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "mixin"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "ObjectExpression",
                                                "properties": [
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Identifier",
                                                      "name": "faux"
                                                    },
                                                    "value": {
                                                      "type": "Literal",
                                                      "value": true
                                                    },
                                                    "kind": "init"
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "Identifier",
                                                "name": "evt"
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "alternate": null
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          "kind": "init"
                        },
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "stop"
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "IfStatement",
                                  "test": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "ThisExpression"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "_timer"
                                    }
                                  },
                                  "consequent": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "clearTimeout"
                                          },
                                          "arguments": [
                                            {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ThisExpression"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "_timer"
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "_timer"
                                            }
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": null
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "alternate": null
                                },
                                {
                                  "type": "IfStatement",
                                  "test": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "ThisExpression"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "_obj"
                                    }
                                  },
                                  "consequent": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "_callback"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "UnaryExpression",
                                              "operator": "-",
                                              "argument": {
                                                "type": "Literal",
                                                "value": 1
                                              },
                                              "prefix": true
                                            },
                                            {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ThisExpression"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "_node"
                                              }
                                            },
                                            {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ThisExpression"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "_evt"
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "_obj"
                                            }
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": null
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "alternate": null
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          "kind": "init"
                        },
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "addKeyListener"
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "node"
                              },
                              {
                                "type": "Identifier",
                                "name": "keyObject"
                              },
                              {
                                "type": "Identifier",
                                "name": "_this"
                              },
                              {
                                "type": "Identifier",
                                "name": "callback"
                              },
                              {
                                "type": "Identifier",
                                "name": "subsequentDelay"
                              },
                              {
                                "type": "Identifier",
                                "name": "initialDelay"
                              },
                              {
                                "type": "Identifier",
                                "name": "minDelay"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "IfStatement",
                                  "test": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "keyObject"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "keyCode"
                                    }
                                  },
                                  "consequent": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "keyObject"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "charOrCode"
                                            }
                                          },
                                          "right": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "keyObject"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "keyCode"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "kernel"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "deprecated"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": "keyCode attribute parameter for dijit.typematic.addKeyListener is deprecated. Use charOrCode instead."
                                            },
                                            {
                                              "type": "Literal",
                                              "value": ""
                                            },
                                            {
                                              "type": "Literal",
                                              "value": "2.0"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "alternate": {
                                    "type": "IfStatement",
                                    "test": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "keyObject"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "charCode"
                                      }
                                    },
                                    "consequent": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "keyObject"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "charOrCode"
                                              }
                                            },
                                            "right": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "String"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "fromCharCode"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "keyObject"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "charCode"
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "kernel"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "deprecated"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "charCode attribute parameter for dijit.typematic.addKeyListener is deprecated. Use charOrCode instead."
                                              },
                                              {
                                                "type": "Literal",
                                                "value": ""
                                              },
                                              {
                                                "type": "Literal",
                                                "value": "2.0"
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    },
                                    "alternate": null
                                  }
                                },
                                {
                                  "type": "VariableDeclaration",
                                  "declarations": [
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "handles"
                                      },
                                      "init": {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "connect"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "connect"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "node"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": "onkeypress"
                                              },
                                              {
                                                "type": "ThisExpression"
                                              },
                                              {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "evt"
                                                  }
                                                ],
                                                "defaults": [],
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "IfStatement",
                                                      "test": {
                                                        "type": "LogicalExpression",
                                                        "operator": "&&",
                                                        "left": {
                                                          "type": "LogicalExpression",
                                                          "operator": "&&",
                                                          "left": {
                                                            "type": "LogicalExpression",
                                                            "operator": "&&",
                                                            "left": {
                                                              "type": "LogicalExpression",
                                                              "operator": "&&",
                                                              "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "==",
                                                                "left": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "evt"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "charOrCode"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "keyObject"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "charOrCode"
                                                                  }
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "LogicalExpression",
                                                                "operator": "||",
                                                                "left": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "===",
                                                                  "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "keyObject"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "ctrlKey"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "Identifier",
                                                                    "name": "undefined"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "==",
                                                                  "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "keyObject"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "ctrlKey"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "evt"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "ctrlKey"
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "LogicalExpression",
                                                              "operator": "||",
                                                              "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "===",
                                                                "left": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "keyObject"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "altKey"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "Identifier",
                                                                  "name": "undefined"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "==",
                                                                "left": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "keyObject"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "altKey"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "evt"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "altKey"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "LogicalExpression",
                                                            "operator": "||",
                                                            "left": {
                                                              "type": "BinaryExpression",
                                                              "operator": "===",
                                                              "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "keyObject"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "metaKey"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "Identifier",
                                                                "name": "undefined"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "BinaryExpression",
                                                              "operator": "==",
                                                              "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "keyObject"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "metaKey"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "LogicalExpression",
                                                                "operator": "||",
                                                                "left": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "evt"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "metaKey"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "Literal",
                                                                  "value": false
                                                                }
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "LogicalExpression",
                                                          "operator": "||",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "===",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "keyObject"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "shiftKey"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "undefined"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "BinaryExpression",
                                                            "operator": "==",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "keyObject"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "shiftKey"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "evt"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "shiftKey"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "event"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "stop"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "evt"
                                                                }
                                                              ]
                                                            }
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "dijit"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "typematic"
                                                                  }
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "trigger"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "evt"
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "_this"
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "node"
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "callback"
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "keyObject"
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "subsequentDelay"
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "initialDelay"
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "minDelay"
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "alternate": {
                                                        "type": "IfStatement",
                                                        "test": {
                                                          "type": "BinaryExpression",
                                                          "operator": "==",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "dijit"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "typematic"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "_obj"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Identifier",
                                                            "name": "keyObject"
                                                          }
                                                        },
                                                        "consequent": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "dijit"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "typematic"
                                                                    }
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "stop"
                                                                  }
                                                                },
                                                                "arguments": []
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "alternate": null
                                                      }
                                                    }
                                                  ]
                                                },
                                                "rest": null,
                                                "generator": false,
                                                "expression": false
                                              }
                                            ]
                                          },
                                          {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "connect"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "connect"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "node"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": "onkeyup"
                                              },
                                              {
                                                "type": "ThisExpression"
                                              },
                                              {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "evt"
                                                  }
                                                ],
                                                "defaults": [],
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "IfStatement",
                                                      "test": {
                                                        "type": "BinaryExpression",
                                                        "operator": "==",
                                                        "left": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "dijit"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "typematic"
                                                            }
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "_obj"
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "Identifier",
                                                          "name": "keyObject"
                                                        }
                                                      },
                                                      "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "dijit"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "typematic"
                                                                  }
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "stop"
                                                                }
                                                              },
                                                              "arguments": []
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "alternate": null
                                                    }
                                                  ]
                                                },
                                                "rest": null,
                                                "generator": false,
                                                "expression": false
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "kind": "var"
                                },
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Identifier",
                                          "name": "remove"
                                        },
                                        "value": {
                                          "type": "FunctionExpression",
                                          "id": null,
                                          "params": [],
                                          "defaults": [],
                                          "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "array"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "forEach"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "handles"
                                                    },
                                                    {
                                                      "type": "FunctionExpression",
                                                      "id": null,
                                                      "params": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "h"
                                                        }
                                                      ],
                                                      "defaults": [],
                                                      "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "h"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "remove"
                                                                }
                                                              },
                                                              "arguments": []
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "rest": null,
                                                      "generator": false,
                                                      "expression": false
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          },
                                          "rest": null,
                                          "generator": false,
                                          "expression": false
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          "kind": "init"
                        },
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "addMouseListener"
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "node"
                              },
                              {
                                "type": "Identifier",
                                "name": "_this"
                              },
                              {
                                "type": "Identifier",
                                "name": "callback"
                              },
                              {
                                "type": "Identifier",
                                "name": "subsequentDelay"
                              },
                              {
                                "type": "Identifier",
                                "name": "initialDelay"
                              },
                              {
                                "type": "Identifier",
                                "name": "minDelay"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "VariableDeclaration",
                                  "declarations": [
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "dc"
                                      },
                                      "init": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "connect"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "connect"
                                        }
                                      }
                                    }
                                  ],
                                  "kind": "var"
                                },
                                {
                                  "type": "VariableDeclaration",
                                  "declarations": [
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "handles"
                                      },
                                      "init": {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "dc"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "node"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": "mousedown"
                                              },
                                              {
                                                "type": "ThisExpression"
                                              },
                                              {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "evt"
                                                  }
                                                ],
                                                "defaults": [],
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "event"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "stop"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "evt"
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "dijit"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "typematic"
                                                            }
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "trigger"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "evt"
                                                          },
                                                          {
                                                            "type": "Identifier",
                                                            "name": "_this"
                                                          },
                                                          {
                                                            "type": "Identifier",
                                                            "name": "node"
                                                          },
                                                          {
                                                            "type": "Identifier",
                                                            "name": "callback"
                                                          },
                                                          {
                                                            "type": "Identifier",
                                                            "name": "node"
                                                          },
                                                          {
                                                            "type": "Identifier",
                                                            "name": "subsequentDelay"
                                                          },
                                                          {
                                                            "type": "Identifier",
                                                            "name": "initialDelay"
                                                          },
                                                          {
                                                            "type": "Identifier",
                                                            "name": "minDelay"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ]
                                                },
                                                "rest": null,
                                                "generator": false,
                                                "expression": false
                                              }
                                            ]
                                          },
                                          {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "dc"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "node"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": "mouseup"
                                              },
                                              {
                                                "type": "ThisExpression"
                                              },
                                              {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "evt"
                                                  }
                                                ],
                                                "defaults": [],
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "IfStatement",
                                                      "test": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "_obj"
                                                        }
                                                      },
                                                      "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "event"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "stop"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "evt"
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "alternate": null
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "dijit"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "typematic"
                                                            }
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "stop"
                                                          }
                                                        },
                                                        "arguments": []
                                                      }
                                                    }
                                                  ]
                                                },
                                                "rest": null,
                                                "generator": false,
                                                "expression": false
                                              }
                                            ]
                                          },
                                          {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "dc"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "node"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": "mouseout"
                                              },
                                              {
                                                "type": "ThisExpression"
                                              },
                                              {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "evt"
                                                  }
                                                ],
                                                "defaults": [],
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "event"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "stop"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "evt"
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "dijit"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "typematic"
                                                            }
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "stop"
                                                          }
                                                        },
                                                        "arguments": []
                                                      }
                                                    }
                                                  ]
                                                },
                                                "rest": null,
                                                "generator": false,
                                                "expression": false
                                              }
                                            ]
                                          },
                                          {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "dc"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "node"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": "mousemove"
                                              },
                                              {
                                                "type": "ThisExpression"
                                              },
                                              {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "evt"
                                                  }
                                                ],
                                                "defaults": [],
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "evt"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "preventDefault"
                                                          }
                                                        },
                                                        "arguments": []
                                                      }
                                                    }
                                                  ]
                                                },
                                                "rest": null,
                                                "generator": false,
                                                "expression": false
                                              }
                                            ]
                                          },
                                          {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "dc"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "node"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": "dblclick"
                                              },
                                              {
                                                "type": "ThisExpression"
                                              },
                                              {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "evt"
                                                  }
                                                ],
                                                "defaults": [],
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "event"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "stop"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "evt"
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    {
                                                      "type": "IfStatement",
                                                      "test": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "Identifier",
                                                          "name": "has"
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Literal",
                                                            "value": "ie"
                                                          }
                                                        ]
                                                      },
                                                      "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "dijit"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "typematic"
                                                                  }
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "trigger"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "evt"
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "_this"
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "node"
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "callback"
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "node"
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "subsequentDelay"
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "initialDelay"
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "minDelay"
                                                                }
                                                              ]
                                                            }
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "Identifier",
                                                                "name": "setTimeout"
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "lang"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "hitch"
                                                                    }
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "ThisExpression"
                                                                    },
                                                                    {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "dijit"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "typematic"
                                                                        }
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "stop"
                                                                      }
                                                                    }
                                                                  ]
                                                                },
                                                                {
                                                                  "type": "Literal",
                                                                  "value": 50
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "alternate": null
                                                    }
                                                  ]
                                                },
                                                "rest": null,
                                                "generator": false,
                                                "expression": false
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "kind": "var"
                                },
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Identifier",
                                          "name": "remove"
                                        },
                                        "value": {
                                          "type": "FunctionExpression",
                                          "id": null,
                                          "params": [],
                                          "defaults": [],
                                          "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "array"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "forEach"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "handles"
                                                    },
                                                    {
                                                      "type": "FunctionExpression",
                                                      "id": null,
                                                      "params": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "h"
                                                        }
                                                      ],
                                                      "defaults": [],
                                                      "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "h"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "remove"
                                                                }
                                                              },
                                                              "arguments": []
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "rest": null,
                                                      "generator": false,
                                                      "expression": false
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          },
                                          "rest": null,
                                          "generator": false,
                                          "expression": false
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          "kind": "init"
                        },
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "addListener"
                          },
                          "value": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "mouseNode"
                              },
                              {
                                "type": "Identifier",
                                "name": "keyNode"
                              },
                              {
                                "type": "Identifier",
                                "name": "keyObject"
                              },
                              {
                                "type": "Identifier",
                                "name": "_this"
                              },
                              {
                                "type": "Identifier",
                                "name": "callback"
                              },
                              {
                                "type": "Identifier",
                                "name": "subsequentDelay"
                              },
                              {
                                "type": "Identifier",
                                "name": "initialDelay"
                              },
                              {
                                "type": "Identifier",
                                "name": "minDelay"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "VariableDeclaration",
                                  "declarations": [
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "handles"
                                      },
                                      "init": {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ThisExpression"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "addKeyListener"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "keyNode"
                                              },
                                              {
                                                "type": "Identifier",
                                                "name": "keyObject"
                                              },
                                              {
                                                "type": "Identifier",
                                                "name": "_this"
                                              },
                                              {
                                                "type": "Identifier",
                                                "name": "callback"
                                              },
                                              {
                                                "type": "Identifier",
                                                "name": "subsequentDelay"
                                              },
                                              {
                                                "type": "Identifier",
                                                "name": "initialDelay"
                                              },
                                              {
                                                "type": "Identifier",
                                                "name": "minDelay"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ThisExpression"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "addMouseListener"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "mouseNode"
                                              },
                                              {
                                                "type": "Identifier",
                                                "name": "_this"
                                              },
                                              {
                                                "type": "Identifier",
                                                "name": "callback"
                                              },
                                              {
                                                "type": "Identifier",
                                                "name": "subsequentDelay"
                                              },
                                              {
                                                "type": "Identifier",
                                                "name": "initialDelay"
                                              },
                                              {
                                                "type": "Identifier",
                                                "name": "minDelay"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "kind": "var"
                                },
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Identifier",
                                          "name": "remove"
                                        },
                                        "value": {
                                          "type": "FunctionExpression",
                                          "id": null,
                                          "params": [],
                                          "defaults": [],
                                          "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "array"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "forEach"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "handles"
                                                    },
                                                    {
                                                      "type": "FunctionExpression",
                                                      "id": null,
                                                      "params": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "h"
                                                        }
                                                      ],
                                                      "defaults": [],
                                                      "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "h"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "remove"
                                                                }
                                                              },
                                                              "arguments": []
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "rest": null,
                                                      "generator": false,
                                                      "expression": false
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          },
                                          "rest": null,
                                          "generator": false,
                                          "expression": false
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          "kind": "init"
                        }
                      ]
                    }
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    }
  ]
}
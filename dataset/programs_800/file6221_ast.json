{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "Vow"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "require"
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "vow"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "vowFs"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "require"
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "../lib/fs/async-fs"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "vm"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "require"
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "vm"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "deps"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "require"
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "../lib/deps/deps"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "module"
          },
          "property": {
            "type": "Identifier",
            "name": "exports"
          }
        },
        "right": {
          "type": "CallExpression",
          "callee": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "require"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": "../lib/build-flow"
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "create"
                                            }
                                          },
                                          "arguments": []
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "name"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "bemdecl-from-deps-by-tech"
                                        }
                                      ]
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "deprecated"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "Literal",
                                      "value": "enb"
                                    },
                                    {
                                      "type": "Literal",
                                      "value": "enb-bem-techs"
                                    },
                                    {
                                      "type": "Literal",
                                      "value": "deps-by-tech-to-bemdecl"
                                    }
                                  ]
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "target"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "target"
                                },
                                {
                                  "type": "Literal",
                                  "value": "?.bemdecl.js"
                                }
                              ]
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "defineRequiredOption"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "sourceTech"
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "defineRequiredOption"
                        }
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "destTech"
                        }
                      ]
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "useFileList"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "deps.js"
                    }
                  ]
                },
                "property": {
                  "type": "Identifier",
                  "name": "builder"
                }
              },
              "arguments": [
                {
                  "type": "FunctionExpression",
                  "id": null,
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "depsFiles"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "sourceTech"
                            },
                            "init": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "ThisExpression"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_sourceTech"
                              }
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "destTech"
                            },
                            "init": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "ThisExpression"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_destTech"
                              }
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "Vow"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "all"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "depsFiles"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "map"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [
                                        {
                                          "type": "Identifier",
                                          "name": "file"
                                        }
                                      ],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ReturnStatement",
                                            "argument": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "vowFs"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "read"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "file"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "fullname"
                                                      }
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "utf8"
                                                    }
                                                  ]
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "then"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "text"
                                                    }
                                                  ],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                          "type": "ObjectExpression",
                                                          "properties": [
                                                            {
                                                              "type": "Property",
                                                              "key": {
                                                                "type": "Identifier",
                                                                "name": "file"
                                                              },
                                                              "value": {
                                                                "type": "Identifier",
                                                                "name": "file"
                                                              },
                                                              "kind": "init"
                                                            },
                                                            {
                                                              "type": "Property",
                                                              "key": {
                                                                "type": "Identifier",
                                                                "name": "text"
                                                              },
                                                              "value": {
                                                                "type": "Identifier",
                                                                "name": "text"
                                                              },
                                                              "kind": "init"
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    }
                                  ]
                                }
                              ]
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "then"
                            }
                          },
                          "arguments": [
                            {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [
                                {
                                  "type": "Identifier",
                                  "name": "depResults"
                                }
                              ],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "result"
                                        },
                                        "init": {
                                          "type": "ArrayExpression",
                                          "elements": []
                                        }
                                      }
                                    ],
                                    "kind": "var"
                                  },
                                  {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "depIndex"
                                        },
                                        "init": {
                                          "type": "ObjectExpression",
                                          "properties": []
                                        }
                                      }
                                    ],
                                    "kind": "var"
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "depResults"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "forEach"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "FunctionExpression",
                                          "id": null,
                                          "params": [
                                            {
                                              "type": "Identifier",
                                              "name": "depResult"
                                            }
                                          ],
                                          "defaults": [],
                                          "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                  {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "fileDeps"
                                                    },
                                                    "init": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "vm"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "runInThisContext"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "depResult"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "text"
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ],
                                                "kind": "var"
                                              },
                                              {
                                                "type": "IfStatement",
                                                "test": {
                                                  "type": "UnaryExpression",
                                                  "operator": "!",
                                                  "argument": {
                                                    "type": "Identifier",
                                                    "name": "fileDeps"
                                                  },
                                                  "prefix": true
                                                },
                                                "consequent": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "ReturnStatement",
                                                      "argument": null
                                                    }
                                                  ]
                                                },
                                                "alternate": null
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "fileDeps"
                                                  },
                                                  "right": {
                                                    "type": "ConditionalExpression",
                                                    "test": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "Array"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "isArray"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "fileDeps"
                                                        }
                                                      ]
                                                    },
                                                    "consequent": {
                                                      "type": "Identifier",
                                                      "name": "fileDeps"
                                                    },
                                                    "alternate": {
                                                      "type": "ArrayExpression",
                                                      "elements": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "fileDeps"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "fileDeps"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "forEach"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "FunctionExpression",
                                                      "id": null,
                                                      "params": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "dep"
                                                        }
                                                      ],
                                                      "defaults": [],
                                                      "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "IfStatement",
                                                            "test": {
                                                              "type": "BinaryExpression",
                                                              "operator": "===",
                                                              "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "dep"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "tech"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "Identifier",
                                                                "name": "sourceTech"
                                                              }
                                                            },
                                                            "consequent": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "ArrayExpression",
                                                                        "elements": [
                                                                          {
                                                                            "type": "Literal",
                                                                            "value": "mustDeps"
                                                                          },
                                                                          {
                                                                            "type": "Literal",
                                                                            "value": "shouldDeps"
                                                                          }
                                                                        ]
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "forEach"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "FunctionExpression",
                                                                        "id": null,
                                                                        "params": [
                                                                          {
                                                                            "type": "Identifier",
                                                                            "name": "depType"
                                                                          }
                                                                        ],
                                                                        "defaults": [],
                                                                        "body": {
                                                                          "type": "BlockStatement",
                                                                          "body": [
                                                                            {
                                                                              "type": "IfStatement",
                                                                              "test": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "dep"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "depType"
                                                                                }
                                                                              },
                                                                              "consequent": {
                                                                                "type": "BlockStatement",
                                                                                "body": [
                                                                                  {
                                                                                    "type": "ExpressionStatement",
                                                                                    "expression": {
                                                                                      "type": "CallExpression",
                                                                                      "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "CallExpression",
                                                                                          "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                              "type": "Identifier",
                                                                                              "name": "deps"
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "Identifier",
                                                                                              "name": "flattenDeps"
                                                                                            }
                                                                                          },
                                                                                          "arguments": [
                                                                                            {
                                                                                              "type": "MemberExpression",
                                                                                              "computed": true,
                                                                                              "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "dep"
                                                                                              },
                                                                                              "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "depType"
                                                                                              }
                                                                                            }
                                                                                          ]
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "forEach"
                                                                                        }
                                                                                      },
                                                                                      "arguments": [
                                                                                        {
                                                                                          "type": "FunctionExpression",
                                                                                          "id": null,
                                                                                          "params": [
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "name": "singleDep"
                                                                                            }
                                                                                          ],
                                                                                          "defaults": [],
                                                                                          "body": {
                                                                                            "type": "BlockStatement",
                                                                                            "body": [
                                                                                              {
                                                                                                "type": "IfStatement",
                                                                                                "test": {
                                                                                                  "type": "BinaryExpression",
                                                                                                  "operator": "===",
                                                                                                  "left": {
                                                                                                    "type": "MemberExpression",
                                                                                                    "computed": false,
                                                                                                    "object": {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "singleDep"
                                                                                                    },
                                                                                                    "property": {
                                                                                                      "type": "Identifier",
                                                                                                      "name": "tech"
                                                                                                    }
                                                                                                  },
                                                                                                  "right": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "destTech"
                                                                                                  }
                                                                                                },
                                                                                                "consequent": {
                                                                                                  "type": "BlockStatement",
                                                                                                  "body": [
                                                                                                    {
                                                                                                      "type": "VariableDeclaration",
                                                                                                      "declarations": [
                                                                                                        {
                                                                                                          "type": "VariableDeclarator",
                                                                                                          "id": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "key"
                                                                                                          },
                                                                                                          "init": {
                                                                                                            "type": "CallExpression",
                                                                                                            "callee": {
                                                                                                              "type": "Identifier",
                                                                                                              "name": "depKey"
                                                                                                            },
                                                                                                            "arguments": [
                                                                                                              {
                                                                                                                "type": "Identifier",
                                                                                                                "name": "singleDep"
                                                                                                              }
                                                                                                            ]
                                                                                                          }
                                                                                                        }
                                                                                                      ],
                                                                                                      "kind": "var"
                                                                                                    },
                                                                                                    {
                                                                                                      "type": "IfStatement",
                                                                                                      "test": {
                                                                                                        "type": "UnaryExpression",
                                                                                                        "operator": "!",
                                                                                                        "argument": {
                                                                                                          "type": "MemberExpression",
                                                                                                          "computed": true,
                                                                                                          "object": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "depIndex"
                                                                                                          },
                                                                                                          "property": {
                                                                                                            "type": "Identifier",
                                                                                                            "name": "key"
                                                                                                          }
                                                                                                        },
                                                                                                        "prefix": true
                                                                                                      },
                                                                                                      "consequent": {
                                                                                                        "type": "BlockStatement",
                                                                                                        "body": [
                                                                                                          {
                                                                                                            "type": "ExpressionStatement",
                                                                                                            "expression": {
                                                                                                              "type": "AssignmentExpression",
                                                                                                              "operator": "=",
                                                                                                              "left": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": true,
                                                                                                                "object": {
                                                                                                                  "type": "Identifier",
                                                                                                                  "name": "depIndex"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                  "type": "Identifier",
                                                                                                                  "name": "key"
                                                                                                                }
                                                                                                              },
                                                                                                              "right": {
                                                                                                                "type": "Literal",
                                                                                                                "value": true
                                                                                                              }
                                                                                                            }
                                                                                                          },
                                                                                                          {
                                                                                                            "type": "ExpressionStatement",
                                                                                                            "expression": {
                                                                                                              "type": "CallExpression",
                                                                                                              "callee": {
                                                                                                                "type": "MemberExpression",
                                                                                                                "computed": false,
                                                                                                                "object": {
                                                                                                                  "type": "Identifier",
                                                                                                                  "name": "result"
                                                                                                                },
                                                                                                                "property": {
                                                                                                                  "type": "Identifier",
                                                                                                                  "name": "push"
                                                                                                                }
                                                                                                              },
                                                                                                              "arguments": [
                                                                                                                {
                                                                                                                  "type": "Identifier",
                                                                                                                  "name": "singleDep"
                                                                                                                }
                                                                                                              ]
                                                                                                            }
                                                                                                          }
                                                                                                        ]
                                                                                                      },
                                                                                                      "alternate": null
                                                                                                    }
                                                                                                  ]
                                                                                                },
                                                                                                "alternate": null
                                                                                              }
                                                                                            ]
                                                                                          },
                                                                                          "rest": null,
                                                                                          "generator": false,
                                                                                          "expression": false
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  }
                                                                                ]
                                                                              },
                                                                              "alternate": null
                                                                            }
                                                                          ]
                                                                        },
                                                                        "rest": null,
                                                                        "generator": false,
                                                                        "expression": false
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "alternate": null
                                                          }
                                                        ]
                                                      },
                                                      "rest": null,
                                                      "generator": false,
                                                      "expression": false
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          },
                                          "rest": null,
                                          "generator": false,
                                          "expression": false
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "BinaryExpression",
                                      "operator": "+",
                                      "left": {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                          "type": "Literal",
                                          "value": "exports.deps = "
                                        },
                                        "right": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "JSON"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "stringify"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "result"
                                            },
                                            {
                                              "type": "Literal",
                                              "value": null
                                            },
                                            {
                                              "type": "Literal",
                                              "value": 4
                                            }
                                          ]
                                        }
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": ";"
                                      }
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                }
              ]
            },
            "property": {
              "type": "Identifier",
              "name": "createTech"
            }
          },
          "arguments": []
        }
      }
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "depKey"
      },
      "params": [
        {
          "type": "Identifier",
          "name": "dep"
        }
      ],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "BinaryExpression",
              "operator": "+",
              "left": {
                "type": "BinaryExpression",
                "operator": "+",
                "left": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "Identifier",
                    "name": "dep"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "block"
                  }
                },
                "right": {
                  "type": "ConditionalExpression",
                  "test": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "dep"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "elem"
                    }
                  },
                  "consequent": {
                    "type": "BinaryExpression",
                    "operator": "+",
                    "left": {
                      "type": "Literal",
                      "value": "__"
                    },
                    "right": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "dep"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "elem"
                      }
                    }
                  },
                  "alternate": {
                    "type": "Literal",
                    "value": ""
                  }
                }
              },
              "right": {
                "type": "ConditionalExpression",
                "test": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "Identifier",
                    "name": "dep"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "mod"
                  }
                },
                "consequent": {
                  "type": "BinaryExpression",
                  "operator": "+",
                  "left": {
                    "type": "BinaryExpression",
                    "operator": "+",
                    "left": {
                      "type": "Literal",
                      "value": "_"
                    },
                    "right": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "dep"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "mod"
                      }
                    }
                  },
                  "right": {
                    "type": "ConditionalExpression",
                    "test": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "dep"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "val"
                      }
                    },
                    "consequent": {
                      "type": "BinaryExpression",
                      "operator": "+",
                      "left": {
                        "type": "Literal",
                        "value": "_"
                      },
                      "right": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "dep"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "val"
                        }
                      }
                    },
                    "alternate": {
                      "type": "Literal",
                      "value": ""
                    }
                  }
                },
                "alternate": {
                  "type": "Literal",
                  "value": ""
                }
              }
            }
          }
        ]
      },
      "rest": null,
      "generator": false,
      "expression": false
    }
  ]
}
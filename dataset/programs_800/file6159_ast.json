{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "DuckieTV"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "computed": false,
              "object": {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "angular"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "module"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "DuckieTV"
                          },
                          {
                            "type": "ArrayExpression",
                            "elements": [
                              {
                                "type": "Literal",
                                "value": "ui.router"
                              },
                              {
                                "type": "Literal",
                                "value": "ct.ui.router.extras.core"
                              },
                              {
                                "type": "Literal",
                                "value": "ct.ui.router.extras.sticky"
                              },
                              {
                                "type": "Literal",
                                "value": "ngLocale"
                              },
                              {
                                "type": "Literal",
                                "value": "ngAnimate"
                              },
                              {
                                "type": "Literal",
                                "value": "tmh.dynamicLocale"
                              },
                              {
                                "type": "Literal",
                                "value": "ui.bootstrap"
                              },
                              {
                                "type": "Literal",
                                "value": "dialogs"
                              },
                              {
                                "type": "Literal",
                                "value": "pascalprecht.translate"
                              },
                              {
                                "type": "Literal",
                                "value": "DuckieTorrent.torrent"
                              }
                            ]
                          }
                        ]
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "filter"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "unsafe"
                      },
                      {
                        "type": "ArrayExpression",
                        "elements": [
                          {
                            "type": "Literal",
                            "value": "$sce"
                          },
                          {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "$sce"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "FunctionExpression",
                                    "id": null,
                                    "params": [
                                      {
                                        "type": "Identifier",
                                        "name": "val"
                                      }
                                    ],
                                    "defaults": [],
                                    "body": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ReturnStatement",
                                          "argument": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "$sce"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "trustAsHtml"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "val"
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    },
                                    "rest": null,
                                    "generator": false,
                                    "expression": false
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          }
                        ]
                      }
                    ]
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "run"
                  }
                },
                "arguments": [
                  {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "window"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "onload"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "today"
                                },
                                "init": {
                                  "type": "NewExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "Date"
                                  },
                                  "arguments": []
                                }
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "tommorow"
                                },
                                "init": {
                                  "type": "NewExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "Date"
                                  },
                                  "arguments": [
                                    {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "today"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "getFullYear"
                                        }
                                      },
                                      "arguments": []
                                    },
                                    {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "today"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "getMonth"
                                        }
                                      },
                                      "arguments": []
                                    },
                                    {
                                      "type": "BinaryExpression",
                                      "operator": "+",
                                      "left": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "today"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "getDate"
                                          }
                                        },
                                        "arguments": []
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": 1
                                      }
                                    }
                                  ]
                                }
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "timeToMidnight"
                                },
                                "init": {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "BinaryExpression",
                                    "operator": "-",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "tommorow"
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "today"
                                    }
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": 1000
                                  }
                                }
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "timer"
                                },
                                "init": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "setTimeout"
                                  },
                                  "arguments": [
                                    {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "window"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "location"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "reload"
                                                }
                                              },
                                              "arguments": []
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "timeToMidnight"
                                    }
                                  ]
                                }
                              }
                            ],
                            "kind": "var"
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                ]
              },
              "property": {
                "type": "Identifier",
                "name": "run"
              }
            },
            "arguments": [
              {
                "type": "FunctionExpression",
                "id": null,
                "params": [
                  {
                    "type": "Identifier",
                    "name": "$rootScope"
                  },
                  {
                    "type": "Identifier",
                    "name": "$state"
                  }
                ],
                "defaults": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "$rootScope"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "$on"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "$stateChangeStart"
                          },
                          {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "e"
                              },
                              {
                                "type": "Identifier",
                                "name": "toState"
                              },
                              {
                                "type": "Identifier",
                                "name": "toParams"
                              },
                              {
                                "type": "Identifier",
                                "name": "fromState"
                              },
                              {
                                "type": "Identifier",
                                "name": "fromParams"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "IfStatement",
                                  "test": {
                                    "type": "UnaryExpression",
                                    "operator": "!",
                                    "argument": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "toState"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "views"
                                      }
                                    },
                                    "prefix": true
                                  },
                                  "consequent": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": null
                                      }
                                    ]
                                  },
                                  "alternate": null
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "Object"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "keys"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "toState"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "views"
                                            }
                                          }
                                        ]
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "map"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "viewname"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "document"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "querySelector"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "[ui-view="
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "viewname"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "]"
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "classList"
                                                    }
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "add"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Literal",
                                                    "value": "ui-loading"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          }
                        ]
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "$rootScope"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "$on"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "$stateChangeSuccess"
                          },
                          {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "e"
                              },
                              {
                                "type": "Identifier",
                                "name": "toState"
                              },
                              {
                                "type": "Identifier",
                                "name": "toParams"
                              },
                              {
                                "type": "Identifier",
                                "name": "fromState"
                              },
                              {
                                "type": "Identifier",
                                "name": "fromParams"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "IfStatement",
                                  "test": {
                                    "type": "UnaryExpression",
                                    "operator": "!",
                                    "argument": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "toState"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "views"
                                      }
                                    },
                                    "prefix": true
                                  },
                                  "consequent": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": null
                                      }
                                    ]
                                  },
                                  "alternate": null
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "Object"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "keys"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "toState"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "views"
                                            }
                                          }
                                        ]
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "map"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "viewname"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "document"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "querySelector"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "[ui-view="
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "viewname"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "]"
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "classList"
                                                    }
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "remove"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Literal",
                                                    "value": "ui-loading"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          }
                        ]
                      }
                    }
                  ]
                },
                "rest": null,
                "generator": false,
                "expression": false
              }
            ]
          }
        }
      ],
      "kind": "var"
    }
  ]
}
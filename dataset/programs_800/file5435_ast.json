{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "Socket"
          },
          "init": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "require"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "net"
                }
              ]
            },
            "property": {
              "type": "Identifier",
              "name": "Socket"
            }
          }
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "zlib"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "require"
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "zlib"
              }
            ]
          }
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "crypto"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "require"
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "crypto"
              }
            ]
          }
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "inherits"
          },
          "init": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "require"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "util"
                }
              ]
            },
            "property": {
              "type": "Identifier",
              "name": "inherits"
            }
          }
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "EventEmitter"
          },
          "init": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "require"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "events"
                }
              ]
            },
            "property": {
              "type": "Identifier",
              "name": "EventEmitter"
            }
          }
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "inspect"
          },
          "init": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "require"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "util"
                }
              ]
            },
            "property": {
              "type": "Identifier",
              "name": "inspect"
            }
          }
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "Ber"
          },
          "init": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "require"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "asn1"
                }
              ]
            },
            "property": {
              "type": "Identifier",
              "name": "Ber"
            }
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "Parser"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "require"
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "./Parser"
              }
            ]
          }
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "consts"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "require"
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "./Parser.constants"
              }
            ]
          }
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "keyParser"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "require"
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "./keyParser"
              }
            ]
          }
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "Channel"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "require"
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "./Channel"
              }
            ]
          }
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "agentQuery"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "require"
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "./agent"
              }
            ]
          }
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "SFTPv3"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "require"
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "./SFTP/SFTPv3"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "MODULE_VER"
          },
          "init": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "require"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "../package.json"
                }
              ]
            },
            "property": {
              "type": "Identifier",
              "name": "version"
            }
          }
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "SSH_IDENT"
          },
          "init": {
            "type": "BinaryExpression",
            "operator": "+",
            "left": {
              "type": "Literal",
              "value": "SSH-2.0-ssh2js"
            },
            "right": {
              "type": "Identifier",
              "name": "MODULE_VER"
            }
          }
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "MAX_CHANNEL"
          },
          "init": {
            "type": "BinaryExpression",
            "operator": "-",
            "left": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "Math"
                },
                "property": {
                  "type": "Identifier",
                  "name": "pow"
                }
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": 2
                },
                {
                  "type": "Literal",
                  "value": 32
                }
              ]
            },
            "right": {
              "type": "Literal",
              "value": 1
            }
          }
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "ALGORITHMS"
          },
          "init": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "consts"
            },
            "property": {
              "type": "Identifier",
              "name": "ALGORITHMS"
            }
          }
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "MESSAGE"
          },
          "init": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "consts"
            },
            "property": {
              "type": "Identifier",
              "name": "MESSAGE"
            }
          }
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "SSH_TO_OPENSSL"
          },
          "init": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "consts"
            },
            "property": {
              "type": "Identifier",
              "name": "SSH_TO_OPENSSL"
            }
          }
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "DISCONNECT_REASON"
          },
          "init": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "consts"
            },
            "property": {
              "type": "Identifier",
              "name": "DISCONNECT_REASON"
            }
          }
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "CHANNEL_OPEN_FAILURE"
          },
          "init": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "consts"
            },
            "property": {
              "type": "Identifier",
              "name": "CHANNEL_OPEN_FAILURE"
            }
          }
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "EMPTY_BUFFER"
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Buffer"
            },
            "arguments": [
              {
                "type": "Literal",
                "value": 0
              }
            ]
          }
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "PING_PACKET"
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "Identifier",
              "name": "Buffer"
            },
            "arguments": [
              {
                "type": "ArrayExpression",
                "elements": [
                  {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "MESSAGE"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "IGNORE"
                    }
                  },
                  {
                    "type": "Literal",
                    "value": 0
                  },
                  {
                    "type": "Literal",
                    "value": 0
                  },
                  {
                    "type": "Literal",
                    "value": 0
                  },
                  {
                    "type": "Literal",
                    "value": 0
                  }
                ]
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "isStreamCipher"
      },
      "params": [
        {
          "type": "Identifier",
          "name": "cipher"
        }
      ],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "BinaryExpression",
              "operator": "===",
              "left": {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "Identifier",
                    "name": "cipher"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "substr"
                  }
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": 0
                  },
                  {
                    "type": "Literal",
                    "value": 7
                  }
                ]
              },
              "right": {
                "type": "Literal",
                "value": "arcfour"
              }
            }
          }
        ]
      },
      "rest": null,
      "generator": false,
      "expression": false
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "Connection"
      },
      "params": [
        {
          "type": "Identifier",
          "name": "opts"
        }
      ],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "IfStatement",
            "test": {
              "type": "UnaryExpression",
              "operator": "!",
              "argument": {
                "type": "BinaryExpression",
                "operator": "instanceof",
                "left": {
                  "type": "ThisExpression"
                },
                "right": {
                  "type": "Identifier",
                  "name": "Connection"
                }
              },
              "prefix": true
            },
            "consequent": {
              "type": "ReturnStatement",
              "argument": {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "Connection"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "opts"
                  }
                ]
              }
            },
            "alternate": null
          },
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "self"
                },
                "init": {
                  "type": "ThisExpression"
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "ThisExpression"
                },
                "property": {
                  "type": "Identifier",
                  "name": "_host"
                }
              },
              "right": {
                "type": "Identifier",
                "name": "undefined"
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "ThisExpression"
                },
                "property": {
                  "type": "Identifier",
                  "name": "_port"
                }
              },
              "right": {
                "type": "Identifier",
                "name": "undefined"
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "ThisExpression"
                },
                "property": {
                  "type": "Identifier",
                  "name": "_compress"
                }
              },
              "right": {
                "type": "Literal",
                "value": false
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "ThisExpression"
                },
                "property": {
                  "type": "Identifier",
                  "name": "_state"
                }
              },
              "right": {
                "type": "Literal",
                "value": "closed"
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "ThisExpression"
                },
                "property": {
                  "type": "Identifier",
                  "name": "_username"
                }
              },
              "right": {
                "type": "Identifier",
                "name": "undefined"
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "ThisExpression"
                },
                "property": {
                  "type": "Identifier",
                  "name": "_password"
                }
              },
              "right": {
                "type": "Identifier",
                "name": "undefined"
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "ThisExpression"
                },
                "property": {
                  "type": "Identifier",
                  "name": "_privateKey"
                }
              },
              "right": {
                "type": "Identifier",
                "name": "undefined"
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "ThisExpression"
                },
                "property": {
                  "type": "Identifier",
                  "name": "_publicKey"
                }
              },
              "right": {
                "type": "Identifier",
                "name": "undefined"
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "ThisExpression"
                },
                "property": {
                  "type": "Identifier",
                  "name": "_passphrase"
                }
              },
              "right": {
                "type": "Identifier",
                "name": "undefined"
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "ThisExpression"
                },
                "property": {
                  "type": "Identifier",
                  "name": "_tryKeyboard"
                }
              },
              "right": {
                "type": "Identifier",
                "name": "undefined"
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "ThisExpression"
                },
                "property": {
                  "type": "Identifier",
                  "name": "_fingerprint"
                }
              },
              "right": {
                "type": "Identifier",
                "name": "undefined"
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "ThisExpression"
                },
                "property": {
                  "type": "Identifier",
                  "name": "_cbfingerprint"
                }
              },
              "right": {
                "type": "Identifier",
                "name": "undefined"
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "ThisExpression"
                },
                "property": {
                  "type": "Identifier",
                  "name": "_agent"
                }
              },
              "right": {
                "type": "Identifier",
                "name": "undefined"
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "ThisExpression"
                },
                "property": {
                  "type": "Identifier",
                  "name": "_debug"
                }
              },
              "right": {
                "type": "Identifier",
                "name": "undefined"
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "ThisExpression"
                },
                "property": {
                  "type": "Identifier",
                  "name": "_sock"
                }
              },
              "right": {
                "type": "Identifier",
                "name": "undefined"
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "ThisExpression"
                },
                "property": {
                  "type": "Identifier",
                  "name": "_channels"
                }
              },
              "right": {
                "type": "Identifier",
                "name": "undefined"
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "ThisExpression"
                },
                "property": {
                  "type": "Identifier",
                  "name": "_callbacks"
                }
              },
              "right": {
                "type": "Identifier",
                "name": "undefined"
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "ThisExpression"
                },
                "property": {
                  "type": "Identifier",
                  "name": "_forwarding"
                }
              },
              "right": {
                "type": "Identifier",
                "name": "undefined"
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "ThisExpression"
                },
                "property": {
                  "type": "Identifier",
                  "name": "_buffer"
                }
              },
              "right": {
                "type": "Identifier",
                "name": "undefined"
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "ThisExpression"
                },
                "property": {
                  "type": "Identifier",
                  "name": "_agentKeys"
                }
              },
              "right": {
                "type": "Identifier",
                "name": "undefined"
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "ThisExpression"
                },
                "property": {
                  "type": "Identifier",
                  "name": "_seqno"
                }
              },
              "right": {
                "type": "Literal",
                "value": 0
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "ThisExpression"
                },
                "property": {
                  "type": "Identifier",
                  "name": "_bufseqno"
                }
              },
              "right": {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "Buffer"
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": 4
                  }
                ]
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "ThisExpression"
                },
                "property": {
                  "type": "Identifier",
                  "name": "_encryptSize"
                }
              },
              "right": {
                "type": "Literal",
                "value": 8
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "ThisExpression"
                },
                "property": {
                  "type": "Identifier",
                  "name": "_encrypt"
                }
              },
              "right": {
                "type": "Literal",
                "value": false
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "ThisExpression"
                },
                "property": {
                  "type": "Identifier",
                  "name": "_hmacKey"
                }
              },
              "right": {
                "type": "Identifier",
                "name": "undefined"
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "ThisExpression"
                },
                "property": {
                  "type": "Identifier",
                  "name": "_hmacSize"
                }
              },
              "right": {
                "type": "Identifier",
                "name": "undefined"
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "ThisExpression"
                },
                "property": {
                  "type": "Identifier",
                  "name": "_hmac"
                }
              },
              "right": {
                "type": "Literal",
                "value": false
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "ThisExpression"
                },
                "property": {
                  "type": "Identifier",
                  "name": "_server_ident_raw"
                }
              },
              "right": {
                "type": "Identifier",
                "name": "undefined"
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "ThisExpression"
                },
                "property": {
                  "type": "Identifier",
                  "name": "_kexinit"
                }
              },
              "right": {
                "type": "Identifier",
                "name": "undefined"
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "ThisExpression"
                },
                "property": {
                  "type": "Identifier",
                  "name": "_sessionid"
                }
              },
              "right": {
                "type": "Identifier",
                "name": "undefined"
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "ThisExpression"
                },
                "property": {
                  "type": "Identifier",
                  "name": "_curChan"
                }
              },
              "right": {
                "type": "UnaryExpression",
                "operator": "-",
                "argument": {
                  "type": "Literal",
                  "value": 1
                },
                "prefix": true
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "ThisExpression"
                },
                "property": {
                  "type": "Identifier",
                  "name": "_parser"
                }
              },
              "right": {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "Parser"
                },
                "arguments": []
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "ThisExpression"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "_parser"
                  }
                },
                "property": {
                  "type": "Identifier",
                  "name": "once"
                }
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "header"
                },
                {
                  "type": "FunctionExpression",
                  "id": null,
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "header"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "LogicalExpression",
                          "operator": "&&",
                          "left": {
                            "type": "BinaryExpression",
                            "operator": "!==",
                            "left": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "header"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "versions"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "protocol"
                              }
                            },
                            "right": {
                              "type": "Literal",
                              "value": "1.99"
                            }
                          },
                          "right": {
                            "type": "BinaryExpression",
                            "operator": "!==",
                            "left": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "header"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "versions"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "protocol"
                              }
                            },
                            "right": {
                              "type": "Literal",
                              "value": "2.0"
                            }
                          }
                        },
                        "consequent": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "self"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "_parser"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "reset"
                                  }
                                },
                                "arguments": []
                              }
                            },
                            {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "self"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "_sock"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "destroy"
                                  }
                                },
                                "arguments": []
                              }
                            }
                          ]
                        },
                        "alternate": null
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "LogicalExpression",
                          "operator": "&&",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "self"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_debug"
                            }
                          },
                          "right": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "self"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_debug"
                              }
                            },
                            "arguments": [
                              {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                  "type": "Literal",
                                  "value": "DEBUG: Connection: Server ident: "
                                },
                                "right": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "inspect"
                                  },
                                  "arguments": [
                                    {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "header"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "ident_raw"
                                      }
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "self"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_server_ident_raw"
                            }
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "header"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "ident_raw"
                            }
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "sendKEXInit"
                          },
                          "arguments": []
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "ThisExpression"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "_parser"
                  }
                },
                "property": {
                  "type": "Identifier",
                  "name": "on"
                }
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "DEBUG"
                },
                {
                  "type": "FunctionExpression",
                  "id": null,
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "message"
                    },
                    {
                      "type": "Identifier",
                      "name": "lang"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "self"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "_debug"
                          }
                        },
                        "consequent": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "self"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "_debug"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                      "type": "Literal",
                                      "value": "DEBUG: Connection: Debug message from server: "
                                    },
                                    "right": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "inspect"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Identifier",
                                          "name": "message"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "self"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "emit"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": "debug"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "message"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "alternate": null
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                }
              ]
            }
          },
          {
            "type": "FunctionDeclaration",
            "id": {
              "type": "Identifier",
              "name": "sendKEXInit"
            },
            "params": [
              {
                "type": "Identifier",
                "name": "cb"
              }
            ],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "crypto"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "randomBytes"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": 16
                      },
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "err"
                          },
                          {
                            "type": "Identifier",
                            "name": "my_cookie"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "VariableDeclaration",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "kexInitSize"
                                  },
                                  "init": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                      "type": "BinaryExpression",
                                      "operator": "+",
                                      "left": {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                          "type": "BinaryExpression",
                                          "operator": "+",
                                          "left": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                  "type": "BinaryExpression",
                                                  "operator": "+",
                                                  "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "BinaryExpression",
                                                      "operator": "+",
                                                      "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                          "type": "Literal",
                                                          "value": 1
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": 16
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": 4
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "ALGORITHMS"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "KEX_LIST_SIZE"
                                                      }
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": 4
                                                  }
                                                },
                                                "right": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "ALGORITHMS"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "SERVER_HOST_KEY_LIST_SIZE"
                                                  }
                                                }
                                              },
                                              "right": {
                                                "type": "BinaryExpression",
                                                "operator": "*",
                                                "left": {
                                                  "type": "Literal",
                                                  "value": 2
                                                },
                                                "right": {
                                                  "type": "BinaryExpression",
                                                  "operator": "+",
                                                  "left": {
                                                    "type": "Literal",
                                                    "value": 4
                                                  },
                                                  "right": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "ALGORITHMS"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "CIPHER_LIST_SIZE"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            "right": {
                                              "type": "BinaryExpression",
                                              "operator": "*",
                                              "left": {
                                                "type": "Literal",
                                                "value": 2
                                              },
                                              "right": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                  "type": "Literal",
                                                  "value": 4
                                                },
                                                "right": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "ALGORITHMS"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "HMAC_LIST_SIZE"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "right": {
                                            "type": "BinaryExpression",
                                            "operator": "*",
                                            "left": {
                                              "type": "Literal",
                                              "value": 2
                                            },
                                            "right": {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "Literal",
                                                "value": 4
                                              },
                                              "right": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "ALGORITHMS"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "COMPRESS_LIST_SIZE"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "right": {
                                          "type": "BinaryExpression",
                                          "operator": "*",
                                          "left": {
                                            "type": "Literal",
                                            "value": 2
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": 4
                                          }
                                        }
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": 1
                                      }
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": 4
                                    }
                                  }
                                },
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "bufKexInit"
                                  },
                                  "init": {
                                    "type": "NewExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "Buffer"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "kexInitSize"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "p"
                                  },
                                  "init": {
                                    "type": "Literal",
                                    "value": 17
                                  }
                                }
                              ],
                              "kind": "var"
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "bufKexInit"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "fill"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": 0
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": true,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "bufKexInit"
                                  },
                                  "property": {
                                    "type": "Literal",
                                    "value": 0
                                  }
                                },
                                "right": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "MESSAGE"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "KEXINIT"
                                  }
                                }
                              }
                            },
                            {
                              "type": "IfStatement",
                              "test": {
                                "type": "UnaryExpression",
                                "operator": "!",
                                "argument": {
                                  "type": "Identifier",
                                  "name": "err"
                                },
                                "prefix": true
                              },
                              "consequent": {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "my_cookie"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "copy"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "bufKexInit"
                                    },
                                    {
                                      "type": "Literal",
                                      "value": 1
                                    }
                                  ]
                                }
                              },
                              "alternate": null
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "bufKexInit"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "writeUInt32BE"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "ALGORITHMS"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "KEX_LIST_SIZE"
                                    }
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "p"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": true
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "+=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "p"
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": 4
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "ALGORITHMS"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "KEX_LIST"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "copy"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "bufKexInit"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "p"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "+=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "p"
                                },
                                "right": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "ALGORITHMS"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "KEX_LIST_SIZE"
                                  }
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "bufKexInit"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "writeUInt32BE"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "ALGORITHMS"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "SERVER_HOST_KEY_LIST_SIZE"
                                    }
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "p"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": true
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "+=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "p"
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": 4
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "ALGORITHMS"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "SERVER_HOST_KEY_LIST"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "copy"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "bufKexInit"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "p"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "+=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "p"
                                },
                                "right": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "ALGORITHMS"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "SERVER_HOST_KEY_LIST_SIZE"
                                  }
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "bufKexInit"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "writeUInt32BE"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "ALGORITHMS"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "CIPHER_LIST_SIZE"
                                    }
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "p"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": true
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "+=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "p"
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": 4
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "ALGORITHMS"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "CIPHER_LIST"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "copy"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "bufKexInit"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "p"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "+=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "p"
                                },
                                "right": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "ALGORITHMS"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "CIPHER_LIST_SIZE"
                                  }
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "bufKexInit"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "writeUInt32BE"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "ALGORITHMS"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "CIPHER_LIST_SIZE"
                                    }
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "p"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": true
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "+=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "p"
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": 4
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "ALGORITHMS"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "CIPHER_LIST"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "copy"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "bufKexInit"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "p"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "+=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "p"
                                },
                                "right": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "ALGORITHMS"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "CIPHER_LIST_SIZE"
                                  }
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "bufKexInit"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "writeUInt32BE"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "ALGORITHMS"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "HMAC_LIST_SIZE"
                                    }
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "p"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": true
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "+=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "p"
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": 4
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "ALGORITHMS"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "HMAC_LIST"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "copy"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "bufKexInit"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "p"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "+=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "p"
                                },
                                "right": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "ALGORITHMS"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "HMAC_LIST_SIZE"
                                  }
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "bufKexInit"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "writeUInt32BE"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "ALGORITHMS"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "HMAC_LIST_SIZE"
                                    }
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "p"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": true
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "+=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "p"
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": 4
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "ALGORITHMS"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "HMAC_LIST"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "copy"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "bufKexInit"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "p"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "+=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "p"
                                },
                                "right": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "ALGORITHMS"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "HMAC_LIST_SIZE"
                                  }
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "bufKexInit"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "writeUInt32BE"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "ALGORITHMS"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "COMPRESS_LIST_SIZE"
                                    }
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "p"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": true
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "+=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "p"
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": 4
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "ALGORITHMS"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "COMPRESS_LIST"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "copy"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "bufKexInit"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "p"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "+=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "p"
                                },
                                "right": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "ALGORITHMS"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "COMPRESS_LIST_SIZE"
                                  }
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "bufKexInit"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "writeUInt32BE"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "ALGORITHMS"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "COMPRESS_LIST_SIZE"
                                    }
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "p"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": true
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "+=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "p"
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": 4
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "ALGORITHMS"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "COMPRESS_LIST"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "copy"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "bufKexInit"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "p"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "+=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "p"
                                },
                                "right": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "ALGORITHMS"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "COMPRESS_LIST_SIZE"
                                  }
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "LogicalExpression",
                                "operator": "&&",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "self"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "_debug"
                                  }
                                },
                                "right": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "self"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "_debug"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "Literal",
                                      "value": "DEBUG: Connection: Sent KEXINIT"
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "self"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "_kexinit"
                                  }
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "bufKexInit"
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "self"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "_send"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "bufKexInit"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "self"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "emit"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": "_sentKEXInit"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "LogicalExpression",
                                "operator": "&&",
                                "left": {
                                  "type": "Identifier",
                                  "name": "cb"
                                },
                                "right": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "cb"
                                  },
                                  "arguments": []
                                }
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    ]
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          },
          {
            "type": "FunctionDeclaration",
            "id": {
              "type": "Identifier",
              "name": "checkSKEXInit"
            },
            "params": [
              {
                "type": "Identifier",
                "name": "init"
              }
            ],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "i"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "len"
                      },
                      "init": null
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "debug"
                      },
                      "init": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "self"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "_debug"
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "Identifier",
                      "name": "debug"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "debug"
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "DEBUG: Connection: Comparing KEXInits..."
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "Identifier",
                      "name": "debug"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "debug"
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "Literal",
                            "value": "DEBUG: (local) Server->Client ciphers: "
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "ALGORITHMS"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "CIPHER"
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "Identifier",
                      "name": "debug"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "debug"
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "Literal",
                            "value": "DEBUG: (remote) Server->Client ciphers: "
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "init"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "algorithms"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "sc"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "encrypt"
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ForStatement",
                  "init": {
                    "type": "SequenceExpression",
                    "expressions": [
                      {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "i"
                        },
                        "right": {
                          "type": "Literal",
                          "value": 0
                        }
                      },
                      {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "len"
                        },
                        "right": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "ALGORITHMS"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "CIPHER"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "length"
                          }
                        }
                      }
                    ]
                  },
                  "test": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "BinaryExpression",
                      "operator": "<",
                      "left": {
                        "type": "Identifier",
                        "name": "i"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "len"
                      }
                    },
                    "right": {
                      "type": "BinaryExpression",
                      "operator": "===",
                      "left": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "init"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "algorithms"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "sc"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "encrypt"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "indexOf"
                          }
                        },
                        "arguments": [
                          {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "ALGORITHMS"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "CIPHER"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "i"
                            }
                          }
                        ]
                      },
                      "right": {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                          "type": "Literal",
                          "value": 1
                        },
                        "prefix": true
                      }
                    }
                  },
                  "update": {
                    "type": "UpdateExpression",
                    "operator": "++",
                    "argument": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "prefix": true
                  },
                  "body": {
                    "type": "EmptyStatement"
                  }
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "operator": "===",
                    "left": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "len"
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "LogicalExpression",
                          "operator": "&&",
                          "left": {
                            "type": "Identifier",
                            "name": "debug"
                          },
                          "right": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "debug"
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "DEBUG: No matching Server->Client cipher"
                              }
                            ]
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "self"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_parser"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "reset"
                            }
                          },
                          "arguments": []
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "self"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_disconnect"
                            }
                          },
                          "arguments": [
                            {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "DISCONNECT_REASON"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "KEY_EXCHANGE_FAILED"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": null
                      }
                    ]
                  },
                  "alternate": null
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "self"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "_parser"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_decryptType"
                      }
                    },
                    "right": {
                      "type": "MemberExpression",
                      "computed": true,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "ALGORITHMS"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "CIPHER"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "i"
                      }
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "Identifier",
                      "name": "debug"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "debug"
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "Literal",
                            "value": "DEBUG: Connection: Server->Client Cipher: "
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "self"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_parser"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_decryptType"
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "Identifier",
                      "name": "debug"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "debug"
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "Literal",
                            "value": "DEBUG: (local) Client->Server ciphers: "
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "ALGORITHMS"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "CIPHER"
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "Identifier",
                      "name": "debug"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "debug"
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "Literal",
                            "value": "DEBUG: (remote) Client->Server ciphers: "
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "init"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "algorithms"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "cs"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "encrypt"
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ForStatement",
                  "init": {
                    "type": "SequenceExpression",
                    "expressions": [
                      {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "i"
                        },
                        "right": {
                          "type": "Literal",
                          "value": 0
                        }
                      },
                      {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "len"
                        },
                        "right": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "ALGORITHMS"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "CIPHER"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "length"
                          }
                        }
                      }
                    ]
                  },
                  "test": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "BinaryExpression",
                      "operator": "<",
                      "left": {
                        "type": "Identifier",
                        "name": "i"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "len"
                      }
                    },
                    "right": {
                      "type": "BinaryExpression",
                      "operator": "===",
                      "left": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "init"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "algorithms"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "cs"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "encrypt"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "indexOf"
                          }
                        },
                        "arguments": [
                          {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "ALGORITHMS"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "CIPHER"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "i"
                            }
                          }
                        ]
                      },
                      "right": {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                          "type": "Literal",
                          "value": 1
                        },
                        "prefix": true
                      }
                    }
                  },
                  "update": {
                    "type": "UpdateExpression",
                    "operator": "++",
                    "argument": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "prefix": true
                  },
                  "body": {
                    "type": "EmptyStatement"
                  }
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "operator": "===",
                    "left": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "len"
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "LogicalExpression",
                          "operator": "&&",
                          "left": {
                            "type": "Identifier",
                            "name": "debug"
                          },
                          "right": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "debug"
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "DEBUG: No matching Client->Server cipher"
                              }
                            ]
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "self"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_parser"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "reset"
                            }
                          },
                          "arguments": []
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "self"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_disconnect"
                            }
                          },
                          "arguments": [
                            {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "DISCONNECT_REASON"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "KEY_EXCHANGE_FAILED"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": null
                      }
                    ]
                  },
                  "alternate": null
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "self"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_encryptType"
                      }
                    },
                    "right": {
                      "type": "MemberExpression",
                      "computed": true,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "ALGORITHMS"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "CIPHER"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "i"
                      }
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "Identifier",
                      "name": "debug"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "debug"
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "Literal",
                            "value": "DEBUG: Connection: Client->Server Cipher: "
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "self"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_encryptType"
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "Identifier",
                      "name": "debug"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "debug"
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "Literal",
                            "value": "DEBUG: (local) KEX algorithms: "
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "ALGORITHMS"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "KEX"
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "Identifier",
                      "name": "debug"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "debug"
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "Literal",
                            "value": "DEBUG: (remote) KEX algorithms: "
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "init"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "algorithms"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "kex"
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ForStatement",
                  "init": {
                    "type": "SequenceExpression",
                    "expressions": [
                      {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "i"
                        },
                        "right": {
                          "type": "Literal",
                          "value": 0
                        }
                      },
                      {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "len"
                        },
                        "right": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "ALGORITHMS"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "KEX"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "length"
                          }
                        }
                      }
                    ]
                  },
                  "test": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "BinaryExpression",
                      "operator": "<",
                      "left": {
                        "type": "Identifier",
                        "name": "i"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "len"
                      }
                    },
                    "right": {
                      "type": "BinaryExpression",
                      "operator": "===",
                      "left": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "init"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "algorithms"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "kex"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "indexOf"
                          }
                        },
                        "arguments": [
                          {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "ALGORITHMS"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "KEX"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "i"
                            }
                          }
                        ]
                      },
                      "right": {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                          "type": "Literal",
                          "value": 1
                        },
                        "prefix": true
                      }
                    }
                  },
                  "update": {
                    "type": "UpdateExpression",
                    "operator": "++",
                    "argument": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "prefix": true
                  },
                  "body": {
                    "type": "EmptyStatement"
                  }
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "operator": "===",
                    "left": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "len"
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "LogicalExpression",
                          "operator": "&&",
                          "left": {
                            "type": "Identifier",
                            "name": "debug"
                          },
                          "right": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "debug"
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "DEBUG: No matching KEX"
                              }
                            ]
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "self"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_parser"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "reset"
                            }
                          },
                          "arguments": []
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "self"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_disconnect"
                            }
                          },
                          "arguments": [
                            {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "DISCONNECT_REASON"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "KEY_EXCHANGE_FAILED"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": null
                      }
                    ]
                  },
                  "alternate": null
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "kex_algorithm"
                      },
                      "init": {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "ALGORITHMS"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "KEX"
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "i"
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "Identifier",
                      "name": "debug"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "debug"
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "Literal",
                            "value": "DEBUG: Connection: KEX: "
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "kex_algorithm"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "Identifier",
                      "name": "debug"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "debug"
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "Literal",
                            "value": "DEBUG: (local) Client->Server HMAC algorithms: "
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "ALGORITHMS"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "HMAC"
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "Identifier",
                      "name": "debug"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "debug"
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "Literal",
                            "value": "DEBUG: (remote) Client->Server HMAC algorithms: "
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "init"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "algorithms"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "cs"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "mac"
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ForStatement",
                  "init": {
                    "type": "SequenceExpression",
                    "expressions": [
                      {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "i"
                        },
                        "right": {
                          "type": "Literal",
                          "value": 0
                        }
                      },
                      {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "len"
                        },
                        "right": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "ALGORITHMS"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "HMAC"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "length"
                          }
                        }
                      }
                    ]
                  },
                  "test": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "BinaryExpression",
                      "operator": "<",
                      "left": {
                        "type": "Identifier",
                        "name": "i"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "len"
                      }
                    },
                    "right": {
                      "type": "BinaryExpression",
                      "operator": "===",
                      "left": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "init"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "algorithms"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "cs"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "mac"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "indexOf"
                          }
                        },
                        "arguments": [
                          {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "ALGORITHMS"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "HMAC"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "i"
                            }
                          }
                        ]
                      },
                      "right": {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                          "type": "Literal",
                          "value": 1
                        },
                        "prefix": true
                      }
                    }
                  },
                  "update": {
                    "type": "UpdateExpression",
                    "operator": "++",
                    "argument": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "prefix": true
                  },
                  "body": {
                    "type": "EmptyStatement"
                  }
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "operator": "===",
                    "left": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "len"
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "LogicalExpression",
                          "operator": "&&",
                          "left": {
                            "type": "Identifier",
                            "name": "debug"
                          },
                          "right": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "debug"
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "DEBUG: No matching Client->Server HMAC"
                              }
                            ]
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "self"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_parser"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "reset"
                            }
                          },
                          "arguments": []
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "self"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_disconnect"
                            }
                          },
                          "arguments": [
                            {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "DISCONNECT_REASON"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "KEY_EXCHANGE_FAILED"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": null
                      }
                    ]
                  },
                  "alternate": null
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "self"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_hmac"
                      }
                    },
                    "right": {
                      "type": "MemberExpression",
                      "computed": true,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "ALGORITHMS"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "HMAC"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "i"
                      }
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "Identifier",
                      "name": "debug"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "debug"
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "Literal",
                            "value": "DEBUG: Connection: Client->Server HMAC: "
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "self"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_hmac"
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "Identifier",
                      "name": "debug"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "debug"
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "Literal",
                            "value": "DEBUG: (local) Server->Client HMAC algorithms: "
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "ALGORITHMS"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "HMAC"
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "Identifier",
                      "name": "debug"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "debug"
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "Literal",
                            "value": "DEBUG: (remote) Server->Client HMAC algorithms: "
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "init"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "algorithms"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "sc"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "mac"
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ForStatement",
                  "init": {
                    "type": "SequenceExpression",
                    "expressions": [
                      {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "i"
                        },
                        "right": {
                          "type": "Literal",
                          "value": 0
                        }
                      },
                      {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "len"
                        },
                        "right": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "ALGORITHMS"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "HMAC"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "length"
                          }
                        }
                      }
                    ]
                  },
                  "test": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "BinaryExpression",
                      "operator": "<",
                      "left": {
                        "type": "Identifier",
                        "name": "i"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "len"
                      }
                    },
                    "right": {
                      "type": "BinaryExpression",
                      "operator": "===",
                      "left": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "init"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "algorithms"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "sc"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "mac"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "indexOf"
                          }
                        },
                        "arguments": [
                          {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "ALGORITHMS"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "HMAC"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "i"
                            }
                          }
                        ]
                      },
                      "right": {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                          "type": "Literal",
                          "value": 1
                        },
                        "prefix": true
                      }
                    }
                  },
                  "update": {
                    "type": "UpdateExpression",
                    "operator": "++",
                    "argument": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "prefix": true
                  },
                  "body": {
                    "type": "EmptyStatement"
                  }
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "operator": "===",
                    "left": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "len"
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "LogicalExpression",
                          "operator": "&&",
                          "left": {
                            "type": "Identifier",
                            "name": "debug"
                          },
                          "right": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "debug"
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "DEBUG: No matching Server->Client HMAC"
                              }
                            ]
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "self"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_parser"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "reset"
                            }
                          },
                          "arguments": []
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "self"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_disconnect"
                            }
                          },
                          "arguments": [
                            {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "DISCONNECT_REASON"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "KEY_EXCHANGE_FAILED"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": null
                      }
                    ]
                  },
                  "alternate": null
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "self"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "_parser"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_hmac"
                      }
                    },
                    "right": {
                      "type": "MemberExpression",
                      "computed": true,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "ALGORITHMS"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "HMAC"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "i"
                      }
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "Identifier",
                      "name": "debug"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "debug"
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "Literal",
                            "value": "DEBUG: Connection: Server->Client HMAC: "
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "self"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_parser"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_hmac"
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "Identifier",
                      "name": "debug"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "debug"
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "Literal",
                            "value": "DEBUG: (local) Client->Server compression algorithms: "
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "ALGORITHMS"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "COMPRESS"
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "Identifier",
                      "name": "debug"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "debug"
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "Literal",
                            "value": "DEBUG: (remote) Client->Server compression algorithms: "
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "init"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "algorithms"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "cs"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "compress"
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ForStatement",
                  "init": {
                    "type": "SequenceExpression",
                    "expressions": [
                      {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "i"
                        },
                        "right": {
                          "type": "Literal",
                          "value": 0
                        }
                      },
                      {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "len"
                        },
                        "right": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "ALGORITHMS"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "COMPRESS"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "length"
                          }
                        }
                      }
                    ]
                  },
                  "test": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "BinaryExpression",
                      "operator": "<",
                      "left": {
                        "type": "Identifier",
                        "name": "i"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "len"
                      }
                    },
                    "right": {
                      "type": "BinaryExpression",
                      "operator": "===",
                      "left": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "init"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "algorithms"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "cs"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "compress"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "indexOf"
                          }
                        },
                        "arguments": [
                          {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "ALGORITHMS"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "COMPRESS"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "i"
                            }
                          }
                        ]
                      },
                      "right": {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                          "type": "Literal",
                          "value": 1
                        },
                        "prefix": true
                      }
                    }
                  },
                  "update": {
                    "type": "UpdateExpression",
                    "operator": "++",
                    "argument": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "prefix": true
                  },
                  "body": {
                    "type": "EmptyStatement"
                  }
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "operator": "===",
                    "left": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "len"
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "LogicalExpression",
                          "operator": "&&",
                          "left": {
                            "type": "Identifier",
                            "name": "debug"
                          },
                          "right": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "debug"
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "DEBUG: No matching Client->Server compression"
                              }
                            ]
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "self"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_parser"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "reset"
                            }
                          },
                          "arguments": []
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "self"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_disconnect"
                            }
                          },
                          "arguments": [
                            {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "DISCONNECT_REASON"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "KEY_EXCHANGE_FAILED"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": null
                      }
                    ]
                  },
                  "alternate": null
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "self"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_compressType"
                      }
                    },
                    "right": {
                      "type": "MemberExpression",
                      "computed": true,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "ALGORITHMS"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "COMPRESS"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "i"
                      }
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "Identifier",
                      "name": "debug"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "debug"
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "Literal",
                            "value": "DEBUG: Connection: Client->Server Compression: "
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "self"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_compressType"
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "Identifier",
                      "name": "debug"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "debug"
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "Literal",
                            "value": "DEBUG: (local) Server->Client compression algorithms: "
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "ALGORITHMS"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "COMPRESS"
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "Identifier",
                      "name": "debug"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "debug"
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "Literal",
                            "value": "DEBUG: (remote) Server->Client compression algorithms: "
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "init"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "algorithms"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "sc"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "compress"
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ForStatement",
                  "init": {
                    "type": "SequenceExpression",
                    "expressions": [
                      {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "i"
                        },
                        "right": {
                          "type": "Literal",
                          "value": 0
                        }
                      },
                      {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "len"
                        },
                        "right": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "ALGORITHMS"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "COMPRESS"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "length"
                          }
                        }
                      }
                    ]
                  },
                  "test": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "BinaryExpression",
                      "operator": "<",
                      "left": {
                        "type": "Identifier",
                        "name": "i"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "len"
                      }
                    },
                    "right": {
                      "type": "BinaryExpression",
                      "operator": "===",
                      "left": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "init"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "algorithms"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "sc"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "compress"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "indexOf"
                          }
                        },
                        "arguments": [
                          {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "ALGORITHMS"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "COMPRESS"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "i"
                            }
                          }
                        ]
                      },
                      "right": {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                          "type": "Literal",
                          "value": 1
                        },
                        "prefix": true
                      }
                    }
                  },
                  "update": {
                    "type": "UpdateExpression",
                    "operator": "++",
                    "argument": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "prefix": true
                  },
                  "body": {
                    "type": "EmptyStatement"
                  }
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "operator": "===",
                    "left": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "len"
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "LogicalExpression",
                          "operator": "&&",
                          "left": {
                            "type": "Identifier",
                            "name": "debug"
                          },
                          "right": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "debug"
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "DEBUG: No matching Server->Client compression"
                              }
                            ]
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "self"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_parser"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "reset"
                            }
                          },
                          "arguments": []
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "self"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_disconnect"
                            }
                          },
                          "arguments": [
                            {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "DISCONNECT_REASON"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "KEY_EXCHANGE_FAILED"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": null
                      }
                    ]
                  },
                  "alternate": null
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "self"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "_parser"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_compressType"
                      }
                    },
                    "right": {
                      "type": "MemberExpression",
                      "computed": true,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "ALGORITHMS"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "COMPRESS"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "i"
                      }
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "Identifier",
                      "name": "debug"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "debug"
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "Literal",
                            "value": "DEBUG: Connection: Server->Client Compression: "
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "self"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_parser"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_compressType"
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "Identifier",
                      "name": "debug"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "debug"
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "Literal",
                            "value": "DEBUG: (local) Host key formats: "
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "ALGORITHMS"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "SERVER_HOST_KEY"
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "Identifier",
                      "name": "debug"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "debug"
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "Literal",
                            "value": "DEBUG: (remote) Host key formats: "
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "init"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "algorithms"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "srvHostKey"
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ForStatement",
                  "init": {
                    "type": "SequenceExpression",
                    "expressions": [
                      {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "i"
                        },
                        "right": {
                          "type": "Literal",
                          "value": 0
                        }
                      },
                      {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "len"
                        },
                        "right": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "ALGORITHMS"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "SERVER_HOST_KEY"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "length"
                          }
                        }
                      }
                    ]
                  },
                  "test": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "BinaryExpression",
                      "operator": "<",
                      "left": {
                        "type": "Identifier",
                        "name": "i"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "len"
                      }
                    },
                    "right": {
                      "type": "BinaryExpression",
                      "operator": "===",
                      "left": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "init"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "algorithms"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "srvHostKey"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "indexOf"
                          }
                        },
                        "arguments": [
                          {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "ALGORITHMS"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "SERVER_HOST_KEY"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "i"
                            }
                          }
                        ]
                      },
                      "right": {
                        "type": "UnaryExpression",
                        "operator": "-",
                        "argument": {
                          "type": "Literal",
                          "value": 1
                        },
                        "prefix": true
                      }
                    }
                  },
                  "update": {
                    "type": "UpdateExpression",
                    "operator": "++",
                    "argument": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "prefix": true
                  },
                  "body": {
                    "type": "EmptyStatement"
                  }
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "operator": "===",
                    "left": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "len"
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "LogicalExpression",
                          "operator": "&&",
                          "left": {
                            "type": "Identifier",
                            "name": "debug"
                          },
                          "right": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "debug"
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "DEBUG: No matching host key format"
                              }
                            ]
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "self"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_parser"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "reset"
                            }
                          },
                          "arguments": []
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "self"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_disconnect"
                            }
                          },
                          "arguments": [
                            {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "DISCONNECT_REASON"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "KEY_EXCHANGE_FAILED"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": null
                      }
                    ]
                  },
                  "alternate": null
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "self"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_hostkey_format"
                      }
                    },
                    "right": {
                      "type": "MemberExpression",
                      "computed": true,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "ALGORITHMS"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "SERVER_HOST_KEY"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "i"
                      }
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "Identifier",
                      "name": "debug"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "debug"
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "Literal",
                            "value": "DEBUG: Connection: Host key format: "
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "self"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_hostkey_format"
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "operator": "===",
                    "left": {
                      "type": "Identifier",
                      "name": "kex_algorithm"
                    },
                    "right": {
                      "type": "Literal",
                      "value": "diffie-hellman-group1-sha1"
                    }
                  },
                  "consequent": {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "AssignmentExpression",
                      "operator": "=",
                      "left": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "self"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "_kex"
                        }
                      },
                      "right": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "crypto"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "getDiffieHellman"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "modp2"
                          }
                        ]
                      }
                    }
                  },
                  "alternate": {
                    "type": "IfStatement",
                    "test": {
                      "type": "BinaryExpression",
                      "operator": "===",
                      "left": {
                        "type": "Identifier",
                        "name": "kex_algorithm"
                      },
                      "right": {
                        "type": "Literal",
                        "value": "diffie-hellman-group14-sha1"
                      }
                    },
                    "consequent": {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "self"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "_kex"
                          }
                        },
                        "right": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "crypto"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "getDiffieHellman"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "modp14"
                            }
                          ]
                        }
                      }
                    },
                    "alternate": null
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "self"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_pubkey"
                      }
                    },
                    "right": {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Buffer"
                      },
                      "arguments": [
                        {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "self"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_kex"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "generateKeys"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "binary"
                            }
                          ]
                        },
                        {
                          "type": "Literal",
                          "value": "binary"
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "operator": "&",
                    "left": {
                      "type": "MemberExpression",
                      "computed": true,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "self"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "_pubkey"
                        }
                      },
                      "property": {
                        "type": "Literal",
                        "value": 0
                      }
                    },
                    "right": {
                      "type": "Literal",
                      "value": 128
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "key"
                            },
                            "init": {
                              "type": "NewExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "Buffer"
                              },
                              "arguments": [
                                {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "self"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "_pubkey"
                                      }
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "length"
                                    }
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": 1
                                  }
                                }
                              ]
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                              "type": "Identifier",
                              "name": "key"
                            },
                            "property": {
                              "type": "Literal",
                              "value": 0
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": 0
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "self"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_pubkey"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "copy"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "key"
                            },
                            {
                              "type": "Literal",
                              "value": 1
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "self"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_pubkey"
                            }
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "key"
                          }
                        }
                      }
                    ]
                  },
                  "alternate": null
                },
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "Literal",
                    "value": true
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          },
          {
            "type": "FunctionDeclaration",
            "id": {
              "type": "Identifier",
              "name": "sendKEXDHInit"
            },
            "params": [],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "bufDHInit"
                      },
                      "init": {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Buffer"
                        },
                        "arguments": [
                          {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "Literal",
                                "value": 1
                              },
                              "right": {
                                "type": "Literal",
                                "value": 4
                              }
                            },
                            "right": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "self"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "_pubkey"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "length"
                              }
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": true,
                      "object": {
                        "type": "Identifier",
                        "name": "bufDHInit"
                      },
                      "property": {
                        "type": "Literal",
                        "value": 0
                      }
                    },
                    "right": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "MESSAGE"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "KEXDH_INIT"
                      }
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "bufDHInit"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "writeUInt32BE"
                      }
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "self"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "_pubkey"
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "length"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": 1
                      },
                      {
                        "type": "Literal",
                        "value": true
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "self"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "_pubkey"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "copy"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "bufDHInit"
                      },
                      {
                        "type": "Literal",
                        "value": 5
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "self"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_debug"
                      }
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "self"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "_debug"
                        }
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "DEBUG: Connection: Sent KEXDH_INIT"
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "self"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_send"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "bufDHInit"
                      }
                    ]
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "ThisExpression"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "_parser"
                  }
                },
                "property": {
                  "type": "Identifier",
                  "name": "on"
                }
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "KEXINIT"
                },
                {
                  "type": "FunctionExpression",
                  "id": null,
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "init"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "waitForSend"
                            },
                            "init": {
                              "type": "BinaryExpression",
                              "operator": "===",
                              "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "self"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "_kexinit"
                                }
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "undefined"
                              }
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "BinaryExpression",
                          "operator": "===",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "self"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_state"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "authenticated"
                          }
                        },
                        "consequent": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "self"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "_state"
                                  }
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": "reexchg"
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "self"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "_kexinit"
                                  }
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "undefined"
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "sendKEXInit"
                                },
                                "arguments": []
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "waitForSend"
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": true
                                }
                              }
                            }
                          ]
                        },
                        "alternate": null
                      },
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "Identifier",
                          "name": "waitForSend"
                        },
                        "consequent": {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "self"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "once"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "_sentKEXInit"
                              },
                              {
                                "type": "Identifier",
                                "name": "doCheck"
                              }
                            ]
                          }
                        },
                        "alternate": {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "doCheck"
                            },
                            "arguments": []
                          }
                        }
                      },
                      {
                        "type": "FunctionDeclaration",
                        "id": {
                          "type": "Identifier",
                          "name": "doCheck"
                        },
                        "params": [],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "IfStatement",
                              "test": {
                                "type": "BinaryExpression",
                                "operator": "===",
                                "left": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "checkSKEXInit"
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "init"
                                    }
                                  ]
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": true
                                }
                              },
                              "consequent": {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "sendKEXDHInit"
                                  },
                                  "arguments": []
                                }
                              },
                              "alternate": null
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "ThisExpression"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "_parser"
                  }
                },
                "property": {
                  "type": "Identifier",
                  "name": "on"
                }
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "KEXDH_REPLY"
                },
                {
                  "type": "FunctionExpression",
                  "id": null,
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "info"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "i"
                            },
                            "init": null
                          },
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "len"
                            },
                            "init": null
                          },
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "debug"
                            },
                            "init": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "self"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_debug"
                              }
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "LogicalExpression",
                          "operator": "&&",
                          "left": {
                            "type": "Identifier",
                            "name": "debug"
                          },
                          "right": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "debug"
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "DEBUG: Connection: Checking host key format"
                              }
                            ]
                          }
                        }
                      },
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "LogicalExpression",
                          "operator": "||",
                          "left": {
                            "type": "BinaryExpression",
                            "operator": "!==",
                            "left": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "info"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "hostkey_format"
                              }
                            },
                            "right": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "self"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_hostkey_format"
                              }
                            }
                          },
                          "right": {
                            "type": "BinaryExpression",
                            "operator": "!==",
                            "left": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "info"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "hostkey_format"
                              }
                            },
                            "right": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "Parser"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "readString"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "info"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "hostkey"
                                  }
                                },
                                {
                                  "type": "Literal",
                                  "value": 0
                                },
                                {
                                  "type": "Literal",
                                  "value": "ascii"
                                }
                              ]
                            }
                          }
                        },
                        "consequent": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "LogicalExpression",
                                "operator": "&&",
                                "left": {
                                  "type": "Identifier",
                                  "name": "debug"
                                },
                                "right": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "debug"
                                  },
                                  "arguments": [
                                    {
                                      "type": "Literal",
                                      "value": "DEBUG: Host key format mismatch"
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "self"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "_parser"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "reset"
                                  }
                                },
                                "arguments": []
                              }
                            },
                            {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "self"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "_disconnect"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "DISCONNECT_REASON"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "KEY_EXCHANGE_FAILED"
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "alternate": null
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "LogicalExpression",
                          "operator": "&&",
                          "left": {
                            "type": "Identifier",
                            "name": "debug"
                          },
                          "right": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "debug"
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "DEBUG: Connection: Checking signature format"
                              }
                            ]
                          }
                        }
                      },
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "BinaryExpression",
                          "operator": "!==",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "info"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "sig_format"
                            }
                          },
                          "right": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "Parser"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "readString"
                              }
                            },
                            "arguments": [
                              {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "info"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "sig"
                                }
                              },
                              {
                                "type": "Literal",
                                "value": 0
                              },
                              {
                                "type": "Literal",
                                "value": "ascii"
                              }
                            ]
                          }
                        },
                        "consequent": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "LogicalExpression",
                                "operator": "&&",
                                "left": {
                                  "type": "Identifier",
                                  "name": "debug"
                                },
                                "right": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "debug"
                                  },
                                  "arguments": [
                                    {
                                      "type": "Literal",
                                      "value": "DEBUG: Signature format mismatch"
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "self"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "_parser"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "reset"
                                  }
                                },
                                "arguments": []
                              }
                            },
                            {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "self"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "_disconnect"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "DISCONNECT_REASON"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "KEY_EXCHANGE_FAILED"
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "alternate": null
                      },
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "LogicalExpression",
                          "operator": "&&",
                          "left": {
                            "type": "LogicalExpression",
                            "operator": "&&",
                            "left": {
                              "type": "BinaryExpression",
                              "operator": "===",
                              "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "self"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "_state"
                                }
                              },
                              "right": {
                                "type": "Literal",
                                "value": "initexchg"
                              }
                            },
                            "right": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "self"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_fingerprint"
                              }
                            }
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "self"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_cbfingerprint"
                            }
                          }
                        },
                        "consequent": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "LogicalExpression",
                                "operator": "&&",
                                "left": {
                                  "type": "Identifier",
                                  "name": "debug"
                                },
                                "right": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "debug"
                                  },
                                  "arguments": [
                                    {
                                      "type": "Literal",
                                      "value": "DEBUG: Connection: Verifying host fingerprint"
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "type": "VariableDeclaration",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "hostHash"
                                  },
                                  "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "crypto"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "createHash"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "self"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "_fingerprint"
                                        }
                                      }
                                    ]
                                  }
                                }
                              ],
                              "kind": "var"
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "hostHash"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "update"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "info"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "hostkey"
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "type": "IfStatement",
                              "test": {
                                "type": "UnaryExpression",
                                "operator": "!",
                                "argument": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "self"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "_cbfingerprint"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "hostHash"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "digest"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "hex"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "prefix": true
                              },
                              "consequent": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "LogicalExpression",
                                      "operator": "&&",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "debug"
                                      },
                                      "right": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "Identifier",
                                          "name": "debug"
                                        },
                                        "arguments": [
                                          {
                                            "type": "Literal",
                                            "value": "DEBUG: Fingerprint callback returned false"
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "self"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "_parser"
                                          }
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "reset"
                                        }
                                      },
                                      "arguments": []
                                    }
                                  },
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "self"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "_disconnect"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "DISCONNECT_REASON"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "KEY_EXCHANGE_FAILED"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "alternate": null
                            }
                          ]
                        },
                        "alternate": null
                      },
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "slicepos"
                            },
                            "init": {
                              "type": "UnaryExpression",
                              "operator": "-",
                              "argument": {
                                "type": "Literal",
                                "value": 1
                              },
                              "prefix": true
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "ForStatement",
                        "init": {
                          "type": "SequenceExpression",
                          "expressions": [
                            {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "i"
                              },
                              "right": {
                                "type": "Literal",
                                "value": 0
                              }
                            },
                            {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "len"
                              },
                              "right": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "info"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "pubkey"
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "length"
                                }
                              }
                            }
                          ]
                        },
                        "test": {
                          "type": "BinaryExpression",
                          "operator": "<",
                          "left": {
                            "type": "Identifier",
                            "name": "i"
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "len"
                          }
                        },
                        "update": {
                          "type": "UpdateExpression",
                          "operator": "++",
                          "argument": {
                            "type": "Identifier",
                            "name": "i"
                          },
                          "prefix": true
                        },
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "IfStatement",
                              "test": {
                                "type": "BinaryExpression",
                                "operator": "===",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": true,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "info"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "pubkey"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "i"
                                  }
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": 0
                                }
                              },
                              "consequent": {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "UpdateExpression",
                                  "operator": "++",
                                  "argument": {
                                    "type": "Identifier",
                                    "name": "slicepos"
                                  },
                                  "prefix": true
                                }
                              },
                              "alternate": {
                                "type": "BreakStatement",
                                "label": null
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "BinaryExpression",
                          "operator": ">",
                          "left": {
                            "type": "Identifier",
                            "name": "slicepos"
                          },
                          "right": {
                            "type": "UnaryExpression",
                            "operator": "-",
                            "argument": {
                              "type": "Literal",
                              "value": 1
                            },
                            "prefix": true
                          }
                        },
                        "consequent": {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "info"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "pubkey"
                              }
                            },
                            "right": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "info"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "pubkey"
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "slice"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "slicepos"
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": 1
                                  }
                                }
                              ]
                            }
                          }
                        },
                        "alternate": null
                      },
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "compSecret"
                            },
                            "init": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "self"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "_kex"
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "computeSecret"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "info"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "pubkey"
                                  }
                                },
                                {
                                  "type": "Literal",
                                  "value": "binary"
                                },
                                {
                                  "type": "Literal",
                                  "value": "binary"
                                }
                              ]
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "info"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "secret"
                            }
                          },
                          "right": {
                            "type": "NewExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "Buffer"
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "compSecret"
                              },
                              {
                                "type": "Literal",
                                "value": "binary"
                              }
                            ]
                          }
                        }
                      },
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "hash"
                            },
                            "init": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "crypto"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "createHash"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "sha1"
                                }
                              ]
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "len_ident"
                            },
                            "init": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "Buffer"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "byteLength"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "SSH_IDENT"
                                }
                              ]
                            }
                          },
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "len_sident"
                            },
                            "init": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "Buffer"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "byteLength"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "self"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "_server_ident_raw"
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "len_init"
                            },
                            "init": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "self"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "_kexinit"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "length"
                              }
                            }
                          },
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "len_sinit"
                            },
                            "init": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "self"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "_parser"
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "_kexinit"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "length"
                              }
                            }
                          },
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "len_hostkey"
                            },
                            "init": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "info"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "hostkey"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "length"
                              }
                            }
                          },
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "len_pubkey"
                            },
                            "init": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "self"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "_pubkey"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "length"
                              }
                            }
                          },
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "len_spubkey"
                            },
                            "init": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "info"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "pubkey"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "length"
                              }
                            }
                          },
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "len_secret"
                            },
                            "init": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "info"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "secret"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "length"
                              }
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "BinaryExpression",
                          "operator": "&",
                          "left": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "self"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_pubkey"
                              }
                            },
                            "property": {
                              "type": "Literal",
                              "value": 0
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": 128
                          }
                        },
                        "consequent": {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "UpdateExpression",
                            "operator": "++",
                            "argument": {
                              "type": "Identifier",
                              "name": "len_pubkey"
                            },
                            "prefix": true
                          }
                        },
                        "alternate": null
                      },
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "BinaryExpression",
                          "operator": "&",
                          "left": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "info"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "pubkey"
                              }
                            },
                            "property": {
                              "type": "Literal",
                              "value": 0
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": 128
                          }
                        },
                        "consequent": {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "UpdateExpression",
                            "operator": "++",
                            "argument": {
                              "type": "Identifier",
                              "name": "len_spubkey"
                            },
                            "prefix": true
                          }
                        },
                        "alternate": null
                      },
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "BinaryExpression",
                          "operator": "&",
                          "left": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "info"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "secret"
                              }
                            },
                            "property": {
                              "type": "Literal",
                              "value": 0
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": 128
                          }
                        },
                        "consequent": {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "UpdateExpression",
                            "operator": "++",
                            "argument": {
                              "type": "Identifier",
                              "name": "len_secret"
                            },
                            "prefix": true
                          }
                        },
                        "alternate": null
                      },
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "bp"
                            },
                            "init": {
                              "type": "Literal",
                              "value": 0
                            }
                          },
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "exchangeBuf"
                            },
                            "init": {
                              "type": "NewExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "Buffer"
                              },
                              "arguments": [
                                {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                      "type": "BinaryExpression",
                                      "operator": "+",
                                      "left": {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                          "type": "BinaryExpression",
                                          "operator": "+",
                                          "left": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "len_ident"
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "len_sident"
                                                }
                                              },
                                              "right": {
                                                "type": "Identifier",
                                                "name": "len_init"
                                              }
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "len_sinit"
                                            }
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "len_hostkey"
                                          }
                                        },
                                        "right": {
                                          "type": "Identifier",
                                          "name": "len_pubkey"
                                        }
                                      },
                                      "right": {
                                        "type": "Identifier",
                                        "name": "len_spubkey"
                                      }
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "len_secret"
                                    }
                                  },
                                  "right": {
                                    "type": "BinaryExpression",
                                    "operator": "*",
                                    "left": {
                                      "type": "Literal",
                                      "value": 4
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": 8
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "exchangeBuf"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "writeUInt32BE"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "len_ident"
                            },
                            {
                              "type": "Identifier",
                              "name": "bp"
                            },
                            {
                              "type": "Literal",
                              "value": true
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "+=",
                          "left": {
                            "type": "Identifier",
                            "name": "bp"
                          },
                          "right": {
                            "type": "Literal",
                            "value": 4
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "exchangeBuf"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "write"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "SSH_IDENT"
                            },
                            {
                              "type": "Identifier",
                              "name": "bp"
                            },
                            {
                              "type": "Literal",
                              "value": "utf8"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "+=",
                          "left": {
                            "type": "Identifier",
                            "name": "bp"
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "len_ident"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "exchangeBuf"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "writeUInt32BE"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "len_sident"
                            },
                            {
                              "type": "Identifier",
                              "name": "bp"
                            },
                            {
                              "type": "Literal",
                              "value": true
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "+=",
                          "left": {
                            "type": "Identifier",
                            "name": "bp"
                          },
                          "right": {
                            "type": "Literal",
                            "value": 4
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "exchangeBuf"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "write"
                            }
                          },
                          "arguments": [
                            {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "self"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_server_ident_raw"
                              }
                            },
                            {
                              "type": "Identifier",
                              "name": "bp"
                            },
                            {
                              "type": "Literal",
                              "value": "utf8"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "+=",
                          "left": {
                            "type": "Identifier",
                            "name": "bp"
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "len_sident"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "exchangeBuf"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "writeUInt32BE"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "len_init"
                            },
                            {
                              "type": "Identifier",
                              "name": "bp"
                            },
                            {
                              "type": "Literal",
                              "value": true
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "+=",
                          "left": {
                            "type": "Identifier",
                            "name": "bp"
                          },
                          "right": {
                            "type": "Literal",
                            "value": 4
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "self"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_kexinit"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "copy"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "exchangeBuf"
                            },
                            {
                              "type": "Identifier",
                              "name": "bp"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "+=",
                          "left": {
                            "type": "Identifier",
                            "name": "bp"
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "len_init"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "exchangeBuf"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "writeUInt32BE"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "len_sinit"
                            },
                            {
                              "type": "Identifier",
                              "name": "bp"
                            },
                            {
                              "type": "Literal",
                              "value": true
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "+=",
                          "left": {
                            "type": "Identifier",
                            "name": "bp"
                          },
                          "right": {
                            "type": "Literal",
                            "value": 4
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "self"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "_parser"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_kexinit"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "copy"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "exchangeBuf"
                            },
                            {
                              "type": "Identifier",
                              "name": "bp"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "+=",
                          "left": {
                            "type": "Identifier",
                            "name": "bp"
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "len_sinit"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "exchangeBuf"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "writeUInt32BE"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "len_hostkey"
                            },
                            {
                              "type": "Identifier",
                              "name": "bp"
                            },
                            {
                              "type": "Literal",
                              "value": true
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "+=",
                          "left": {
                            "type": "Identifier",
                            "name": "bp"
                          },
                          "right": {
                            "type": "Literal",
                            "value": 4
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "info"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "hostkey"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "copy"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "exchangeBuf"
                            },
                            {
                              "type": "Identifier",
                              "name": "bp"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "+=",
                          "left": {
                            "type": "Identifier",
                            "name": "bp"
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "len_hostkey"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "exchangeBuf"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "writeUInt32BE"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "len_pubkey"
                            },
                            {
                              "type": "Identifier",
                              "name": "bp"
                            },
                            {
                              "type": "Literal",
                              "value": true
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "+=",
                          "left": {
                            "type": "Identifier",
                            "name": "bp"
                          },
                          "right": {
                            "type": "Literal",
                            "value": 4
                          }
                        }
                      },
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "BinaryExpression",
                          "operator": "&",
                          "left": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "self"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_pubkey"
                              }
                            },
                            "property": {
                              "type": "Literal",
                              "value": 0
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": 128
                          }
                        },
                        "consequent": {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                              "type": "MemberExpression",
                              "computed": true,
                              "object": {
                                "type": "Identifier",
                                "name": "exchangeBuf"
                              },
                              "property": {
                                "type": "UpdateExpression",
                                "operator": "++",
                                "argument": {
                                  "type": "Identifier",
                                  "name": "bp"
                                },
                                "prefix": false
                              }
                            },
                            "right": {
                              "type": "Literal",
                              "value": 0
                            }
                          }
                        },
                        "alternate": null
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "self"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_pubkey"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "copy"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "exchangeBuf"
                            },
                            {
                              "type": "Identifier",
                              "name": "bp"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "+=",
                          "left": {
                            "type": "Identifier",
                            "name": "bp"
                          },
                          "right": {
                            "type": "BinaryExpression",
                            "operator": "-",
                            "left": {
                              "type": "Identifier",
                              "name": "len_pubkey"
                            },
                            "right": {
                              "type": "ConditionalExpression",
                              "test": {
                                "type": "BinaryExpression",
                                "operator": "&",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": true,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "self"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "_pubkey"
                                    }
                                  },
                                  "property": {
                                    "type": "Literal",
                                    "value": 0
                                  }
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": 128
                                }
                              },
                              "consequent": {
                                "type": "Literal",
                                "value": 1
                              },
                              "alternate": {
                                "type": "Literal",
                                "value": 0
                              }
                            }
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "exchangeBuf"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "writeUInt32BE"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "len_spubkey"
                            },
                            {
                              "type": "Identifier",
                              "name": "bp"
                            },
                            {
                              "type": "Literal",
                              "value": true
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "+=",
                          "left": {
                            "type": "Identifier",
                            "name": "bp"
                          },
                          "right": {
                            "type": "Literal",
                            "value": 4
                          }
                        }
                      },
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "BinaryExpression",
                          "operator": "&",
                          "left": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "info"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "pubkey"
                              }
                            },
                            "property": {
                              "type": "Literal",
                              "value": 0
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": 128
                          }
                        },
                        "consequent": {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                              "type": "MemberExpression",
                              "computed": true,
                              "object": {
                                "type": "Identifier",
                                "name": "exchangeBuf"
                              },
                              "property": {
                                "type": "UpdateExpression",
                                "operator": "++",
                                "argument": {
                                  "type": "Identifier",
                                  "name": "bp"
                                },
                                "prefix": false
                              }
                            },
                            "right": {
                              "type": "Literal",
                              "value": 0
                            }
                          }
                        },
                        "alternate": null
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "info"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "pubkey"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "copy"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "exchangeBuf"
                            },
                            {
                              "type": "Identifier",
                              "name": "bp"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "+=",
                          "left": {
                            "type": "Identifier",
                            "name": "bp"
                          },
                          "right": {
                            "type": "BinaryExpression",
                            "operator": "-",
                            "left": {
                              "type": "Identifier",
                              "name": "len_spubkey"
                            },
                            "right": {
                              "type": "ConditionalExpression",
                              "test": {
                                "type": "BinaryExpression",
                                "operator": "&",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": true,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "info"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "pubkey"
                                    }
                                  },
                                  "property": {
                                    "type": "Literal",
                                    "value": 0
                                  }
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": 128
                                }
                              },
                              "consequent": {
                                "type": "Literal",
                                "value": 1
                              },
                              "alternate": {
                                "type": "Literal",
                                "value": 0
                              }
                            }
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "exchangeBuf"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "writeUInt32BE"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "len_secret"
                            },
                            {
                              "type": "Identifier",
                              "name": "bp"
                            },
                            {
                              "type": "Literal",
                              "value": true
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "+=",
                          "left": {
                            "type": "Identifier",
                            "name": "bp"
                          },
                          "right": {
                            "type": "Literal",
                            "value": 4
                          }
                        }
                      },
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "BinaryExpression",
                          "operator": "&",
                          "left": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "info"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "secret"
                              }
                            },
                            "property": {
                              "type": "Literal",
                              "value": 0
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": 128
                          }
                        },
                        "consequent": {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                              "type": "MemberExpression",
                              "computed": true,
                              "object": {
                                "type": "Identifier",
                                "name": "exchangeBuf"
                              },
                              "property": {
                                "type": "UpdateExpression",
                                "operator": "++",
                                "argument": {
                                  "type": "Identifier",
                                  "name": "bp"
                                },
                                "prefix": false
                              }
                            },
                            "right": {
                              "type": "Literal",
                              "value": 0
                            }
                          }
                        },
                        "alternate": null
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "info"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "secret"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "copy"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "exchangeBuf"
                            },
                            {
                              "type": "Identifier",
                              "name": "bp"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "self"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_exchange_hash"
                            }
                          },
                          "right": {
                            "type": "NewExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "Buffer"
                            },
                            "arguments": [
                              {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "hash"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "update"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "exchangeBuf"
                                      }
                                    ]
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "digest"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": "binary"
                                  }
                                ]
                              },
                              {
                                "type": "Literal",
                                "value": "binary"
                              }
                            ]
                          }
                        }
                      },
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "asnWriter"
                            },
                            "init": {
                              "type": "NewExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "Ber"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "Writer"
                                }
                              },
                              "arguments": []
                            }
                          },
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "rawsig"
                            },
                            "init": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "Parser"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "readString"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "info"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "sig"
                                  }
                                },
                                {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "info"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "sig"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "_pos"
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "algo"
                            },
                            "init": {
                              "type": "ConditionalExpression",
                              "test": {
                                "type": "BinaryExpression",
                                "operator": "===",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "info"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "sig_format"
                                  }
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": "ssh-rsa"
                                }
                              },
                              "consequent": {
                                "type": "Literal",
                                "value": "RSA"
                              },
                              "alternate": {
                                "type": "Literal",
                                "value": "DSA"
                              }
                            }
                          },
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "verifier"
                            },
                            "init": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "crypto"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "createVerify"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "algo"
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": "-SHA1"
                                  }
                                }
                              ]
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "verifier"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "update"
                            }
                          },
                          "arguments": [
                            {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "self"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_exchange_hash"
                              }
                            },
                            {
                              "type": "Literal",
                              "value": "binary"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "asnWriter"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "startSequence"
                            }
                          },
                          "arguments": []
                        }
                      },
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "BinaryExpression",
                          "operator": "===",
                          "left": {
                            "type": "Identifier",
                            "name": "algo"
                          },
                          "right": {
                            "type": "Literal",
                            "value": "RSA"
                          }
                        },
                        "consequent": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "VariableDeclaration",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "e"
                                  },
                                  "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "Parser"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "readString"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "info"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "hostkey"
                                        }
                                      },
                                      {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "info"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "hostkey"
                                          }
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "_pos"
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "n"
                                  },
                                  "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "Parser"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "readString"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "info"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "hostkey"
                                        }
                                      },
                                      {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "info"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "hostkey"
                                          }
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "_pos"
                                        }
                                      }
                                    ]
                                  }
                                }
                              ],
                              "kind": "var"
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "asnWriter"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "startSequence"
                                  }
                                },
                                "arguments": []
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "asnWriter"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "writeOID"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": "1.2.840.113549.1.1.1"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "asnWriter"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "writeNull"
                                  }
                                },
                                "arguments": []
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "asnWriter"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "endSequence"
                                  }
                                },
                                "arguments": []
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "asnWriter"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "startSequence"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Ber"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "BitString"
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "asnWriter"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "writeByte"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": 0
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "asnWriter"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "startSequence"
                                  }
                                },
                                "arguments": []
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "asnWriter"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "writeBuffer"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "n"
                                  },
                                  {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Ber"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "Integer"
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "asnWriter"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "writeBuffer"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "e"
                                  },
                                  {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Ber"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "Integer"
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "asnWriter"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "endSequence"
                                  }
                                },
                                "arguments": []
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "asnWriter"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "endSequence"
                                  }
                                },
                                "arguments": []
                              }
                            }
                          ]
                        },
                        "alternate": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "VariableDeclaration",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "p"
                                  },
                                  "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "Parser"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "readString"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "info"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "hostkey"
                                        }
                                      },
                                      {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "info"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "hostkey"
                                          }
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "_pos"
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "q"
                                  },
                                  "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "Parser"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "readString"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "info"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "hostkey"
                                        }
                                      },
                                      {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "info"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "hostkey"
                                          }
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "_pos"
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "g"
                                  },
                                  "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "Parser"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "readString"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "info"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "hostkey"
                                        }
                                      },
                                      {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "info"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "hostkey"
                                          }
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "_pos"
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "y"
                                  },
                                  "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "Parser"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "readString"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "info"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "hostkey"
                                        }
                                      },
                                      {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "info"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "hostkey"
                                          }
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "_pos"
                                        }
                                      }
                                    ]
                                  }
                                }
                              ],
                              "kind": "var"
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "asnWriter"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "startSequence"
                                  }
                                },
                                "arguments": []
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "asnWriter"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "writeOID"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": "1.2.840.10040.4.1"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "asnWriter"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "startSequence"
                                  }
                                },
                                "arguments": []
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "asnWriter"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "writeBuffer"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "p"
                                  },
                                  {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Ber"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "Integer"
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "asnWriter"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "writeBuffer"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "q"
                                  },
                                  {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Ber"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "Integer"
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "asnWriter"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "writeBuffer"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "g"
                                  },
                                  {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Ber"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "Integer"
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "asnWriter"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "endSequence"
                                  }
                                },
                                "arguments": []
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "asnWriter"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "endSequence"
                                  }
                                },
                                "arguments": []
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "asnWriter"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "startSequence"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Ber"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "BitString"
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "asnWriter"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "writeByte"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": 0
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "asnWriter"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "writeBuffer"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "y"
                                  },
                                  {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Ber"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "Integer"
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "asnWriter"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "endSequence"
                                  }
                                },
                                "arguments": []
                              }
                            },
                            {
                              "type": "IfStatement",
                              "test": {
                                "type": "BinaryExpression",
                                "operator": "<=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "rawsig"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "length"
                                  }
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": 40
                                }
                              },
                              "consequent": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "asnSigWriter"
                                        },
                                        "init": {
                                          "type": "NewExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "Ber"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "Writer"
                                            }
                                          },
                                          "arguments": []
                                        }
                                      }
                                    ],
                                    "kind": "var"
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "asnSigWriter"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "startSequence"
                                        }
                                      },
                                      "arguments": []
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "asnSigWriter"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "writeBuffer"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "rawsig"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "slice"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": 0
                                            },
                                            {
                                              "type": "Literal",
                                              "value": 20
                                            }
                                          ]
                                        },
                                        {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "Ber"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "Integer"
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "asnSigWriter"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "writeBuffer"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "rawsig"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "slice"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": 20
                                            }
                                          ]
                                        },
                                        {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "Ber"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "Integer"
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "asnSigWriter"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "endSequence"
                                        }
                                      },
                                      "arguments": []
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "rawsig"
                                      },
                                      "right": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "asnSigWriter"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "buffer"
                                        }
                                      }
                                    }
                                  }
                                ]
                              },
                              "alternate": null
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "asnWriter"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "endSequence"
                            }
                          },
                          "arguments": []
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "LogicalExpression",
                          "operator": "&&",
                          "left": {
                            "type": "Identifier",
                            "name": "debug"
                          },
                          "right": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "debug"
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "DEBUG: Connection: Verifying signature"
                              }
                            ]
                          }
                        }
                      },
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "b64key"
                            },
                            "init": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "asnWriter"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "buffer"
                                      }
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "toString"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "Literal",
                                      "value": "base64"
                                    }
                                  ]
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "replace"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": {}
                                },
                                {
                                  "type": "Literal",
                                  "value": "$1\n"
                                }
                              ]
                            }
                          },
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "fullkey"
                            },
                            "init": {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "Literal",
                                    "value": "-----BEGIN PUBLIC KEY-----\n"
                                  },
                                  "right": {
                                    "type": "Identifier",
                                    "name": "b64key"
                                  }
                                },
                                "right": {
                                  "type": "ConditionalExpression",
                                  "test": {
                                    "type": "BinaryExpression",
                                    "operator": "===",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": true,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "b64key"
                                      },
                                      "property": {
                                        "type": "BinaryExpression",
                                        "operator": "-",
                                        "left": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "b64key"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "length"
                                          }
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": 1
                                        }
                                      }
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": "\n"
                                    }
                                  },
                                  "consequent": {
                                    "type": "Literal",
                                    "value": ""
                                  },
                                  "alternate": {
                                    "type": "Literal",
                                    "value": "\n"
                                  }
                                }
                              },
                              "right": {
                                "type": "Literal",
                                "value": "-----END PUBLIC KEY-----"
                              }
                            }
                          },
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "verified"
                            },
                            "init": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "verifier"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "verify"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "fullkey"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "rawsig"
                                },
                                {
                                  "type": "Literal",
                                  "value": "binary"
                                }
                              ]
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "UnaryExpression",
                          "operator": "!",
                          "argument": {
                            "type": "Identifier",
                            "name": "verified"
                          },
                          "prefix": true
                        },
                        "consequent": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "LogicalExpression",
                                "operator": "&&",
                                "left": {
                                  "type": "Identifier",
                                  "name": "debug"
                                },
                                "right": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "debug"
                                  },
                                  "arguments": [
                                    {
                                      "type": "Literal",
                                      "value": "DEBUG: Signature could not be verified"
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "self"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "_parser"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "reset"
                                  }
                                },
                                "arguments": []
                              }
                            },
                            {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "self"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "_disconnect"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "DISCONNECT_REASON"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "KEY_EXCHANGE_FAILED"
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "alternate": null
                      },
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "BinaryExpression",
                          "operator": "===",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "self"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_sessionid"
                            }
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "undefined"
                          }
                        },
                        "consequent": {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "self"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_sessionid"
                              }
                            },
                            "right": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "self"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_exchange_hash"
                              }
                            }
                          }
                        },
                        "alternate": null
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "self"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_kexreply"
                            }
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "info"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "LogicalExpression",
                          "operator": "&&",
                          "left": {
                            "type": "Identifier",
                            "name": "debug"
                          },
                          "right": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "debug"
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "DEBUG: Connection: Sent NEWKEYS"
                              }
                            ]
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "self"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_send"
                            }
                          },
                          "arguments": [
                            {
                              "type": "NewExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "Buffer"
                              },
                              "arguments": [
                                {
                                  "type": "ArrayExpression",
                                  "elements": [
                                    {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "MESSAGE"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "NEWKEYS"
                                      }
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "ThisExpression"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "_parser"
                  }
                },
                "property": {
                  "type": "Identifier",
                  "name": "on"
                }
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "NEWKEYS"
                },
                {
                  "type": "FunctionExpression",
                  "id": null,
                  "params": [],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "iv"
                            },
                            "init": null
                          },
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "key"
                            },
                            "init": null
                          },
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "blocklen"
                            },
                            "init": {
                              "type": "Literal",
                              "value": 8
                            }
                          },
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "keylen"
                            },
                            "init": {
                              "type": "Literal",
                              "value": 0
                            }
                          },
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "p"
                            },
                            "init": {
                              "type": "Literal",
                              "value": 0
                            }
                          },
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "secret"
                            },
                            "init": null
                          },
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "len_secret"
                            },
                            "init": {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "ConditionalExpression",
                                "test": {
                                  "type": "BinaryExpression",
                                  "operator": "&",
                                  "left": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "self"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "_kexreply"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "secret"
                                      }
                                    },
                                    "property": {
                                      "type": "Literal",
                                      "value": 0
                                    }
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": 128
                                  }
                                },
                                "consequent": {
                                  "type": "Literal",
                                  "value": 1
                                },
                                "alternate": {
                                  "type": "Literal",
                                  "value": 0
                                }
                              },
                              "right": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "self"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "_kexreply"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "secret"
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "length"
                                }
                              }
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "secret"
                          },
                          "right": {
                            "type": "NewExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "Buffer"
                            },
                            "arguments": [
                              {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                  "type": "Literal",
                                  "value": 4
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "len_secret"
                                }
                              }
                            ]
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "secret"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "writeUInt32BE"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "len_secret"
                            },
                            {
                              "type": "Identifier",
                              "name": "p"
                            },
                            {
                              "type": "Literal",
                              "value": true
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "+=",
                          "left": {
                            "type": "Identifier",
                            "name": "p"
                          },
                          "right": {
                            "type": "Literal",
                            "value": 4
                          }
                        }
                      },
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "BinaryExpression",
                          "operator": "&",
                          "left": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "self"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "_kexreply"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "secret"
                              }
                            },
                            "property": {
                              "type": "Literal",
                              "value": 0
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": 128
                          }
                        },
                        "consequent": {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                              "type": "MemberExpression",
                              "computed": true,
                              "object": {
                                "type": "Identifier",
                                "name": "secret"
                              },
                              "property": {
                                "type": "UpdateExpression",
                                "operator": "++",
                                "argument": {
                                  "type": "Identifier",
                                  "name": "p"
                                },
                                "prefix": false
                              }
                            },
                            "right": {
                              "type": "Literal",
                              "value": 0
                            }
                          }
                        },
                        "alternate": null
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "self"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "_kexreply"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "secret"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "copy"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "secret"
                            },
                            {
                              "type": "Identifier",
                              "name": "p"
                            }
                          ]
                        }
                      },
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "UnaryExpression",
                          "operator": "!",
                          "argument": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "isStreamCipher"
                            },
                            "arguments": [
                              {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "self"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "_encryptType"
                                }
                              }
                            ]
                          },
                          "prefix": true
                        },
                        "consequent": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "iv"
                                },
                                "right": {
                                  "type": "NewExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "Buffer"
                                  },
                                  "arguments": [
                                    {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "crypto"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "createHash"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Literal",
                                                              "value": "sha1"
                                                            }
                                                          ]
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "update"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "secret"
                                                        }
                                                      ]
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "update"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "self"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "_exchange_hash"
                                                      }
                                                    }
                                                  ]
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "update"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": "A"
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": "ascii"
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "update"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "self"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "_sessionid"
                                              }
                                            }
                                          ]
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "digest"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "binary"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Literal",
                                      "value": "binary"
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "type": "SwitchStatement",
                              "discriminant": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "self"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "_encryptType"
                                }
                              },
                              "cases": [
                                {
                                  "type": "SwitchCase",
                                  "test": {
                                    "type": "Literal",
                                    "value": "aes256-cbc"
                                  },
                                  "consequent": []
                                },
                                {
                                  "type": "SwitchCase",
                                  "test": {
                                    "type": "Literal",
                                    "value": "aes192-cbc"
                                  },
                                  "consequent": []
                                },
                                {
                                  "type": "SwitchCase",
                                  "test": {
                                    "type": "Literal",
                                    "value": "aes128-cbc"
                                  },
                                  "consequent": []
                                },
                                {
                                  "type": "SwitchCase",
                                  "test": {
                                    "type": "Literal",
                                    "value": "aes256-ctr"
                                  },
                                  "consequent": []
                                },
                                {
                                  "type": "SwitchCase",
                                  "test": {
                                    "type": "Literal",
                                    "value": "aes192-ctr"
                                  },
                                  "consequent": []
                                },
                                {
                                  "type": "SwitchCase",
                                  "test": {
                                    "type": "Literal",
                                    "value": "aes128-ctr"
                                  },
                                  "consequent": [
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "blocklen"
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": 16
                                        }
                                      }
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "self"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "_encryptSize"
                                  }
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "blocklen"
                                }
                              }
                            },
                            {
                              "type": "WhileStatement",
                              "test": {
                                "type": "BinaryExpression",
                                "operator": ">",
                                "left": {
                                  "type": "Identifier",
                                  "name": "blocklen"
                                },
                                "right": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "iv"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "length"
                                  }
                                }
                              },
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "iv"
                                      },
                                      "right": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "Buffer"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "concat"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "ArrayExpression",
                                            "elements": [
                                              {
                                                "type": "Identifier",
                                                "name": "iv"
                                              },
                                              {
                                                "type": "NewExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "Buffer"
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "crypto"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "createHash"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "Literal",
                                                                        "value": "sha1"
                                                                      }
                                                                    ]
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "update"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "secret"
                                                                  }
                                                                ]
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "update"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "self"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "_exchange_hash"
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "update"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "iv"
                                                          }
                                                        ]
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "digest"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Literal",
                                                        "value": "binary"
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "type": "Literal",
                                                    "value": "binary"
                                                  }
                                                ]
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "iv"
                                },
                                "right": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "iv"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "slice"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "Literal",
                                      "value": 0
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "blocklen"
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        "alternate": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "self"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "_encryptSize"
                                  }
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "blocklen"
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "iv"
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "EMPTY_BUFFER"
                                }
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "SwitchStatement",
                        "discriminant": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "self"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "_encryptType"
                          }
                        },
                        "cases": [
                          {
                            "type": "SwitchCase",
                            "test": {
                              "type": "Literal",
                              "value": "aes256-cbc"
                            },
                            "consequent": []
                          },
                          {
                            "type": "SwitchCase",
                            "test": {
                              "type": "Literal",
                              "value": "aes256-ctr"
                            },
                            "consequent": []
                          },
                          {
                            "type": "SwitchCase",
                            "test": {
                              "type": "Literal",
                              "value": "arcfour256"
                            },
                            "consequent": [
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "keylen"
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": 32
                                  }
                                }
                              },
                              {
                                "type": "BreakStatement",
                                "label": null
                              }
                            ]
                          },
                          {
                            "type": "SwitchCase",
                            "test": {
                              "type": "Literal",
                              "value": "3des-cbc"
                            },
                            "consequent": []
                          },
                          {
                            "type": "SwitchCase",
                            "test": {
                              "type": "Literal",
                              "value": "3des-ctr"
                            },
                            "consequent": []
                          },
                          {
                            "type": "SwitchCase",
                            "test": {
                              "type": "Literal",
                              "value": "aes192-cbc"
                            },
                            "consequent": []
                          },
                          {
                            "type": "SwitchCase",
                            "test": {
                              "type": "Literal",
                              "value": "aes192-ctr"
                            },
                            "consequent": [
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "keylen"
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": 24
                                  }
                                }
                              },
                              {
                                "type": "BreakStatement",
                                "label": null
                              }
                            ]
                          },
                          {
                            "type": "SwitchCase",
                            "test": {
                              "type": "Literal",
                              "value": "aes128-cbc"
                            },
                            "consequent": []
                          },
                          {
                            "type": "SwitchCase",
                            "test": {
                              "type": "Literal",
                              "value": "aes128-ctr"
                            },
                            "consequent": []
                          },
                          {
                            "type": "SwitchCase",
                            "test": {
                              "type": "Literal",
                              "value": "cast128-cbc"
                            },
                            "consequent": []
                          },
                          {
                            "type": "SwitchCase",
                            "test": {
                              "type": "Literal",
                              "value": "blowfish-cbc"
                            },
                            "consequent": []
                          },
                          {
                            "type": "SwitchCase",
                            "test": {
                              "type": "Literal",
                              "value": "arcfour"
                            },
                            "consequent": []
                          },
                          {
                            "type": "SwitchCase",
                            "test": {
                              "type": "Literal",
                              "value": "arcfour128"
                            },
                            "consequent": [
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "keylen"
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": 16
                                  }
                                }
                              },
                              {
                                "type": "BreakStatement",
                                "label": null
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "key"
                          },
                          "right": {
                            "type": "NewExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "Buffer"
                            },
                            "arguments": [
                              {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "crypto"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "createHash"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Literal",
                                                        "value": "sha1"
                                                      }
                                                    ]
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "update"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "secret"
                                                  }
                                                ]
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "update"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "self"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "_exchange_hash"
                                                }
                                              }
                                            ]
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "update"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Literal",
                                            "value": "C"
                                          },
                                          {
                                            "type": "Literal",
                                            "value": "ascii"
                                          }
                                        ]
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "update"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "self"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "_sessionid"
                                        }
                                      }
                                    ]
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "digest"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": "binary"
                                  }
                                ]
                              },
                              {
                                "type": "Literal",
                                "value": "binary"
                              }
                            ]
                          }
                        }
                      },
                      {
                        "type": "WhileStatement",
                        "test": {
                          "type": "BinaryExpression",
                          "operator": ">",
                          "left": {
                            "type": "Identifier",
                            "name": "keylen"
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "key"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "length"
                            }
                          }
                        },
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "key"
                                },
                                "right": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Buffer"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "concat"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "ArrayExpression",
                                      "elements": [
                                        {
                                          "type": "Identifier",
                                          "name": "key"
                                        },
                                        {
                                          "type": "NewExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "Buffer"
                                          },
                                          "arguments": [
                                            {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "crypto"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "createHash"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Literal",
                                                                  "value": "sha1"
                                                                }
                                                              ]
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "update"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "secret"
                                                            }
                                                          ]
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "update"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "self"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "_exchange_hash"
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "update"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "key"
                                                    }
                                                  ]
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "digest"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": "binary"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Literal",
                                              "value": "binary"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "key"
                          },
                          "right": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "key"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "slice"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": 0
                              },
                              {
                                "type": "Identifier",
                                "name": "keylen"
                              }
                            ]
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "self"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_encrypt"
                            }
                          },
                          "right": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "crypto"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "createCipheriv"
                              }
                            },
                            "arguments": [
                              {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                  "type": "Identifier",
                                  "name": "SSH_TO_OPENSSL"
                                },
                                "property": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "self"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "_encryptType"
                                  }
                                }
                              },
                              {
                                "type": "Identifier",
                                "name": "key"
                              },
                              {
                                "type": "Identifier",
                                "name": "iv"
                              }
                            ]
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "self"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_encrypt"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "setAutoPadding"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": false
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "blocklen"
                          },
                          "right": {
                            "type": "Literal",
                            "value": 8
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "keylen"
                          },
                          "right": {
                            "type": "Literal",
                            "value": 0
                          }
                        }
                      },
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "UnaryExpression",
                          "operator": "!",
                          "argument": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "isStreamCipher"
                            },
                            "arguments": [
                              {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "self"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "_parser"
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "_decryptType"
                                }
                              }
                            ]
                          },
                          "prefix": true
                        },
                        "consequent": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "iv"
                                },
                                "right": {
                                  "type": "NewExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "Buffer"
                                  },
                                  "arguments": [
                                    {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "crypto"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "createHash"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Literal",
                                                              "value": "sha1"
                                                            }
                                                          ]
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "update"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "secret"
                                                        }
                                                      ]
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "update"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "self"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "_exchange_hash"
                                                      }
                                                    }
                                                  ]
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "update"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": "B"
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": "ascii"
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "update"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "self"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "_sessionid"
                                              }
                                            }
                                          ]
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "digest"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "binary"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Literal",
                                      "value": "binary"
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "type": "SwitchStatement",
                              "discriminant": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "self"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "_parser"
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "_decryptType"
                                }
                              },
                              "cases": [
                                {
                                  "type": "SwitchCase",
                                  "test": {
                                    "type": "Literal",
                                    "value": "aes256-cbc"
                                  },
                                  "consequent": []
                                },
                                {
                                  "type": "SwitchCase",
                                  "test": {
                                    "type": "Literal",
                                    "value": "aes192-cbc"
                                  },
                                  "consequent": []
                                },
                                {
                                  "type": "SwitchCase",
                                  "test": {
                                    "type": "Literal",
                                    "value": "aes128-cbc"
                                  },
                                  "consequent": []
                                },
                                {
                                  "type": "SwitchCase",
                                  "test": {
                                    "type": "Literal",
                                    "value": "aes256-ctr"
                                  },
                                  "consequent": []
                                },
                                {
                                  "type": "SwitchCase",
                                  "test": {
                                    "type": "Literal",
                                    "value": "aes192-ctr"
                                  },
                                  "consequent": []
                                },
                                {
                                  "type": "SwitchCase",
                                  "test": {
                                    "type": "Literal",
                                    "value": "aes128-ctr"
                                  },
                                  "consequent": [
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "blocklen"
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": 16
                                        }
                                      }
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "self"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "_parser"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "_decryptSize"
                                  }
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "blocklen"
                                }
                              }
                            },
                            {
                              "type": "WhileStatement",
                              "test": {
                                "type": "BinaryExpression",
                                "operator": ">",
                                "left": {
                                  "type": "Identifier",
                                  "name": "blocklen"
                                },
                                "right": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "iv"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "length"
                                  }
                                }
                              },
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "iv"
                                      },
                                      "right": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "Buffer"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "concat"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "ArrayExpression",
                                            "elements": [
                                              {
                                                "type": "Identifier",
                                                "name": "iv"
                                              },
                                              {
                                                "type": "NewExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "Buffer"
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "crypto"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "createHash"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "Literal",
                                                                        "value": "sha1"
                                                                      }
                                                                    ]
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "update"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "secret"
                                                                  }
                                                                ]
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "update"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "self"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "_exchange_hash"
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "update"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "iv"
                                                          }
                                                        ]
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "digest"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Literal",
                                                        "value": "binary"
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "type": "Literal",
                                                    "value": "binary"
                                                  }
                                                ]
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "iv"
                                },
                                "right": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "iv"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "slice"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "Literal",
                                      "value": 0
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "blocklen"
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        "alternate": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "self"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "_parser"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "_decryptSize"
                                  }
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "blocklen"
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "iv"
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "EMPTY_BUFFER"
                                }
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "self"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_parser"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_decryptBuf"
                            }
                          },
                          "right": {
                            "type": "NewExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "Buffer"
                            },
                            "arguments": [
                              {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "self"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "_parser"
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "_decryptSize"
                                }
                              }
                            ]
                          }
                        }
                      },
                      {
                        "type": "SwitchStatement",
                        "discriminant": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "self"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_parser"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "_decryptType"
                          }
                        },
                        "cases": [
                          {
                            "type": "SwitchCase",
                            "test": {
                              "type": "Literal",
                              "value": "aes256-cbc"
                            },
                            "consequent": []
                          },
                          {
                            "type": "SwitchCase",
                            "test": {
                              "type": "Literal",
                              "value": "aes256-ctr"
                            },
                            "consequent": []
                          },
                          {
                            "type": "SwitchCase",
                            "test": {
                              "type": "Literal",
                              "value": "arcfour256"
                            },
                            "consequent": [
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "keylen"
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": 32
                                  }
                                }
                              },
                              {
                                "type": "BreakStatement",
                                "label": null
                              }
                            ]
                          },
                          {
                            "type": "SwitchCase",
                            "test": {
                              "type": "Literal",
                              "value": "3des-cbc"
                            },
                            "consequent": []
                          },
                          {
                            "type": "SwitchCase",
                            "test": {
                              "type": "Literal",
                              "value": "3des-ctr"
                            },
                            "consequent": []
                          },
                          {
                            "type": "SwitchCase",
                            "test": {
                              "type": "Literal",
                              "value": "aes192-cbc"
                            },
                            "consequent": []
                          },
                          {
                            "type": "SwitchCase",
                            "test": {
                              "type": "Literal",
                              "value": "aes192-ctr"
                            },
                            "consequent": [
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "keylen"
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": 24
                                  }
                                }
                              },
                              {
                                "type": "BreakStatement",
                                "label": null
                              }
                            ]
                          },
                          {
                            "type": "SwitchCase",
                            "test": {
                              "type": "Literal",
                              "value": "aes128-cbc"
                            },
                            "consequent": []
                          },
                          {
                            "type": "SwitchCase",
                            "test": {
                              "type": "Literal",
                              "value": "aes128-ctr"
                            },
                            "consequent": []
                          },
                          {
                            "type": "SwitchCase",
                            "test": {
                              "type": "Literal",
                              "value": "cast128-cbc"
                            },
                            "consequent": []
                          },
                          {
                            "type": "SwitchCase",
                            "test": {
                              "type": "Literal",
                              "value": "blowfish-cbc"
                            },
                            "consequent": []
                          },
                          {
                            "type": "SwitchCase",
                            "test": {
                              "type": "Literal",
                              "value": "arcfour"
                            },
                            "consequent": []
                          },
                          {
                            "type": "SwitchCase",
                            "test": {
                              "type": "Literal",
                              "value": "arcfour128"
                            },
                            "consequent": [
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "keylen"
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": 16
                                  }
                                }
                              },
                              {
                                "type": "BreakStatement",
                                "label": null
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "key"
                          },
                          "right": {
                            "type": "NewExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "Buffer"
                            },
                            "arguments": [
                              {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "crypto"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "createHash"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Literal",
                                                        "value": "sha1"
                                                      }
                                                    ]
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "update"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "secret"
                                                  }
                                                ]
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "update"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "self"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "_exchange_hash"
                                                }
                                              }
                                            ]
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "update"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Literal",
                                            "value": "D"
                                          },
                                          {
                                            "type": "Literal",
                                            "value": "ascii"
                                          }
                                        ]
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "update"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "self"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "_sessionid"
                                        }
                                      }
                                    ]
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "digest"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": "binary"
                                  }
                                ]
                              },
                              {
                                "type": "Literal",
                                "value": "binary"
                              }
                            ]
                          }
                        }
                      },
                      {
                        "type": "WhileStatement",
                        "test": {
                          "type": "BinaryExpression",
                          "operator": ">",
                          "left": {
                            "type": "Identifier",
                            "name": "keylen"
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "key"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "length"
                            }
                          }
                        },
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "key"
                                },
                                "right": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Buffer"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "concat"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "ArrayExpression",
                                      "elements": [
                                        {
                                          "type": "Identifier",
                                          "name": "key"
                                        },
                                        {
                                          "type": "NewExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "Buffer"
                                          },
                                          "arguments": [
                                            {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "crypto"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "createHash"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Literal",
                                                                  "value": "sha1"
                                                                }
                                                              ]
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "update"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "secret"
                                                            }
                                                          ]
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "update"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "self"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "_exchange_hash"
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "update"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "key"
                                                    }
                                                  ]
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "digest"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": "binary"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Literal",
                                              "value": "binary"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "key"
                          },
                          "right": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "key"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "slice"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": 0
                              },
                              {
                                "type": "Identifier",
                                "name": "keylen"
                              }
                            ]
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "self"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_parser"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_decrypt"
                            }
                          },
                          "right": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "crypto"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "createDecipheriv"
                              }
                            },
                            "arguments": [
                              {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                  "type": "Identifier",
                                  "name": "SSH_TO_OPENSSL"
                                },
                                "property": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "self"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "_parser"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "_decryptType"
                                  }
                                }
                              },
                              {
                                "type": "Identifier",
                                "name": "key"
                              },
                              {
                                "type": "Identifier",
                                "name": "iv"
                              }
                            ]
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "self"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "_parser"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_decrypt"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "setAutoPadding"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": false
                            }
                          ]
                        }
                      },
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "emptyBuf"
                            },
                            "init": null
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "BinaryExpression",
                          "operator": "===",
                          "left": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "self"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "_encryptType"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "substr"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": 0
                              },
                              {
                                "type": "Literal",
                                "value": 7
                              }
                            ]
                          },
                          "right": {
                            "type": "Literal",
                            "value": "arcfour"
                          }
                        },
                        "consequent": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "emptyBuf"
                                },
                                "right": {
                                  "type": "NewExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "Buffer"
                                  },
                                  "arguments": [
                                    {
                                      "type": "Literal",
                                      "value": 1536
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "emptyBuf"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "fill"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": 0
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "self"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "_encrypt"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "update"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "emptyBuf"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "alternate": null
                      },
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "BinaryExpression",
                          "operator": "===",
                          "left": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "self"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "_parser"
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "_decryptType"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "substr"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": 0
                              },
                              {
                                "type": "Literal",
                                "value": 7
                              }
                            ]
                          },
                          "right": {
                            "type": "Literal",
                            "value": "arcfour"
                          }
                        },
                        "consequent": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "emptyBuf"
                                },
                                "right": {
                                  "type": "NewExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "Buffer"
                                  },
                                  "arguments": [
                                    {
                                      "type": "Literal",
                                      "value": 1536
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "emptyBuf"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "fill"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": 0
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "self"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "_parser"
                                      }
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "_decrypt"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "update"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "emptyBuf"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "alternate": null
                      },
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "createKeyLen"
                            },
                            "init": {
                              "type": "Literal",
                              "value": 0
                            }
                          },
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "checkKeyLen"
                            },
                            "init": {
                              "type": "Literal",
                              "value": 0
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "SwitchStatement",
                        "discriminant": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "self"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "_hmac"
                          }
                        },
                        "cases": [
                          {
                            "type": "SwitchCase",
                            "test": {
                              "type": "Literal",
                              "value": "hmac-sha1"
                            },
                            "consequent": []
                          },
                          {
                            "type": "SwitchCase",
                            "test": {
                              "type": "Literal",
                              "value": "hmac-sha1-96"
                            },
                            "consequent": [
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "createKeyLen"
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": 20
                                  }
                                }
                              },
                              {
                                "type": "BreakStatement",
                                "label": null
                              }
                            ]
                          },
                          {
                            "type": "SwitchCase",
                            "test": {
                              "type": "Literal",
                              "value": "hmac-md5"
                            },
                            "consequent": []
                          },
                          {
                            "type": "SwitchCase",
                            "test": {
                              "type": "Literal",
                              "value": "hmac-md5-96"
                            },
                            "consequent": [
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "createKeyLen"
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": 16
                                  }
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "SwitchStatement",
                        "discriminant": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "self"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_parser"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "_hmac"
                          }
                        },
                        "cases": [
                          {
                            "type": "SwitchCase",
                            "test": {
                              "type": "Literal",
                              "value": "hmac-sha1"
                            },
                            "consequent": [
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "checkKeyLen"
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": 20
                                  }
                                }
                              },
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "self"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "_parser"
                                      }
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "_hmacSize"
                                    }
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": 20
                                  }
                                }
                              },
                              {
                                "type": "BreakStatement",
                                "label": null
                              }
                            ]
                          },
                          {
                            "type": "SwitchCase",
                            "test": {
                              "type": "Literal",
                              "value": "hmac-sha1-96"
                            },
                            "consequent": [
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "checkKeyLen"
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": 20
                                  }
                                }
                              },
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "self"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "_parser"
                                      }
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "_hmacSize"
                                    }
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": 12
                                  }
                                }
                              },
                              {
                                "type": "BreakStatement",
                                "label": null
                              }
                            ]
                          },
                          {
                            "type": "SwitchCase",
                            "test": {
                              "type": "Literal",
                              "value": "hmac-md5"
                            },
                            "consequent": [
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "checkKeyLen"
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": 16
                                  }
                                }
                              },
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "self"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "_parser"
                                      }
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "_hmacSize"
                                    }
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": 16
                                  }
                                }
                              },
                              {
                                "type": "BreakStatement",
                                "label": null
                              }
                            ]
                          },
                          {
                            "type": "SwitchCase",
                            "test": {
                              "type": "Literal",
                              "value": "hmac-md5-96"
                            },
                            "consequent": [
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "checkKeyLen"
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": 16
                                  }
                                }
                              },
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "self"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "_parser"
                                      }
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "_hmacSize"
                                    }
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": 12
                                  }
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "SwitchStatement",
                        "discriminant": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "self"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "_hmac"
                          }
                        },
                        "cases": [
                          {
                            "type": "SwitchCase",
                            "test": {
                              "type": "Literal",
                              "value": "hmac-sha1"
                            },
                            "consequent": [
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "self"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "_hmacSize"
                                    }
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": 20
                                  }
                                }
                              },
                              {
                                "type": "BreakStatement",
                                "label": null
                              }
                            ]
                          },
                          {
                            "type": "SwitchCase",
                            "test": {
                              "type": "Literal",
                              "value": "hmac-md5"
                            },
                            "consequent": [
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "self"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "_hmacSize"
                                    }
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": 16
                                  }
                                }
                              },
                              {
                                "type": "BreakStatement",
                                "label": null
                              }
                            ]
                          },
                          {
                            "type": "SwitchCase",
                            "test": {
                              "type": "Literal",
                              "value": "hmac-sha1-96"
                            },
                            "consequent": []
                          },
                          {
                            "type": "SwitchCase",
                            "test": {
                              "type": "Literal",
                              "value": "hmac-md5-96"
                            },
                            "consequent": [
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "self"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "_hmacSize"
                                    }
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": 12
                                  }
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "key"
                          },
                          "right": {
                            "type": "NewExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "Buffer"
                            },
                            "arguments": [
                              {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "crypto"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "createHash"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Literal",
                                                        "value": "sha1"
                                                      }
                                                    ]
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "update"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "secret"
                                                  }
                                                ]
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "update"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "self"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "_exchange_hash"
                                                }
                                              }
                                            ]
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "update"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Literal",
                                            "value": "E"
                                          },
                                          {
                                            "type": "Literal",
                                            "value": "ascii"
                                          }
                                        ]
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "update"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "self"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "_sessionid"
                                        }
                                      }
                                    ]
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "digest"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": "binary"
                                  }
                                ]
                              },
                              {
                                "type": "Literal",
                                "value": "binary"
                              }
                            ]
                          }
                        }
                      },
                      {
                        "type": "WhileStatement",
                        "test": {
                          "type": "BinaryExpression",
                          "operator": ">",
                          "left": {
                            "type": "Identifier",
                            "name": "createKeyLen"
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "key"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "length"
                            }
                          }
                        },
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "key"
                                },
                                "right": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Buffer"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "concat"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "ArrayExpression",
                                      "elements": [
                                        {
                                          "type": "Identifier",
                                          "name": "key"
                                        },
                                        {
                                          "type": "NewExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "Buffer"
                                          },
                                          "arguments": [
                                            {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "crypto"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "createHash"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Literal",
                                                                  "value": "sha1"
                                                                }
                                                              ]
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "update"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "secret"
                                                            }
                                                          ]
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "update"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "self"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "_exchange_hash"
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "update"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "key"
                                                    }
                                                  ]
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "digest"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": "binary"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Literal",
                                              "value": "binary"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "self"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_hmacKey"
                            }
                          },
                          "right": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "key"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "slice"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": 0
                              },
                              {
                                "type": "Identifier",
                                "name": "createKeyLen"
                              }
                            ]
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "key"
                          },
                          "right": {
                            "type": "NewExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "Buffer"
                            },
                            "arguments": [
                              {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "crypto"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "createHash"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Literal",
                                                        "value": "sha1"
                                                      }
                                                    ]
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "update"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "secret"
                                                  }
                                                ]
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "update"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "self"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "_exchange_hash"
                                                }
                                              }
                                            ]
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "update"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Literal",
                                            "value": "F"
                                          },
                                          {
                                            "type": "Literal",
                                            "value": "ascii"
                                          }
                                        ]
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "update"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "self"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "_sessionid"
                                        }
                                      }
                                    ]
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "digest"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": "binary"
                                  }
                                ]
                              },
                              {
                                "type": "Literal",
                                "value": "binary"
                              }
                            ]
                          }
                        }
                      },
                      {
                        "type": "WhileStatement",
                        "test": {
                          "type": "BinaryExpression",
                          "operator": ">",
                          "left": {
                            "type": "Identifier",
                            "name": "checkKeyLen"
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "key"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "length"
                            }
                          }
                        },
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "key"
                                },
                                "right": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Buffer"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "concat"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "ArrayExpression",
                                      "elements": [
                                        {
                                          "type": "Identifier",
                                          "name": "key"
                                        },
                                        {
                                          "type": "NewExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "Buffer"
                                          },
                                          "arguments": [
                                            {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "crypto"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "createHash"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Literal",
                                                                  "value": "sha1"
                                                                }
                                                              ]
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "update"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "secret"
                                                            }
                                                          ]
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "update"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "self"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "_exchange_hash"
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "update"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "key"
                                                    }
                                                  ]
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "digest"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": "binary"
                                                }
                                              ]
                                            },
                                            {
                                              "type": "Literal",
                                              "value": "binary"
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "self"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_parser"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_hmacKey"
                            }
                          },
                          "right": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "key"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "slice"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": 0
                              },
                              {
                                "type": "Identifier",
                                "name": "checkKeyLen"
                              }
                            ]
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "self"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_parser"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_hmacBuf"
                            }
                          },
                          "right": {
                            "type": "NewExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "Buffer"
                            },
                            "arguments": [
                              {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "self"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "_parser"
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "_hmacSize"
                                }
                              }
                            ]
                          }
                        }
                      },
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "LogicalExpression",
                          "operator": "&&",
                          "left": {
                            "type": "BinaryExpression",
                            "operator": "!==",
                            "left": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "self"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_compressType"
                              }
                            },
                            "right": {
                              "type": "Literal",
                              "value": "none"
                            }
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "self"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_compress"
                            }
                          }
                        },
                        "consequent": {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "self"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_compress"
                              }
                            },
                            "right": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "zlib"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "createDeflate"
                                }
                              },
                              "arguments": []
                            }
                          }
                        },
                        "alternate": null
                      },
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "BinaryExpression",
                          "operator": "!==",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "self"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_parser"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_compressType"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "none"
                          }
                        },
                        "consequent": {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "self"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "_parser"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_compress"
                              }
                            },
                            "right": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "zlib"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "createInflate"
                                }
                              },
                              "arguments": []
                            }
                          }
                        },
                        "alternate": null
                      },
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "BinaryExpression",
                          "operator": "===",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "self"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_state"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "initexchg"
                          }
                        },
                        "consequent": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "VariableDeclaration",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "svcBuf"
                                  },
                                  "init": {
                                    "type": "NewExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "Buffer"
                                    },
                                    "arguments": [
                                      {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                          "type": "BinaryExpression",
                                          "operator": "+",
                                          "left": {
                                            "type": "Literal",
                                            "value": 1
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": 4
                                          }
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": 12
                                        }
                                      }
                                    ]
                                  }
                                }
                              ],
                              "kind": "var"
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": true,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "svcBuf"
                                  },
                                  "property": {
                                    "type": "Literal",
                                    "value": 0
                                  }
                                },
                                "right": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "MESSAGE"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "SERVICE_REQUEST"
                                  }
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "svcBuf"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "writeUInt32BE"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": 12
                                  },
                                  {
                                    "type": "Literal",
                                    "value": 1
                                  },
                                  {
                                    "type": "Literal",
                                    "value": true
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "svcBuf"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "write"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": "ssh-userauth"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": 5
                                  },
                                  {
                                    "type": "Literal",
                                    "value": 12
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "ascii"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "LogicalExpression",
                                "operator": "&&",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "self"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "_debug"
                                  }
                                },
                                "right": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "self"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "_debug"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "Literal",
                                      "value": "DEBUG: Connection: Sent SERVICE_REQUEST"
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "self"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "_send"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "svcBuf"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "alternate": {
                          "type": "IfStatement",
                          "test": {
                            "type": "BinaryExpression",
                            "operator": "===",
                            "left": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "self"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_state"
                              }
                            },
                            "right": {
                              "type": "Literal",
                              "value": "reexchg"
                            }
                          },
                          "consequent": {
                            "type": "BlockStatement",
                            "body": [
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "self"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "_state"
                                    }
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": "authenticated"
                                  }
                                }
                              },
                              {
                                "type": "VariableDeclaration",
                                "declarations": [
                                  {
                                    "type": "VariableDeclarator",
                                    "id": {
                                      "type": "Identifier",
                                      "name": "b"
                                    },
                                    "init": {
                                      "type": "Literal",
                                      "value": 0
                                    }
                                  },
                                  {
                                    "type": "VariableDeclarator",
                                    "id": {
                                      "type": "Identifier",
                                      "name": "blen"
                                    },
                                    "init": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "self"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "_buffer"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "length"
                                      }
                                    }
                                  }
                                ],
                                "kind": "var"
                              },
                              {
                                "type": "ForStatement",
                                "init": null,
                                "test": {
                                  "type": "BinaryExpression",
                                  "operator": "<",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "b"
                                  },
                                  "right": {
                                    "type": "Identifier",
                                    "name": "blen"
                                  }
                                },
                                "update": {
                                  "type": "UpdateExpression",
                                  "operator": "++",
                                  "argument": {
                                    "type": "Identifier",
                                    "name": "b"
                                  },
                                  "prefix": true
                                },
                                "body": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "IfStatement",
                                      "test": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "Buffer"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "isBuffer"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "self"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "_buffer"
                                              }
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "b"
                                            }
                                          }
                                        ]
                                      },
                                      "consequent": {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "self"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "_send"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "MemberExpression",
                                              "computed": true,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "self"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "_buffer"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "b"
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "alternate": {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "self"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "_send"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "MemberExpression",
                                              "computed": true,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "self"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "_buffer"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "b"
                                                }
                                              },
                                              "property": {
                                                "type": "Literal",
                                                "value": 0
                                              }
                                            },
                                            {
                                              "type": "MemberExpression",
                                              "computed": true,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "self"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "_buffer"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "b"
                                                }
                                              },
                                              "property": {
                                                "type": "Literal",
                                                "value": 1
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "IfStatement",
                                "test": {
                                  "type": "Identifier",
                                  "name": "blen"
                                },
                                "consequent": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "self"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "_buffer"
                                          }
                                        },
                                        "right": {
                                          "type": "ArrayExpression",
                                          "elements": []
                                        }
                                      }
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "self"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "emit"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Literal",
                                            "value": "drain"
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                "alternate": null
                              }
                            ]
                          },
                          "alternate": null
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "ThisExpression"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "_parser"
                  }
                },
                "property": {
                  "type": "Identifier",
                  "name": "on"
                }
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "SERVICE_ACCEPT"
                },
                {
                  "type": "FunctionExpression",
                  "id": null,
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "svc"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "BinaryExpression",
                          "operator": "===",
                          "left": {
                            "type": "Identifier",
                            "name": "svc"
                          },
                          "right": {
                            "type": "Literal",
                            "value": "ssh-userauth"
                          }
                        },
                        "consequent": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "IfStatement",
                              "test": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "self"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "_password"
                                }
                              },
                              "consequent": {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "self"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "_authPwd"
                                    }
                                  },
                                  "arguments": []
                                }
                              },
                              "alternate": {
                                "type": "IfStatement",
                                "test": {
                                  "type": "LogicalExpression",
                                  "operator": "&&",
                                  "left": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "self"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "_privateKey"
                                    }
                                  },
                                  "right": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "self"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "_publicKey"
                                    }
                                  }
                                },
                                "consequent": {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "self"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "_authPK"
                                      }
                                    },
                                    "arguments": []
                                  }
                                },
                                "alternate": {
                                  "type": "IfStatement",
                                  "test": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "self"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "_agent"
                                    }
                                  },
                                  "consequent": {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "self"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "_authAgent"
                                        }
                                      },
                                      "arguments": []
                                    }
                                  },
                                  "alternate": null
                                }
                              }
                            }
                          ]
                        },
                        "alternate": null
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "ThisExpression"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "_parser"
                  }
                },
                "property": {
                  "type": "Identifier",
                  "name": "on"
                }
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "USERAUTH_SUCCESS"
                },
                {
                  "type": "FunctionExpression",
                  "id": null,
                  "params": [],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "self"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_state"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "authenticated"
                          }
                        }
                      },
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "LogicalExpression",
                          "operator": "&&",
                          "left": {
                            "type": "BinaryExpression",
                            "operator": "===",
                            "left": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "self"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "_parser"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_authMethod"
                              }
                            },
                            "right": {
                              "type": "Literal",
                              "value": "password"
                            }
                          },
                          "right": {
                            "type": "BinaryExpression",
                            "operator": "!==",
                            "left": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "self"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "_parser"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_newpwd"
                              }
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "undefined"
                            }
                          }
                        },
                        "consequent": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "self"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "_password"
                                  }
                                },
                                "right": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "self"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "_parser"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "_newpwd"
                                  }
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "self"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "_parser"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "_newpwd"
                                  }
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "undefined"
                                }
                              }
                            }
                          ]
                        },
                        "alternate": null
                      },
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "LogicalExpression",
                          "operator": "&&",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "self"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_agent"
                            }
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "self"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_agentKeys"
                            }
                          }
                        },
                        "consequent": {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "self"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_agentKeys"
                              }
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "undefined"
                            }
                          }
                        },
                        "alternate": null
                      },
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "BinaryExpression",
                          "operator": "===",
                          "left": {
                            "type": "UnaryExpression",
                            "operator": "typeof",
                            "argument": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "self"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_pingInterval"
                              }
                            },
                            "prefix": true
                          },
                          "right": {
                            "type": "Literal",
                            "value": "number"
                          }
                        },
                        "consequent": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "self"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "_pinger"
                                  }
                                },
                                "right": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "setInterval"
                                  },
                                  "arguments": [
                                    {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "self"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "_ping"
                                                }
                                              },
                                              "arguments": []
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    },
                                    {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "self"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "_pingInterval"
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        "alternate": null
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "self"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "emit"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "ready"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "ThisExpression"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "_parser"
                  }
                },
                "property": {
                  "type": "Identifier",
                  "name": "on"
                }
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "USERAUTH_FAILURE"
                },
                {
                  "type": "FunctionExpression",
                  "id": null,
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "auths"
                    },
                    {
                      "type": "Identifier",
                      "name": "partial"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "LogicalExpression",
                          "operator": "&&",
                          "left": {
                            "type": "BinaryExpression",
                            "operator": "===",
                            "left": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "self"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "_parser"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_authMethod"
                              }
                            },
                            "right": {
                              "type": "Literal",
                              "value": "password"
                            }
                          },
                          "right": {
                            "type": "BinaryExpression",
                            "operator": "!==",
                            "left": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "self"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "_parser"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_newpwd"
                              }
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "undefined"
                            }
                          }
                        },
                        "consequent": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "IfStatement",
                              "test": {
                                "type": "Identifier",
                                "name": "partial"
                              },
                              "consequent": {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "self"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "_password"
                                    }
                                  },
                                  "right": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "self"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "_parser"
                                      }
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "_newpwd"
                                    }
                                  }
                                }
                              },
                              "alternate": null
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "self"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "_parser"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "_newpwd"
                                  }
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "undefined"
                                }
                              }
                            }
                          ]
                        },
                        "alternate": null
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "self"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_auths"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "methods"
                            }
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "auths"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "self"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_auths"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "partial"
                            }
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "partial"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "self"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_tryNextAuth"
                            }
                          },
                          "arguments": []
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "ThisExpression"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "_parser"
                  }
                },
                "property": {
                  "type": "Identifier",
                  "name": "on"
                }
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "USERAUTH_BANNER"
                },
                {
                  "type": "FunctionExpression",
                  "id": null,
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "message"
                    },
                    {
                      "type": "Identifier",
                      "name": "lang"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "self"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "emit"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "banner"
                            },
                            {
                              "type": "Identifier",
                              "name": "message"
                            },
                            {
                              "type": "Identifier",
                              "name": "lang"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "ThisExpression"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "_parser"
                  }
                },
                "property": {
                  "type": "Identifier",
                  "name": "on"
                }
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "USERAUTH_PASSWD_CHANGEREQ"
                },
                {
                  "type": "FunctionExpression",
                  "id": null,
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "message"
                    },
                    {
                      "type": "Identifier",
                      "name": "lang"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "self"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_parser"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_newpwd"
                            }
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "undefined"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "self"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "emit"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "change password"
                            },
                            {
                              "type": "Identifier",
                              "name": "message"
                            },
                            {
                              "type": "Identifier",
                              "name": "lang"
                            },
                            {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [
                                {
                                  "type": "Identifier",
                                  "name": "newpwd"
                                }
                              ],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "IfStatement",
                                    "test": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "self"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "_sock"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "writable"
                                      }
                                    },
                                    "consequent": {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "self"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "_authPwd"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "newpwd"
                                          }
                                        ]
                                      }
                                    },
                                    "alternate": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "VariableDeclaration",
                                          "declarations": [
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "err"
                                              },
                                              "init": {
                                                "type": "NewExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "Error"
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Literal",
                                                    "value": "Not connected"
                                                  }
                                                ]
                                              }
                                            }
                                          ],
                                          "kind": "var"
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "err"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "level"
                                              }
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": "connection-socket"
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "self"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "emit"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "error"
                                              },
                                              {
                                                "type": "Identifier",
                                                "name": "err"
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "ThisExpression"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "_parser"
                  }
                },
                "property": {
                  "type": "Identifier",
                  "name": "on"
                }
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "USERAUTH_INFO_REQUEST"
                },
                {
                  "type": "FunctionExpression",
                  "id": null,
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "name"
                    },
                    {
                      "type": "Identifier",
                      "name": "inst"
                    },
                    {
                      "type": "Identifier",
                      "name": "lang"
                    },
                    {
                      "type": "Identifier",
                      "name": "prompts"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "self"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "emit"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "keyboard-interactive"
                            },
                            {
                              "type": "Identifier",
                              "name": "name"
                            },
                            {
                              "type": "Identifier",
                              "name": "inst"
                            },
                            {
                              "type": "Identifier",
                              "name": "lang"
                            },
                            {
                              "type": "Identifier",
                              "name": "prompts"
                            },
                            {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [
                                {
                                  "type": "Identifier",
                                  "name": "answers"
                                }
                              ],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "nprompts"
                                        },
                                        "init": {
                                          "type": "ConditionalExpression",
                                          "test": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "Array"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "isArray"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "prompts"
                                              }
                                            ]
                                          },
                                          "consequent": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "prompts"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "length"
                                            }
                                          },
                                          "alternate": {
                                            "type": "Literal",
                                            "value": 0
                                          }
                                        }
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "nanswers"
                                        },
                                        "init": {
                                          "type": "ConditionalExpression",
                                          "test": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "Array"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "isArray"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "answers"
                                              }
                                            ]
                                          },
                                          "consequent": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "answers"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "length"
                                            }
                                          },
                                          "alternate": {
                                            "type": "Literal",
                                            "value": 0
                                          }
                                        }
                                      }
                                    ],
                                    "kind": "var"
                                  },
                                  {
                                    "type": "IfStatement",
                                    "test": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "self"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "_sock"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "writable"
                                      }
                                    },
                                    "consequent": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "VariableDeclaration",
                                          "declarations": [
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "size"
                                              },
                                              "init": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                  "type": "Literal",
                                                  "value": 1
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": 4
                                                }
                                              }
                                            },
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "buf"
                                              },
                                              "init": null
                                            },
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "i"
                                              },
                                              "init": null
                                            },
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "len"
                                              },
                                              "init": {
                                                "type": "ConditionalExpression",
                                                "test": {
                                                  "type": "BinaryExpression",
                                                  "operator": "<",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "nprompts"
                                                  },
                                                  "right": {
                                                    "type": "Identifier",
                                                    "name": "nanswers"
                                                  }
                                                },
                                                "consequent": {
                                                  "type": "Identifier",
                                                  "name": "nprompts"
                                                },
                                                "alternate": {
                                                  "type": "Identifier",
                                                  "name": "nanswers"
                                                }
                                              }
                                            },
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "p"
                                              },
                                              "init": {
                                                "type": "Literal",
                                                "value": 0
                                              }
                                            }
                                          ],
                                          "kind": "var"
                                        },
                                        {
                                          "type": "ForStatement",
                                          "init": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "i"
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": 0
                                            }
                                          },
                                          "test": {
                                            "type": "BinaryExpression",
                                            "operator": "<",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "i"
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "len"
                                            }
                                          },
                                          "update": {
                                            "type": "UpdateExpression",
                                            "operator": "++",
                                            "argument": {
                                              "type": "Identifier",
                                              "name": "i"
                                            },
                                            "prefix": true
                                          },
                                          "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "+=",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "size"
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": 4
                                                  }
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "+=",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "size"
                                                  },
                                                  "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "Buffer"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "byteLength"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "answers"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "i"
                                                        }
                                                      }
                                                    ]
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "buf"
                                            },
                                            "right": {
                                              "type": "NewExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "Buffer"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "size"
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": true,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "buf"
                                              },
                                              "property": {
                                                "type": "UpdateExpression",
                                                "operator": "++",
                                                "argument": {
                                                  "type": "Identifier",
                                                  "name": "p"
                                                },
                                                "prefix": false
                                              }
                                            },
                                            "right": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "consts"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "USERAUTH_INFO_RESPONSE"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "buf"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "writeUInt32BE"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "len"
                                              },
                                              {
                                                "type": "Identifier",
                                                "name": "p"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": true
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "+=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "p"
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": 4
                                            }
                                          }
                                        },
                                        {
                                          "type": "ForStatement",
                                          "init": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "i"
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": 0
                                            }
                                          },
                                          "test": {
                                            "type": "BinaryExpression",
                                            "operator": "<",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "i"
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "len"
                                            }
                                          },
                                          "update": {
                                            "type": "UpdateExpression",
                                            "operator": "++",
                                            "argument": {
                                              "type": "Identifier",
                                              "name": "i"
                                            },
                                            "prefix": true
                                          },
                                          "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "size"
                                                  },
                                                  "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "Buffer"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "byteLength"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "answers"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "i"
                                                        }
                                                      }
                                                    ]
                                                  }
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "buf"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "writeUInt32BE"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "size"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "p"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": true
                                                    }
                                                  ]
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "buf"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "write"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "MemberExpression",
                                                      "computed": true,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "answers"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "i"
                                                      }
                                                    },
                                                    {
                                                      "type": "AssignmentExpression",
                                                      "operator": "+=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "p"
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": 4
                                                      }
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "size"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "utf8"
                                                    }
                                                  ]
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "+=",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "p"
                                                  },
                                                  "right": {
                                                    "type": "Identifier",
                                                    "name": "size"
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "LogicalExpression",
                                            "operator": "&&",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "self"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "_debug"
                                              }
                                            },
                                            "right": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "self"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "_debug"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": "DEBUG: Connection: Sent USERAUTH_INFO_RESPONSE"
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "self"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "_send"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "buf"
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    },
                                    "alternate": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "VariableDeclaration",
                                          "declarations": [
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "err"
                                              },
                                              "init": {
                                                "type": "NewExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "Error"
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Literal",
                                                    "value": "Not connected"
                                                  }
                                                ]
                                              }
                                            }
                                          ],
                                          "kind": "var"
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "err"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "level"
                                              }
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": "connection-socket"
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "self"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "emit"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "error"
                                              },
                                              {
                                                "type": "Identifier",
                                                "name": "err"
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "ThisExpression"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "_parser"
                  }
                },
                "property": {
                  "type": "Identifier",
                  "name": "on"
                }
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "USERAUTH_PK_OK"
                },
                {
                  "type": "FunctionExpression",
                  "id": null,
                  "params": [],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "self"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_authPK"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": true
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "ThisExpression"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "_parser"
                  }
                },
                "property": {
                  "type": "Identifier",
                  "name": "on"
                }
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "REQUEST_SUCCESS"
                },
                {
                  "type": "FunctionExpression",
                  "id": null,
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "data"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "self"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_callbacks"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "length"
                          }
                        },
                        "consequent": {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "self"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "_callbacks"
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "shift"
                                }
                              },
                              "arguments": []
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": false
                              },
                              {
                                "type": "Identifier",
                                "name": "data"
                              }
                            ]
                          }
                        },
                        "alternate": null
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "ThisExpression"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "_parser"
                  }
                },
                "property": {
                  "type": "Identifier",
                  "name": "on"
                }
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "REQUEST_FAILURE"
                },
                {
                  "type": "FunctionExpression",
                  "id": null,
                  "params": [],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "self"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_callbacks"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "length"
                          }
                        },
                        "consequent": {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "self"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "_callbacks"
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "shift"
                                }
                              },
                              "arguments": []
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": true
                              }
                            ]
                          }
                        },
                        "alternate": null
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "ThisExpression"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "_parser"
                  }
                },
                "property": {
                  "type": "Identifier",
                  "name": "on"
                }
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "CHANNEL_OPEN"
                },
                {
                  "type": "FunctionExpression",
                  "id": null,
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "info"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "BinaryExpression",
                          "operator": "===",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "info"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "type"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "forwarded-tcpip"
                          }
                        },
                        "consequent": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "VariableDeclaration",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "rejectConn"
                                  },
                                  "init": {
                                    "type": "Literal",
                                    "value": false
                                  }
                                },
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "localChan"
                                  },
                                  "init": null
                                }
                              ],
                              "kind": "var"
                            },
                            {
                              "type": "IfStatement",
                              "test": {
                                "type": "BinaryExpression",
                                "operator": "===",
                                "left": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "self"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "_forwarding"
                                      }
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "indexOf"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "BinaryExpression",
                                      "operator": "+",
                                      "left": {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "info"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "data"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "destIP"
                                          }
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": ":"
                                        }
                                      },
                                      "right": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "info"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "data"
                                          }
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "destPort"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "right": {
                                  "type": "UnaryExpression",
                                  "operator": "-",
                                  "argument": {
                                    "type": "Literal",
                                    "value": 1
                                  },
                                  "prefix": true
                                }
                              },
                              "consequent": {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "rejectConn"
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": true
                                  }
                                }
                              },
                              "alternate": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "localChan"
                                      },
                                      "right": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "self"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "_nextChan"
                                          }
                                        },
                                        "arguments": []
                                      }
                                    }
                                  },
                                  {
                                    "type": "IfStatement",
                                    "test": {
                                      "type": "BinaryExpression",
                                      "operator": "===",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "localChan"
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": false
                                      }
                                    },
                                    "consequent": {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "rejectConn"
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": true
                                        }
                                      }
                                    },
                                    "alternate": {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "self"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "_channels"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "push"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "localChan"
                                          }
                                        ]
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "type": "VariableDeclaration",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "accept"
                                  },
                                  "init": {
                                    "type": "FunctionExpression",
                                    "id": null,
                                    "params": [],
                                    "defaults": [],
                                    "body": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "VariableDeclaration",
                                          "declarations": [
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "chaninfo"
                                              },
                                              "init": {
                                                "type": "ObjectExpression",
                                                "properties": [
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Identifier",
                                                      "name": "type"
                                                    },
                                                    "value": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "info"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "type"
                                                      }
                                                    },
                                                    "kind": "init"
                                                  },
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Identifier",
                                                      "name": "incoming"
                                                    },
                                                    "value": {
                                                      "type": "ObjectExpression",
                                                      "properties": [
                                                        {
                                                          "type": "Property",
                                                          "key": {
                                                            "type": "Identifier",
                                                            "name": "id"
                                                          },
                                                          "value": {
                                                            "type": "Identifier",
                                                            "name": "localChan"
                                                          },
                                                          "kind": "init"
                                                        },
                                                        {
                                                          "type": "Property",
                                                          "key": {
                                                            "type": "Identifier",
                                                            "name": "window"
                                                          },
                                                          "value": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "Channel"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "MAX_WINDOW"
                                                            }
                                                          },
                                                          "kind": "init"
                                                        },
                                                        {
                                                          "type": "Property",
                                                          "key": {
                                                            "type": "Identifier",
                                                            "name": "packetSize"
                                                          },
                                                          "value": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "Channel"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "MAX_WINDOW"
                                                            }
                                                          },
                                                          "kind": "init"
                                                        },
                                                        {
                                                          "type": "Property",
                                                          "key": {
                                                            "type": "Identifier",
                                                            "name": "state"
                                                          },
                                                          "value": {
                                                            "type": "Literal",
                                                            "value": "open"
                                                          },
                                                          "kind": "init"
                                                        }
                                                      ]
                                                    },
                                                    "kind": "init"
                                                  },
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Identifier",
                                                      "name": "outgoing"
                                                    },
                                                    "value": {
                                                      "type": "ObjectExpression",
                                                      "properties": [
                                                        {
                                                          "type": "Property",
                                                          "key": {
                                                            "type": "Identifier",
                                                            "name": "id"
                                                          },
                                                          "value": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "info"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "sender"
                                                            }
                                                          },
                                                          "kind": "init"
                                                        },
                                                        {
                                                          "type": "Property",
                                                          "key": {
                                                            "type": "Identifier",
                                                            "name": "window"
                                                          },
                                                          "value": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "info"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "window"
                                                            }
                                                          },
                                                          "kind": "init"
                                                        },
                                                        {
                                                          "type": "Property",
                                                          "key": {
                                                            "type": "Identifier",
                                                            "name": "packetSize"
                                                          },
                                                          "value": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "info"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "packetSize"
                                                            }
                                                          },
                                                          "kind": "init"
                                                        },
                                                        {
                                                          "type": "Property",
                                                          "key": {
                                                            "type": "Identifier",
                                                            "name": "state"
                                                          },
                                                          "value": {
                                                            "type": "Literal",
                                                            "value": "open"
                                                          },
                                                          "kind": "init"
                                                        }
                                                      ]
                                                    },
                                                    "kind": "init"
                                                  }
                                                ]
                                              }
                                            }
                                          ],
                                          "kind": "var"
                                        },
                                        {
                                          "type": "VariableDeclaration",
                                          "declarations": [
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "stream"
                                              },
                                              "init": {
                                                "type": "NewExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "Channel"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "ChannelStream"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "NewExpression",
                                                    "callee": {
                                                      "type": "Identifier",
                                                      "name": "Channel"
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Identifier",
                                                        "name": "chaninfo"
                                                      },
                                                      {
                                                        "type": "Identifier",
                                                        "name": "self"
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            }
                                          ],
                                          "kind": "var"
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "stream"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "_channel"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "_stream"
                                              }
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "stream"
                                            }
                                          }
                                        },
                                        {
                                          "type": "VariableDeclaration",
                                          "declarations": [
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "buf"
                                              },
                                              "init": {
                                                "type": "NewExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "Buffer"
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "BinaryExpression",
                                                      "operator": "+",
                                                      "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "Literal",
                                                            "value": 1
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": 4
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": 4
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": 4
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": 4
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          ],
                                          "kind": "var"
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": true,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "buf"
                                              },
                                              "property": {
                                                "type": "Literal",
                                                "value": 0
                                              }
                                            },
                                            "right": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "MESSAGE"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "CHANNEL_OPEN_CONFIRMATION"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "buf"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "writeUInt32BE"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "info"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "sender"
                                                }
                                              },
                                              {
                                                "type": "Literal",
                                                "value": 1
                                              },
                                              {
                                                "type": "Literal",
                                                "value": true
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "buf"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "writeUInt32BE"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "localChan"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": 5
                                              },
                                              {
                                                "type": "Literal",
                                                "value": true
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "buf"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "writeUInt32BE"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "Channel"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "MAX_WINDOW"
                                                }
                                              },
                                              {
                                                "type": "Literal",
                                                "value": 9
                                              },
                                              {
                                                "type": "Literal",
                                                "value": true
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "buf"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "writeUInt32BE"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "Channel"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "MAX_WINDOW"
                                                }
                                              },
                                              {
                                                "type": "Literal",
                                                "value": 13
                                              },
                                              {
                                                "type": "Literal",
                                                "value": true
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "LogicalExpression",
                                            "operator": "&&",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "self"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "_debug"
                                              }
                                            },
                                            "right": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "self"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "_debug"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": "DEBUG: Connection: Sent CHANNEL_OPEN_CONFIRMATION"
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "self"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "_send"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "buf"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ReturnStatement",
                                          "argument": {
                                            "type": "Identifier",
                                            "name": "stream"
                                          }
                                        }
                                      ]
                                    },
                                    "rest": null,
                                    "generator": false,
                                    "expression": false
                                  }
                                }
                              ],
                              "kind": "var"
                            },
                            {
                              "type": "VariableDeclaration",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "reject"
                                  },
                                  "init": {
                                    "type": "FunctionExpression",
                                    "id": null,
                                    "params": [],
                                    "defaults": [],
                                    "body": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "VariableDeclaration",
                                          "declarations": [
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "reason"
                                              },
                                              "init": null
                                            }
                                          ],
                                          "kind": "var"
                                        },
                                        {
                                          "type": "IfStatement",
                                          "test": {
                                            "type": "BinaryExpression",
                                            "operator": "===",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "localChan"
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": false
                                            }
                                          },
                                          "consequent": {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "reason"
                                              },
                                              "right": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "CHANNEL_OPEN_FAILURE"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "RESOURCE_SHORTAGE"
                                                }
                                              }
                                            }
                                          },
                                          "alternate": {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "reason"
                                              },
                                              "right": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "CHANNEL_OPEN_FAILURE"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "CONNECT_FAILED"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "VariableDeclaration",
                                          "declarations": [
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "buf"
                                              },
                                              "init": {
                                                "type": "NewExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "Buffer"
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "BinaryExpression",
                                                      "operator": "+",
                                                      "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": 1
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": 4
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": 4
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": 4
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": 4
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": 2
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          ],
                                          "kind": "var"
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": true,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "buf"
                                              },
                                              "property": {
                                                "type": "Literal",
                                                "value": 0
                                              }
                                            },
                                            "right": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "MESSAGE"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "CHANNEL_OPEN_FAILURE"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "buf"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "writeUInt32BE"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "info"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "sender"
                                                }
                                              },
                                              {
                                                "type": "Literal",
                                                "value": 1
                                              },
                                              {
                                                "type": "Literal",
                                                "value": true
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "buf"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "writeUInt32BE"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "reason"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": 5
                                              },
                                              {
                                                "type": "Literal",
                                                "value": true
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "buf"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "writeUInt32BE"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": 0
                                              },
                                              {
                                                "type": "Literal",
                                                "value": 9
                                              },
                                              {
                                                "type": "Literal",
                                                "value": true
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "buf"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "writeUInt32BE"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": 2
                                              },
                                              {
                                                "type": "Literal",
                                                "value": 13
                                              },
                                              {
                                                "type": "Literal",
                                                "value": true
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "buf"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "write"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "en"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": 17
                                              },
                                              {
                                                "type": "Literal",
                                                "value": 2
                                              },
                                              {
                                                "type": "Literal",
                                                "value": "ascii"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "LogicalExpression",
                                            "operator": "&&",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "self"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "_debug"
                                              }
                                            },
                                            "right": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "self"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "_debug"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": "DEBUG: Connection: Sent CHANNEL_OPEN_FAILURE"
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "self"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "_send"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "buf"
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    },
                                    "rest": null,
                                    "generator": false,
                                    "expression": false
                                  }
                                }
                              ],
                              "kind": "var"
                            },
                            {
                              "type": "IfStatement",
                              "test": {
                                "type": "Identifier",
                                "name": "rejectConn"
                              },
                              "consequent": {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "reject"
                                  },
                                  "arguments": []
                                }
                              },
                              "alternate": null
                            },
                            {
                              "type": "IfStatement",
                              "test": {
                                "type": "BinaryExpression",
                                "operator": "!==",
                                "left": {
                                  "type": "Identifier",
                                  "name": "localChan"
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": false
                                }
                              },
                              "consequent": {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "self"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "emit"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "Literal",
                                      "value": "tcp connection"
                                    },
                                    {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "info"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "data"
                                      }
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "accept"
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "reject"
                                    }
                                  ]
                                }
                              },
                              "alternate": null
                            }
                          ]
                        },
                        "alternate": null
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "ThisExpression"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "_parser"
                  }
                },
                "property": {
                  "type": "Identifier",
                  "name": "once"
                }
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "DISCONNECT"
                },
                {
                  "type": "FunctionExpression",
                  "id": null,
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "reason"
                    },
                    {
                      "type": "Identifier",
                      "name": "reasonCode"
                    },
                    {
                      "type": "Identifier",
                      "name": "desc"
                    },
                    {
                      "type": "Identifier",
                      "name": "lang"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "msg"
                            },
                            "init": {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                  "type": "Literal",
                                  "value": "Disconnected by host ("
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "reason"
                                }
                              },
                              "right": {
                                "type": "Literal",
                                "value": ")"
                              }
                            }
                          },
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "err"
                            },
                            "init": null
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "desc"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "length"
                          }
                        },
                        "consequent": {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "AssignmentExpression",
                            "operator": "+=",
                            "left": {
                              "type": "Identifier",
                              "name": "msg"
                            },
                            "right": {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "Literal",
                                "value": ": "
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "desc"
                              }
                            }
                          }
                        },
                        "alternate": null
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "err"
                          },
                          "right": {
                            "type": "NewExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "Error"
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "msg"
                              }
                            ]
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "err"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "level"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "connection-ssh"
                          }
                        }
                      },
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "desc"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "length"
                          }
                        },
                        "consequent": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "err"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "description"
                                  }
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "desc"
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "err"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "lang"
                                  }
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "lang"
                                }
                              }
                            }
                          ]
                        },
                        "alternate": null
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "self"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "emit"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "error"
                            },
                            {
                              "type": "Identifier",
                              "name": "err"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "self"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_sock"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "end"
                            }
                          },
                          "arguments": []
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                }
              ]
            }
          }
        ]
      },
      "rest": null,
      "generator": false,
      "expression": false
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "inherits"
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "Connection"
          },
          {
            "type": "Identifier",
            "name": "EventEmitter"
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "Connection"
            },
            "property": {
              "type": "Identifier",
              "name": "prototype"
            }
          },
          "property": {
            "type": "Identifier",
            "name": "connect"
          }
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "params": [
            {
              "type": "Identifier",
              "name": "opts"
            }
          ],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "self"
                    },
                    "init": {
                      "type": "ThisExpression"
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_host"
                    }
                  },
                  "right": {
                    "type": "LogicalExpression",
                    "operator": "||",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "opts"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "host"
                      }
                    },
                    "right": {
                      "type": "Literal",
                      "value": "localhost"
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_port"
                    }
                  },
                  "right": {
                    "type": "LogicalExpression",
                    "operator": "||",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "opts"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "port"
                      }
                    },
                    "right": {
                      "type": "Literal",
                      "value": 22
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_compress"
                    }
                  },
                  "right": {
                    "type": "LogicalExpression",
                    "operator": "||",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "opts"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "compress"
                      }
                    },
                    "right": {
                      "type": "Literal",
                      "value": false
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_state"
                    }
                  },
                  "right": {
                    "type": "Literal",
                    "value": "closed"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_username"
                    }
                  },
                  "right": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "opts"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "username"
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_password"
                    }
                  },
                  "right": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "opts"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "password"
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_privateKey"
                    }
                  },
                  "right": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "opts"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "privateKey"
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_publicKey"
                    }
                  },
                  "right": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "opts"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "publicKey"
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_passphrase"
                    }
                  },
                  "right": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "opts"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "passphrase"
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_tryKeyboard"
                    }
                  },
                  "right": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "opts"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "tryKeyboard"
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_fingerprint"
                    }
                  },
                  "right": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "opts"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "hostHash"
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_cbfingerprint"
                    }
                  },
                  "right": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "opts"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "hostVerifier"
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_agent"
                    }
                  },
                  "right": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "opts"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "agent"
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_pingInterval"
                    }
                  },
                  "right": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "opts"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "pingInterval"
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_debug"
                    }
                  },
                  "right": {
                    "type": "ConditionalExpression",
                    "test": {
                      "type": "BinaryExpression",
                      "operator": "===",
                      "left": {
                        "type": "UnaryExpression",
                        "operator": "typeof",
                        "argument": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "opts"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "debug"
                          }
                        },
                        "prefix": true
                      },
                      "right": {
                        "type": "Literal",
                        "value": "function"
                      }
                    },
                    "consequent": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "opts"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "debug"
                      }
                    },
                    "alternate": {
                      "type": "Identifier",
                      "name": "undefined"
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_parser"
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "debug"
                    }
                  },
                  "right": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_debug"
                    }
                  }
                }
              },
              {
                "type": "IfStatement",
                "test": {
                  "type": "LogicalExpression",
                  "operator": "||",
                  "left": {
                    "type": "BinaryExpression",
                    "operator": "===",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_pingInterval"
                      }
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "undefined"
                    }
                  },
                  "right": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "BinaryExpression",
                      "operator": "===",
                      "left": {
                        "type": "UnaryExpression",
                        "operator": "typeof",
                        "argument": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "ThisExpression"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "_pingInterval"
                          }
                        },
                        "prefix": true
                      },
                      "right": {
                        "type": "Literal",
                        "value": "number"
                      }
                    },
                    "right": {
                      "type": "BinaryExpression",
                      "operator": "<",
                      "left": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "ThisExpression"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "_pingInterval"
                        }
                      },
                      "right": {
                        "type": "Literal",
                        "value": 0
                      }
                    }
                  }
                },
                "consequent": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_pingInterval"
                      }
                    },
                    "right": {
                      "type": "Literal",
                      "value": 60000
                    }
                  }
                },
                "alternate": null
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_sock"
                    }
                  },
                  "right": {
                    "type": "ConditionalExpression",
                    "test": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "opts"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "sock"
                      }
                    },
                    "consequent": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "opts"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "sock"
                      }
                    },
                    "alternate": {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Socket"
                      },
                      "arguments": []
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_channels"
                    }
                  },
                  "right": {
                    "type": "ArrayExpression",
                    "elements": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_buffer"
                    }
                  },
                  "right": {
                    "type": "ArrayExpression",
                    "elements": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_callbacks"
                    }
                  },
                  "right": {
                    "type": "ArrayExpression",
                    "elements": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_forwarding"
                    }
                  },
                  "right": {
                    "type": "ArrayExpression",
                    "elements": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_auths"
                    }
                  },
                  "right": {
                    "type": "ObjectExpression",
                    "properties": [
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "methods"
                        },
                        "value": {
                          "type": "Identifier",
                          "name": "undefined"
                        },
                        "kind": "init"
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "partial"
                        },
                        "value": {
                          "type": "Identifier",
                          "name": "undefined"
                        },
                        "kind": "init"
                      }
                    ]
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_agentKeys"
                    }
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "undefined"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_seqno"
                    }
                  },
                  "right": {
                    "type": "Literal",
                    "value": 0
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_encryptSize"
                    }
                  },
                  "right": {
                    "type": "Literal",
                    "value": 8
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_encrypt"
                    }
                  },
                  "right": {
                    "type": "Literal",
                    "value": false
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_hmacKey"
                    }
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "undefined"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_hmacSize"
                    }
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "undefined"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_hmac"
                    }
                  },
                  "right": {
                    "type": "Literal",
                    "value": false
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_server_ident_raw"
                    }
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "undefined"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_kexinit"
                    }
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "undefined"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_sessionid"
                    }
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "undefined"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_pinger"
                    }
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "undefined"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_curChan"
                    }
                  },
                  "right": {
                    "type": "UnaryExpression",
                    "operator": "-",
                    "argument": {
                      "type": "Literal",
                      "value": 1
                    },
                    "prefix": true
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_parser"
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "reset"
                    }
                  },
                  "arguments": []
                }
              },
              {
                "type": "IfStatement",
                "test": {
                  "type": "LogicalExpression",
                  "operator": "&&",
                  "left": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "BinaryExpression",
                      "operator": "!==",
                      "left": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "ThisExpression"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "_fingerprint"
                        }
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "undefined"
                      }
                    },
                    "right": {
                      "type": "BinaryExpression",
                      "operator": "!==",
                      "left": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "ThisExpression"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "_fingerprint"
                        }
                      },
                      "right": {
                        "type": "Literal",
                        "value": "md5"
                      }
                    }
                  },
                  "right": {
                    "type": "BinaryExpression",
                    "operator": "!==",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_fingerprint"
                      }
                    },
                    "right": {
                      "type": "Literal",
                      "value": "sha1"
                    }
                  }
                },
                "consequent": {
                  "type": "ThrowStatement",
                  "argument": {
                    "type": "NewExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "Error"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "hostHash must be 'sha1' or 'md5'"
                      }
                    ]
                  }
                },
                "alternate": null
              },
              {
                "type": "IfStatement",
                "test": {
                  "type": "LogicalExpression",
                  "operator": "&&",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_fingerprint"
                    }
                  },
                  "right": {
                    "type": "BinaryExpression",
                    "operator": "!==",
                    "left": {
                      "type": "UnaryExpression",
                      "operator": "typeof",
                      "argument": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "ThisExpression"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "_cbfingerprint"
                        }
                      },
                      "prefix": true
                    },
                    "right": {
                      "type": "Literal",
                      "value": "function"
                    }
                  }
                },
                "consequent": {
                  "type": "ThrowStatement",
                  "argument": {
                    "type": "NewExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "Error"
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "hostVerifier is not a function"
                      }
                    ]
                  }
                },
                "alternate": null
              },
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "keyInfo"
                    },
                    "init": null
                  }
                ],
                "kind": "var"
              },
              {
                "type": "IfStatement",
                "test": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "ThisExpression"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "_privateKey"
                  }
                },
                "consequent": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "keyInfo"
                        },
                        "right": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "keyParser"
                          },
                          "arguments": [
                            {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "ThisExpression"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_privateKey"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                          "type": "Identifier",
                          "name": "keyInfo"
                        },
                        "prefix": true
                      },
                      "consequent": {
                        "type": "ThrowStatement",
                        "argument": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Error"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "Unable to parse given privateKey value"
                            }
                          ]
                        }
                      },
                      "alternate": null
                    },
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "keyInfo"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "private"
                          }
                        },
                        "prefix": true
                      },
                      "consequent": {
                        "type": "ThrowStatement",
                        "argument": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Error"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "privateKey value does not contain a (valid) private key"
                            }
                          ]
                        }
                      },
                      "alternate": null
                    },
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "keyInfo"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "encryption"
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "BinaryExpression",
                              "operator": "!==",
                              "left": {
                                "type": "UnaryExpression",
                                "operator": "typeof",
                                "argument": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "ThisExpression"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "_passphrase"
                                  }
                                },
                                "prefix": true
                              },
                              "right": {
                                "type": "Literal",
                                "value": "string"
                              }
                            },
                            "consequent": {
                              "type": "ThrowStatement",
                              "argument": {
                                "type": "NewExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "Error"
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": "Encrypted private key detected, but no passphrase given"
                                  }
                                ]
                              }
                            },
                            "alternate": null
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "keyInfo"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "encryption"
                                }
                              },
                              "right": {
                                "type": "LogicalExpression",
                                "operator": "||",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": true,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "SSH_TO_OPENSSL"
                                  },
                                  "property": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "keyInfo"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "encryption"
                                    }
                                  }
                                },
                                "right": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "keyInfo"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "encryption"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "iv"
                                },
                                "init": {
                                  "type": "NewExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "Buffer"
                                  },
                                  "arguments": [
                                    {
                                      "type": "MemberExpression",
                                      "computed": true,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "keyInfo"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "extra"
                                        }
                                      },
                                      "property": {
                                        "type": "Literal",
                                        "value": 0
                                      }
                                    },
                                    {
                                      "type": "Literal",
                                      "value": "hex"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "key"
                                },
                                "init": null
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "keylen"
                                },
                                "init": {
                                  "type": "Literal",
                                  "value": 0
                                }
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "SwitchStatement",
                            "discriminant": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "keyInfo"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "encryption"
                              }
                            },
                            "cases": [
                              {
                                "type": "SwitchCase",
                                "test": {
                                  "type": "Literal",
                                  "value": "aes-256-cbc"
                                },
                                "consequent": []
                              },
                              {
                                "type": "SwitchCase",
                                "test": {
                                  "type": "Literal",
                                  "value": "aes-256-ctr"
                                },
                                "consequent": [
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "keylen"
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": 32
                                      }
                                    }
                                  },
                                  {
                                    "type": "BreakStatement",
                                    "label": null
                                  }
                                ]
                              },
                              {
                                "type": "SwitchCase",
                                "test": {
                                  "type": "Literal",
                                  "value": "des-ede3-cbc"
                                },
                                "consequent": []
                              },
                              {
                                "type": "SwitchCase",
                                "test": {
                                  "type": "Literal",
                                  "value": "des-ede3"
                                },
                                "consequent": []
                              },
                              {
                                "type": "SwitchCase",
                                "test": {
                                  "type": "Literal",
                                  "value": "aes-192-cbc"
                                },
                                "consequent": []
                              },
                              {
                                "type": "SwitchCase",
                                "test": {
                                  "type": "Literal",
                                  "value": "aes-192-ctr"
                                },
                                "consequent": [
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "keylen"
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": 24
                                      }
                                    }
                                  },
                                  {
                                    "type": "BreakStatement",
                                    "label": null
                                  }
                                ]
                              },
                              {
                                "type": "SwitchCase",
                                "test": {
                                  "type": "Literal",
                                  "value": "aes-128-cbc"
                                },
                                "consequent": []
                              },
                              {
                                "type": "SwitchCase",
                                "test": {
                                  "type": "Literal",
                                  "value": "aes-128-ctr"
                                },
                                "consequent": []
                              },
                              {
                                "type": "SwitchCase",
                                "test": {
                                  "type": "Literal",
                                  "value": "cast-cbc"
                                },
                                "consequent": []
                              },
                              {
                                "type": "SwitchCase",
                                "test": {
                                  "type": "Literal",
                                  "value": "bf-cbc"
                                },
                                "consequent": [
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "keylen"
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": 16
                                      }
                                    }
                                  },
                                  {
                                    "type": "BreakStatement",
                                    "label": null
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "key"
                              },
                              "right": {
                                "type": "NewExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "Buffer"
                                },
                                "arguments": [
                                  {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "crypto"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "createHash"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "md5"
                                              }
                                            ]
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "update"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ThisExpression"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "_passphrase"
                                              }
                                            },
                                            "right": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "iv"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "toString"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": "binary"
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 0
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 8
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "Literal",
                                            "value": "binary"
                                          }
                                        ]
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "digest"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "value": "binary"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "binary"
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "type": "WhileStatement",
                            "test": {
                              "type": "BinaryExpression",
                              "operator": ">",
                              "left": {
                                "type": "Identifier",
                                "name": "keylen"
                              },
                              "right": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "key"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "length"
                                }
                              }
                            },
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "key"
                                    },
                                    "right": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "Buffer"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "concat"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "ArrayExpression",
                                          "elements": [
                                            {
                                              "type": "Identifier",
                                              "name": "key"
                                            },
                                            {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "NewExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "Buffer"
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "crypto"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "createHash"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Literal",
                                                                  "value": "md5"
                                                                }
                                                              ]
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "update"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "BinaryExpression",
                                                              "operator": "+",
                                                              "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "key"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "toString"
                                                                    }
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "Literal",
                                                                      "value": "binary"
                                                                    }
                                                                  ]
                                                                },
                                                                "right": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "ThisExpression"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_passphrase"
                                                                  }
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "iv"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "toString"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Literal",
                                                                    "value": "binary"
                                                                  }
                                                                ]
                                                              }
                                                            },
                                                            {
                                                              "type": "Literal",
                                                              "value": "binary"
                                                            }
                                                          ]
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "digest"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Literal",
                                                          "value": "binary"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "binary"
                                                    }
                                                  ]
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "slice"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": 0
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 8
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "BinaryExpression",
                              "operator": ">",
                              "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "key"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "length"
                                }
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "keylen"
                              }
                            },
                            "consequent": {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "key"
                                },
                                "right": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "key"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "slice"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "Literal",
                                      "value": 0
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "keylen"
                                    }
                                  ]
                                }
                              }
                            },
                            "alternate": null
                          },
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "dc"
                                },
                                "init": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "crypto"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "createDecipheriv"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "keyInfo"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "encryption"
                                      }
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "key"
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "iv"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "out"
                                },
                                "init": null
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "dc"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "setAutoPadding"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": false
                                }
                              ]
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "out"
                              },
                              "right": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "dc"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "update"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "keyInfo"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "private"
                                    }
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "binary"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "binary"
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "+=",
                              "left": {
                                "type": "Identifier",
                                "name": "out"
                              },
                              "right": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "dc"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "final"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": "binary"
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "orig"
                                },
                                "init": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "keyInfo"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "privateOrig"
                                      }
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "toString"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "Literal",
                                      "value": "utf8"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "newOrig"
                                },
                                "init": {
                                  "type": "MemberExpression",
                                  "computed": true,
                                  "object": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Literal",
                                        "value": {}
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "exec"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "orig"
                                      }
                                    ]
                                  },
                                  "property": {
                                    "type": "Literal",
                                    "value": 1
                                  }
                                }
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "b64key"
                                },
                                "init": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "NewExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "Buffer"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Identifier",
                                          "name": "out"
                                        },
                                        {
                                          "type": "Literal",
                                          "value": "binary"
                                        }
                                      ]
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "toString"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "Literal",
                                      "value": "base64"
                                    }
                                  ]
                                }
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "+=",
                              "left": {
                                "type": "Identifier",
                                "name": "newOrig"
                              },
                              "right": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "b64key"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "match"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "value": {}
                                      }
                                    ]
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "join"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": "\n"
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "+=",
                              "left": {
                                "type": "Identifier",
                                "name": "newOrig"
                              },
                              "right": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Literal",
                                      "value": {}
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "exec"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "orig"
                                    }
                                  ]
                                },
                                "property": {
                                  "type": "Literal",
                                  "value": 1
                                }
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "keyInfo"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "private"
                                }
                              },
                              "right": {
                                "type": "NewExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "Buffer"
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "out"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "binary"
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "keyInfo"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "privateOrig"
                                }
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "newOrig"
                              }
                            }
                          }
                        ]
                      },
                      "alternate": null
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "ThisExpression"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "_privateKey"
                          }
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "keyInfo"
                        }
                      }
                    },
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "keyInfo"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "public"
                        }
                      },
                      "consequent": {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "ThisExpression"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_publicKey"
                            }
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "keyInfo"
                          }
                        }
                      },
                      "alternate": null
                    }
                  ]
                },
                "alternate": null
              },
              {
                "type": "IfStatement",
                "test": {
                  "type": "LogicalExpression",
                  "operator": "&&",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_privateKey"
                    }
                  },
                  "right": {
                    "type": "UnaryExpression",
                    "operator": "!",
                    "argument": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "ThisExpression"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "_privateKey"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "public"
                      }
                    },
                    "prefix": true
                  }
                },
                "consequent": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "ThisExpression"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "_publicKey"
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "keyInfo"
                              },
                              "right": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "keyParser"
                                },
                                "arguments": [
                                  {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "ThisExpression"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "_publicKey"
                                    }
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "UnaryExpression",
                              "operator": "!",
                              "argument": {
                                "type": "Identifier",
                                "name": "keyInfo"
                              },
                              "prefix": true
                            },
                            "consequent": {
                              "type": "ThrowStatement",
                              "argument": {
                                "type": "NewExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "Error"
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": "Unable to parse given publicKey value"
                                  }
                                ]
                              }
                            },
                            "alternate": null
                          },
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "UnaryExpression",
                              "operator": "!",
                              "argument": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "keyInfo"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "public"
                                }
                              },
                              "prefix": true
                            },
                            "consequent": {
                              "type": "ThrowStatement",
                              "argument": {
                                "type": "NewExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "Error"
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": "publicKey value does not contain a (valid) public key"
                                  }
                                ]
                              }
                            },
                            "alternate": null
                          },
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "BinaryExpression",
                              "operator": "!==",
                              "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "keyInfo"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "type"
                                }
                              },
                              "right": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "ThisExpression"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "_privateKey"
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "type"
                                }
                              }
                            },
                            "consequent": {
                              "type": "ThrowStatement",
                              "argument": {
                                "type": "NewExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "Error"
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": "Mismatched private and public key types"
                                  }
                                ]
                              }
                            },
                            "alternate": null
                          }
                        ]
                      },
                      "alternate": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "i"
                                },
                                "init": {
                                  "type": "Literal",
                                  "value": 2
                                }
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "len"
                                },
                                "init": null
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "octets"
                                },
                                "init": null
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "privKey"
                                },
                                "init": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "ThisExpression"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "_privateKey"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "private"
                                  }
                                }
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "nStart"
                                },
                                "init": null
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "nLen"
                                },
                                "init": null
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "eStart"
                                },
                                "init": null
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "eLen"
                                },
                                "init": null
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "pStart"
                                },
                                "init": null
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "pLen"
                                },
                                "init": null
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "qStart"
                                },
                                "init": null
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "qLen"
                                },
                                "init": null
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "gStart"
                                },
                                "init": null
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "gLen"
                                },
                                "init": null
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "yStart"
                                },
                                "init": null
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "yLen"
                                },
                                "init": null
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "BinaryExpression",
                              "operator": "===",
                              "left": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                  "type": "Identifier",
                                  "name": "privKey"
                                },
                                "property": {
                                  "type": "Literal",
                                  "value": 0
                                }
                              },
                              "right": {
                                "type": "Literal",
                                "value": 48
                              }
                            },
                            "consequent": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "IfStatement",
                                  "test": {
                                    "type": "BinaryExpression",
                                    "operator": "&",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": true,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "privKey"
                                      },
                                      "property": {
                                        "type": "Literal",
                                        "value": 1
                                      }
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": 128
                                    }
                                  },
                                  "consequent": {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "+=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "i"
                                      },
                                      "right": {
                                        "type": "BinaryExpression",
                                        "operator": "&",
                                        "left": {
                                          "type": "MemberExpression",
                                          "computed": true,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "privKey"
                                          },
                                          "property": {
                                            "type": "Literal",
                                            "value": 1
                                          }
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": 127
                                        }
                                      }
                                    }
                                  },
                                  "alternate": null
                                },
                                {
                                  "type": "IfStatement",
                                  "test": {
                                    "type": "BinaryExpression",
                                    "operator": "!==",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": true,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "privKey"
                                      },
                                      "property": {
                                        "type": "UpdateExpression",
                                        "operator": "++",
                                        "argument": {
                                          "type": "Identifier",
                                          "name": "i"
                                        },
                                        "prefix": false
                                      }
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": 2
                                    }
                                  },
                                  "consequent": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ThrowStatement",
                                        "argument": {
                                          "type": "NewExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "Error"
                                          },
                                          "arguments": [
                                            {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "Literal",
                                                "value": "Unable to parse private key while generating public"
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": " key (expected integer for version)"
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "alternate": null
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "len"
                                    },
                                    "right": {
                                      "type": "MemberExpression",
                                      "computed": true,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "privKey"
                                      },
                                      "property": {
                                        "type": "UpdateExpression",
                                        "operator": "++",
                                        "argument": {
                                          "type": "Identifier",
                                          "name": "i"
                                        },
                                        "prefix": false
                                      }
                                    }
                                  }
                                },
                                {
                                  "type": "IfStatement",
                                  "test": {
                                    "type": "BinaryExpression",
                                    "operator": "&",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "len"
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": 128
                                    }
                                  },
                                  "consequent": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "octets"
                                          },
                                          "right": {
                                            "type": "BinaryExpression",
                                            "operator": "&",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "len"
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": 127
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "len"
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": 0
                                          }
                                        }
                                      },
                                      {
                                        "type": "WhileStatement",
                                        "test": {
                                          "type": "BinaryExpression",
                                          "operator": ">",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "octets"
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": 0
                                          }
                                        },
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "+=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "len"
                                                },
                                                "right": {
                                                  "type": "BinaryExpression",
                                                  "operator": "*",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "privKey"
                                                    },
                                                    "property": {
                                                      "type": "UpdateExpression",
                                                      "operator": "++",
                                                      "argument": {
                                                        "type": "Identifier",
                                                        "name": "i"
                                                      },
                                                      "prefix": false
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "Math"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "pow"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Literal",
                                                        "value": 2
                                                      },
                                                      {
                                                        "type": "BinaryExpression",
                                                        "operator": "*",
                                                        "left": {
                                                          "type": "BinaryExpression",
                                                          "operator": "-",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "octets"
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": 1
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": 8
                                                        }
                                                      }
                                                    ]
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "UpdateExpression",
                                                "operator": "--",
                                                "argument": {
                                                  "type": "Identifier",
                                                  "name": "octets"
                                                },
                                                "prefix": true
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "alternate": null
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "+=",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "i"
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "len"
                                    }
                                  }
                                },
                                {
                                  "type": "IfStatement",
                                  "test": {
                                    "type": "BinaryExpression",
                                    "operator": "===",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "_privateKey"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "type"
                                      }
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": "rsa"
                                    }
                                  },
                                  "consequent": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "BinaryExpression",
                                          "operator": "!==",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "privKey"
                                            },
                                            "property": {
                                              "type": "UpdateExpression",
                                              "operator": "++",
                                              "argument": {
                                                "type": "Identifier",
                                                "name": "i"
                                              },
                                              "prefix": false
                                            }
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": 2
                                          }
                                        },
                                        "consequent": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ThrowStatement",
                                              "argument": {
                                                "type": "NewExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "Error"
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "Literal",
                                                      "value": "Unable to parse private key while generating public"
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": " key (expected integer for n)"
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "alternate": null
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "nLen"
                                          },
                                          "right": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "privKey"
                                            },
                                            "property": {
                                              "type": "UpdateExpression",
                                              "operator": "++",
                                              "argument": {
                                                "type": "Identifier",
                                                "name": "i"
                                              },
                                              "prefix": false
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "BinaryExpression",
                                          "operator": "&",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "nLen"
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": 128
                                          }
                                        },
                                        "consequent": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "octets"
                                                },
                                                "right": {
                                                  "type": "BinaryExpression",
                                                  "operator": "&",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "nLen"
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": 127
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "nLen"
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": 0
                                                }
                                              }
                                            },
                                            {
                                              "type": "WhileStatement",
                                              "test": {
                                                "type": "BinaryExpression",
                                                "operator": ">",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "octets"
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": 0
                                                }
                                              },
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "+=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "nLen"
                                                      },
                                                      "right": {
                                                        "type": "BinaryExpression",
                                                        "operator": "*",
                                                        "left": {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "privKey"
                                                          },
                                                          "property": {
                                                            "type": "UpdateExpression",
                                                            "operator": "++",
                                                            "argument": {
                                                              "type": "Identifier",
                                                              "name": "i"
                                                            },
                                                            "prefix": false
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "Math"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "pow"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Literal",
                                                              "value": 2
                                                            },
                                                            {
                                                              "type": "BinaryExpression",
                                                              "operator": "*",
                                                              "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "-",
                                                                "left": {
                                                                  "type": "Identifier",
                                                                  "name": "octets"
                                                                },
                                                                "right": {
                                                                  "type": "Literal",
                                                                  "value": 1
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": 8
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "UpdateExpression",
                                                      "operator": "--",
                                                      "argument": {
                                                        "type": "Identifier",
                                                        "name": "octets"
                                                      },
                                                      "prefix": true
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "alternate": null
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "nStart"
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "i"
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "+=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "i"
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "nLen"
                                          }
                                        }
                                      },
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "BinaryExpression",
                                          "operator": "!==",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "privKey"
                                            },
                                            "property": {
                                              "type": "UpdateExpression",
                                              "operator": "++",
                                              "argument": {
                                                "type": "Identifier",
                                                "name": "i"
                                              },
                                              "prefix": false
                                            }
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": 2
                                          }
                                        },
                                        "consequent": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ThrowStatement",
                                              "argument": {
                                                "type": "NewExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "Error"
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "Literal",
                                                      "value": "Unable to parse private key while generating public"
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": " key (expected integer for e)"
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "alternate": null
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "eLen"
                                          },
                                          "right": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "privKey"
                                            },
                                            "property": {
                                              "type": "UpdateExpression",
                                              "operator": "++",
                                              "argument": {
                                                "type": "Identifier",
                                                "name": "i"
                                              },
                                              "prefix": false
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "BinaryExpression",
                                          "operator": "&",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "eLen"
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": 128
                                          }
                                        },
                                        "consequent": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "octets"
                                                },
                                                "right": {
                                                  "type": "BinaryExpression",
                                                  "operator": "&",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "eLen"
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": 127
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "eLen"
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": 0
                                                }
                                              }
                                            },
                                            {
                                              "type": "WhileStatement",
                                              "test": {
                                                "type": "BinaryExpression",
                                                "operator": ">",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "octets"
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": 0
                                                }
                                              },
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "+=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "eLen"
                                                      },
                                                      "right": {
                                                        "type": "BinaryExpression",
                                                        "operator": "*",
                                                        "left": {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "privKey"
                                                          },
                                                          "property": {
                                                            "type": "UpdateExpression",
                                                            "operator": "++",
                                                            "argument": {
                                                              "type": "Identifier",
                                                              "name": "i"
                                                            },
                                                            "prefix": false
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "Math"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "pow"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Literal",
                                                              "value": 2
                                                            },
                                                            {
                                                              "type": "BinaryExpression",
                                                              "operator": "*",
                                                              "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "-",
                                                                "left": {
                                                                  "type": "Identifier",
                                                                  "name": "octets"
                                                                },
                                                                "right": {
                                                                  "type": "Literal",
                                                                  "value": 1
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": 8
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "UpdateExpression",
                                                      "operator": "--",
                                                      "argument": {
                                                        "type": "Identifier",
                                                        "name": "octets"
                                                      },
                                                      "prefix": true
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "alternate": null
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "eStart"
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "i"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "alternate": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "BinaryExpression",
                                          "operator": "!==",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "privKey"
                                            },
                                            "property": {
                                              "type": "UpdateExpression",
                                              "operator": "++",
                                              "argument": {
                                                "type": "Identifier",
                                                "name": "i"
                                              },
                                              "prefix": false
                                            }
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": 2
                                          }
                                        },
                                        "consequent": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ThrowStatement",
                                              "argument": {
                                                "type": "NewExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "Error"
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "Literal",
                                                      "value": "Unable to parse private key while generating public"
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": " key (expected integer for p)"
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "alternate": null
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "pLen"
                                          },
                                          "right": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "privKey"
                                            },
                                            "property": {
                                              "type": "UpdateExpression",
                                              "operator": "++",
                                              "argument": {
                                                "type": "Identifier",
                                                "name": "i"
                                              },
                                              "prefix": false
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "BinaryExpression",
                                          "operator": "&",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "pLen"
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": 128
                                          }
                                        },
                                        "consequent": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "octets"
                                                },
                                                "right": {
                                                  "type": "BinaryExpression",
                                                  "operator": "&",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "pLen"
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": 127
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "pLen"
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": 0
                                                }
                                              }
                                            },
                                            {
                                              "type": "WhileStatement",
                                              "test": {
                                                "type": "BinaryExpression",
                                                "operator": ">",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "octets"
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": 0
                                                }
                                              },
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "+=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "pLen"
                                                      },
                                                      "right": {
                                                        "type": "BinaryExpression",
                                                        "operator": "*",
                                                        "left": {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "privKey"
                                                          },
                                                          "property": {
                                                            "type": "UpdateExpression",
                                                            "operator": "++",
                                                            "argument": {
                                                              "type": "Identifier",
                                                              "name": "i"
                                                            },
                                                            "prefix": false
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "Math"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "pow"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Literal",
                                                              "value": 2
                                                            },
                                                            {
                                                              "type": "BinaryExpression",
                                                              "operator": "*",
                                                              "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "-",
                                                                "left": {
                                                                  "type": "Identifier",
                                                                  "name": "octets"
                                                                },
                                                                "right": {
                                                                  "type": "Literal",
                                                                  "value": 1
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": 8
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "UpdateExpression",
                                                      "operator": "--",
                                                      "argument": {
                                                        "type": "Identifier",
                                                        "name": "octets"
                                                      },
                                                      "prefix": true
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "alternate": null
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "pStart"
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "i"
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "+=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "i"
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "pLen"
                                          }
                                        }
                                      },
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "BinaryExpression",
                                          "operator": "!==",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "privKey"
                                            },
                                            "property": {
                                              "type": "UpdateExpression",
                                              "operator": "++",
                                              "argument": {
                                                "type": "Identifier",
                                                "name": "i"
                                              },
                                              "prefix": false
                                            }
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": 2
                                          }
                                        },
                                        "consequent": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ThrowStatement",
                                              "argument": {
                                                "type": "NewExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "Error"
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "Literal",
                                                      "value": "Unable to parse private key while generating public"
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": " key (expected integer for q)"
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "alternate": null
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "qLen"
                                          },
                                          "right": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "privKey"
                                            },
                                            "property": {
                                              "type": "UpdateExpression",
                                              "operator": "++",
                                              "argument": {
                                                "type": "Identifier",
                                                "name": "i"
                                              },
                                              "prefix": false
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "BinaryExpression",
                                          "operator": "&",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "qLen"
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": 128
                                          }
                                        },
                                        "consequent": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "octets"
                                                },
                                                "right": {
                                                  "type": "BinaryExpression",
                                                  "operator": "&",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "qLen"
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": 127
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "qLen"
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": 0
                                                }
                                              }
                                            },
                                            {
                                              "type": "WhileStatement",
                                              "test": {
                                                "type": "BinaryExpression",
                                                "operator": ">",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "octets"
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": 0
                                                }
                                              },
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "+=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "qLen"
                                                      },
                                                      "right": {
                                                        "type": "BinaryExpression",
                                                        "operator": "*",
                                                        "left": {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "privKey"
                                                          },
                                                          "property": {
                                                            "type": "UpdateExpression",
                                                            "operator": "++",
                                                            "argument": {
                                                              "type": "Identifier",
                                                              "name": "i"
                                                            },
                                                            "prefix": false
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "Math"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "pow"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Literal",
                                                              "value": 2
                                                            },
                                                            {
                                                              "type": "BinaryExpression",
                                                              "operator": "*",
                                                              "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "-",
                                                                "left": {
                                                                  "type": "Identifier",
                                                                  "name": "octets"
                                                                },
                                                                "right": {
                                                                  "type": "Literal",
                                                                  "value": 1
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": 8
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "UpdateExpression",
                                                      "operator": "--",
                                                      "argument": {
                                                        "type": "Identifier",
                                                        "name": "octets"
                                                      },
                                                      "prefix": true
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "alternate": null
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "qStart"
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "i"
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "+=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "i"
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "qLen"
                                          }
                                        }
                                      },
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "BinaryExpression",
                                          "operator": "!==",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "privKey"
                                            },
                                            "property": {
                                              "type": "UpdateExpression",
                                              "operator": "++",
                                              "argument": {
                                                "type": "Identifier",
                                                "name": "i"
                                              },
                                              "prefix": false
                                            }
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": 2
                                          }
                                        },
                                        "consequent": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ThrowStatement",
                                              "argument": {
                                                "type": "NewExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "Error"
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "Literal",
                                                      "value": "Unable to parse private key while generating public"
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": " key (expected integer for g)"
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "alternate": null
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "gLen"
                                          },
                                          "right": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "privKey"
                                            },
                                            "property": {
                                              "type": "UpdateExpression",
                                              "operator": "++",
                                              "argument": {
                                                "type": "Identifier",
                                                "name": "i"
                                              },
                                              "prefix": false
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "BinaryExpression",
                                          "operator": "&",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "gLen"
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": 128
                                          }
                                        },
                                        "consequent": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "octets"
                                                },
                                                "right": {
                                                  "type": "BinaryExpression",
                                                  "operator": "&",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "gLen"
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": 127
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "gLen"
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": 0
                                                }
                                              }
                                            },
                                            {
                                              "type": "WhileStatement",
                                              "test": {
                                                "type": "BinaryExpression",
                                                "operator": ">",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "octets"
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": 0
                                                }
                                              },
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "+=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "gLen"
                                                      },
                                                      "right": {
                                                        "type": "BinaryExpression",
                                                        "operator": "*",
                                                        "left": {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "privKey"
                                                          },
                                                          "property": {
                                                            "type": "UpdateExpression",
                                                            "operator": "++",
                                                            "argument": {
                                                              "type": "Identifier",
                                                              "name": "i"
                                                            },
                                                            "prefix": false
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "Math"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "pow"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Literal",
                                                              "value": 2
                                                            },
                                                            {
                                                              "type": "BinaryExpression",
                                                              "operator": "*",
                                                              "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "-",
                                                                "left": {
                                                                  "type": "Identifier",
                                                                  "name": "octets"
                                                                },
                                                                "right": {
                                                                  "type": "Literal",
                                                                  "value": 1
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": 8
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "UpdateExpression",
                                                      "operator": "--",
                                                      "argument": {
                                                        "type": "Identifier",
                                                        "name": "octets"
                                                      },
                                                      "prefix": true
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "alternate": null
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "gStart"
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "i"
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "+=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "i"
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "gLen"
                                          }
                                        }
                                      },
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "BinaryExpression",
                                          "operator": "!==",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "privKey"
                                            },
                                            "property": {
                                              "type": "UpdateExpression",
                                              "operator": "++",
                                              "argument": {
                                                "type": "Identifier",
                                                "name": "i"
                                              },
                                              "prefix": false
                                            }
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": 2
                                          }
                                        },
                                        "consequent": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ThrowStatement",
                                              "argument": {
                                                "type": "NewExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "Error"
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "Literal",
                                                      "value": "Unable to parse private key while generating public"
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": " key (expected integer for g)"
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "alternate": null
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "yLen"
                                          },
                                          "right": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "privKey"
                                            },
                                            "property": {
                                              "type": "UpdateExpression",
                                              "operator": "++",
                                              "argument": {
                                                "type": "Identifier",
                                                "name": "i"
                                              },
                                              "prefix": false
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "BinaryExpression",
                                          "operator": "&",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "yLen"
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": 128
                                          }
                                        },
                                        "consequent": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "octets"
                                                },
                                                "right": {
                                                  "type": "BinaryExpression",
                                                  "operator": "&",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "yLen"
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": 127
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "yLen"
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": 0
                                                }
                                              }
                                            },
                                            {
                                              "type": "WhileStatement",
                                              "test": {
                                                "type": "BinaryExpression",
                                                "operator": ">",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "octets"
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": 0
                                                }
                                              },
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "+=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "yLen"
                                                      },
                                                      "right": {
                                                        "type": "BinaryExpression",
                                                        "operator": "*",
                                                        "left": {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "privKey"
                                                          },
                                                          "property": {
                                                            "type": "UpdateExpression",
                                                            "operator": "++",
                                                            "argument": {
                                                              "type": "Identifier",
                                                              "name": "i"
                                                            },
                                                            "prefix": false
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "Math"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "pow"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Literal",
                                                              "value": 2
                                                            },
                                                            {
                                                              "type": "BinaryExpression",
                                                              "operator": "*",
                                                              "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "-",
                                                                "left": {
                                                                  "type": "Identifier",
                                                                  "name": "octets"
                                                                },
                                                                "right": {
                                                                  "type": "Literal",
                                                                  "value": 1
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": 8
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "UpdateExpression",
                                                      "operator": "--",
                                                      "argument": {
                                                        "type": "Identifier",
                                                        "name": "octets"
                                                      },
                                                      "prefix": true
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "alternate": null
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "yStart"
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "i"
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "+=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "i"
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "yLen"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "VariableDeclaration",
                                  "declarations": [
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "p"
                                      },
                                      "init": {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                          "type": "Literal",
                                          "value": 4
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": 7
                                        }
                                      }
                                    }
                                  ],
                                  "kind": "var"
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "keyInfo"
                                    },
                                    "right": {
                                      "type": "ObjectExpression",
                                      "properties": [
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "type"
                                          },
                                          "value": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ThisExpression"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "_privateKey"
                                              }
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "type"
                                            }
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "fulltype"
                                          },
                                          "value": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "Literal",
                                              "value": "ssh-"
                                            },
                                            "right": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ThisExpression"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "_privateKey"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "type"
                                              }
                                            }
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "public"
                                          },
                                          "value": {
                                            "type": "NewExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "Buffer"
                                            },
                                            "arguments": [
                                              {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                  "type": "BinaryExpression",
                                                  "operator": "+",
                                                  "left": {
                                                    "type": "Literal",
                                                    "value": 4
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": 7
                                                  }
                                                },
                                                "right": {
                                                  "type": "ConditionalExpression",
                                                  "test": {
                                                    "type": "BinaryExpression",
                                                    "operator": "===",
                                                    "left": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "_privateKey"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "type"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": "rsa"
                                                    }
                                                  },
                                                  "consequent": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "BinaryExpression",
                                                      "operator": "+",
                                                      "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                          "type": "Literal",
                                                          "value": 4
                                                        },
                                                        "right": {
                                                          "type": "Identifier",
                                                          "name": "nLen"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": 4
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "Identifier",
                                                      "name": "eLen"
                                                    }
                                                  },
                                                  "alternate": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "BinaryExpression",
                                                      "operator": "+",
                                                      "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "BinaryExpression",
                                                              "operator": "+",
                                                              "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                  "type": "Literal",
                                                                  "value": 4
                                                                },
                                                                "right": {
                                                                  "type": "Identifier",
                                                                  "name": "pLen"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": 4
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "qLen"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": 4
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "Identifier",
                                                          "name": "gLen"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": 4
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "Identifier",
                                                      "name": "yLen"
                                                    }
                                                  }
                                                }
                                              }
                                            ]
                                          },
                                          "kind": "init"
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "keyInfo"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "public"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "writeUInt32BE"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "value": 7
                                      },
                                      {
                                        "type": "Literal",
                                        "value": 0
                                      },
                                      {
                                        "type": "Literal",
                                        "value": true
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "keyInfo"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "public"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "write"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "keyInfo"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "fulltype"
                                        }
                                      },
                                      {
                                        "type": "Literal",
                                        "value": 4
                                      },
                                      {
                                        "type": "Literal",
                                        "value": 7
                                      },
                                      {
                                        "type": "Literal",
                                        "value": "ascii"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "IfStatement",
                                  "test": {
                                    "type": "BinaryExpression",
                                    "operator": "===",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "keyInfo"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "type"
                                      }
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": "rsa"
                                    }
                                  },
                                  "consequent": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "keyInfo"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "public"
                                              }
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "writeUInt32BE"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "eLen"
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "p"
                                            },
                                            {
                                              "type": "Literal",
                                              "value": true
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "privKey"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "copy"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "keyInfo"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "public"
                                              }
                                            },
                                            {
                                              "type": "AssignmentExpression",
                                              "operator": "+=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "p"
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": 4
                                              }
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "eStart"
                                            },
                                            {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "eStart"
                                              },
                                              "right": {
                                                "type": "Identifier",
                                                "name": "eLen"
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "keyInfo"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "public"
                                              }
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "writeUInt32BE"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "nLen"
                                            },
                                            {
                                              "type": "AssignmentExpression",
                                              "operator": "+=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "p"
                                              },
                                              "right": {
                                                "type": "Identifier",
                                                "name": "eLen"
                                              }
                                            },
                                            {
                                              "type": "Literal",
                                              "value": true
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "privKey"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "copy"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "keyInfo"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "public"
                                              }
                                            },
                                            {
                                              "type": "AssignmentExpression",
                                              "operator": "+=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "p"
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": 4
                                              }
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "nStart"
                                            },
                                            {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "nStart"
                                              },
                                              "right": {
                                                "type": "Identifier",
                                                "name": "nLen"
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "alternate": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "keyInfo"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "public"
                                              }
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "writeUInt32BE"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "pLen"
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "p"
                                            },
                                            {
                                              "type": "Literal",
                                              "value": true
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "privKey"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "copy"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "keyInfo"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "public"
                                              }
                                            },
                                            {
                                              "type": "AssignmentExpression",
                                              "operator": "+=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "p"
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": 4
                                              }
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "pStart"
                                            },
                                            {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "pStart"
                                              },
                                              "right": {
                                                "type": "Identifier",
                                                "name": "pLen"
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "keyInfo"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "public"
                                              }
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "writeUInt32BE"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "qLen"
                                            },
                                            {
                                              "type": "AssignmentExpression",
                                              "operator": "+=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "p"
                                              },
                                              "right": {
                                                "type": "Identifier",
                                                "name": "pLen"
                                              }
                                            },
                                            {
                                              "type": "Literal",
                                              "value": true
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "privKey"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "copy"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "keyInfo"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "public"
                                              }
                                            },
                                            {
                                              "type": "AssignmentExpression",
                                              "operator": "+=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "p"
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": 4
                                              }
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "qStart"
                                            },
                                            {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "qStart"
                                              },
                                              "right": {
                                                "type": "Identifier",
                                                "name": "qLen"
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "keyInfo"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "public"
                                              }
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "writeUInt32BE"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "gLen"
                                            },
                                            {
                                              "type": "AssignmentExpression",
                                              "operator": "+=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "p"
                                              },
                                              "right": {
                                                "type": "Identifier",
                                                "name": "qLen"
                                              }
                                            },
                                            {
                                              "type": "Literal",
                                              "value": true
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "privKey"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "copy"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "keyInfo"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "public"
                                              }
                                            },
                                            {
                                              "type": "AssignmentExpression",
                                              "operator": "+=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "p"
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": 4
                                              }
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "gStart"
                                            },
                                            {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "gStart"
                                              },
                                              "right": {
                                                "type": "Identifier",
                                                "name": "gLen"
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "keyInfo"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "public"
                                              }
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "writeUInt32BE"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "yLen"
                                            },
                                            {
                                              "type": "AssignmentExpression",
                                              "operator": "+=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "p"
                                              },
                                              "right": {
                                                "type": "Identifier",
                                                "name": "gLen"
                                              }
                                            },
                                            {
                                              "type": "Literal",
                                              "value": true
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "privKey"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "copy"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "keyInfo"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "public"
                                              }
                                            },
                                            {
                                              "type": "AssignmentExpression",
                                              "operator": "+=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "p"
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": 4
                                              }
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "yStart"
                                            },
                                            {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "yStart"
                                              },
                                              "right": {
                                                "type": "Identifier",
                                                "name": "yLen"
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "alternate": {
                              "type": "ThrowStatement",
                              "argument": {
                                "type": "NewExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "Error"
                                },
                                "arguments": [
                                  {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                      "type": "Literal",
                                      "value": "Unable to parse private key while generating public"
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": " key (expected sequence)"
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "ThisExpression"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "_publicKey"
                          }
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "keyInfo"
                        }
                      }
                    }
                  ]
                },
                "alternate": null
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_sock"
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "once"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "connect"
                    },
                    {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "self"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "_state"
                                }
                              },
                              "right": {
                                "type": "Literal",
                                "value": "initexchg"
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "self"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "emit"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "connect"
                                }
                              ]
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "self"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "_sock"
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "write"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "SSH_IDENT"
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": "\r\n"
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_sock"
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "on"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "data"
                    },
                    {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "data"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "self"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "_parser"
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "execute"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "data"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_sock"
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "once"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "error"
                    },
                    {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "err"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "err"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "level"
                                }
                              },
                              "right": {
                                "type": "Literal",
                                "value": "connection-socket"
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "self"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "emit"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "error"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "err"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_sock"
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "once"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "end"
                    },
                    {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "self"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_pinger"
                              }
                            },
                            "consequent": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "clearInterval"
                                    },
                                    "arguments": [
                                      {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "self"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "_pinger"
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "self"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "_pinger"
                                      }
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "undefined"
                                    }
                                  }
                                }
                              ]
                            },
                            "alternate": null
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "self"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "_state"
                                }
                              },
                              "right": {
                                "type": "Literal",
                                "value": "closed"
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "self"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "emit"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "end"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_sock"
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "once"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "close"
                    },
                    {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "had_err"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "self"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_pinger"
                              }
                            },
                            "consequent": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "clearInterval"
                                    },
                                    "arguments": [
                                      {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "self"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "_pinger"
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "self"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "_pinger"
                                      }
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "undefined"
                                    }
                                  }
                                }
                              ]
                            },
                            "alternate": null
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "self"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "_parser"
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "reset"
                                }
                              },
                              "arguments": []
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "self"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "_state"
                                }
                              },
                              "right": {
                                "type": "Literal",
                                "value": "closed"
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "self"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "emit"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "close"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "had_err"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_sock"
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "on"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "drain"
                    },
                    {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "self"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "emit"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "drain"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  ]
                }
              },
              {
                "type": "IfStatement",
                "test": {
                  "type": "UnaryExpression",
                  "operator": "!",
                  "argument": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "opts"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "sock"
                    }
                  },
                  "prefix": true
                },
                "consequent": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "ThisExpression"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_sock"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "setNoDelay"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": true
                          }
                        ]
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "ThisExpression"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_sock"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "setMaxListeners"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": 0
                          }
                        ]
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "ThisExpression"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_sock"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "setTimeout"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": 0
                          }
                        ]
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "ThisExpression"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_sock"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "connect"
                          }
                        },
                        "arguments": [
                          {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "ThisExpression"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_port"
                            }
                          },
                          {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "ThisExpression"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_host"
                            }
                          }
                        ]
                      }
                    }
                  ]
                },
                "alternate": null
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "Connection"
            },
            "property": {
              "type": "Identifier",
              "name": "prototype"
            }
          },
          "property": {
            "type": "Identifier",
            "name": "exec"
          }
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "params": [
            {
              "type": "Identifier",
              "name": "cmd"
            },
            {
              "type": "Identifier",
              "name": "opts"
            },
            {
              "type": "Identifier",
              "name": "cb"
            }
          ],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "IfStatement",
                "test": {
                  "type": "BinaryExpression",
                  "operator": "===",
                  "left": {
                    "type": "UnaryExpression",
                    "operator": "typeof",
                    "argument": {
                      "type": "Identifier",
                      "name": "opts"
                    },
                    "prefix": true
                  },
                  "right": {
                    "type": "Literal",
                    "value": "function"
                  }
                },
                "consequent": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "cb"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "opts"
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "opts"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "undefined"
                        }
                      }
                    }
                  ]
                },
                "alternate": null
              },
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "self"
                    },
                    "init": {
                      "type": "ThisExpression"
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_openChan"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "session"
                    },
                    {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "err"
                        },
                        {
                          "type": "Identifier",
                          "name": "chan"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "Identifier",
                              "name": "err"
                            },
                            "consequent": {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "cb"
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "err"
                                  }
                                ]
                              }
                            },
                            "alternate": null
                          },
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "BinaryExpression",
                              "operator": "===",
                              "left": {
                                "type": "UnaryExpression",
                                "operator": "typeof",
                                "argument": {
                                  "type": "Identifier",
                                  "name": "opts"
                                },
                                "prefix": true
                              },
                              "right": {
                                "type": "Literal",
                                "value": "object"
                              }
                            },
                            "consequent": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "IfStatement",
                                  "test": {
                                    "type": "BinaryExpression",
                                    "operator": "===",
                                    "left": {
                                      "type": "UnaryExpression",
                                      "operator": "typeof",
                                      "argument": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "opts"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "env"
                                        }
                                      },
                                      "prefix": true
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": "object"
                                    }
                                  },
                                  "consequent": {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "chan"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "_sendEnv"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "opts"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "env"
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "alternate": null
                                },
                                {
                                  "type": "IfStatement",
                                  "test": {
                                    "type": "LogicalExpression",
                                    "operator": "||",
                                    "left": {
                                      "type": "BinaryExpression",
                                      "operator": "===",
                                      "left": {
                                        "type": "UnaryExpression",
                                        "operator": "typeof",
                                        "argument": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "opts"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "pty"
                                          }
                                        },
                                        "prefix": true
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": "object"
                                      }
                                    },
                                    "right": {
                                      "type": "BinaryExpression",
                                      "operator": "===",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "opts"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "pty"
                                        }
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": true
                                      }
                                    }
                                  },
                                  "consequent": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "self"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "_reqPty"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "chan"
                                            },
                                            {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "opts"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "pty"
                                              }
                                            },
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "err"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "Identifier",
                                                      "name": "err"
                                                    },
                                                    "consequent": {
                                                      "type": "ReturnStatement",
                                                      "argument": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "Identifier",
                                                          "name": "cb"
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "err"
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    "alternate": null
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "chan"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "_sendExec"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "cmd"
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "name": "cb"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ReturnStatement",
                                        "argument": null
                                      }
                                    ]
                                  },
                                  "alternate": null
                                }
                              ]
                            },
                            "alternate": null
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "chan"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "_sendExec"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "cmd"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "cb"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  ]
                }
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "Connection"
            },
            "property": {
              "type": "Identifier",
              "name": "prototype"
            }
          },
          "property": {
            "type": "Identifier",
            "name": "shell"
          }
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "params": [
            {
              "type": "Identifier",
              "name": "opts"
            },
            {
              "type": "Identifier",
              "name": "cb"
            }
          ],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "self"
                    },
                    "init": {
                      "type": "ThisExpression"
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "IfStatement",
                "test": {
                  "type": "BinaryExpression",
                  "operator": "===",
                  "left": {
                    "type": "UnaryExpression",
                    "operator": "typeof",
                    "argument": {
                      "type": "Identifier",
                      "name": "opts"
                    },
                    "prefix": true
                  },
                  "right": {
                    "type": "Literal",
                    "value": "function"
                  }
                },
                "consequent": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "cb"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "opts"
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "opts"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "undefined"
                        }
                      }
                    }
                  ]
                },
                "alternate": null
              },
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_openChan"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "session"
                    },
                    {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "err"
                        },
                        {
                          "type": "Identifier",
                          "name": "chan"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "Identifier",
                              "name": "err"
                            },
                            "consequent": {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "cb"
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "err"
                                  }
                                ]
                              }
                            },
                            "alternate": null
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "self"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "_reqPty"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "chan"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "opts"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "err"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "Identifier",
                                          "name": "err"
                                        },
                                        "consequent": {
                                          "type": "ReturnStatement",
                                          "argument": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "cb"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "err"
                                              }
                                            ]
                                          }
                                        },
                                        "alternate": null
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "chan"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "_sendShell"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "cb"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  ]
                }
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "Connection"
            },
            "property": {
              "type": "Identifier",
              "name": "prototype"
            }
          },
          "property": {
            "type": "Identifier",
            "name": "_reqPty"
          }
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "params": [
            {
              "type": "Identifier",
              "name": "chan"
            },
            {
              "type": "Identifier",
              "name": "opts"
            },
            {
              "type": "Identifier",
              "name": "cb"
            }
          ],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "rows"
                    },
                    "init": {
                      "type": "Literal",
                      "value": 24
                    }
                  },
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "cols"
                    },
                    "init": {
                      "type": "Literal",
                      "value": 80
                    }
                  },
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "width"
                    },
                    "init": {
                      "type": "Literal",
                      "value": 640
                    }
                  },
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "height"
                    },
                    "init": {
                      "type": "Literal",
                      "value": 480
                    }
                  },
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "term"
                    },
                    "init": {
                      "type": "Literal",
                      "value": "vt100"
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "IfStatement",
                "test": {
                  "type": "BinaryExpression",
                  "operator": "===",
                  "left": {
                    "type": "UnaryExpression",
                    "operator": "typeof",
                    "argument": {
                      "type": "Identifier",
                      "name": "opts"
                    },
                    "prefix": true
                  },
                  "right": {
                    "type": "Literal",
                    "value": "object"
                  }
                },
                "consequent": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "BinaryExpression",
                        "operator": "===",
                        "left": {
                          "type": "UnaryExpression",
                          "operator": "typeof",
                          "argument": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "opts"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "rows"
                            }
                          },
                          "prefix": true
                        },
                        "right": {
                          "type": "Literal",
                          "value": "number"
                        }
                      },
                      "consequent": {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "rows"
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "opts"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "rows"
                            }
                          }
                        }
                      },
                      "alternate": null
                    },
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "BinaryExpression",
                        "operator": "===",
                        "left": {
                          "type": "UnaryExpression",
                          "operator": "typeof",
                          "argument": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "opts"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "cols"
                            }
                          },
                          "prefix": true
                        },
                        "right": {
                          "type": "Literal",
                          "value": "number"
                        }
                      },
                      "consequent": {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "cols"
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "opts"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "cols"
                            }
                          }
                        }
                      },
                      "alternate": null
                    },
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "BinaryExpression",
                        "operator": "===",
                        "left": {
                          "type": "UnaryExpression",
                          "operator": "typeof",
                          "argument": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "opts"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "width"
                            }
                          },
                          "prefix": true
                        },
                        "right": {
                          "type": "Literal",
                          "value": "number"
                        }
                      },
                      "consequent": {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "width"
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "opts"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "width"
                            }
                          }
                        }
                      },
                      "alternate": null
                    },
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "BinaryExpression",
                        "operator": "===",
                        "left": {
                          "type": "UnaryExpression",
                          "operator": "typeof",
                          "argument": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "opts"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "height"
                            }
                          },
                          "prefix": true
                        },
                        "right": {
                          "type": "Literal",
                          "value": "number"
                        }
                      },
                      "consequent": {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "height"
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "opts"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "height"
                            }
                          }
                        }
                      },
                      "alternate": null
                    },
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "BinaryExpression",
                        "operator": "===",
                        "left": {
                          "type": "UnaryExpression",
                          "operator": "typeof",
                          "argument": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "opts"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "term"
                            }
                          },
                          "prefix": true
                        },
                        "right": {
                          "type": "Literal",
                          "value": "string"
                        }
                      },
                      "consequent": {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "term"
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "opts"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "term"
                            }
                          }
                        }
                      },
                      "alternate": null
                    }
                  ]
                },
                "alternate": {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "operator": "===",
                    "left": {
                      "type": "UnaryExpression",
                      "operator": "typeof",
                      "argument": {
                        "type": "Identifier",
                        "name": "opts"
                      },
                      "prefix": true
                    },
                    "right": {
                      "type": "Literal",
                      "value": "function"
                    }
                  },
                  "consequent": {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "AssignmentExpression",
                      "operator": "=",
                      "left": {
                        "type": "Identifier",
                        "name": "cb"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "opts"
                      }
                    }
                  },
                  "alternate": null
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "chan"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_sendPtyReq"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "rows"
                    },
                    {
                      "type": "Identifier",
                      "name": "cols"
                    },
                    {
                      "type": "Identifier",
                      "name": "height"
                    },
                    {
                      "type": "Identifier",
                      "name": "width"
                    },
                    {
                      "type": "Identifier",
                      "name": "term"
                    },
                    {
                      "type": "Literal",
                      "value": null
                    },
                    {
                      "type": "Identifier",
                      "name": "cb"
                    }
                  ]
                }
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "Connection"
            },
            "property": {
              "type": "Identifier",
              "name": "prototype"
            }
          },
          "property": {
            "type": "Identifier",
            "name": "forwardIn"
          }
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "params": [
            {
              "type": "Identifier",
              "name": "address"
            },
            {
              "type": "Identifier",
              "name": "port"
            },
            {
              "type": "Identifier",
              "name": "cb"
            }
          ],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "self"
                    },
                    "init": {
                      "type": "ThisExpression"
                    }
                  },
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "addrlen"
                    },
                    "init": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "Buffer"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "byteLength"
                        }
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "address"
                        }
                      ]
                    }
                  },
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "init": {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Buffer"
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                      "type": "Literal",
                                      "value": 1
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": 4
                                    }
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": 13
                                  }
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": 1
                                }
                              },
                              "right": {
                                "type": "Literal",
                                "value": 4
                              }
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "addrlen"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": 4
                          }
                        }
                      ]
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "property": {
                      "type": "Literal",
                      "value": 0
                    }
                  },
                  "right": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "MESSAGE"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "GLOBAL_REQUEST"
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "writeUInt32BE"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": 13
                    },
                    {
                      "type": "Literal",
                      "value": 1
                    },
                    {
                      "type": "Literal",
                      "value": true
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "write"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "tcpip-forward"
                    },
                    {
                      "type": "Literal",
                      "value": 5
                    },
                    {
                      "type": "Literal",
                      "value": 13
                    },
                    {
                      "type": "Literal",
                      "value": "ascii"
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "property": {
                      "type": "Literal",
                      "value": 18
                    }
                  },
                  "right": {
                    "type": "Literal",
                    "value": 1
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "writeUInt32BE"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "addrlen"
                    },
                    {
                      "type": "Literal",
                      "value": 19
                    },
                    {
                      "type": "Literal",
                      "value": true
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "write"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "address"
                    },
                    {
                      "type": "Literal",
                      "value": 23
                    },
                    {
                      "type": "Identifier",
                      "name": "addrlen"
                    },
                    {
                      "type": "Literal",
                      "value": "ascii"
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "writeUInt32BE"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "port"
                    },
                    {
                      "type": "BinaryExpression",
                      "operator": "+",
                      "left": {
                        "type": "Literal",
                        "value": 23
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "addrlen"
                      }
                    },
                    {
                      "type": "Literal",
                      "value": true
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_callbacks"
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "push"
                    }
                  },
                  "arguments": [
                    {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "had_err"
                        },
                        {
                          "type": "Identifier",
                          "name": "data"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "Identifier",
                              "name": "had_err"
                            },
                            "consequent": {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "cb"
                                },
                                "arguments": [
                                  {
                                    "type": "NewExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "Error"
                                    },
                                    "arguments": [
                                      {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                          "type": "BinaryExpression",
                                          "operator": "+",
                                          "left": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "Literal",
                                              "value": "Unable to bind "
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "address"
                                            }
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": ":"
                                          }
                                        },
                                        "right": {
                                          "type": "Identifier",
                                          "name": "port"
                                        }
                                      }
                                    ]
                                  }
                                ]
                              }
                            },
                            "alternate": null
                          },
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "LogicalExpression",
                              "operator": "&&",
                              "left": {
                                "type": "Identifier",
                                "name": "data"
                              },
                              "right": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "data"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "length"
                                }
                              }
                            },
                            "consequent": {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "port"
                                },
                                "right": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "data"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "readUInt32BE"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "Literal",
                                      "value": 0
                                    },
                                    {
                                      "type": "Literal",
                                      "value": true
                                    }
                                  ]
                                }
                              }
                            },
                            "alternate": null
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "self"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "_forwarding"
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "push"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "address"
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": ":"
                                    }
                                  },
                                  "right": {
                                    "type": "Identifier",
                                    "name": "port"
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "LogicalExpression",
                              "operator": "&&",
                              "left": {
                                "type": "Identifier",
                                "name": "data"
                              },
                              "right": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "data"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "length"
                                }
                              }
                            },
                            "consequent": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "port"
                                    },
                                    "right": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "data"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "readUInt32BE"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": 0
                                        },
                                        {
                                          "type": "Literal",
                                          "value": true
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "cb"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "undefined"
                                      },
                                      {
                                        "type": "Identifier",
                                        "name": "port"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "alternate": {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "cb"
                                },
                                "arguments": []
                              }
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "LogicalExpression",
                  "operator": "&&",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_debug"
                    }
                  },
                  "right": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_debug"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "DEBUG: Connection: Sent GLOBAL_REQUEST (tcpip-forward)"
                      }
                    ]
                  }
                }
              },
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_send"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "buf"
                    }
                  ]
                }
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "Connection"
            },
            "property": {
              "type": "Identifier",
              "name": "prototype"
            }
          },
          "property": {
            "type": "Identifier",
            "name": "unforwardIn"
          }
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "params": [
            {
              "type": "Identifier",
              "name": "address"
            },
            {
              "type": "Identifier",
              "name": "port"
            },
            {
              "type": "Identifier",
              "name": "cb"
            }
          ],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "self"
                    },
                    "init": {
                      "type": "ThisExpression"
                    }
                  },
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "addrlen"
                    },
                    "init": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "Buffer"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "byteLength"
                        }
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "address"
                        }
                      ]
                    }
                  },
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "init": {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Buffer"
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                      "type": "Literal",
                                      "value": 1
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": 4
                                    }
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": 13
                                  }
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": 1
                                }
                              },
                              "right": {
                                "type": "Literal",
                                "value": 4
                              }
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "addrlen"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": 4
                          }
                        }
                      ]
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "property": {
                      "type": "Literal",
                      "value": 0
                    }
                  },
                  "right": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "MESSAGE"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "GLOBAL_REQUEST"
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "writeUInt32BE"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": 13
                    },
                    {
                      "type": "Literal",
                      "value": 1
                    },
                    {
                      "type": "Literal",
                      "value": true
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "write"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "cancel-tcpip-forward"
                    },
                    {
                      "type": "Literal",
                      "value": 5
                    },
                    {
                      "type": "Literal",
                      "value": 13
                    },
                    {
                      "type": "Literal",
                      "value": "ascii"
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "property": {
                      "type": "Literal",
                      "value": 18
                    }
                  },
                  "right": {
                    "type": "Literal",
                    "value": 1
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "writeUInt32BE"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "addrlen"
                    },
                    {
                      "type": "Literal",
                      "value": 19
                    },
                    {
                      "type": "Literal",
                      "value": true
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "write"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "address"
                    },
                    {
                      "type": "Literal",
                      "value": 23
                    },
                    {
                      "type": "Identifier",
                      "name": "addrlen"
                    },
                    {
                      "type": "Literal",
                      "value": "ascii"
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "writeUInt32BE"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "port"
                    },
                    {
                      "type": "BinaryExpression",
                      "operator": "+",
                      "left": {
                        "type": "Literal",
                        "value": 23
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "addrlen"
                      }
                    },
                    {
                      "type": "Literal",
                      "value": true
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_callbacks"
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "push"
                    }
                  },
                  "arguments": [
                    {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "had_err"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "Identifier",
                              "name": "had_err"
                            },
                            "consequent": {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "cb"
                                },
                                "arguments": [
                                  {
                                    "type": "NewExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "Error"
                                    },
                                    "arguments": [
                                      {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                          "type": "BinaryExpression",
                                          "operator": "+",
                                          "left": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "Literal",
                                              "value": "Unable to unbind "
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "address"
                                            }
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": ":"
                                          }
                                        },
                                        "right": {
                                          "type": "Identifier",
                                          "name": "port"
                                        }
                                      }
                                    ]
                                  }
                                ]
                              }
                            },
                            "alternate": null
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "self"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "_forwarding"
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "splice"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "self"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "_forwarding"
                                      }
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "indexOf"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "BinaryExpression",
                                      "operator": "+",
                                      "left": {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "address"
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": ":"
                                        }
                                      },
                                      "right": {
                                        "type": "Identifier",
                                        "name": "port"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": "Literal",
                                  "value": 1
                                }
                              ]
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "cb"
                              },
                              "arguments": []
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "LogicalExpression",
                  "operator": "&&",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_debug"
                    }
                  },
                  "right": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_debug"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "DEBUG: Connection: Sent GLOBAL_REQUEST (cancel-tcpip-forward)"
                      }
                    ]
                  }
                }
              },
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_send"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "buf"
                    }
                  ]
                }
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "Connection"
            },
            "property": {
              "type": "Identifier",
              "name": "prototype"
            }
          },
          "property": {
            "type": "Identifier",
            "name": "forwardOut"
          }
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "params": [
            {
              "type": "Identifier",
              "name": "srcIP"
            },
            {
              "type": "Identifier",
              "name": "srcPort"
            },
            {
              "type": "Identifier",
              "name": "dstIP"
            },
            {
              "type": "Identifier",
              "name": "dstPort"
            },
            {
              "type": "Identifier",
              "name": "cb"
            }
          ],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "srclen"
                    },
                    "init": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "Buffer"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "byteLength"
                        }
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "srcIP"
                        }
                      ]
                    }
                  },
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "dstlen"
                    },
                    "init": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "Buffer"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "byteLength"
                        }
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "dstIP"
                        }
                      ]
                    }
                  },
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "p"
                    },
                    "init": {
                      "type": "Literal",
                      "value": 0
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "init": {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Buffer"
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "Literal",
                                    "value": 4
                                  },
                                  "right": {
                                    "type": "Identifier",
                                    "name": "srclen"
                                  }
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": 4
                                }
                              },
                              "right": {
                                "type": "Literal",
                                "value": 4
                              }
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "dstlen"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": 4
                          }
                        }
                      ]
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "writeUInt32BE"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "dstlen"
                    },
                    {
                      "type": "Identifier",
                      "name": "p"
                    },
                    {
                      "type": "Literal",
                      "value": true
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "write"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "dstIP"
                    },
                    {
                      "type": "AssignmentExpression",
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "name": "p"
                      },
                      "right": {
                        "type": "Literal",
                        "value": 4
                      }
                    },
                    {
                      "type": "Identifier",
                      "name": "dstlen"
                    },
                    {
                      "type": "Literal",
                      "value": "ascii"
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "writeUInt32BE"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "dstPort"
                    },
                    {
                      "type": "AssignmentExpression",
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "name": "p"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "dstlen"
                      }
                    },
                    {
                      "type": "Literal",
                      "value": true
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "writeUInt32BE"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "srclen"
                    },
                    {
                      "type": "AssignmentExpression",
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "name": "p"
                      },
                      "right": {
                        "type": "Literal",
                        "value": 4
                      }
                    },
                    {
                      "type": "Literal",
                      "value": true
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "write"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "srcIP"
                    },
                    {
                      "type": "AssignmentExpression",
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "name": "p"
                      },
                      "right": {
                        "type": "Literal",
                        "value": 4
                      }
                    },
                    {
                      "type": "Identifier",
                      "name": "srclen"
                    },
                    {
                      "type": "Literal",
                      "value": "ascii"
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "writeUInt32BE"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "srcPort"
                    },
                    {
                      "type": "AssignmentExpression",
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "name": "p"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "srclen"
                      }
                    },
                    {
                      "type": "Literal",
                      "value": true
                    }
                  ]
                }
              },
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_openChan"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "direct-tcpip"
                    },
                    {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "err"
                        },
                        {
                          "type": "Identifier",
                          "name": "chan"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "Identifier",
                              "name": "err"
                            },
                            "consequent": {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "cb"
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "err"
                                  }
                                ]
                              }
                            },
                            "alternate": null
                          },
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "stream"
                                },
                                "init": {
                                  "type": "NewExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "Channel"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "ChannelStream"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "chan"
                                    }
                                  ]
                                }
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "chan"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "_stream"
                                }
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "stream"
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "cb"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "undefined"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "stream"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  ]
                }
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "Connection"
            },
            "property": {
              "type": "Identifier",
              "name": "prototype"
            }
          },
          "property": {
            "type": "Identifier",
            "name": "sftp"
          }
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "params": [
            {
              "type": "Identifier",
              "name": "cb"
            }
          ],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_openChan"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "session"
                    },
                    {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "err"
                        },
                        {
                          "type": "Identifier",
                          "name": "chan"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "Identifier",
                              "name": "err"
                            },
                            "consequent": {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "cb"
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "err"
                                  }
                                ]
                              }
                            },
                            "alternate": null
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "chan"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "_sendSubsystem"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "sftp"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "err"
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "stream"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "Identifier",
                                          "name": "err"
                                        },
                                        "consequent": {
                                          "type": "ReturnStatement",
                                          "argument": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "cb"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "err"
                                              }
                                            ]
                                          }
                                        },
                                        "alternate": null
                                      },
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "sftp"
                                            },
                                            "init": {
                                              "type": "NewExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "SFTPv3"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "stream"
                                                }
                                              ]
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "sftp"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "_init"
                                            }
                                          },
                                          "arguments": []
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "sftp"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "once"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": "incompatible"
                                            },
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "sftp"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "removeAllListeners"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Literal",
                                                          "value": "ready"
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "Identifier",
                                                        "name": "cb"
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "NewExpression",
                                                          "callee": {
                                                            "type": "Identifier",
                                                            "name": "Error"
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Literal",
                                                              "value": "SFTP version incompatible"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "sftp"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "once"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": "ready"
                                            },
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "sftp"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "removeAllListeners"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Literal",
                                                          "value": "incompatible"
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "Identifier",
                                                        "name": "cb"
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "undefined"
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "name": "sftp"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "sftp"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "once"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": "close"
                                            },
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "stream"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "end"
                                                        }
                                                      },
                                                      "arguments": []
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  ]
                }
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "Connection"
            },
            "property": {
              "type": "Identifier",
              "name": "prototype"
            }
          },
          "property": {
            "type": "Identifier",
            "name": "subsys"
          }
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "params": [
            {
              "type": "Identifier",
              "name": "subsys"
            },
            {
              "type": "Identifier",
              "name": "cb"
            }
          ],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_openChan"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "session"
                    },
                    {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "err"
                        },
                        {
                          "type": "Identifier",
                          "name": "chan"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "Identifier",
                              "name": "err"
                            },
                            "consequent": {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "cb"
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "err"
                                  }
                                ]
                              }
                            },
                            "alternate": null
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "chan"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "_sendSubsystem"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "subsys"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "err"
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "stream"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "Identifier",
                                          "name": "err"
                                        },
                                        "consequent": {
                                          "type": "ReturnStatement",
                                          "argument": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "cb"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "err"
                                              }
                                            ]
                                          }
                                        },
                                        "alternate": null
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "cb"
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": null
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "stream"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  ]
                }
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "Connection"
            },
            "property": {
              "type": "Identifier",
              "name": "prototype"
            }
          },
          "property": {
            "type": "Identifier",
            "name": "end"
          }
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "params": [],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "IfStatement",
                "test": {
                  "type": "LogicalExpression",
                  "operator": "&&",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_sock"
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "writable"
                    }
                  },
                  "right": {
                    "type": "BinaryExpression",
                    "operator": "===",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_state"
                      }
                    },
                    "right": {
                      "type": "Literal",
                      "value": "authenticated"
                    }
                  }
                },
                "consequent": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_disconnect"
                      }
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "DISCONNECT_REASON"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "CONNECTION_LOST"
                        }
                      }
                    ]
                  }
                },
                "alternate": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "ThisExpression"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "_sock"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "destroy"
                      }
                    },
                    "arguments": []
                  }
                }
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "Connection"
            },
            "property": {
              "type": "Identifier",
              "name": "prototype"
            }
          },
          "property": {
            "type": "Identifier",
            "name": "_openChan"
          }
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "params": [
            {
              "type": "Identifier",
              "name": "type"
            },
            {
              "type": "Identifier",
              "name": "blob"
            },
            {
              "type": "Identifier",
              "name": "cb"
            }
          ],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "self"
                    },
                    "init": {
                      "type": "ThisExpression"
                    }
                  },
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "localChan"
                    },
                    "init": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "ThisExpression"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "_nextChan"
                        }
                      },
                      "arguments": []
                    }
                  },
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "inWindow"
                    },
                    "init": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Channel"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "MAX_WINDOW"
                      }
                    }
                  },
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "inPktSize"
                    },
                    "init": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "Channel"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "MAX_WINDOW"
                      }
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "IfStatement",
                "test": {
                  "type": "BinaryExpression",
                  "operator": "===",
                  "left": {
                    "type": "Identifier",
                    "name": "localChan"
                  },
                  "right": {
                    "type": "Literal",
                    "value": false
                  }
                },
                "consequent": {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "cb"
                    },
                    "arguments": [
                      {
                        "type": "NewExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "Error"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "No free channels available"
                          }
                        ]
                      }
                    ]
                  }
                },
                "alternate": null
              },
              {
                "type": "IfStatement",
                "test": {
                  "type": "BinaryExpression",
                  "operator": "===",
                  "left": {
                    "type": "UnaryExpression",
                    "operator": "typeof",
                    "argument": {
                      "type": "Identifier",
                      "name": "blob"
                    },
                    "prefix": true
                  },
                  "right": {
                    "type": "Literal",
                    "value": "function"
                  }
                },
                "consequent": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "cb"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "blob"
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "blob"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "undefined"
                        }
                      }
                    }
                  ]
                },
                "alternate": null
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_channels"
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "push"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "localChan"
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_parser"
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "once"
                    }
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "operator": "+",
                      "left": {
                        "type": "Literal",
                        "value": "CHANNEL_OPEN_CONFIRMATION:"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "localChan"
                      }
                    },
                    {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "info"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "UnaryExpression",
                              "operator": "delete",
                              "argument": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "self"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "_parser"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "_events"
                                  }
                                },
                                "property": {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "Literal",
                                    "value": "CHANNEL_OPEN_CONFIRMATION:"
                                  },
                                  "right": {
                                    "type": "Identifier",
                                    "name": "localChan"
                                  }
                                }
                              },
                              "prefix": true
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "UnaryExpression",
                              "operator": "delete",
                              "argument": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "self"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "_parser"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "_events"
                                  }
                                },
                                "property": {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "Literal",
                                    "value": "CHANNEL_OPEN_FAILURE:"
                                  },
                                  "right": {
                                    "type": "Identifier",
                                    "name": "localChan"
                                  }
                                }
                              },
                              "prefix": true
                            }
                          },
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "chaninfo"
                                },
                                "init": {
                                  "type": "ObjectExpression",
                                  "properties": [
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "type"
                                      },
                                      "value": {
                                        "type": "Identifier",
                                        "name": "type"
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "incoming"
                                      },
                                      "value": {
                                        "type": "ObjectExpression",
                                        "properties": [
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "id"
                                            },
                                            "value": {
                                              "type": "Identifier",
                                              "name": "localChan"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "window"
                                            },
                                            "value": {
                                              "type": "Identifier",
                                              "name": "inWindow"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "packetSize"
                                            },
                                            "value": {
                                              "type": "Identifier",
                                              "name": "inPktSize"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "state"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "open"
                                            },
                                            "kind": "init"
                                          }
                                        ]
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "outgoing"
                                      },
                                      "value": {
                                        "type": "ObjectExpression",
                                        "properties": [
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "id"
                                            },
                                            "value": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "info"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "sender"
                                              }
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "window"
                                            },
                                            "value": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "info"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "window"
                                              }
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "packetSize"
                                            },
                                            "value": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "info"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "packetSize"
                                              }
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "state"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "open"
                                            },
                                            "kind": "init"
                                          }
                                        ]
                                      },
                                      "kind": "init"
                                    }
                                  ]
                                }
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "cb"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "undefined"
                                },
                                {
                                  "type": "NewExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "Channel"
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "chaninfo"
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "self"
                                    }
                                  ]
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_parser"
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "once"
                    }
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "operator": "+",
                      "left": {
                        "type": "Literal",
                        "value": "CHANNEL_OPEN_FAILURE:"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "localChan"
                      }
                    },
                    {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "info"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "UnaryExpression",
                              "operator": "delete",
                              "argument": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "self"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "_parser"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "_events"
                                  }
                                },
                                "property": {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "Literal",
                                    "value": "CHANNEL_OPEN_CONFIRMATION:"
                                  },
                                  "right": {
                                    "type": "Identifier",
                                    "name": "localChan"
                                  }
                                }
                              },
                              "prefix": true
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "UnaryExpression",
                              "operator": "delete",
                              "argument": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "self"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "_parser"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "_events"
                                  }
                                },
                                "property": {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "Literal",
                                    "value": "CHANNEL_OPEN_FAILURE:"
                                  },
                                  "right": {
                                    "type": "Identifier",
                                    "name": "localChan"
                                  }
                                }
                              },
                              "prefix": true
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "self"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "_channels"
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "splice"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "self"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "_channels"
                                      }
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "indexOf"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "localChan"
                                    }
                                  ]
                                },
                                {
                                  "type": "Literal",
                                  "value": 1
                                }
                              ]
                            }
                          },
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "err"
                                },
                                "init": {
                                  "type": "NewExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "Error"
                                  },
                                  "arguments": [
                                    {
                                      "type": "BinaryExpression",
                                      "operator": "+",
                                      "left": {
                                        "type": "Literal",
                                        "value": "(SSH) Channel open failure: "
                                      },
                                      "right": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "info"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "description"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "err"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "reason"
                                }
                              },
                              "right": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "info"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "reason"
                                }
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "err"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "lang"
                                }
                              },
                              "right": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "info"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "lang"
                                }
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "cb"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "err"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  ]
                }
              },
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "typelen"
                    },
                    "init": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "Buffer"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "byteLength"
                        }
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "type"
                        }
                      ]
                    }
                  },
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "bloblen"
                    },
                    "init": {
                      "type": "ConditionalExpression",
                      "test": {
                        "type": "Identifier",
                        "name": "blob"
                      },
                      "consequent": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "blob"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "length"
                        }
                      },
                      "alternate": {
                        "type": "Literal",
                        "value": 0
                      }
                    }
                  },
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "p"
                    },
                    "init": {
                      "type": "BinaryExpression",
                      "operator": "+",
                      "left": {
                        "type": "Literal",
                        "value": 5
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "typelen"
                      }
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "init": {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Buffer"
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                      "type": "Literal",
                                      "value": 1
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": 4
                                    }
                                  },
                                  "right": {
                                    "type": "Identifier",
                                    "name": "typelen"
                                  }
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": 4
                                }
                              },
                              "right": {
                                "type": "Literal",
                                "value": 4
                              }
                            },
                            "right": {
                              "type": "Literal",
                              "value": 4
                            }
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "bloblen"
                          }
                        }
                      ]
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "property": {
                      "type": "Literal",
                      "value": 0
                    }
                  },
                  "right": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "MESSAGE"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "CHANNEL_OPEN"
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "writeUInt32BE"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "typelen"
                    },
                    {
                      "type": "Literal",
                      "value": 1
                    },
                    {
                      "type": "Literal",
                      "value": true
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "write"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "type"
                    },
                    {
                      "type": "Literal",
                      "value": 5
                    },
                    {
                      "type": "Identifier",
                      "name": "typelen"
                    },
                    {
                      "type": "Literal",
                      "value": "ascii"
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "writeUInt32BE"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "localChan"
                    },
                    {
                      "type": "Identifier",
                      "name": "p"
                    },
                    {
                      "type": "Literal",
                      "value": true
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "writeUInt32BE"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "inWindow"
                    },
                    {
                      "type": "AssignmentExpression",
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "name": "p"
                      },
                      "right": {
                        "type": "Literal",
                        "value": 4
                      }
                    },
                    {
                      "type": "Literal",
                      "value": true
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "writeUInt32BE"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "inPktSize"
                    },
                    {
                      "type": "AssignmentExpression",
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "name": "p"
                      },
                      "right": {
                        "type": "Literal",
                        "value": 4
                      }
                    },
                    {
                      "type": "Literal",
                      "value": true
                    }
                  ]
                }
              },
              {
                "type": "IfStatement",
                "test": {
                  "type": "Identifier",
                  "name": "blob"
                },
                "consequent": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "blob"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "copy"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "buf"
                      },
                      {
                        "type": "AssignmentExpression",
                        "operator": "+=",
                        "left": {
                          "type": "Identifier",
                          "name": "p"
                        },
                        "right": {
                          "type": "Literal",
                          "value": 4
                        }
                      }
                    ]
                  }
                },
                "alternate": null
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "LogicalExpression",
                  "operator": "&&",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_debug"
                    }
                  },
                  "right": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_debug"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "DEBUG: Connection: Sent CHANNEL_OPEN"
                      }
                    ]
                  }
                }
              },
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_send"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "buf"
                    }
                  ]
                }
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "Connection"
            },
            "property": {
              "type": "Identifier",
              "name": "prototype"
            }
          },
          "property": {
            "type": "Identifier",
            "name": "_nextChan"
          }
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "params": [],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "IfStatement",
                "test": {
                  "type": "BinaryExpression",
                  "operator": "<",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_curChan"
                    }
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "MAX_CHANNEL"
                  }
                },
                "consequent": {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "operator": "<=",
                    "left": {
                      "type": "UpdateExpression",
                      "operator": "++",
                      "argument": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "ThisExpression"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "_curChan"
                        }
                      },
                      "prefix": true
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "MAX_CHANNEL"
                    }
                  },
                  "consequent": {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_curChan"
                      }
                    }
                  },
                  "alternate": null
                },
                "alternate": null
              },
              {
                "type": "ForStatement",
                "init": {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "i"
                      },
                      "init": {
                        "type": "Literal",
                        "value": 0
                      }
                    }
                  ],
                  "kind": "var"
                },
                "test": {
                  "type": "BinaryExpression",
                  "operator": "<",
                  "left": {
                    "type": "Identifier",
                    "name": "i"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "MAX_CHANNEL"
                  }
                },
                "update": {
                  "type": "UpdateExpression",
                  "operator": "++",
                  "argument": {
                    "type": "Identifier",
                    "name": "i"
                  },
                  "prefix": true
                },
                "body": {
                  "type": "IfStatement",
                  "test": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "ThisExpression"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "_channels"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "indexOf"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "i"
                      }
                    ]
                  },
                  "consequent": {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "Identifier",
                      "name": "i"
                    }
                  },
                  "alternate": null
                }
              },
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "Literal",
                  "value": false
                }
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "Connection"
            },
            "property": {
              "type": "Identifier",
              "name": "prototype"
            }
          },
          "property": {
            "type": "Identifier",
            "name": "_ping"
          }
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "params": [],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "LogicalExpression",
                  "operator": "&&",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_debug"
                    }
                  },
                  "right": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_debug"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "DEBUG: Connection: Sent ping"
                      }
                    ]
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_send"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "PING_PACKET"
                    }
                  ]
                }
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "Connection"
            },
            "property": {
              "type": "Identifier",
              "name": "prototype"
            }
          },
          "property": {
            "type": "Identifier",
            "name": "_tryNextAuth"
          }
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "params": [
            {
              "type": "Identifier",
              "name": "noAgent"
            }
          ],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "IfStatement",
                "test": {
                  "type": "LogicalExpression",
                  "operator": "&&",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_agent"
                    }
                  },
                  "right": {
                    "type": "UnaryExpression",
                    "operator": "!",
                    "argument": {
                      "type": "Identifier",
                      "name": "noAgent"
                    },
                    "prefix": true
                  }
                },
                "consequent": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_authAgent"
                      }
                    },
                    "arguments": []
                  }
                },
                "alternate": {
                  "type": "IfStatement",
                  "test": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "LogicalExpression",
                      "operator": "&&",
                      "left": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "ThisExpression"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "_tryKeyboard"
                        }
                      },
                      "right": {
                        "type": "BinaryExpression",
                        "operator": ">",
                        "left": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "ThisExpression"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "_auths"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "methods"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "indexOf"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "keyboard-interactive"
                            }
                          ]
                        },
                        "right": {
                          "type": "UnaryExpression",
                          "operator": "-",
                          "argument": {
                            "type": "Literal",
                            "value": 1
                          },
                          "prefix": true
                        }
                      }
                    },
                    "right": {
                      "type": "BinaryExpression",
                      "operator": "!==",
                      "left": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "ThisExpression"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "_authMethod"
                        }
                      },
                      "right": {
                        "type": "Literal",
                        "value": "keyboard-interactive"
                      }
                    }
                  },
                  "consequent": {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "ThisExpression"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "_authKeyboard"
                        }
                      },
                      "arguments": []
                    }
                  },
                  "alternate": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "err"
                            },
                            "init": {
                              "type": "NewExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "Error"
                              },
                              "arguments": [
                                {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "Literal",
                                    "value": "Authentication failure. Available authentication methods: "
                                  },
                                  "right": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "ThisExpression"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "_auths"
                                      }
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "methods"
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "err"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "level"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "authentication"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "err"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "partial"
                            }
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "ThisExpression"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_auths"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "partial"
                            }
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "ThisExpression"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "emit"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "error"
                            },
                            {
                              "type": "Identifier",
                              "name": "err"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "ThisExpression"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "end"
                            }
                          },
                          "arguments": []
                        }
                      }
                    ]
                  }
                }
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "Connection"
            },
            "property": {
              "type": "Identifier",
              "name": "prototype"
            }
          },
          "property": {
            "type": "Identifier",
            "name": "_authPwd"
          }
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "params": [
            {
              "type": "Identifier",
              "name": "newpwd"
            }
          ],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "userLen"
                    },
                    "init": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "Buffer"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "byteLength"
                        }
                      },
                      "arguments": [
                        {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "ThisExpression"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "_username"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "passLen"
                    },
                    "init": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "Buffer"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "byteLength"
                        }
                      },
                      "arguments": [
                        {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "ThisExpression"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "_password"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "newpwdLen"
                    },
                    "init": {
                      "type": "ConditionalExpression",
                      "test": {
                        "type": "BinaryExpression",
                        "operator": "!==",
                        "left": {
                          "type": "Identifier",
                          "name": "newpwd"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "undefined"
                        }
                      },
                      "consequent": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "Buffer"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "byteLength"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "newpwd"
                          }
                        ]
                      },
                      "alternate": {
                        "type": "Literal",
                        "value": 0
                      }
                    }
                  },
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "p"
                    },
                    "init": {
                      "type": "Literal",
                      "value": 0
                    }
                  },
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "init": {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Buffer"
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                      "type": "BinaryExpression",
                                      "operator": "+",
                                      "left": {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                          "type": "BinaryExpression",
                                          "operator": "+",
                                          "left": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "Literal",
                                              "value": 1
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": 4
                                            }
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "userLen"
                                          }
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": 4
                                        }
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": 14
                                      }
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": 4
                                    }
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": 8
                                  }
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": 1
                                }
                              },
                              "right": {
                                "type": "Literal",
                                "value": 4
                              }
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "passLen"
                            }
                          },
                          "right": {
                            "type": "ConditionalExpression",
                            "test": {
                              "type": "BinaryExpression",
                              "operator": "!==",
                              "left": {
                                "type": "Identifier",
                                "name": "newpwd"
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "undefined"
                              }
                            },
                            "consequent": {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "Literal",
                                "value": 4
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "newpwdLen"
                              }
                            },
                            "alternate": {
                              "type": "Literal",
                              "value": 0
                            }
                          }
                        }
                      ]
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "p"
                    }
                  },
                  "right": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "MESSAGE"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "USERAUTH_REQUEST"
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "writeUInt32BE"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "userLen"
                    },
                    {
                      "type": "UpdateExpression",
                      "operator": "++",
                      "argument": {
                        "type": "Identifier",
                        "name": "p"
                      },
                      "prefix": true
                    },
                    {
                      "type": "Literal",
                      "value": true
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "write"
                    }
                  },
                  "arguments": [
                    {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_username"
                      }
                    },
                    {
                      "type": "AssignmentExpression",
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "name": "p"
                      },
                      "right": {
                        "type": "Literal",
                        "value": 4
                      }
                    },
                    {
                      "type": "Identifier",
                      "name": "userLen"
                    },
                    {
                      "type": "Literal",
                      "value": "utf8"
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "writeUInt32BE"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": 14
                    },
                    {
                      "type": "AssignmentExpression",
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "name": "p"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "userLen"
                      }
                    },
                    {
                      "type": "Literal",
                      "value": true
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "write"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "ssh-connection"
                    },
                    {
                      "type": "AssignmentExpression",
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "name": "p"
                      },
                      "right": {
                        "type": "Literal",
                        "value": 4
                      }
                    },
                    {
                      "type": "Literal",
                      "value": 14
                    },
                    {
                      "type": "Literal",
                      "value": "ascii"
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "writeUInt32BE"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": 8
                    },
                    {
                      "type": "AssignmentExpression",
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "name": "p"
                      },
                      "right": {
                        "type": "Literal",
                        "value": 14
                      }
                    },
                    {
                      "type": "Literal",
                      "value": true
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "write"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "password"
                    },
                    {
                      "type": "AssignmentExpression",
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "name": "p"
                      },
                      "right": {
                        "type": "Literal",
                        "value": 4
                      }
                    },
                    {
                      "type": "Literal",
                      "value": 8
                    },
                    {
                      "type": "Literal",
                      "value": "ascii"
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "property": {
                      "type": "AssignmentExpression",
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "name": "p"
                      },
                      "right": {
                        "type": "Literal",
                        "value": 8
                      }
                    }
                  },
                  "right": {
                    "type": "ConditionalExpression",
                    "test": {
                      "type": "BinaryExpression",
                      "operator": "!==",
                      "left": {
                        "type": "Identifier",
                        "name": "newpwd"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "undefined"
                      }
                    },
                    "consequent": {
                      "type": "Literal",
                      "value": 1
                    },
                    "alternate": {
                      "type": "Literal",
                      "value": 0
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "writeUInt32BE"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "passLen"
                    },
                    {
                      "type": "UpdateExpression",
                      "operator": "++",
                      "argument": {
                        "type": "Identifier",
                        "name": "p"
                      },
                      "prefix": true
                    },
                    {
                      "type": "Literal",
                      "value": true
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "write"
                    }
                  },
                  "arguments": [
                    {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_password"
                      }
                    },
                    {
                      "type": "AssignmentExpression",
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "name": "p"
                      },
                      "right": {
                        "type": "Literal",
                        "value": 4
                      }
                    },
                    {
                      "type": "Identifier",
                      "name": "passLen"
                    },
                    {
                      "type": "Literal",
                      "value": "utf8"
                    }
                  ]
                }
              },
              {
                "type": "IfStatement",
                "test": {
                  "type": "BinaryExpression",
                  "operator": "!==",
                  "left": {
                    "type": "Identifier",
                    "name": "newpwd"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "undefined"
                  }
                },
                "consequent": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "buf"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "writeUInt32BE"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "newpwdLen"
                          },
                          {
                            "type": "AssignmentExpression",
                            "operator": "+=",
                            "left": {
                              "type": "Identifier",
                              "name": "p"
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "passLen"
                            }
                          },
                          {
                            "type": "Literal",
                            "value": true
                          }
                        ]
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "buf"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "write"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "newpwd"
                          },
                          {
                            "type": "AssignmentExpression",
                            "operator": "+=",
                            "left": {
                              "type": "Identifier",
                              "name": "p"
                            },
                            "right": {
                              "type": "Literal",
                              "value": 4
                            }
                          },
                          {
                            "type": "Identifier",
                            "name": "newpwdLen"
                          },
                          {
                            "type": "Literal",
                            "value": "utf8"
                          }
                        ]
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "ThisExpression"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_parser"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "_newpwd"
                          }
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "newpwd"
                        }
                      }
                    }
                  ]
                },
                "alternate": null
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_parser"
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_authMethod"
                    }
                  },
                  "right": {
                    "type": "Literal",
                    "value": "password"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "LogicalExpression",
                  "operator": "&&",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_debug"
                    }
                  },
                  "right": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_debug"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "DEBUG: Connection: Sent USERAUTH_REQUEST (password)"
                      }
                    ]
                  }
                }
              },
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_send"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "buf"
                    }
                  ]
                }
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "Connection"
            },
            "property": {
              "type": "Identifier",
              "name": "prototype"
            }
          },
          "property": {
            "type": "Identifier",
            "name": "_authKeyboard"
          }
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "params": [],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "userLen"
                    },
                    "init": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "Buffer"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "byteLength"
                        }
                      },
                      "arguments": [
                        {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "ThisExpression"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "_username"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "p"
                    },
                    "init": {
                      "type": "Literal",
                      "value": 0
                    }
                  },
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "init": {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Buffer"
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                      "type": "BinaryExpression",
                                      "operator": "+",
                                      "left": {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                          "type": "Literal",
                                          "value": 1
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": 4
                                        }
                                      },
                                      "right": {
                                        "type": "Identifier",
                                        "name": "userLen"
                                      }
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": 4
                                    }
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": 14
                                  }
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": 4
                                }
                              },
                              "right": {
                                "type": "Literal",
                                "value": 20
                              }
                            },
                            "right": {
                              "type": "Literal",
                              "value": 4
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": 4
                          }
                        }
                      ]
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "p"
                    }
                  },
                  "right": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "MESSAGE"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "USERAUTH_REQUEST"
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "writeUInt32BE"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "userLen"
                    },
                    {
                      "type": "UpdateExpression",
                      "operator": "++",
                      "argument": {
                        "type": "Identifier",
                        "name": "p"
                      },
                      "prefix": true
                    },
                    {
                      "type": "Literal",
                      "value": true
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "write"
                    }
                  },
                  "arguments": [
                    {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_username"
                      }
                    },
                    {
                      "type": "AssignmentExpression",
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "name": "p"
                      },
                      "right": {
                        "type": "Literal",
                        "value": 4
                      }
                    },
                    {
                      "type": "Identifier",
                      "name": "userLen"
                    },
                    {
                      "type": "Literal",
                      "value": "utf8"
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "writeUInt32BE"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": 14
                    },
                    {
                      "type": "AssignmentExpression",
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "name": "p"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "userLen"
                      }
                    },
                    {
                      "type": "Literal",
                      "value": true
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "write"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "ssh-connection"
                    },
                    {
                      "type": "AssignmentExpression",
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "name": "p"
                      },
                      "right": {
                        "type": "Literal",
                        "value": 4
                      }
                    },
                    {
                      "type": "Literal",
                      "value": 14
                    },
                    {
                      "type": "Literal",
                      "value": "ascii"
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "writeUInt32BE"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": 20
                    },
                    {
                      "type": "AssignmentExpression",
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "name": "p"
                      },
                      "right": {
                        "type": "Literal",
                        "value": 14
                      }
                    },
                    {
                      "type": "Literal",
                      "value": true
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "write"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "keyboard-interactive"
                    },
                    {
                      "type": "AssignmentExpression",
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "name": "p"
                      },
                      "right": {
                        "type": "Literal",
                        "value": 4
                      }
                    },
                    {
                      "type": "Literal",
                      "value": 20
                    },
                    {
                      "type": "Literal",
                      "value": "ascii"
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "writeUInt32BE"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": 0
                    },
                    {
                      "type": "AssignmentExpression",
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "name": "p"
                      },
                      "right": {
                        "type": "Literal",
                        "value": 20
                      }
                    },
                    {
                      "type": "Literal",
                      "value": true
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "writeUInt32BE"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": 0
                    },
                    {
                      "type": "AssignmentExpression",
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "name": "p"
                      },
                      "right": {
                        "type": "Literal",
                        "value": 4
                      }
                    },
                    {
                      "type": "Literal",
                      "value": true
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_parser"
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_authMethod"
                    }
                  },
                  "right": {
                    "type": "Literal",
                    "value": "keyboard-interactive"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "LogicalExpression",
                  "operator": "&&",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_debug"
                    }
                  },
                  "right": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_debug"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "DEBUG: Connection: Sent USERAUTH_REQUEST (keyboard-interactive)"
                      }
                    ]
                  }
                }
              },
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_send"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "buf"
                    }
                  ]
                }
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "Connection"
            },
            "property": {
              "type": "Identifier",
              "name": "prototype"
            }
          },
          "property": {
            "type": "Identifier",
            "name": "_authPK"
          }
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "params": [
            {
              "type": "Identifier",
              "name": "sign"
            }
          ],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_parser"
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_authMethod"
                    }
                  },
                  "right": {
                    "type": "Literal",
                    "value": "pubkey"
                  }
                }
              },
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "self"
                    },
                    "init": {
                      "type": "ThisExpression"
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "pubKey"
                    },
                    "init": null
                  },
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "pubKeyType"
                    },
                    "init": null
                  },
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "pubKeyFullType"
                    },
                    "init": null
                  }
                ],
                "kind": "var"
              },
              {
                "type": "IfStatement",
                "test": {
                  "type": "LogicalExpression",
                  "operator": "&&",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_agent"
                    }
                  },
                  "right": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_agentKeys"
                    }
                  }
                },
                "consequent": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "pubKey"
                        },
                        "right": {
                          "type": "MemberExpression",
                          "computed": true,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "ThisExpression"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_agentKeys"
                            }
                          },
                          "property": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "ThisExpression"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_agentKeys"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "i"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "pubKeyFullType"
                        },
                        "right": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "pubKey"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "toString"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "ascii"
                            },
                            {
                              "type": "Literal",
                              "value": 4
                            },
                            {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "Literal",
                                "value": 4
                              },
                              "right": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "pubKey"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "readUInt32BE"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": 0
                                  },
                                  {
                                    "type": "Literal",
                                    "value": true
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "pubKeyType"
                        },
                        "right": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "pubKeyFullType"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "substring"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 4
                            },
                            {
                              "type": "Literal",
                              "value": 7
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                "alternate": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "pubKey"
                        },
                        "right": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "ThisExpression"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_publicKey"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "public"
                          }
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "pubKeyFullType"
                        },
                        "right": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "ThisExpression"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_publicKey"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "fulltype"
                          }
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "pubKeyType"
                        },
                        "right": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "ThisExpression"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_publicKey"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "type"
                          }
                        }
                      }
                    }
                  ]
                }
              },
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "userLen"
                    },
                    "init": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "Buffer"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "byteLength"
                        }
                      },
                      "arguments": [
                        {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "ThisExpression"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "_username"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "algoLen"
                    },
                    "init": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "Buffer"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "byteLength"
                        }
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "pubKeyFullType"
                        }
                      ]
                    }
                  },
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "pubKeyLen"
                    },
                    "init": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "pubKey"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "length"
                      }
                    }
                  },
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "sesLen"
                    },
                    "init": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "ThisExpression"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "_sessionid"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "length"
                      }
                    }
                  },
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "p"
                    },
                    "init": {
                      "type": "Literal",
                      "value": 0
                    }
                  },
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "sig"
                    },
                    "init": {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Buffer"
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                      "type": "BinaryExpression",
                                      "operator": "+",
                                      "left": {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                          "type": "BinaryExpression",
                                          "operator": "+",
                                          "left": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                  "type": "ConditionalExpression",
                                                  "test": {
                                                    "type": "Identifier",
                                                    "name": "sign"
                                                  },
                                                  "consequent": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "Literal",
                                                      "value": 4
                                                    },
                                                    "right": {
                                                      "type": "Identifier",
                                                      "name": "sesLen"
                                                    }
                                                  },
                                                  "alternate": {
                                                    "type": "Literal",
                                                    "value": 0
                                                  }
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": 1
                                                }
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": 4
                                              }
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "userLen"
                                            }
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": 4
                                          }
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": 14
                                        }
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": 4
                                      }
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": 9
                                    }
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": 1
                                  }
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": 4
                                }
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "algoLen"
                              }
                            },
                            "right": {
                              "type": "Literal",
                              "value": 4
                            }
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "pubKeyLen"
                          }
                        }
                      ]
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "IfStatement",
                "test": {
                  "type": "Identifier",
                  "name": "sign"
                },
                "consequent": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "sig"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "writeUInt32BE"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "sesLen"
                          },
                          {
                            "type": "Identifier",
                            "name": "p"
                          },
                          {
                            "type": "Literal",
                            "value": true
                          }
                        ]
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "ThisExpression"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_sessionid"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "copy"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "sig"
                          },
                          {
                            "type": "AssignmentExpression",
                            "operator": "+=",
                            "left": {
                              "type": "Identifier",
                              "name": "p"
                            },
                            "right": {
                              "type": "Literal",
                              "value": 4
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "computed": true,
                          "object": {
                            "type": "Identifier",
                            "name": "sig"
                          },
                          "property": {
                            "type": "AssignmentExpression",
                            "operator": "+=",
                            "left": {
                              "type": "Identifier",
                              "name": "p"
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "sesLen"
                            }
                          }
                        },
                        "right": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "MESSAGE"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "USERAUTH_REQUEST"
                          }
                        }
                      }
                    }
                  ]
                },
                "alternate": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": true,
                      "object": {
                        "type": "Identifier",
                        "name": "sig"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "p"
                      }
                    },
                    "right": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "MESSAGE"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "USERAUTH_REQUEST"
                      }
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "sig"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "writeUInt32BE"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "userLen"
                    },
                    {
                      "type": "UpdateExpression",
                      "operator": "++",
                      "argument": {
                        "type": "Identifier",
                        "name": "p"
                      },
                      "prefix": true
                    },
                    {
                      "type": "Literal",
                      "value": true
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "sig"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "write"
                    }
                  },
                  "arguments": [
                    {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_username"
                      }
                    },
                    {
                      "type": "AssignmentExpression",
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "name": "p"
                      },
                      "right": {
                        "type": "Literal",
                        "value": 4
                      }
                    },
                    {
                      "type": "Identifier",
                      "name": "userLen"
                    },
                    {
                      "type": "Literal",
                      "value": "utf8"
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "sig"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "writeUInt32BE"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": 14
                    },
                    {
                      "type": "AssignmentExpression",
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "name": "p"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "userLen"
                      }
                    },
                    {
                      "type": "Literal",
                      "value": true
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "sig"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "write"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "ssh-connection"
                    },
                    {
                      "type": "AssignmentExpression",
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "name": "p"
                      },
                      "right": {
                        "type": "Literal",
                        "value": 4
                      }
                    },
                    {
                      "type": "Literal",
                      "value": 14
                    },
                    {
                      "type": "Literal",
                      "value": "ascii"
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "sig"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "writeUInt32BE"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": 9
                    },
                    {
                      "type": "AssignmentExpression",
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "name": "p"
                      },
                      "right": {
                        "type": "Literal",
                        "value": 14
                      }
                    },
                    {
                      "type": "Literal",
                      "value": true
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "sig"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "write"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "publickey"
                    },
                    {
                      "type": "AssignmentExpression",
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "name": "p"
                      },
                      "right": {
                        "type": "Literal",
                        "value": 4
                      }
                    },
                    {
                      "type": "Literal",
                      "value": 9
                    },
                    {
                      "type": "Literal",
                      "value": "ascii"
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                      "type": "Identifier",
                      "name": "sig"
                    },
                    "property": {
                      "type": "AssignmentExpression",
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "name": "p"
                      },
                      "right": {
                        "type": "Literal",
                        "value": 9
                      }
                    }
                  },
                  "right": {
                    "type": "ConditionalExpression",
                    "test": {
                      "type": "Identifier",
                      "name": "sign"
                    },
                    "consequent": {
                      "type": "Literal",
                      "value": 1
                    },
                    "alternate": {
                      "type": "Literal",
                      "value": 0
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "sig"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "writeUInt32BE"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "algoLen"
                    },
                    {
                      "type": "UpdateExpression",
                      "operator": "++",
                      "argument": {
                        "type": "Identifier",
                        "name": "p"
                      },
                      "prefix": true
                    },
                    {
                      "type": "Literal",
                      "value": true
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "sig"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "write"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "pubKeyFullType"
                    },
                    {
                      "type": "AssignmentExpression",
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "name": "p"
                      },
                      "right": {
                        "type": "Literal",
                        "value": 4
                      }
                    },
                    {
                      "type": "Identifier",
                      "name": "algoLen"
                    },
                    {
                      "type": "Literal",
                      "value": "ascii"
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "sig"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "writeUInt32BE"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "pubKeyLen"
                    },
                    {
                      "type": "AssignmentExpression",
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "name": "p"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "algoLen"
                      }
                    },
                    {
                      "type": "Literal",
                      "value": true
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "pubKey"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "copy"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "sig"
                    },
                    {
                      "type": "AssignmentExpression",
                      "operator": "+=",
                      "left": {
                        "type": "Identifier",
                        "name": "p"
                      },
                      "right": {
                        "type": "Literal",
                        "value": 4
                      }
                    }
                  ]
                }
              },
              {
                "type": "IfStatement",
                "test": {
                  "type": "UnaryExpression",
                  "operator": "!",
                  "argument": {
                    "type": "Identifier",
                    "name": "sign"
                  },
                  "prefix": true
                },
                "consequent": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "LogicalExpression",
                        "operator": "&&",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "ThisExpression"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "_debug"
                          }
                        },
                        "right": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "ThisExpression"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_debug"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "DEBUG: Connection: Sent USERAUTH_REQUEST (publickey -- check)"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "ThisExpression"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "_send"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "sig"
                          }
                        ]
                      }
                    }
                  ]
                },
                "alternate": null
              },
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "signature"
                    },
                    "init": null
                  },
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "sigLen"
                    },
                    "init": null
                  },
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "privAlgoLen"
                    },
                    "init": {
                      "type": "Literal",
                      "value": 7
                    }
                  },
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "privAlgo"
                    },
                    "init": null
                  }
                ],
                "kind": "var"
              },
              {
                "type": "IfStatement",
                "test": {
                  "type": "LogicalExpression",
                  "operator": "&&",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_agent"
                    }
                  },
                  "right": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_agentKeys"
                    }
                  }
                },
                "consequent": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "agentQuery"
                        },
                        "arguments": [
                          {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "ThisExpression"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_agent"
                            }
                          },
                          {
                            "type": "Identifier",
                            "name": "pubKey"
                          },
                          {
                            "type": "Identifier",
                            "name": "pubKeyType"
                          },
                          {
                            "type": "Identifier",
                            "name": "sig"
                          },
                          {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "err"
                              },
                              {
                                "type": "Identifier",
                                "name": "signed"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "IfStatement",
                                  "test": {
                                    "type": "Identifier",
                                    "name": "err"
                                  },
                                  "consequent": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "err"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "level"
                                            }
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": "agent"
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "self"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "emit"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": "error"
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "err"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "self"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "_agentKeys"
                                            }
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "undefined"
                                          }
                                        }
                                      },
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "self"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "_tryNextAuth"
                                            }
                                          },
                                          "arguments": []
                                        }
                                      }
                                    ]
                                  },
                                  "alternate": null
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "privAlgo"
                                    },
                                    "right": {
                                      "type": "BinaryExpression",
                                      "operator": "+",
                                      "left": {
                                        "type": "Literal",
                                        "value": "ssh-"
                                      },
                                      "right": {
                                        "type": "Identifier",
                                        "name": "pubKeyType"
                                      }
                                    }
                                  }
                                },
                                {
                                  "type": "IfStatement",
                                  "test": {
                                    "type": "BinaryExpression",
                                    "operator": "===",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "pubKeyType"
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": "rsa"
                                    }
                                  },
                                  "consequent": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "signature"
                                          },
                                          "right": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "signed"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "slice"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                  "type": "BinaryExpression",
                                                  "operator": "+",
                                                  "left": {
                                                    "type": "Literal",
                                                    "value": 4
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": 7
                                                  }
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": 4
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "alternate": {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "signature"
                                      },
                                      "right": {
                                        "type": "Identifier",
                                        "name": "signed"
                                      }
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "sigLen"
                                    },
                                    "right": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "signature"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "length"
                                      }
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "sendSigReq"
                                    },
                                    "arguments": []
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          }
                        ]
                      }
                    },
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "BinaryExpression",
                        "operator": ">",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "ThisExpression"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_sock"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "bufferSize"
                          }
                        },
                        "right": {
                          "type": "Literal",
                          "value": 0
                        }
                      }
                    }
                  ]
                },
                "alternate": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "VariableDeclaration",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "Identifier",
                            "name": "privateKey"
                          },
                          "init": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "ThisExpression"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_privateKey"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "privateOrig"
                            }
                          }
                        }
                      ],
                      "kind": "var"
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "privAlgo"
                        },
                        "right": {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "Literal",
                            "value": "ssh-"
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "ThisExpression"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_privateKey"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "type"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "signature"
                        },
                        "right": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "crypto"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "createSign"
                            }
                          },
                          "arguments": [
                            {
                              "type": "ConditionalExpression",
                              "test": {
                                "type": "BinaryExpression",
                                "operator": "===",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "ThisExpression"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "_privateKey"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "type"
                                  }
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": "rsa"
                                }
                              },
                              "consequent": {
                                "type": "Literal",
                                "value": "RSA-SHA1"
                              },
                              "alternate": {
                                "type": "Literal",
                                "value": "DSA-SHA1"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "signature"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "update"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "sig"
                          }
                        ]
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "signature"
                        },
                        "right": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Buffer"
                          },
                          "arguments": [
                            {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "signature"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "sign"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "privateKey"
                                },
                                {
                                  "type": "Literal",
                                  "value": "binary"
                                }
                              ]
                            },
                            {
                              "type": "Literal",
                              "value": "binary"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "sigLen"
                        },
                        "right": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "signature"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "length"
                          }
                        }
                      }
                    },
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "LogicalExpression",
                        "operator": "&&",
                        "left": {
                          "type": "BinaryExpression",
                          "operator": "===",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "ThisExpression"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_privateKey"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "type"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "dss"
                          }
                        },
                        "right": {
                          "type": "BinaryExpression",
                          "operator": ">",
                          "left": {
                            "type": "Identifier",
                            "name": "sigLen"
                          },
                          "right": {
                            "type": "Literal",
                            "value": 40
                          }
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "newsig"
                                },
                                "init": {
                                  "type": "NewExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "Buffer"
                                  },
                                  "arguments": [
                                    {
                                      "type": "Literal",
                                      "value": 40
                                    }
                                  ]
                                }
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "rlen"
                                },
                                "init": {
                                  "type": "MemberExpression",
                                  "computed": true,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "signature"
                                  },
                                  "property": {
                                    "type": "Literal",
                                    "value": 3
                                  }
                                }
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "rstart"
                                },
                                "init": {
                                  "type": "Literal",
                                  "value": 4
                                }
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "sstart"
                                },
                                "init": {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                      "type": "BinaryExpression",
                                      "operator": "+",
                                      "left": {
                                        "type": "Literal",
                                        "value": 4
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": 1
                                      }
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "rlen"
                                    }
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": 1
                                  }
                                }
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "WhileStatement",
                            "test": {
                              "type": "BinaryExpression",
                              "operator": "===",
                              "left": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                  "type": "Identifier",
                                  "name": "signature"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "rstart"
                                }
                              },
                              "right": {
                                "type": "Literal",
                                "value": 0
                              }
                            },
                            "body": {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "UpdateExpression",
                                "operator": "++",
                                "argument": {
                                  "type": "Identifier",
                                  "name": "rstart"
                                },
                                "prefix": true
                              }
                            }
                          },
                          {
                            "type": "WhileStatement",
                            "test": {
                              "type": "BinaryExpression",
                              "operator": "===",
                              "left": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                  "type": "Identifier",
                                  "name": "signature"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "sstart"
                                }
                              },
                              "right": {
                                "type": "Literal",
                                "value": 0
                              }
                            },
                            "body": {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "UpdateExpression",
                                "operator": "++",
                                "argument": {
                                  "type": "Identifier",
                                  "name": "sstart"
                                },
                                "prefix": true
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "signature"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "copy"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "newsig"
                                },
                                {
                                  "type": "Literal",
                                  "value": 0
                                },
                                {
                                  "type": "Identifier",
                                  "name": "rstart"
                                },
                                {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "rstart"
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": 20
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "signature"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "copy"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "newsig"
                                },
                                {
                                  "type": "Literal",
                                  "value": 20
                                },
                                {
                                  "type": "Identifier",
                                  "name": "sstart"
                                },
                                {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "sstart"
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": 20
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "signature"
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "newsig"
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "sigLen"
                              },
                              "right": {
                                "type": "Literal",
                                "value": 40
                              }
                            }
                          }
                        ]
                      },
                      "alternate": null
                    },
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "sendSigReq"
                        },
                        "arguments": []
                      }
                    }
                  ]
                }
              },
              {
                "type": "FunctionDeclaration",
                "id": {
                  "type": "Identifier",
                  "name": "sendSigReq"
                },
                "params": [],
                "defaults": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "VariableDeclaration",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "Identifier",
                            "name": "buf"
                          },
                          "init": {
                            "type": "NewExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "Buffer"
                            },
                            "arguments": [
                              {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                      "type": "BinaryExpression",
                                      "operator": "+",
                                      "left": {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                          "type": "BinaryExpression",
                                          "operator": "+",
                                          "left": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                  "type": "BinaryExpression",
                                                  "operator": "+",
                                                  "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "BinaryExpression",
                                                      "operator": "+",
                                                      "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "BinaryExpression",
                                                              "operator": "+",
                                                              "left": {
                                                                "type": "Literal",
                                                                "value": 1
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": 4
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "userLen"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": 4
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": 14
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": 4
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": 9
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": 1
                                                  }
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": 4
                                                }
                                              },
                                              "right": {
                                                "type": "Identifier",
                                                "name": "algoLen"
                                              }
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": 4
                                            }
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "pubKeyLen"
                                          }
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": 4
                                        }
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": 4
                                      }
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "privAlgoLen"
                                    }
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": 4
                                  }
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "sigLen"
                                }
                              }
                            ]
                          }
                        }
                      ],
                      "kind": "var"
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "p"
                        },
                        "right": {
                          "type": "Literal",
                          "value": 0
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "computed": true,
                          "object": {
                            "type": "Identifier",
                            "name": "buf"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "p"
                          }
                        },
                        "right": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "MESSAGE"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "USERAUTH_REQUEST"
                          }
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "buf"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "writeUInt32BE"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "userLen"
                          },
                          {
                            "type": "UpdateExpression",
                            "operator": "++",
                            "argument": {
                              "type": "Identifier",
                              "name": "p"
                            },
                            "prefix": true
                          },
                          {
                            "type": "Literal",
                            "value": true
                          }
                        ]
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "buf"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "write"
                          }
                        },
                        "arguments": [
                          {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "self"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_username"
                            }
                          },
                          {
                            "type": "AssignmentExpression",
                            "operator": "+=",
                            "left": {
                              "type": "Identifier",
                              "name": "p"
                            },
                            "right": {
                              "type": "Literal",
                              "value": 4
                            }
                          },
                          {
                            "type": "Identifier",
                            "name": "userLen"
                          },
                          {
                            "type": "Literal",
                            "value": "utf8"
                          }
                        ]
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "buf"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "writeUInt32BE"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": 14
                          },
                          {
                            "type": "AssignmentExpression",
                            "operator": "+=",
                            "left": {
                              "type": "Identifier",
                              "name": "p"
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "userLen"
                            }
                          },
                          {
                            "type": "Literal",
                            "value": true
                          }
                        ]
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "buf"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "write"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "ssh-connection"
                          },
                          {
                            "type": "AssignmentExpression",
                            "operator": "+=",
                            "left": {
                              "type": "Identifier",
                              "name": "p"
                            },
                            "right": {
                              "type": "Literal",
                              "value": 4
                            }
                          },
                          {
                            "type": "Literal",
                            "value": 14
                          },
                          {
                            "type": "Literal",
                            "value": "ascii"
                          }
                        ]
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "buf"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "writeUInt32BE"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": 9
                          },
                          {
                            "type": "AssignmentExpression",
                            "operator": "+=",
                            "left": {
                              "type": "Identifier",
                              "name": "p"
                            },
                            "right": {
                              "type": "Literal",
                              "value": 14
                            }
                          },
                          {
                            "type": "Literal",
                            "value": true
                          }
                        ]
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "buf"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "write"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "publickey"
                          },
                          {
                            "type": "AssignmentExpression",
                            "operator": "+=",
                            "left": {
                              "type": "Identifier",
                              "name": "p"
                            },
                            "right": {
                              "type": "Literal",
                              "value": 4
                            }
                          },
                          {
                            "type": "Literal",
                            "value": 9
                          },
                          {
                            "type": "Literal",
                            "value": "ascii"
                          }
                        ]
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "computed": true,
                          "object": {
                            "type": "Identifier",
                            "name": "buf"
                          },
                          "property": {
                            "type": "AssignmentExpression",
                            "operator": "+=",
                            "left": {
                              "type": "Identifier",
                              "name": "p"
                            },
                            "right": {
                              "type": "Literal",
                              "value": 9
                            }
                          }
                        },
                        "right": {
                          "type": "Literal",
                          "value": 1
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "buf"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "writeUInt32BE"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "algoLen"
                          },
                          {
                            "type": "UpdateExpression",
                            "operator": "++",
                            "argument": {
                              "type": "Identifier",
                              "name": "p"
                            },
                            "prefix": true
                          },
                          {
                            "type": "Literal",
                            "value": true
                          }
                        ]
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "buf"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "write"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "pubKeyFullType"
                          },
                          {
                            "type": "AssignmentExpression",
                            "operator": "+=",
                            "left": {
                              "type": "Identifier",
                              "name": "p"
                            },
                            "right": {
                              "type": "Literal",
                              "value": 4
                            }
                          },
                          {
                            "type": "Identifier",
                            "name": "algoLen"
                          },
                          {
                            "type": "Literal",
                            "value": "ascii"
                          }
                        ]
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "buf"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "writeUInt32BE"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "pubKeyLen"
                          },
                          {
                            "type": "AssignmentExpression",
                            "operator": "+=",
                            "left": {
                              "type": "Identifier",
                              "name": "p"
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "algoLen"
                            }
                          },
                          {
                            "type": "Literal",
                            "value": true
                          }
                        ]
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "pubKey"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "copy"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "buf"
                          },
                          {
                            "type": "AssignmentExpression",
                            "operator": "+=",
                            "left": {
                              "type": "Identifier",
                              "name": "p"
                            },
                            "right": {
                              "type": "Literal",
                              "value": 4
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "buf"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "writeUInt32BE"
                          }
                        },
                        "arguments": [
                          {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                  "type": "Literal",
                                  "value": 4
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "privAlgoLen"
                                }
                              },
                              "right": {
                                "type": "Literal",
                                "value": 4
                              }
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "sigLen"
                            }
                          },
                          {
                            "type": "AssignmentExpression",
                            "operator": "+=",
                            "left": {
                              "type": "Identifier",
                              "name": "p"
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "pubKeyLen"
                            }
                          },
                          {
                            "type": "Literal",
                            "value": true
                          }
                        ]
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "buf"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "writeUInt32BE"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "privAlgoLen"
                          },
                          {
                            "type": "AssignmentExpression",
                            "operator": "+=",
                            "left": {
                              "type": "Identifier",
                              "name": "p"
                            },
                            "right": {
                              "type": "Literal",
                              "value": 4
                            }
                          },
                          {
                            "type": "Literal",
                            "value": true
                          }
                        ]
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "buf"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "write"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "privAlgo"
                          },
                          {
                            "type": "AssignmentExpression",
                            "operator": "+=",
                            "left": {
                              "type": "Identifier",
                              "name": "p"
                            },
                            "right": {
                              "type": "Literal",
                              "value": 4
                            }
                          },
                          {
                            "type": "Identifier",
                            "name": "privAlgoLen"
                          },
                          {
                            "type": "Literal",
                            "value": "ascii"
                          }
                        ]
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "buf"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "writeUInt32BE"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "sigLen"
                          },
                          {
                            "type": "AssignmentExpression",
                            "operator": "+=",
                            "left": {
                              "type": "Identifier",
                              "name": "p"
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "privAlgoLen"
                            }
                          },
                          {
                            "type": "Literal",
                            "value": true
                          }
                        ]
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "signature"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "copy"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "buf"
                          },
                          {
                            "type": "AssignmentExpression",
                            "operator": "+=",
                            "left": {
                              "type": "Identifier",
                              "name": "p"
                            },
                            "right": {
                              "type": "Literal",
                              "value": 4
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "LogicalExpression",
                        "operator": "&&",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "self"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "_debug"
                          }
                        },
                        "right": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "self"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_debug"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "DEBUG: Connection: Sent USERAUTH_REQUEST (publickey)"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "self"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "_send"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "buf"
                          }
                        ]
                      }
                    }
                  ]
                },
                "rest": null,
                "generator": false,
                "expression": false
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "Connection"
            },
            "property": {
              "type": "Identifier",
              "name": "prototype"
            }
          },
          "property": {
            "type": "Identifier",
            "name": "_authAgent"
          }
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "params": [],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_parser"
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_authMethod"
                    }
                  },
                  "right": {
                    "type": "Literal",
                    "value": "agent"
                  }
                }
              },
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "self"
                    },
                    "init": {
                      "type": "ThisExpression"
                    }
                  },
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "type"
                    },
                    "init": null
                  }
                ],
                "kind": "var"
              },
              {
                "type": "IfStatement",
                "test": {
                  "type": "UnaryExpression",
                  "operator": "!",
                  "argument": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_agentKeys"
                    }
                  },
                  "prefix": true
                },
                "consequent": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "agentQuery"
                        },
                        "arguments": [
                          {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "self"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_agent"
                            }
                          },
                          {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "err"
                              },
                              {
                                "type": "Identifier",
                                "name": "keys"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "IfStatement",
                                  "test": {
                                    "type": "Identifier",
                                    "name": "err"
                                  },
                                  "consequent": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "err"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "level"
                                            }
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": "agent"
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "self"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "emit"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": "error"
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "err"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "self"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "_agentKeys"
                                            }
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "undefined"
                                          }
                                        }
                                      },
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "self"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "_tryNextAuth"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": true
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "alternate": {
                                    "type": "IfStatement",
                                    "test": {
                                      "type": "BinaryExpression",
                                      "operator": "===",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "keys"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "length"
                                        }
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": 0
                                      }
                                    },
                                    "consequent": {
                                      "type": "ReturnStatement",
                                      "argument": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "self"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "_tryNextAuth"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Literal",
                                            "value": true
                                          }
                                        ]
                                      }
                                    },
                                    "alternate": null
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "self"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "_agentKeys"
                                      }
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "keys"
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "self"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "_agentKeys"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "i"
                                      }
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": 0
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "type"
                                    },
                                    "right": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "MemberExpression",
                                          "computed": true,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "keys"
                                          },
                                          "property": {
                                            "type": "Literal",
                                            "value": 0
                                          }
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "toString"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "ascii"
                                        },
                                        {
                                          "type": "Literal",
                                          "value": 4
                                        },
                                        {
                                          "type": "Literal",
                                          "value": 11
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "type": "IfStatement",
                                  "test": {
                                    "type": "LogicalExpression",
                                    "operator": "&&",
                                    "left": {
                                      "type": "BinaryExpression",
                                      "operator": "!==",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "type"
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": "ssh-rsa"
                                      }
                                    },
                                    "right": {
                                      "type": "BinaryExpression",
                                      "operator": "!==",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "type"
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": "ssh-dss"
                                      }
                                    }
                                  },
                                  "consequent": {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "process"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "nextTick"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "FunctionExpression",
                                          "id": null,
                                          "params": [],
                                          "defaults": [],
                                          "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "self"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "_authAgent"
                                                    }
                                                  },
                                                  "arguments": []
                                                }
                                              }
                                            ]
                                          },
                                          "rest": null,
                                          "generator": false,
                                          "expression": false
                                        }
                                      ]
                                    }
                                  },
                                  "alternate": null
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "self"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "_authPK"
                                      }
                                    },
                                    "arguments": []
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          }
                        ]
                      }
                    }
                  ]
                },
                "alternate": {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "operator": "===",
                    "left": {
                      "type": "UpdateExpression",
                      "operator": "++",
                      "argument": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "ThisExpression"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "_agentKeys"
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "i"
                        }
                      },
                      "prefix": true
                    },
                    "right": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "ThisExpression"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "_agentKeys"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "length"
                      }
                    }
                  },
                  "consequent": {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "ThisExpression"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "_tryNextAuth"
                        }
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": true
                        }
                      ]
                    }
                  },
                  "alternate": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "type"
                          },
                          "right": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "ThisExpression"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "_agentKeys"
                                  }
                                },
                                "property": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "ThisExpression"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "_agentKeys"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "i"
                                  }
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "toString"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "ascii"
                              },
                              {
                                "type": "Literal",
                                "value": 4
                              },
                              {
                                "type": "Literal",
                                "value": 11
                              }
                            ]
                          }
                        }
                      },
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "LogicalExpression",
                          "operator": "&&",
                          "left": {
                            "type": "BinaryExpression",
                            "operator": "!==",
                            "left": {
                              "type": "Identifier",
                              "name": "type"
                            },
                            "right": {
                              "type": "Literal",
                              "value": "ssh-rsa"
                            }
                          },
                          "right": {
                            "type": "BinaryExpression",
                            "operator": "!==",
                            "left": {
                              "type": "Identifier",
                              "name": "type"
                            },
                            "right": {
                              "type": "Literal",
                              "value": "ssh-dss"
                            }
                          }
                        },
                        "consequent": {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "process"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "nextTick"
                              }
                            },
                            "arguments": [
                              {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [],
                                "defaults": [],
                                "body": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "self"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "_authAgent"
                                          }
                                        },
                                        "arguments": []
                                      }
                                    }
                                  ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                              }
                            ]
                          }
                        },
                        "alternate": null
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "ThisExpression"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_authPK"
                            }
                          },
                          "arguments": []
                        }
                      }
                    ]
                  }
                }
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "Connection"
            },
            "property": {
              "type": "Identifier",
              "name": "prototype"
            }
          },
          "property": {
            "type": "Identifier",
            "name": "_disconnect"
          }
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "params": [
            {
              "type": "Identifier",
              "name": "reason"
            }
          ],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "init": {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Buffer"
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "Literal",
                                "value": 1
                              },
                              "right": {
                                "type": "Literal",
                                "value": 4
                              }
                            },
                            "right": {
                              "type": "Literal",
                              "value": 4
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": 4
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "self"
                    },
                    "init": {
                      "type": "ThisExpression"
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "fill"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": 0
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "property": {
                      "type": "Literal",
                      "value": 0
                    }
                  },
                  "right": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "MESSAGE"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "DISCONNECT"
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "writeUInt32BE"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "reason"
                    },
                    {
                      "type": "Literal",
                      "value": 1
                    },
                    {
                      "type": "Literal",
                      "value": true
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "LogicalExpression",
                  "operator": "&&",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "self"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_debug"
                    }
                  },
                  "right": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "self"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_debug"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "DEBUG: Connection: Sent DISCONNECT"
                      }
                    ]
                  }
                }
              },
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_send"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "self"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "_sock"
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "end"
                                }
                              },
                              "arguments": []
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  ]
                }
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "Connection"
            },
            "property": {
              "type": "Identifier",
              "name": "prototype"
            }
          },
          "property": {
            "type": "Identifier",
            "name": "_send"
          }
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "params": [
            {
              "type": "Identifier",
              "name": "payload"
            },
            {
              "type": "Identifier",
              "name": "cb"
            }
          ],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "IfStatement",
                "test": {
                  "type": "BinaryExpression",
                  "operator": "===",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_state"
                    }
                  },
                  "right": {
                    "type": "Literal",
                    "value": "reexchg"
                  }
                },
                "consequent": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "BinaryExpression",
                        "operator": "===",
                        "left": {
                          "type": "UnaryExpression",
                          "operator": "typeof",
                          "argument": {
                            "type": "Identifier",
                            "name": "cb"
                          },
                          "prefix": true
                        },
                        "right": {
                          "type": "Literal",
                          "value": "function"
                        }
                      },
                      "consequent": {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "ThisExpression"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_buffer"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "push"
                            }
                          },
                          "arguments": [
                            {
                              "type": "ArrayExpression",
                              "elements": [
                                {
                                  "type": "Identifier",
                                  "name": "payload"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "cb"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      "alternate": {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "ThisExpression"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_buffer"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "push"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "payload"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "Literal",
                        "value": false
                      }
                    }
                  ]
                },
                "alternate": {
                  "type": "IfStatement",
                  "test": {
                    "type": "LogicalExpression",
                    "operator": "||",
                    "left": {
                      "type": "BinaryExpression",
                      "operator": "===",
                      "left": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "ThisExpression"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "_state"
                        }
                      },
                      "right": {
                        "type": "Literal",
                        "value": "closed"
                      }
                    },
                    "right": {
                      "type": "UnaryExpression",
                      "operator": "!",
                      "argument": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "ThisExpression"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "_sock"
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "writable"
                        }
                      },
                      "prefix": true
                    }
                  },
                  "consequent": {
                    "type": "ReturnStatement",
                    "argument": null
                  },
                  "alternate": null
                }
              },
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "pktLen"
                    },
                    "init": {
                      "type": "BinaryExpression",
                      "operator": "+",
                      "left": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "payload"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "length"
                        }
                      },
                      "right": {
                        "type": "Literal",
                        "value": 9
                      }
                    }
                  },
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "padLen"
                    },
                    "init": null
                  },
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "init": null
                  },
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "hmac"
                    },
                    "init": null
                  },
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "ret"
                    },
                    "init": null
                  },
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "self"
                    },
                    "init": {
                      "type": "ThisExpression"
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "+=",
                  "left": {
                    "type": "Identifier",
                    "name": "pktLen"
                  },
                  "right": {
                    "type": "BinaryExpression",
                    "operator": "%",
                    "left": {
                      "type": "BinaryExpression",
                      "operator": "*",
                      "left": {
                        "type": "BinaryExpression",
                        "operator": "-",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "ThisExpression"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "_encryptSize"
                          }
                        },
                        "right": {
                          "type": "Literal",
                          "value": 1
                        }
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "pktLen"
                      }
                    },
                    "right": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_encryptSize"
                      }
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "padLen"
                  },
                  "right": {
                    "type": "BinaryExpression",
                    "operator": "-",
                    "left": {
                      "type": "BinaryExpression",
                      "operator": "-",
                      "left": {
                        "type": "Identifier",
                        "name": "pktLen"
                      },
                      "right": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "payload"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "length"
                        }
                      }
                    },
                    "right": {
                      "type": "Literal",
                      "value": 5
                    }
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "Identifier",
                    "name": "buf"
                  },
                  "right": {
                    "type": "NewExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "Buffer"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "pktLen"
                      }
                    ]
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "writeUInt32BE"
                    }
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "operator": "-",
                      "left": {
                        "type": "Identifier",
                        "name": "pktLen"
                      },
                      "right": {
                        "type": "Literal",
                        "value": 4
                      }
                    },
                    {
                      "type": "Literal",
                      "value": 0
                    },
                    {
                      "type": "Literal",
                      "value": true
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    "property": {
                      "type": "Literal",
                      "value": 4
                    }
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "padLen"
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "payload"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "copy"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    {
                      "type": "Literal",
                      "value": 5
                    }
                  ]
                }
              },
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "padBytes"
                    },
                    "init": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "crypto"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "randomBytes"
                        }
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "padLen"
                        }
                      ]
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "padBytes"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "copy"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "buf"
                    },
                    {
                      "type": "BinaryExpression",
                      "operator": "+",
                      "left": {
                        "type": "Literal",
                        "value": 5
                      },
                      "right": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "payload"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "length"
                        }
                      }
                    }
                  ]
                }
              },
              {
                "type": "IfStatement",
                "test": {
                  "type": "LogicalExpression",
                  "operator": "&&",
                  "left": {
                    "type": "BinaryExpression",
                    "operator": "!==",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "self"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_hmac"
                      }
                    },
                    "right": {
                      "type": "Literal",
                      "value": false
                    }
                  },
                  "right": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "self"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_hmacKey"
                    }
                  }
                },
                "consequent": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "hmac"
                        },
                        "right": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "crypto"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "createHmac"
                            }
                          },
                          "arguments": [
                            {
                              "type": "MemberExpression",
                              "computed": true,
                              "object": {
                                "type": "Identifier",
                                "name": "SSH_TO_OPENSSL"
                              },
                              "property": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "self"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "_hmac"
                                }
                              }
                            },
                            {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "self"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_hmacKey"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "ThisExpression"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_bufseqno"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "writeUInt32BE"
                          }
                        },
                        "arguments": [
                          {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "self"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_seqno"
                            }
                          },
                          {
                            "type": "Literal",
                            "value": 0
                          },
                          {
                            "type": "Literal",
                            "value": true
                          }
                        ]
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "hmac"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "update"
                          }
                        },
                        "arguments": [
                          {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "ThisExpression"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_bufseqno"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "hmac"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "update"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "buf"
                          }
                        ]
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "hmac"
                        },
                        "right": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "hmac"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "digest"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "binary"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "LogicalExpression",
                        "operator": "&&",
                        "left": {
                          "type": "BinaryExpression",
                          "operator": ">",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "self"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "_hmac"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "length"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": 3
                          }
                        },
                        "right": {
                          "type": "BinaryExpression",
                          "operator": "===",
                          "left": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "self"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "_hmac"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "substr"
                              }
                            },
                            "arguments": [
                              {
                                "type": "UnaryExpression",
                                "operator": "-",
                                "argument": {
                                  "type": "Literal",
                                  "value": 3
                                },
                                "prefix": true
                              }
                            ]
                          },
                          "right": {
                            "type": "Literal",
                            "value": "-96"
                          }
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "hmac"
                              },
                              "right": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "NewExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "Buffer"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "hmac"
                                      },
                                      {
                                        "type": "Literal",
                                        "value": "binary"
                                      }
                                    ]
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "toString"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": "binary"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": 0
                                  },
                                  {
                                    "type": "BinaryExpression",
                                    "operator": "/",
                                    "left": {
                                      "type": "Literal",
                                      "value": 96
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": 8
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      },
                      "alternate": null
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "hmac"
                        },
                        "right": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Buffer"
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "hmac"
                            },
                            {
                              "type": "Literal",
                              "value": "binary"
                            }
                          ]
                        }
                      }
                    }
                  ]
                },
                "alternate": null
              },
              {
                "type": "IfStatement",
                "test": {
                  "type": "BinaryExpression",
                  "operator": "!==",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "self"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "_encrypt"
                    }
                  },
                  "right": {
                    "type": "Literal",
                    "value": false
                  }
                },
                "consequent": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "self"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_sock"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "write"
                          }
                        },
                        "arguments": [
                          {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "self"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "_encrypt"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "update"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "buf"
                              },
                              {
                                "type": "Literal",
                                "value": "binary"
                              },
                              {
                                "type": "Literal",
                                "value": "binary"
                              }
                            ]
                          },
                          {
                            "type": "Literal",
                            "value": "binary"
                          }
                        ]
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "self"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_sock"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "write"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "hmac"
                          }
                        ]
                      }
                    }
                  ]
                },
                "alternate": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "ret"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "self"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "_sock"
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "write"
                        }
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "buf"
                        }
                      ]
                    }
                  }
                }
              },
              {
                "type": "IfStatement",
                "test": {
                  "type": "BinaryExpression",
                  "operator": ">",
                  "left": {
                    "type": "UpdateExpression",
                    "operator": "++",
                    "argument": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "self"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_seqno"
                      }
                    },
                    "prefix": true
                  },
                  "right": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "Parser"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "MAX_SEQNO"
                    }
                  }
                },
                "consequent": {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "self"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_seqno"
                      }
                    },
                    "right": {
                      "type": "Literal",
                      "value": 0
                    }
                  }
                },
                "alternate": null
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "LogicalExpression",
                  "operator": "&&",
                  "left": {
                    "type": "Identifier",
                    "name": "cb"
                  },
                  "right": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "cb"
                    },
                    "arguments": []
                  }
                }
              },
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "Identifier",
                  "name": "ret"
                }
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "module"
          },
          "property": {
            "type": "Identifier",
            "name": "exports"
          }
        },
        "right": {
          "type": "Identifier",
          "name": "Connection"
        }
      }
    }
  ]
}
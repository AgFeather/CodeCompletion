{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "ace"
          },
          "property": {
            "type": "Identifier",
            "name": "define"
          }
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "ace/mode/jade"
          },
          {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": "require"
              },
              {
                "type": "Literal",
                "value": "exports"
              },
              {
                "type": "Literal",
                "value": "module"
              },
              {
                "type": "Literal",
                "value": "ace/lib/oop"
              },
              {
                "type": "Literal",
                "value": "ace/mode/text"
              },
              {
                "type": "Literal",
                "value": "ace/tokenizer"
              },
              {
                "type": "Literal",
                "value": "ace/mode/jade_highlight_rules"
              },
              {
                "type": "Literal",
                "value": "ace/mode/folding/coffee"
              }
            ]
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "require"
              },
              {
                "type": "Identifier",
                "name": "exports"
              },
              {
                "type": "Identifier",
                "name": "module"
              }
            ],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "oop"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "require"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "../lib/oop"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "TextMode"
                      },
                      "init": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "require"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "./text"
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "Mode"
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "Tokenizer"
                      },
                      "init": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "require"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "../tokenizer"
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "Tokenizer"
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "JadeHighlightRules"
                      },
                      "init": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "require"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "./jade_highlight_rules"
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "JadeHighlightRules"
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "FoldMode"
                      },
                      "init": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "require"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "./folding/coffee"
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "FoldMode"
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "Mode"
                      },
                      "init": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "VariableDeclaration",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "highlighter"
                                  },
                                  "init": {
                                    "type": "NewExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "JadeHighlightRules"
                                    },
                                    "arguments": []
                                  }
                                }
                              ],
                              "kind": "var"
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "ThisExpression"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "$tokenizer"
                                  }
                                },
                                "right": {
                                  "type": "NewExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "Tokenizer"
                                  },
                                  "arguments": [
                                    {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "highlighter"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "getRules"
                                        }
                                      },
                                      "arguments": []
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "ThisExpression"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "foldingRules"
                                  }
                                },
                                "right": {
                                  "type": "NewExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "FoldMode"
                                  },
                                  "arguments": []
                                }
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "oop"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "inherits"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "Mode"
                      },
                      {
                        "type": "Identifier",
                        "name": "TextMode"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": []
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "call"
                      }
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "Mode"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "prototype"
                        }
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "exports"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "Mode"
                      }
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "Mode"
                    }
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "ace"
          },
          "property": {
            "type": "Identifier",
            "name": "define"
          }
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "ace/mode/jade_highlight_rules"
          },
          {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": "require"
              },
              {
                "type": "Literal",
                "value": "exports"
              },
              {
                "type": "Literal",
                "value": "module"
              },
              {
                "type": "Literal",
                "value": "ace/lib/oop"
              },
              {
                "type": "Literal",
                "value": "ace/mode/text_highlight_rules"
              },
              {
                "type": "Literal",
                "value": "ace/mode/markdown_highlight_rules"
              },
              {
                "type": "Literal",
                "value": "ace/mode/scss_highlight_rules"
              },
              {
                "type": "Literal",
                "value": "ace/mode/less_highlight_rules"
              },
              {
                "type": "Literal",
                "value": "ace/mode/coffee_highlight_rules"
              },
              {
                "type": "Literal",
                "value": "ace/mode/javascript_highlight_rules"
              }
            ]
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "require"
              },
              {
                "type": "Identifier",
                "name": "exports"
              },
              {
                "type": "Identifier",
                "name": "module"
              }
            ],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "oop"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "require"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "../lib/oop"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "TextHighlightRules"
                      },
                      "init": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "require"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "./text_highlight_rules"
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "TextHighlightRules"
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "MarkdownHighlightRules"
                      },
                      "init": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "require"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "./markdown_highlight_rules"
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "MarkdownHighlightRules"
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "SassHighlightRules"
                      },
                      "init": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "require"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "./scss_highlight_rules"
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "ScssHighlightRules"
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "LessHighlightRules"
                      },
                      "init": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "require"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "./less_highlight_rules"
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "LessHighlightRules"
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "CoffeeHighlightRules"
                      },
                      "init": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "require"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "./coffee_highlight_rules"
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "CoffeeHighlightRules"
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "JavaScriptHighlightRules"
                      },
                      "init": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "require"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "./javascript_highlight_rules"
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "JavaScriptHighlightRules"
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "FunctionDeclaration",
                  "id": {
                    "type": "Identifier",
                    "name": "mixin_embed"
                  },
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "tag"
                    },
                    {
                      "type": "Identifier",
                      "name": "prefix"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "ObjectExpression",
                          "properties": [
                            {
                              "type": "Property",
                              "key": {
                                "type": "Identifier",
                                "name": "token"
                              },
                              "value": {
                                "type": "Literal",
                                "value": "entity.name.function.jade"
                              },
                              "kind": "init"
                            },
                            {
                              "type": "Property",
                              "key": {
                                "type": "Identifier",
                                "name": "regex"
                              },
                              "value": {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                  "type": "Literal",
                                  "value": "^\\s*\\:"
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "tag"
                                }
                              },
                              "kind": "init"
                            },
                            {
                              "type": "Property",
                              "key": {
                                "type": "Identifier",
                                "name": "next"
                              },
                              "value": {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                  "type": "Identifier",
                                  "name": "prefix"
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": "start"
                                }
                              },
                              "kind": "init"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "JadeHighlightRules"
                      },
                      "init": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "VariableDeclaration",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "escapedRe"
                                  },
                                  "init": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                      "type": "BinaryExpression",
                                      "operator": "+",
                                      "left": {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                          "type": "BinaryExpression",
                                          "operator": "+",
                                          "left": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "Literal",
                                                "value": "\\\\(?:x[0-9a-fA-F]{2}|"
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": "u[0-9a-fA-F]{4}|"
                                              }
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": "[0-2][0-7]{0,2}|"
                                            }
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": "3[0-6][0-7]?|"
                                          }
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": "37[0-7]?|"
                                        }
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": "[4-7][0-7]?|"
                                      }
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": ".)"
                                    }
                                  }
                                }
                              ],
                              "kind": "var"
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "ThisExpression"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "$rules"
                                  }
                                },
                                "right": {
                                  "type": "ObjectExpression",
                                  "properties": [
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Literal",
                                        "value": "start"
                                      },
                                      "value": {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "keyword.control.import.include.jade"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "\\s*\\binclude\\b"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "keyword.other.doctype.jade"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "^!!!\\s*(?:[a-zA-Z0-9-_]+)?"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "punctuation.section.comment"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "^\\s*//(?:\\s*[^-\\s]|\\s+\\S)(?:.*$)"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "token"
                                                },
                                                "value": {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "space"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "text"
                                                    }
                                                  ],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                          "type": "Literal",
                                                          "value": "punctuation.section.comment"
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "^((\\s*)//)(?:\\s*$)"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "comment_block"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "mixin_embed"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "markdown"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": "markdown-"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "mixin_embed"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "sass"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": "sass-"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "mixin_embed"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "less"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": "less-"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "mixin_embed"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "coffee"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": "coffee-"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "token"
                                                },
                                                "value": {
                                                  "type": "ArrayExpression",
                                                  "elements": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "storage.type.function.jade"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "entity.name.function.jade"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "punctuation.definition.parameters.begin.jade"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "variable.parameter.function.jade"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "punctuation.definition.parameters.end.jade"
                                                    }
                                                  ]
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "^(\\s*mixin)( [\\w\\-]+)(\\s*\\()(.*?)(\\))"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "token"
                                                },
                                                "value": {
                                                  "type": "ArrayExpression",
                                                  "elements": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "storage.type.function.jade"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "entity.name.function.jade"
                                                    }
                                                  ]
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "^(\\s*mixin)( [\\w\\-]+)"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "source.js.embedded.jade"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "^\\s*(?:-|=|!=)"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "js-start"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "string.interpolated.jade"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "[#!]\\{[^\\}]+\\}"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "token"
                                                },
                                                "value": {
                                                  "type": "ArrayExpression",
                                                  "elements": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "meta.tag.any.jade"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "entity.variable.tag.jade"
                                                    }
                                                  ]
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": {}
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "tag_single"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "suport.type.attribute.id.jade"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "#\\w+"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "suport.type.attribute.class.jade"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "\\.\\w+"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "punctuation"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "\\s*(?:\\()"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "tag_attributes"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Literal",
                                        "value": "comment_block"
                                      },
                                      "value": {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "token"
                                                },
                                                "value": {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "text"
                                                    }
                                                  ],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                          "type": "Literal",
                                                          "value": "text"
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "^(\\1\\S|$)"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "captures"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "1"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "start"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "comment.block.jade"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "merge"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": ".+"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Literal",
                                        "value": "tag_single"
                                      },
                                      "value": {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "entity.other.attribute-name.class.jade"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "\\.[\\w-]+"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "entity.other.attribute-name.id.jade"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "#[\\w-]+"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "token"
                                                },
                                                "value": {
                                                  "type": "ArrayExpression",
                                                  "elements": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "text"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "punctuation"
                                                    }
                                                  ]
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "($)|((?!\\.|#|=|-))"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "start"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Literal",
                                        "value": "tag_attributes"
                                      },
                                      "value": {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "string"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "'(?=.)"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "qstring"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "string"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "\"(?=.)"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "qqstring"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "entity.other.attribute-name.jade"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "\\b[a-zA-Z\\-:]+"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "token"
                                                },
                                                "value": {
                                                  "type": "ArrayExpression",
                                                  "elements": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "entity.other.attribute-name.jade"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "punctuation"
                                                    }
                                                  ]
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "\\b([a-zA-Z:\\.-]+)(=)"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "attribute_strings"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "punctuation"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "\\)"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "start"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Literal",
                                        "value": "attribute_strings"
                                      },
                                      "value": {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "string"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "'(?=.)"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "qstring"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "string"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "\"(?=.)"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Literal",
                                                  "value": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "qqstring"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Literal",
                                        "value": "qqstring"
                                      },
                                      "value": {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "constant.language.escape"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Identifier",
                                                  "name": "escapedRe"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "string"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "[^\"\\\\]+"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "merge"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "string"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "\\\\$"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "qqstring"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "merge"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "string"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "\"|$"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "tag_attributes"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "merge"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Literal",
                                        "value": "qstring"
                                      },
                                      "value": {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "constant.language.escape"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Identifier",
                                                  "name": "escapedRe"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "string"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "[^'\\\\]+"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "merge"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "string"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "\\\\$"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "qstring"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "merge"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "string"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "'|$"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "tag_attributes"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "merge"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "kind": "init"
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "ThisExpression"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "embedRules"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "JavaScriptHighlightRules"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "js-"
                                  },
                                  {
                                    "type": "ArrayExpression",
                                    "elements": [
                                      {
                                        "type": "ObjectExpression",
                                        "properties": [
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "token"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "text"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "regex"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": ".$"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "next"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "start"
                                            },
                                            "kind": "init"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "oop"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "inherits"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "JadeHighlightRules"
                      },
                      {
                        "type": "Identifier",
                        "name": "TextHighlightRules"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "exports"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "JadeHighlightRules"
                      }
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "JadeHighlightRules"
                    }
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "ace"
          },
          "property": {
            "type": "Identifier",
            "name": "define"
          }
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "ace/mode/markdown_highlight_rules"
          },
          {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": "require"
              },
              {
                "type": "Literal",
                "value": "exports"
              },
              {
                "type": "Literal",
                "value": "module"
              },
              {
                "type": "Literal",
                "value": "ace/lib/oop"
              },
              {
                "type": "Literal",
                "value": "ace/mode/text_highlight_rules"
              },
              {
                "type": "Literal",
                "value": "ace/mode/javascript_highlight_rules"
              },
              {
                "type": "Literal",
                "value": "ace/mode/xml_highlight_rules"
              },
              {
                "type": "Literal",
                "value": "ace/mode/html_highlight_rules"
              },
              {
                "type": "Literal",
                "value": "ace/mode/css_highlight_rules"
              }
            ]
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "require"
              },
              {
                "type": "Identifier",
                "name": "exports"
              },
              {
                "type": "Identifier",
                "name": "module"
              }
            ],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "oop"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "require"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "../lib/oop"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "TextHighlightRules"
                      },
                      "init": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "require"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "./text_highlight_rules"
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "TextHighlightRules"
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "JavaScriptHighlightRules"
                      },
                      "init": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "require"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "./javascript_highlight_rules"
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "JavaScriptHighlightRules"
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "XmlHighlightRules"
                      },
                      "init": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "require"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "./xml_highlight_rules"
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "XmlHighlightRules"
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "HtmlHighlightRules"
                      },
                      "init": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "require"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "./html_highlight_rules"
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "HtmlHighlightRules"
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "CssHighlightRules"
                      },
                      "init": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "require"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "./css_highlight_rules"
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "CssHighlightRules"
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "FunctionDeclaration",
                  "id": {
                    "type": "Identifier",
                    "name": "github_embed"
                  },
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "tag"
                    },
                    {
                      "type": "Identifier",
                      "name": "prefix"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "ObjectExpression",
                          "properties": [
                            {
                              "type": "Property",
                              "key": {
                                "type": "Identifier",
                                "name": "token"
                              },
                              "value": {
                                "type": "Literal",
                                "value": "support.function"
                              },
                              "kind": "init"
                            },
                            {
                              "type": "Property",
                              "key": {
                                "type": "Identifier",
                                "name": "regex"
                              },
                              "value": {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "Literal",
                                    "value": "^```"
                                  },
                                  "right": {
                                    "type": "Identifier",
                                    "name": "tag"
                                  }
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": "\\s*$"
                                }
                              },
                              "kind": "init"
                            },
                            {
                              "type": "Property",
                              "key": {
                                "type": "Identifier",
                                "name": "next"
                              },
                              "value": {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                  "type": "Identifier",
                                  "name": "prefix"
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": "start"
                                }
                              },
                              "kind": "init"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "MarkdownHighlightRules"
                      },
                      "init": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "ThisExpression"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "$rules"
                                  }
                                },
                                "right": {
                                  "type": "ObjectExpression",
                                  "properties": [
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Literal",
                                        "value": "start"
                                      },
                                      "value": {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "empty_line"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "^$"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "ArrayExpression",
                                                  "elements": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "support.function"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "support.function"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "support.function"
                                                    }
                                                  ]
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "(`+)([^\\r]*?[^`])(\\1)"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "support.function"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "^[ ]{4}.+"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "markup.heading.1"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "^=+(?=\\s*$)"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "markup.heading.2"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "^\\-+(?=\\s*$)"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "value"
                                                    }
                                                  ],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "Literal",
                                                            "value": "markup.heading."
                                                          },
                                                          "right": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "value"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "search"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Literal",
                                                                "value": {}
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "^#{1,6}(?:[^ #].*| +.*(?:[^ #].*|[^ ]+.* +#+ *))$"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "github_embed"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "(?:javascript|js)"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": "js-"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "github_embed"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "xml"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": "xml-"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "github_embed"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "html"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": "html-"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "github_embed"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "css"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": "css-"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "support.function"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "^```[a-zA-Z]*\\s*$"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "githubblock"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "string"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "^>[ ].+$"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "blockquote"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "ArrayExpression",
                                                  "elements": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "text"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "constant"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "text"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "url"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "string"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "text"
                                                    }
                                                  ]
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "^([ ]{0,3}\\[)([^\\]]+)(\\]:\\s*)([^ ]+)(\\s*(?:[\"][^\"]+[\"])?(\\s*))$"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "ArrayExpression",
                                                  "elements": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "text"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "string"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "text"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "constant"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "text"
                                                    }
                                                  ]
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "(\\[)((?:[[^\\]]*\\]|[^\\[\\]])*)(\\][ ]?(?:\\n[ ]*)?\\[)(.*?)(\\])"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "ArrayExpression",
                                                  "elements": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "text"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "string"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "text"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "markup.underline"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "string"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "text"
                                                    }
                                                  ]
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "BinaryExpression",
                                                  "operator": "+",
                                                  "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "BinaryExpression",
                                                      "operator": "+",
                                                      "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "Literal",
                                                            "value": "(\\[)"
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "(\\[[^\\]]*\\]|[^\\[\\]]*)"
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": "(\\]\\([ \\t]*)"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": "(<?(?:(?:[^\\(]*?\\([^\\)]*?\\)\\S*?)|(?:.*?))>?)"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": "((?:[ \t]*\"(?:.*?)\"[ \\t]*)?)"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": "(\\))"
                                                  }
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "constant"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "^[ ]{0,2}(?:[ ]?\\*[ ]?){3,}\\s*$"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "constant"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "^[ ]{0,2}(?:[ ]?\\-[ ]?){3,}\\s*$"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "constant"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "^[ ]{0,2}(?:[ ]?\\_[ ]?){3,}\\s*$"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "markup.list"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "^\\s{0,3}(?:[*+-]|\\d+\\.)\\s+"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "listblock"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "ArrayExpression",
                                                  "elements": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "string"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "string"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "string"
                                                    }
                                                  ]
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "([*]{2}|[_]{2}(?=\\S))([^\\r]*?\\S[*_]*)(\\1)"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "ArrayExpression",
                                                  "elements": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "string"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "string"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "string"
                                                    }
                                                  ]
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "([*]|[_](?=\\S))([^\\r]*?\\S[*_]*)(\\1)"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "ArrayExpression",
                                                  "elements": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "text"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "url"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "text"
                                                    }
                                                  ]
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "BinaryExpression",
                                                  "operator": "+",
                                                  "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "BinaryExpression",
                                                      "operator": "+",
                                                      "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                          "type": "Literal",
                                                          "value": "(<)("
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": "(?:https?|ftp|dict):[^'\">\\s]+"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": "|"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": "(?:mailto:)?[-.\\w]+\\@[-a-z0-9]+(?:\\.[-a-z0-9]+)*\\.[a-z]+"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": ")(>)"
                                                  }
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "text"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "[^\\*_%$`\\[#<>]+"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Literal",
                                        "value": "listblock"
                                      },
                                      "value": {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "empty_line"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "^$"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "start"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "markup.list"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": ".+"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Literal",
                                        "value": "blockquote"
                                      },
                                      "value": {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "empty_line"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "^\\s*$"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "start"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "string"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": ".+"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Literal",
                                        "value": "githubblock"
                                      },
                                      "value": {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "support.function"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "^```"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "start"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "support.function"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": ".+"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "kind": "init"
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "ThisExpression"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "embedRules"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "JavaScriptHighlightRules"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "js-"
                                  },
                                  {
                                    "type": "ArrayExpression",
                                    "elements": [
                                      {
                                        "type": "ObjectExpression",
                                        "properties": [
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "token"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "support.function"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "regex"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "^```"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "next"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "start"
                                            },
                                            "kind": "init"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "ThisExpression"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "embedRules"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "HtmlHighlightRules"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "html-"
                                  },
                                  {
                                    "type": "ArrayExpression",
                                    "elements": [
                                      {
                                        "type": "ObjectExpression",
                                        "properties": [
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "token"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "support.function"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "regex"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "^```"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "next"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "start"
                                            },
                                            "kind": "init"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "ThisExpression"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "embedRules"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "CssHighlightRules"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "css-"
                                  },
                                  {
                                    "type": "ArrayExpression",
                                    "elements": [
                                      {
                                        "type": "ObjectExpression",
                                        "properties": [
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "token"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "support.function"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "regex"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "^```"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "next"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "start"
                                            },
                                            "kind": "init"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "ThisExpression"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "embedRules"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "XmlHighlightRules"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "xml-"
                                  },
                                  {
                                    "type": "ArrayExpression",
                                    "elements": [
                                      {
                                        "type": "ObjectExpression",
                                        "properties": [
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "token"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "support.function"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "regex"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "^```"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "next"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "start"
                                            },
                                            "kind": "init"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "oop"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "inherits"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "MarkdownHighlightRules"
                      },
                      {
                        "type": "Identifier",
                        "name": "TextHighlightRules"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "exports"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "MarkdownHighlightRules"
                      }
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "MarkdownHighlightRules"
                    }
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "ace"
          },
          "property": {
            "type": "Identifier",
            "name": "define"
          }
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "ace/mode/javascript_highlight_rules"
          },
          {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": "require"
              },
              {
                "type": "Literal",
                "value": "exports"
              },
              {
                "type": "Literal",
                "value": "module"
              },
              {
                "type": "Literal",
                "value": "ace/lib/oop"
              },
              {
                "type": "Literal",
                "value": "ace/mode/doc_comment_highlight_rules"
              },
              {
                "type": "Literal",
                "value": "ace/mode/text_highlight_rules"
              }
            ]
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "require"
              },
              {
                "type": "Identifier",
                "name": "exports"
              },
              {
                "type": "Identifier",
                "name": "module"
              }
            ],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "oop"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "require"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "../lib/oop"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "DocCommentHighlightRules"
                      },
                      "init": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "require"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "./doc_comment_highlight_rules"
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "DocCommentHighlightRules"
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "TextHighlightRules"
                      },
                      "init": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "require"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "./text_highlight_rules"
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "TextHighlightRules"
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "JavaScriptHighlightRules"
                      },
                      "init": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "VariableDeclaration",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "keywordMapper"
                                  },
                                  "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "ThisExpression"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "createKeywordMapper"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "ObjectExpression",
                                        "properties": [
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Literal",
                                              "value": "variable.language"
                                            },
                                            "value": {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                  "type": "BinaryExpression",
                                                  "operator": "+",
                                                  "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "BinaryExpression",
                                                      "operator": "+",
                                                      "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "BinaryExpression",
                                                              "operator": "+",
                                                              "left": {
                                                                "type": "Literal",
                                                                "value": "Array|Boolean|Date|Function|Iterator|Number|Object|RegExp|String|Proxy|"
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": "Namespace|QName|XML|XMLList|"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": "ArrayBuffer|Float32Array|Float64Array|Int16Array|Int32Array|Int8Array|"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "Uint16Array|Uint32Array|Uint8Array|Uint8ClampedArray|"
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": "Error|EvalError|InternalError|RangeError|ReferenceError|StopIteration|"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": "SyntaxError|TypeError|URIError|"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": "decodeURI|decodeURIComponent|encodeURI|encodeURIComponent|eval|isFinite|"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": "isNaN|parseFloat|parseInt|"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": "JSON|Math|"
                                                }
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": "this|arguments|prototype|window|document"
                                              }
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Literal",
                                              "value": "keyword"
                                            },
                                            "value": {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                  "type": "BinaryExpression",
                                                  "operator": "+",
                                                  "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "Literal",
                                                      "value": "const|yield|import|get|set|"
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": "break|case|catch|continue|default|delete|do|else|finally|for|function|"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": "if|in|instanceof|new|return|switch|throw|try|typeof|let|var|while|with|debugger|"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": "__parent__|__count__|escape|unescape|with|__proto__|"
                                                }
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": "class|enum|extends|super|export|implements|private|public|interface|package|protected|static"
                                              }
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Literal",
                                              "value": "storage.type"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "const|let|var|function"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Literal",
                                              "value": "constant.language"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "null|Infinity|NaN|undefined"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Literal",
                                              "value": "support.function"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "alert"
                                            },
                                            "kind": "init"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "Literal",
                                        "value": "identifier"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "kind": "var"
                            },
                            {
                              "type": "VariableDeclaration",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "kwBeforeRe"
                                  },
                                  "init": {
                                    "type": "Literal",
                                    "value": "case|do|else|finally|in|instanceof|return|throw|try|typeof|yield"
                                  }
                                }
                              ],
                              "kind": "var"
                            },
                            {
                              "type": "VariableDeclaration",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "identifierRe"
                                  },
                                  "init": {
                                    "type": "Literal",
                                    "value": "[a-zA-Z\\$_¡-￿][a-zA-Z\\d\\$_¡-￿]*\\b"
                                  }
                                }
                              ],
                              "kind": "var"
                            },
                            {
                              "type": "VariableDeclaration",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "escapedRe"
                                  },
                                  "init": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                      "type": "BinaryExpression",
                                      "operator": "+",
                                      "left": {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                          "type": "BinaryExpression",
                                          "operator": "+",
                                          "left": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "Literal",
                                                "value": "\\\\(?:x[0-9a-fA-F]{2}|"
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": "u[0-9a-fA-F]{4}|"
                                              }
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": "[0-2][0-7]{0,2}|"
                                            }
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": "3[0-6][0-7]?|"
                                          }
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": "37[0-7]?|"
                                        }
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": "[4-7][0-7]?|"
                                      }
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": ".)"
                                    }
                                  }
                                }
                              ],
                              "kind": "var"
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "ThisExpression"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "$rules"
                                  }
                                },
                                "right": {
                                  "type": "ObjectExpression",
                                  "properties": [
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Literal",
                                        "value": "start"
                                      },
                                      "value": {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "comment"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": {}
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "DocCommentHighlightRules"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "getStartRule"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "doc-start"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "comment"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "merge"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": {}
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "comment"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "string"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "'(?=.)"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "qstring"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "string"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "\"(?=.)"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "qqstring"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "constant.numeric"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": {}
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "constant.numeric"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": {}
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "ArrayExpression",
                                                  "elements": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "storage.type"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "punctuation.operator"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "support.function"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "punctuation.operator"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "entity.name.function"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "text"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "keyword.operator"
                                                    }
                                                  ]
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "BinaryExpression",
                                                  "operator": "+",
                                                  "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "BinaryExpression",
                                                      "operator": "+",
                                                      "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                          "type": "Literal",
                                                          "value": "("
                                                        },
                                                        "right": {
                                                          "type": "Identifier",
                                                          "name": "identifierRe"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": ")(\\.)(prototype)(\\.)("
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "Identifier",
                                                      "name": "identifierRe"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": ")(\\s*)(=)"
                                                  }
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "function_arguments"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "ArrayExpression",
                                                  "elements": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "storage.type"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "punctuation.operator"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "entity.name.function"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "text"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "keyword.operator"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "text"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "storage.type"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "text"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "paren.lparen"
                                                    }
                                                  ]
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "BinaryExpression",
                                                  "operator": "+",
                                                  "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "BinaryExpression",
                                                      "operator": "+",
                                                      "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                          "type": "Literal",
                                                          "value": "("
                                                        },
                                                        "right": {
                                                          "type": "Identifier",
                                                          "name": "identifierRe"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": ")(\\.)("
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "Identifier",
                                                      "name": "identifierRe"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": ")(\\s*)(=)(\\s*)(function)(\\s*)(\\()"
                                                  }
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "function_arguments"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "ArrayExpression",
                                                  "elements": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "entity.name.function"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "text"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "keyword.operator"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "text"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "storage.type"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "text"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "paren.lparen"
                                                    }
                                                  ]
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "BinaryExpression",
                                                  "operator": "+",
                                                  "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "Literal",
                                                      "value": "("
                                                    },
                                                    "right": {
                                                      "type": "Identifier",
                                                      "name": "identifierRe"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": ")(\\s*)(=)(\\s*)(function)(\\s*)(\\()"
                                                  }
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "function_arguments"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "ArrayExpression",
                                                  "elements": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "storage.type"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "punctuation.operator"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "entity.name.function"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "text"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "keyword.operator"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "text"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "storage.type"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "text"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "entity.name.function"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "text"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "paren.lparen"
                                                    }
                                                  ]
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "BinaryExpression",
                                                  "operator": "+",
                                                  "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "BinaryExpression",
                                                      "operator": "+",
                                                      "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                          "type": "Literal",
                                                          "value": "("
                                                        },
                                                        "right": {
                                                          "type": "Identifier",
                                                          "name": "identifierRe"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": ")(\\.)("
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "Identifier",
                                                      "name": "identifierRe"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": ")(\\s*)(=)(\\s*)(function)(\\s+)(\\w+)(\\s*)(\\()"
                                                  }
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "function_arguments"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "ArrayExpression",
                                                  "elements": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "storage.type"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "text"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "entity.name.function"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "text"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "paren.lparen"
                                                    }
                                                  ]
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "BinaryExpression",
                                                  "operator": "+",
                                                  "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "Literal",
                                                      "value": "(function)(\\s+)("
                                                    },
                                                    "right": {
                                                      "type": "Identifier",
                                                      "name": "identifierRe"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": ")(\\s*)(\\()"
                                                  }
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "function_arguments"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "ArrayExpression",
                                                  "elements": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "entity.name.function"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "text"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "punctuation.operator"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "text"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "storage.type"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "text"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "paren.lparen"
                                                    }
                                                  ]
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "BinaryExpression",
                                                  "operator": "+",
                                                  "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "Literal",
                                                      "value": "("
                                                    },
                                                    "right": {
                                                      "type": "Identifier",
                                                      "name": "identifierRe"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": ")(\\s*)(:)(\\s*)(function)(\\s*)(\\()"
                                                  }
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "function_arguments"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "ArrayExpression",
                                                  "elements": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "text"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "text"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "storage.type"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "text"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "paren.lparen"
                                                    }
                                                  ]
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "(:)(\\s*)(function)(\\s*)(\\()"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "function_arguments"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "constant.language.boolean"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": {}
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "keyword"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "BinaryExpression",
                                                  "operator": "+",
                                                  "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "Literal",
                                                      "value": "(?:"
                                                    },
                                                    "right": {
                                                      "type": "Identifier",
                                                      "name": "kwBeforeRe"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": ")\\b"
                                                  }
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "regex_allowed"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "ArrayExpression",
                                                  "elements": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "punctuation.operator"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "support.function"
                                                    }
                                                  ]
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": {}
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "ArrayExpression",
                                                  "elements": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "punctuation.operator"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "support.function.dom"
                                                    }
                                                  ]
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": {}
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "ArrayExpression",
                                                  "elements": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "punctuation.operator"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "support.constant"
                                                    }
                                                  ]
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": {}
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "ArrayExpression",
                                                  "elements": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "storage.type"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "punctuation.operator"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "support.function.firebug"
                                                    }
                                                  ]
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": {}
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Identifier",
                                                  "name": "keywordMapper"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Identifier",
                                                  "name": "identifierRe"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "keyword.operator"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": {}
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "regex_allowed"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "punctuation.operator"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": {}
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "regex_allowed"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "paren.lparen"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": {}
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "regex_allowed"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "paren.rparen"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": {}
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "keyword.operator"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": {}
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "regex_allowed"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "comment"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": {}
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "text"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": {}
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Literal",
                                        "value": "regex_allowed"
                                      },
                                      "value": {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "DocCommentHighlightRules"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "getStartRule"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "doc-start"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "comment"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "merge"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "\\/\\*"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "comment_regex_allowed"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "comment"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "\\/\\/.*$"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "string.regexp"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "\\/"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "regex"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "merge"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "text"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "\\s+"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "empty"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": ""
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "start"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Literal",
                                        "value": "regex"
                                      },
                                      "value": {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "regexp.keyword.operator"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "\\\\(?:u[\\da-fA-F]{4}|x[\\da-fA-F]{2}|.)"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "string.regexp"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "/\\w*"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "start"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "merge"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "invalid"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": {}
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "constant.language.escape"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": {}
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "string.regexp"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": {}
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "merge"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "constant.language.escape"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": {}
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "regex_character_class"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "merge"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "empty"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": ""
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "start"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Literal",
                                        "value": "regex_character_class"
                                      },
                                      "value": {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "regexp.keyword.operator"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "\\\\(?:u[\\da-fA-F]{4}|x[\\da-fA-F]{2}|.)"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "constant.language.escape"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "]"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "regex"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "merge"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "constant.language.escape"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "-"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "string.regexp.charachterclass"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": {}
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "merge"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "empty"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": ""
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "start"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Literal",
                                        "value": "function_arguments"
                                      },
                                      "value": {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "variable.parameter"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Identifier",
                                                  "name": "identifierRe"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "punctuation.operator"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "[, ]+"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "merge"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "punctuation.operator"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "$"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "merge"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "empty"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": ""
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "start"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Literal",
                                        "value": "comment_regex_allowed"
                                      },
                                      "value": {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "comment"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": ".*?\\*\\/"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "merge"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "regex_allowed"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "comment"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "merge"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": ".+"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Literal",
                                        "value": "comment"
                                      },
                                      "value": {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "comment"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": ".*?\\*\\/"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "merge"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "start"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "comment"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "merge"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": ".+"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Literal",
                                        "value": "qqstring"
                                      },
                                      "value": {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "constant.language.escape"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Identifier",
                                                  "name": "escapedRe"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "string"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "[^\"\\\\]+"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "merge"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "string"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "\\\\$"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "qqstring"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "merge"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "string"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "\"|$"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "start"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "merge"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Literal",
                                        "value": "qstring"
                                      },
                                      "value": {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "constant.language.escape"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Identifier",
                                                  "name": "escapedRe"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "string"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "[^'\\\\]+"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "merge"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "string"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "\\\\$"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "qstring"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "merge"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "string"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "'|$"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "start"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "merge"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "kind": "init"
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "ThisExpression"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "embedRules"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "DocCommentHighlightRules"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "doc-"
                                  },
                                  {
                                    "type": "ArrayExpression",
                                    "elements": [
                                      {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "DocCommentHighlightRules"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "getEndRule"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Literal",
                                            "value": "start"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "oop"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "inherits"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "JavaScriptHighlightRules"
                      },
                      {
                        "type": "Identifier",
                        "name": "TextHighlightRules"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "exports"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "JavaScriptHighlightRules"
                      }
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "JavaScriptHighlightRules"
                    }
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "ace"
          },
          "property": {
            "type": "Identifier",
            "name": "define"
          }
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "ace/mode/doc_comment_highlight_rules"
          },
          {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": "require"
              },
              {
                "type": "Literal",
                "value": "exports"
              },
              {
                "type": "Literal",
                "value": "module"
              },
              {
                "type": "Literal",
                "value": "ace/lib/oop"
              },
              {
                "type": "Literal",
                "value": "ace/mode/text_highlight_rules"
              }
            ]
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "require"
              },
              {
                "type": "Identifier",
                "name": "exports"
              },
              {
                "type": "Identifier",
                "name": "module"
              }
            ],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "oop"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "require"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "../lib/oop"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "TextHighlightRules"
                      },
                      "init": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "require"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "./text_highlight_rules"
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "TextHighlightRules"
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "DocCommentHighlightRules"
                      },
                      "init": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "ThisExpression"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "$rules"
                                  }
                                },
                                "right": {
                                  "type": "ObjectExpression",
                                  "properties": [
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Literal",
                                        "value": "start"
                                      },
                                      "value": {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "comment.doc.tag"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "@[\\w\\d_]+"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "comment.doc"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "merge"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "\\s+"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "comment.doc"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "merge"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "TODO"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "comment.doc"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "merge"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "[^@\\*]+"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "comment.doc"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "merge"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "."
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "kind": "init"
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "oop"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "inherits"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "DocCommentHighlightRules"
                      },
                      {
                        "type": "Identifier",
                        "name": "TextHighlightRules"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "DocCommentHighlightRules"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "getStartRule"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "start"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "ObjectExpression",
                              "properties": [
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "token"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": "comment.doc"
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "merge"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": true
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "regex"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": "\\/\\*(?=\\*)"
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "next"
                                  },
                                  "value": {
                                    "type": "Identifier",
                                    "name": "start"
                                  },
                                  "kind": "init"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "DocCommentHighlightRules"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "getEndRule"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "start"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "ObjectExpression",
                              "properties": [
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "token"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": "comment.doc"
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "merge"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": true
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "regex"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": "\\*\\/"
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "next"
                                  },
                                  "value": {
                                    "type": "Identifier",
                                    "name": "start"
                                  },
                                  "kind": "init"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "exports"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "DocCommentHighlightRules"
                      }
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "DocCommentHighlightRules"
                    }
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "ace"
          },
          "property": {
            "type": "Identifier",
            "name": "define"
          }
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "ace/mode/xml_highlight_rules"
          },
          {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": "require"
              },
              {
                "type": "Literal",
                "value": "exports"
              },
              {
                "type": "Literal",
                "value": "module"
              },
              {
                "type": "Literal",
                "value": "ace/lib/oop"
              },
              {
                "type": "Literal",
                "value": "ace/mode/xml_util"
              },
              {
                "type": "Literal",
                "value": "ace/mode/text_highlight_rules"
              }
            ]
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "require"
              },
              {
                "type": "Identifier",
                "name": "exports"
              },
              {
                "type": "Identifier",
                "name": "module"
              }
            ],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "oop"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "require"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "../lib/oop"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "xmlUtil"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "require"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "./xml_util"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "TextHighlightRules"
                      },
                      "init": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "require"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "./text_highlight_rules"
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "TextHighlightRules"
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "XmlHighlightRules"
                      },
                      "init": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "ThisExpression"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "$rules"
                                  }
                                },
                                "right": {
                                  "type": "ObjectExpression",
                                  "properties": [
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "start"
                                      },
                                      "value": {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "text"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "<\\!\\[CDATA\\["
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "cdata"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "xml-pe"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "<\\?.*?\\?>"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "comment"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "merge"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "<\\!--"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "comment"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "xml-pe"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "<\\!.*?>"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "meta.tag"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "<\\/?"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "tag"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "text"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "\\s+"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "constant.character.entity"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\.-]+;)"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "text"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "[^<]+"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "cdata"
                                      },
                                      "value": {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "text"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "\\]\\]>"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "start"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "text"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "\\s+"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "text"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "(?:[^\\]]|\\](?!\\]>))+"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "comment"
                                      },
                                      "value": {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "comment"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": ".*?-->"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "start"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "comment"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "merge"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": ".+"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "kind": "init"
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "xmlUtil"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "tag"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "ThisExpression"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "$rules"
                                    }
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "tag"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "start"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "oop"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "inherits"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "XmlHighlightRules"
                      },
                      {
                        "type": "Identifier",
                        "name": "TextHighlightRules"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "exports"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "XmlHighlightRules"
                      }
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "XmlHighlightRules"
                    }
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "ace"
          },
          "property": {
            "type": "Identifier",
            "name": "define"
          }
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "ace/mode/xml_util"
          },
          {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": "require"
              },
              {
                "type": "Literal",
                "value": "exports"
              },
              {
                "type": "Literal",
                "value": "module"
              }
            ]
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "require"
              },
              {
                "type": "Identifier",
                "name": "exports"
              },
              {
                "type": "Identifier",
                "name": "module"
              }
            ],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "FunctionDeclaration",
                  "id": {
                    "type": "Identifier",
                    "name": "string"
                  },
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "state"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "ArrayExpression",
                          "elements": [
                            {
                              "type": "ObjectExpression",
                              "properties": [
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "token"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": "string"
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "regex"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": "\".*?\""
                                  },
                                  "kind": "init"
                                }
                              ]
                            },
                            {
                              "type": "ObjectExpression",
                              "properties": [
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "token"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": "string"
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "merge"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": true
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "regex"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": "[\"].*"
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "next"
                                  },
                                  "value": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "state"
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": "_qqstring"
                                    }
                                  },
                                  "kind": "init"
                                }
                              ]
                            },
                            {
                              "type": "ObjectExpression",
                              "properties": [
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "token"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": "string"
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "regex"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": "'.*?'"
                                  },
                                  "kind": "init"
                                }
                              ]
                            },
                            {
                              "type": "ObjectExpression",
                              "properties": [
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "token"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": "string"
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "merge"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": true
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "regex"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": "['].*"
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "next"
                                  },
                                  "value": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "state"
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": "_qstring"
                                    }
                                  },
                                  "kind": "init"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                },
                {
                  "type": "FunctionDeclaration",
                  "id": {
                    "type": "Identifier",
                    "name": "multiLineString"
                  },
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "quote"
                    },
                    {
                      "type": "Identifier",
                      "name": "state"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "ArrayExpression",
                          "elements": [
                            {
                              "type": "ObjectExpression",
                              "properties": [
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "token"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": "string"
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "merge"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": true
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "regex"
                                  },
                                  "value": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                      "type": "Literal",
                                      "value": ".*?"
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "quote"
                                    }
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "next"
                                  },
                                  "value": {
                                    "type": "Identifier",
                                    "name": "state"
                                  },
                                  "kind": "init"
                                }
                              ]
                            },
                            {
                              "type": "ObjectExpression",
                              "properties": [
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "token"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": "string"
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "merge"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": true
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "regex"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": ".+"
                                  },
                                  "kind": "init"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "exports"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "tag"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "states"
                        },
                        {
                          "type": "Identifier",
                          "name": "name"
                        },
                        {
                          "type": "Identifier",
                          "name": "nextState"
                        },
                        {
                          "type": "Identifier",
                          "name": "tagMap"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                  "type": "Identifier",
                                  "name": "states"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "name"
                                }
                              },
                              "right": {
                                "type": "ArrayExpression",
                                "elements": [
                                  {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Identifier",
                                          "name": "token"
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": "text"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Identifier",
                                          "name": "regex"
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": "\\s+"
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Identifier",
                                          "name": "token"
                                        },
                                        "value": {
                                          "type": "ConditionalExpression",
                                          "test": {
                                            "type": "UnaryExpression",
                                            "operator": "!",
                                            "argument": {
                                              "type": "Identifier",
                                              "name": "tagMap"
                                            },
                                            "prefix": true
                                          },
                                          "consequent": {
                                            "type": "Literal",
                                            "value": "meta.tag.tag-name"
                                          },
                                          "alternate": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                              {
                                                "type": "Identifier",
                                                "name": "value"
                                              }
                                            ],
                                            "defaults": [],
                                            "body": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "IfStatement",
                                                  "test": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "tagMap"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "value"
                                                    }
                                                  },
                                                  "consequent": {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "BinaryExpression",
                                                      "operator": "+",
                                                      "left": {
                                                        "type": "Literal",
                                                        "value": "meta.tag.tag-name."
                                                      },
                                                      "right": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "tagMap"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "value"
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "alternate": {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "Literal",
                                                      "value": "meta.tag.tag-name"
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            "rest": null,
                                            "generator": false,
                                            "expression": false
                                          }
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Identifier",
                                          "name": "merge"
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": true
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Identifier",
                                          "name": "regex"
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": "[-_a-zA-Z0-9:]+"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Identifier",
                                          "name": "next"
                                        },
                                        "value": {
                                          "type": "BinaryExpression",
                                          "operator": "+",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "name"
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": "_embed_attribute_list"
                                          }
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Identifier",
                                          "name": "token"
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": "empty"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Identifier",
                                          "name": "regex"
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": ""
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Identifier",
                                          "name": "next"
                                        },
                                        "value": {
                                          "type": "BinaryExpression",
                                          "operator": "+",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "name"
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": "_embed_attribute_list"
                                          }
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                  "type": "Identifier",
                                  "name": "states"
                                },
                                "property": {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "name"
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": "_qstring"
                                  }
                                }
                              },
                              "right": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "multiLineString"
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": "'"
                                  },
                                  {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "name"
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": "_embed_attribute_list"
                                    }
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                  "type": "Identifier",
                                  "name": "states"
                                },
                                "property": {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "name"
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": "_qqstring"
                                  }
                                }
                              },
                              "right": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "multiLineString"
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": "\""
                                  },
                                  {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "name"
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": "_embed_attribute_list"
                                    }
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                  "type": "Identifier",
                                  "name": "states"
                                },
                                "property": {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "name"
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": "_embed_attribute_list"
                                  }
                                }
                              },
                              "right": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "ArrayExpression",
                                    "elements": [
                                      {
                                        "type": "ObjectExpression",
                                        "properties": [
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "token"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "meta.tag"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "merge"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": true
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "regex"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "/?>"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "next"
                                            },
                                            "value": {
                                              "type": "Identifier",
                                              "name": "nextState"
                                            },
                                            "kind": "init"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "ObjectExpression",
                                        "properties": [
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "token"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "keyword.operator"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "regex"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "="
                                            },
                                            "kind": "init"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "ObjectExpression",
                                        "properties": [
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "token"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "entity.other.attribute-name"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "regex"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "[-_a-zA-Z0-9:]+"
                                            },
                                            "kind": "init"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "ObjectExpression",
                                        "properties": [
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "token"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "constant.numeric"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "regex"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "[+-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)?\\b"
                                            },
                                            "kind": "init"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "ObjectExpression",
                                        "properties": [
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "token"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "text"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "regex"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "\\s+"
                                            },
                                            "kind": "init"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "concat"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "string"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "name"
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "ace"
          },
          "property": {
            "type": "Identifier",
            "name": "define"
          }
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "ace/mode/html_highlight_rules"
          },
          {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": "require"
              },
              {
                "type": "Literal",
                "value": "exports"
              },
              {
                "type": "Literal",
                "value": "module"
              },
              {
                "type": "Literal",
                "value": "ace/lib/oop"
              },
              {
                "type": "Literal",
                "value": "ace/lib/lang"
              },
              {
                "type": "Literal",
                "value": "ace/mode/css_highlight_rules"
              },
              {
                "type": "Literal",
                "value": "ace/mode/javascript_highlight_rules"
              },
              {
                "type": "Literal",
                "value": "ace/mode/xml_util"
              },
              {
                "type": "Literal",
                "value": "ace/mode/text_highlight_rules"
              }
            ]
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "require"
              },
              {
                "type": "Identifier",
                "name": "exports"
              },
              {
                "type": "Identifier",
                "name": "module"
              }
            ],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "oop"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "require"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "../lib/oop"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "lang"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "require"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "../lib/lang"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "CssHighlightRules"
                      },
                      "init": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "require"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "./css_highlight_rules"
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "CssHighlightRules"
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "JavaScriptHighlightRules"
                      },
                      "init": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "require"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "./javascript_highlight_rules"
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "JavaScriptHighlightRules"
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "xmlUtil"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "require"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "./xml_util"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "TextHighlightRules"
                      },
                      "init": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "require"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "./text_highlight_rules"
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "TextHighlightRules"
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "tagMap"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "lang"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "createMap"
                          }
                        },
                        "arguments": [
                          {
                            "type": "ObjectExpression",
                            "properties": [
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "a"
                                },
                                "value": {
                                  "type": "Literal",
                                  "value": "anchor"
                                },
                                "kind": "init"
                              },
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "button"
                                },
                                "value": {
                                  "type": "Literal",
                                  "value": "form"
                                },
                                "kind": "init"
                              },
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "form"
                                },
                                "value": {
                                  "type": "Literal",
                                  "value": "form"
                                },
                                "kind": "init"
                              },
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "img"
                                },
                                "value": {
                                  "type": "Literal",
                                  "value": "image"
                                },
                                "kind": "init"
                              },
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "input"
                                },
                                "value": {
                                  "type": "Literal",
                                  "value": "form"
                                },
                                "kind": "init"
                              },
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "label"
                                },
                                "value": {
                                  "type": "Literal",
                                  "value": "form"
                                },
                                "kind": "init"
                              },
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "script"
                                },
                                "value": {
                                  "type": "Literal",
                                  "value": "script"
                                },
                                "kind": "init"
                              },
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "select"
                                },
                                "value": {
                                  "type": "Literal",
                                  "value": "form"
                                },
                                "kind": "init"
                              },
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "textarea"
                                },
                                "value": {
                                  "type": "Literal",
                                  "value": "form"
                                },
                                "kind": "init"
                              },
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "style"
                                },
                                "value": {
                                  "type": "Literal",
                                  "value": "style"
                                },
                                "kind": "init"
                              },
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "table"
                                },
                                "value": {
                                  "type": "Literal",
                                  "value": "table"
                                },
                                "kind": "init"
                              },
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "tbody"
                                },
                                "value": {
                                  "type": "Literal",
                                  "value": "table"
                                },
                                "kind": "init"
                              },
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "td"
                                },
                                "value": {
                                  "type": "Literal",
                                  "value": "table"
                                },
                                "kind": "init"
                              },
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "tfoot"
                                },
                                "value": {
                                  "type": "Literal",
                                  "value": "table"
                                },
                                "kind": "init"
                              },
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "th"
                                },
                                "value": {
                                  "type": "Literal",
                                  "value": "table"
                                },
                                "kind": "init"
                              },
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "tr"
                                },
                                "value": {
                                  "type": "Literal",
                                  "value": "table"
                                },
                                "kind": "init"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "HtmlHighlightRules"
                      },
                      "init": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "ThisExpression"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "$rules"
                                  }
                                },
                                "right": {
                                  "type": "ObjectExpression",
                                  "properties": [
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "start"
                                      },
                                      "value": {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "text"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "merge"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "<\\!\\[CDATA\\["
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "cdata"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "xml-pe"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "<\\?.*?\\?>"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "comment"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "merge"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "<\\!--"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "comment"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "xml-pe"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "<\\!.*?>"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "meta.tag"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "<(?=script\\b)"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "script"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "meta.tag"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "<(?=style\\b)"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "style"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "meta.tag"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "<\\/?"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "tag"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "text"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "\\s+"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "constant.character.entity"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\.-]+;)"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "text"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "[^<]+"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "cdata"
                                      },
                                      "value": {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "text"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "\\]\\]>"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "start"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "text"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "merge"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "\\s+"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "text"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "merge"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": ".+"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "comment"
                                      },
                                      "value": {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "comment"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": ".*?-->"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "start"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "comment"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "merge"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": ".+"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "kind": "init"
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "xmlUtil"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "tag"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "ThisExpression"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "$rules"
                                    }
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "tag"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "start"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "tagMap"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "xmlUtil"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "tag"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "ThisExpression"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "$rules"
                                    }
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "style"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "css-start"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "tagMap"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "xmlUtil"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "tag"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "ThisExpression"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "$rules"
                                    }
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "script"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "js-start"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "tagMap"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "ThisExpression"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "embedRules"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "JavaScriptHighlightRules"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "js-"
                                  },
                                  {
                                    "type": "ArrayExpression",
                                    "elements": [
                                      {
                                        "type": "ObjectExpression",
                                        "properties": [
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "token"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "comment"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "regex"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "\\/\\/.*(?=<\\/script>)"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "next"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "tag"
                                            },
                                            "kind": "init"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "ObjectExpression",
                                        "properties": [
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "token"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "meta.tag"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "regex"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "<\\/(?=script)"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "next"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "tag"
                                            },
                                            "kind": "init"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "ThisExpression"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "embedRules"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "CssHighlightRules"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "css-"
                                  },
                                  {
                                    "type": "ArrayExpression",
                                    "elements": [
                                      {
                                        "type": "ObjectExpression",
                                        "properties": [
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "token"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "meta.tag"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "regex"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "<\\/(?=style)"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "next"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "tag"
                                            },
                                            "kind": "init"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "oop"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "inherits"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "HtmlHighlightRules"
                      },
                      {
                        "type": "Identifier",
                        "name": "TextHighlightRules"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "exports"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "HtmlHighlightRules"
                      }
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "HtmlHighlightRules"
                    }
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "ace"
          },
          "property": {
            "type": "Identifier",
            "name": "define"
          }
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "ace/mode/css_highlight_rules"
          },
          {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": "require"
              },
              {
                "type": "Literal",
                "value": "exports"
              },
              {
                "type": "Literal",
                "value": "module"
              },
              {
                "type": "Literal",
                "value": "ace/lib/oop"
              },
              {
                "type": "Literal",
                "value": "ace/lib/lang"
              },
              {
                "type": "Literal",
                "value": "ace/mode/text_highlight_rules"
              }
            ]
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "require"
              },
              {
                "type": "Identifier",
                "name": "exports"
              },
              {
                "type": "Identifier",
                "name": "module"
              }
            ],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "oop"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "require"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "../lib/oop"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "lang"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "require"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "../lib/lang"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "TextHighlightRules"
                      },
                      "init": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "require"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "./text_highlight_rules"
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "TextHighlightRules"
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "supportType"
                      },
                      "init": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "exports"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "supportType"
                          }
                        },
                        "right": {
                          "type": "Literal",
                          "value": "animation-fill-mode|alignment-adjust|alignment-baseline|animation-delay|animation-direction|animation-duration|animation-iteration-count|animation-name|animation-play-state|animation-timing-function|animation|appearance|azimuth|backface-visibility|background-attachment|background-break|background-clip|background-color|background-image|background-origin|background-position|background-repeat|background-size|background|baseline-shift|binding|bleed|bookmark-label|bookmark-level|bookmark-state|bookmark-target|border-bottom|border-bottom-color|border-bottom-left-radius|border-bottom-right-radius|border-bottom-style|border-bottom-width|border-collapse|border-color|border-image|border-image-outset|border-image-repeat|border-image-slice|border-image-source|border-image-width|border-left|border-left-color|border-left-style|border-left-width|border-radius|border-right|border-right-color|border-right-style|border-right-width|border-spacing|border-style|border-top|border-top-color|border-top-left-radius|border-top-right-radius|border-top-style|border-top-width|border-width|border|bottom|box-align|box-decoration-break|box-direction|box-flex-group|box-flex|box-lines|box-ordinal-group|box-orient|box-pack|box-shadow|box-sizing|break-after|break-before|break-inside|caption-side|clear|clip|color-profile|color|column-count|column-fill|column-gap|column-rule|column-rule-color|column-rule-style|column-rule-width|column-span|column-width|columns|content|counter-increment|counter-reset|crop|cue-after|cue-before|cue|cursor|direction|display|dominant-baseline|drop-initial-after-adjust|drop-initial-after-align|drop-initial-before-adjust|drop-initial-before-align|drop-initial-size|drop-initial-value|elevation|empty-cells|fit|fit-position|float-offset|float|font-family|font-size|font-size-adjust|font-stretch|font-style|font-variant|font-weight|font|grid-columns|grid-rows|hanging-punctuation|height|hyphenate-after|hyphenate-before|hyphenate-character|hyphenate-lines|hyphenate-resource|hyphens|icon|image-orientation|image-rendering|image-resolution|inline-box-align|left|letter-spacing|line-height|line-stacking-ruby|line-stacking-shift|line-stacking-strategy|line-stacking|list-style-image|list-style-position|list-style-type|list-style|margin-bottom|margin-left|margin-right|margin-top|margin|mark-after|mark-before|mark|marks|marquee-direction|marquee-play-count|marquee-speed|marquee-style|max-height|max-width|min-height|min-width|move-to|nav-down|nav-index|nav-left|nav-right|nav-up|opacity|orphans|outline-color|outline-offset|outline-style|outline-width|outline|overflow-style|overflow-x|overflow-y|overflow|padding-bottom|padding-left|padding-right|padding-top|padding|page-break-after|page-break-before|page-break-inside|page-policy|page|pause-after|pause-before|pause|perspective-origin|perspective|phonemes|pitch-range|pitch|play-during|position|presentation-level|punctuation-trim|quotes|rendering-intent|resize|rest-after|rest-before|rest|richness|right|rotation-point|rotation|ruby-align|ruby-overhang|ruby-position|ruby-span|size|speak-header|speak-numeral|speak-punctuation|speak|speech-rate|stress|string-set|table-layout|target-name|target-new|target-position|target|text-align-last|text-align|text-decoration|text-emphasis|text-height|text-indent|text-justify|text-outline|text-shadow|text-transform|text-wrap|top|transform-origin|transform-style|transform|transition-delay|transition-duration|transition-property|transition-timing-function|transition|unicode-bidi|vertical-align|visibility|voice-balance|voice-duration|voice-family|voice-pitch-range|voice-pitch|voice-rate|voice-stress|voice-volume|volume|white-space-collapse|white-space|widows|width|word-break|word-spacing|word-wrap|z-index"
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "supportFunction"
                      },
                      "init": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "exports"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "supportFunction"
                          }
                        },
                        "right": {
                          "type": "Literal",
                          "value": "rgb|rgba|url|attr|counter|counters"
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "supportConstant"
                      },
                      "init": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "exports"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "supportConstant"
                          }
                        },
                        "right": {
                          "type": "Literal",
                          "value": "absolute|after-edge|after|all-scroll|all|alphabetic|always|antialiased|armenian|auto|avoid-column|avoid-page|avoid|balance|baseline|before-edge|before|below|bidi-override|block-line-height|block|bold|bolder|border-box|both|bottom|box|break-all|break-word|capitalize|caps-height|caption|center|central|char|circle|cjk-ideographic|clone|close-quote|col-resize|collapse|column|consider-shifts|contain|content-box|cover|crosshair|cubic-bezier|dashed|decimal-leading-zero|decimal|default|disabled|disc|disregard-shifts|distribute-all-lines|distribute-letter|distribute-space|distribute|dotted|double|e-resize|ease-in|ease-in-out|ease-out|ease|ellipsis|end|exclude-ruby|fill|fixed|georgian|glyphs|grid-height|groove|hand|hanging|hebrew|help|hidden|hiragana-iroha|hiragana|horizontal|icon|ideograph-alpha|ideograph-numeric|ideograph-parenthesis|ideograph-space|ideographic|inactive|include-ruby|inherit|initial|inline-block|inline-box|inline-line-height|inline-table|inline|inset|inside|inter-ideograph|inter-word|invert|italic|justify|katakana-iroha|katakana|keep-all|last|left|lighter|line-edge|line-through|line|linear|list-item|local|loose|lower-alpha|lower-greek|lower-latin|lower-roman|lowercase|lr-tb|ltr|mathematical|max-height|max-size|medium|menu|message-box|middle|move|n-resize|ne-resize|newspaper|no-change|no-close-quote|no-drop|no-open-quote|no-repeat|none|normal|not-allowed|nowrap|nw-resize|oblique|open-quote|outset|outside|overline|padding-box|page|pointer|pre-line|pre-wrap|pre|preserve-3d|progress|relative|repeat-x|repeat-y|repeat|replaced|reset-size|ridge|right|round|row-resize|rtl|s-resize|scroll|se-resize|separate|slice|small-caps|small-caption|solid|space|square|start|static|status-bar|step-end|step-start|steps|stretch|strict|sub|super|sw-resize|table-caption|table-cell|table-column-group|table-column|table-footer-group|table-header-group|table-row-group|table-row|table|tb-rl|text-after-edge|text-before-edge|text-bottom|text-size|text-top|text|thick|thin|transparent|underline|upper-alpha|upper-latin|upper-roman|uppercase|use-script|vertical-ideographic|vertical-text|visible|w-resize|wait|whitespace|z-index|zero"
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "supportConstantColor"
                      },
                      "init": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "exports"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "supportConstantColor"
                          }
                        },
                        "right": {
                          "type": "Literal",
                          "value": "aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow"
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "supportConstantFonts"
                      },
                      "init": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "exports"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "supportConstantFonts"
                          }
                        },
                        "right": {
                          "type": "Literal",
                          "value": "arial|century|comic|courier|garamond|georgia|helvetica|impact|lucida|symbol|system|tahoma|times|trebuchet|utopia|verdana|webdings|sans-serif|serif|monospace"
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "numRe"
                      },
                      "init": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "exports"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "numRe"
                          }
                        },
                        "right": {
                          "type": "Literal",
                          "value": "\\-?(?:(?:[0-9]+)|(?:[0-9]*\\.[0-9]+))"
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "pseudoElements"
                      },
                      "init": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "exports"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "pseudoElements"
                          }
                        },
                        "right": {
                          "type": "Literal",
                          "value": "(\\:+)\\b(after|before|first-letter|first-line|moz-selection|selection)\\b"
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "pseudoClasses"
                      },
                      "init": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "exports"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "pseudoClasses"
                          }
                        },
                        "right": {
                          "type": "Literal",
                          "value": "(:)\\b(active|checked|disabled|empty|enabled|first-child|first-of-type|focus|hover|indeterminate|invalid|last-child|last-of-type|link|not|nth-child|nth-last-child|nth-last-of-type|nth-of-type|only-child|only-of-type|required|root|target|valid|visited)\\b"
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "CssHighlightRules"
                      },
                      "init": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "VariableDeclaration",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "keywordMapper"
                                  },
                                  "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "ThisExpression"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "createKeywordMapper"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "ObjectExpression",
                                        "properties": [
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Literal",
                                              "value": "support.function"
                                            },
                                            "value": {
                                              "type": "Identifier",
                                              "name": "supportFunction"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Literal",
                                              "value": "support.constant"
                                            },
                                            "value": {
                                              "type": "Identifier",
                                              "name": "supportConstant"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Literal",
                                              "value": "support.type"
                                            },
                                            "value": {
                                              "type": "Identifier",
                                              "name": "supportType"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Literal",
                                              "value": "support.constant.color"
                                            },
                                            "value": {
                                              "type": "Identifier",
                                              "name": "supportConstantColor"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Literal",
                                              "value": "support.constant.fonts"
                                            },
                                            "value": {
                                              "type": "Identifier",
                                              "name": "supportConstantFonts"
                                            },
                                            "kind": "init"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "Literal",
                                        "value": "text"
                                      },
                                      {
                                        "type": "Literal",
                                        "value": true
                                      }
                                    ]
                                  }
                                }
                              ],
                              "kind": "var"
                            },
                            {
                              "type": "VariableDeclaration",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "base_ruleset"
                                  },
                                  "init": {
                                    "type": "ArrayExpression",
                                    "elements": [
                                      {
                                        "type": "ObjectExpression",
                                        "properties": [
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "token"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "comment"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "merge"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": true
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "regex"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "\\/\\*"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "next"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "ruleset_comment"
                                            },
                                            "kind": "init"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "ObjectExpression",
                                        "properties": [
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "token"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "string"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "regex"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "[\"](?:(?:\\\\.)|(?:[^\"\\\\]))*?[\"]"
                                            },
                                            "kind": "init"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "ObjectExpression",
                                        "properties": [
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "token"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "string"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "regex"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "['](?:(?:\\\\.)|(?:[^'\\\\]))*?[']"
                                            },
                                            "kind": "init"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "ObjectExpression",
                                        "properties": [
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "token"
                                            },
                                            "value": {
                                              "type": "ArrayExpression",
                                              "elements": [
                                                {
                                                  "type": "Literal",
                                                  "value": "constant.numeric"
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": "keyword"
                                                }
                                              ]
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "regex"
                                            },
                                            "value": {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                  "type": "Literal",
                                                  "value": "("
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "numRe"
                                                }
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": ")(ch|cm|deg|em|ex|fr|gd|grad|Hz|in|kHz|mm|ms|pc|pt|px|rad|rem|s|turn|vh|vm|vw|%)"
                                              }
                                            },
                                            "kind": "init"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "ObjectExpression",
                                        "properties": [
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "token"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "constant.numeric"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "regex"
                                            },
                                            "value": {
                                              "type": "Identifier",
                                              "name": "numRe"
                                            },
                                            "kind": "init"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "ObjectExpression",
                                        "properties": [
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "token"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "constant.numeric"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "regex"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "#[a-f0-9]{6}"
                                            },
                                            "kind": "init"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "ObjectExpression",
                                        "properties": [
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "token"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "constant.numeric"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "regex"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "#[a-f0-9]{3}"
                                            },
                                            "kind": "init"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "ObjectExpression",
                                        "properties": [
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "token"
                                            },
                                            "value": {
                                              "type": "ArrayExpression",
                                              "elements": [
                                                {
                                                  "type": "Literal",
                                                  "value": "punctuation"
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": "entity.other.attribute-name.pseudo-element.css"
                                                }
                                              ]
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "regex"
                                            },
                                            "value": {
                                              "type": "Identifier",
                                              "name": "pseudoElements"
                                            },
                                            "kind": "init"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "ObjectExpression",
                                        "properties": [
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "token"
                                            },
                                            "value": {
                                              "type": "ArrayExpression",
                                              "elements": [
                                                {
                                                  "type": "Literal",
                                                  "value": "punctuation"
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": "entity.other.attribute-name.pseudo-class.css"
                                                }
                                              ]
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "regex"
                                            },
                                            "value": {
                                              "type": "Identifier",
                                              "name": "pseudoClasses"
                                            },
                                            "kind": "init"
                                          }
                                        ]
                                      },
                                      {
                                        "type": "ObjectExpression",
                                        "properties": [
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "token"
                                            },
                                            "value": {
                                              "type": "Identifier",
                                              "name": "keywordMapper"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "regex"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "\\-?[a-zA-Z_][a-zA-Z0-9_\\-]*"
                                            },
                                            "kind": "init"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ],
                              "kind": "var"
                            },
                            {
                              "type": "VariableDeclaration",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "ruleset"
                                  },
                                  "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "lang"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "copyArray"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "base_ruleset"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "kind": "var"
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "ruleset"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "unshift"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Identifier",
                                          "name": "token"
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": "paren.rparen"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Identifier",
                                          "name": "regex"
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": "\\}"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Identifier",
                                          "name": "next"
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": "start"
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  }
                                ]
                              }
                            },
                            {
                              "type": "VariableDeclaration",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "media_ruleset"
                                  },
                                  "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "lang"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "copyArray"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "base_ruleset"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "kind": "var"
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "media_ruleset"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "unshift"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Identifier",
                                          "name": "token"
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": "paren.rparen"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Identifier",
                                          "name": "regex"
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": "\\}"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Identifier",
                                          "name": "next"
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": "media"
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  }
                                ]
                              }
                            },
                            {
                              "type": "VariableDeclaration",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "base_comment"
                                  },
                                  "init": {
                                    "type": "ArrayExpression",
                                    "elements": [
                                      {
                                        "type": "ObjectExpression",
                                        "properties": [
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "token"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "comment"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "merge"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": true
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "regex"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": ".+"
                                            },
                                            "kind": "init"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ],
                              "kind": "var"
                            },
                            {
                              "type": "VariableDeclaration",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "comment"
                                  },
                                  "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "lang"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "copyArray"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "base_comment"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "kind": "var"
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "comment"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "unshift"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Identifier",
                                          "name": "token"
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": "comment"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Identifier",
                                          "name": "regex"
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": ".*?\\*\\/"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Identifier",
                                          "name": "next"
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": "start"
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  }
                                ]
                              }
                            },
                            {
                              "type": "VariableDeclaration",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "media_comment"
                                  },
                                  "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "lang"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "copyArray"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "base_comment"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "kind": "var"
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "media_comment"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "unshift"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Identifier",
                                          "name": "token"
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": "comment"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Identifier",
                                          "name": "regex"
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": ".*?\\*\\/"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Identifier",
                                          "name": "next"
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": "media"
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  }
                                ]
                              }
                            },
                            {
                              "type": "VariableDeclaration",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "ruleset_comment"
                                  },
                                  "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "lang"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "copyArray"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "base_comment"
                                      }
                                    ]
                                  }
                                }
                              ],
                              "kind": "var"
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "ruleset_comment"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "unshift"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Identifier",
                                          "name": "token"
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": "comment"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Identifier",
                                          "name": "regex"
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": ".*?\\*\\/"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Identifier",
                                          "name": "next"
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": "ruleset"
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "ThisExpression"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "$rules"
                                  }
                                },
                                "right": {
                                  "type": "ObjectExpression",
                                  "properties": [
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Literal",
                                        "value": "start"
                                      },
                                      "value": {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "comment"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "merge"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "\\/\\*"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "comment"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "paren.lparen"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "\\{"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "ruleset"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "string"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "@.*?{"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "media"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "keyword"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "#[a-z0-9-_]+"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "variable"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "\\.[a-z0-9-_]+"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "string"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": ":[a-z0-9-_]+"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "constant"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "[a-z0-9-_]+"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Literal",
                                        "value": "media"
                                      },
                                      "value": {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "comment"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "merge"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "\\/\\*"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "media_comment"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "paren.lparen"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "\\{"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "media_ruleset"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "string"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "\\}"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "start"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "keyword"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "#[a-z0-9-_]+"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "variable"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "\\.[a-z0-9-_]+"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "string"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": ":[a-z0-9-_]+"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "constant"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "[a-z0-9-_]+"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Literal",
                                        "value": "comment"
                                      },
                                      "value": {
                                        "type": "Identifier",
                                        "name": "comment"
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Literal",
                                        "value": "ruleset"
                                      },
                                      "value": {
                                        "type": "Identifier",
                                        "name": "ruleset"
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Literal",
                                        "value": "ruleset_comment"
                                      },
                                      "value": {
                                        "type": "Identifier",
                                        "name": "ruleset_comment"
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Literal",
                                        "value": "media_ruleset"
                                      },
                                      "value": {
                                        "type": "Identifier",
                                        "name": "media_ruleset"
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Literal",
                                        "value": "media_comment"
                                      },
                                      "value": {
                                        "type": "Identifier",
                                        "name": "media_comment"
                                      },
                                      "kind": "init"
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "oop"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "inherits"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "CssHighlightRules"
                      },
                      {
                        "type": "Identifier",
                        "name": "TextHighlightRules"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "exports"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "CssHighlightRules"
                      }
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "CssHighlightRules"
                    }
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "ace"
          },
          "property": {
            "type": "Identifier",
            "name": "define"
          }
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "ace/mode/scss_highlight_rules"
          },
          {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": "require"
              },
              {
                "type": "Literal",
                "value": "exports"
              },
              {
                "type": "Literal",
                "value": "module"
              },
              {
                "type": "Literal",
                "value": "ace/lib/oop"
              },
              {
                "type": "Literal",
                "value": "ace/lib/lang"
              },
              {
                "type": "Literal",
                "value": "ace/mode/text_highlight_rules"
              }
            ]
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "require"
              },
              {
                "type": "Identifier",
                "name": "exports"
              },
              {
                "type": "Identifier",
                "name": "module"
              }
            ],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "oop"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "require"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "../lib/oop"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "lang"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "require"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "../lib/lang"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "TextHighlightRules"
                      },
                      "init": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "require"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "./text_highlight_rules"
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "TextHighlightRules"
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "ScssHighlightRules"
                      },
                      "init": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "VariableDeclaration",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "properties"
                                  },
                                  "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "lang"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "arrayToMap"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "FunctionExpression",
                                          "id": null,
                                          "params": [],
                                          "defaults": [],
                                          "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                  {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "browserPrefix"
                                                    },
                                                    "init": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Literal",
                                                          "value": "-webkit-|-moz-|-o-|-ms-|-svg-|-pie-|-khtml-"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "split"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Literal",
                                                          "value": "|"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ],
                                                "kind": "var"
                                              },
                                              {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                  {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "prefixProperties"
                                                    },
                                                    "init": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "BinaryExpression",
                                                              "operator": "+",
                                                              "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "+",
                                                                  "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "+",
                                                                      "left": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                          "type": "BinaryExpression",
                                                                          "operator": "+",
                                                                          "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                              "type": "BinaryExpression",
                                                                              "operator": "+",
                                                                              "left": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                  "type": "BinaryExpression",
                                                                                  "operator": "+",
                                                                                  "left": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                      "type": "BinaryExpression",
                                                                                      "operator": "+",
                                                                                      "left": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                          "type": "BinaryExpression",
                                                                                          "operator": "+",
                                                                                          "left": {
                                                                                            "type": "Literal",
                                                                                            "value": "appearance|background-clip|background-inline-policy|background-origin|"
                                                                                          },
                                                                                          "right": {
                                                                                            "type": "Literal",
                                                                                            "value": "background-size|binding|border-bottom-colors|border-left-colors|"
                                                                                          }
                                                                                        },
                                                                                        "right": {
                                                                                          "type": "Literal",
                                                                                          "value": "border-right-colors|border-top-colors|border-end|border-end-color|"
                                                                                        }
                                                                                      },
                                                                                      "right": {
                                                                                        "type": "Literal",
                                                                                        "value": "border-end-style|border-end-width|border-image|border-start|"
                                                                                      }
                                                                                    },
                                                                                    "right": {
                                                                                      "type": "Literal",
                                                                                      "value": "border-start-color|border-start-style|border-start-width|box-align|"
                                                                                    }
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "Literal",
                                                                                    "value": "box-direction|box-flex|box-flexgroup|box-ordinal-group|box-orient|"
                                                                                  }
                                                                                },
                                                                                "right": {
                                                                                  "type": "Literal",
                                                                                  "value": "box-pack|box-sizing|column-count|column-gap|column-width|column-rule|"
                                                                                }
                                                                              },
                                                                              "right": {
                                                                                "type": "Literal",
                                                                                "value": "column-rule-width|column-rule-style|column-rule-color|float-edge|"
                                                                              }
                                                                            },
                                                                            "right": {
                                                                              "type": "Literal",
                                                                              "value": "font-feature-settings|font-language-override|force-broken-image-icon|"
                                                                            }
                                                                          },
                                                                          "right": {
                                                                            "type": "Literal",
                                                                            "value": "image-region|margin-end|margin-start|opacity|outline|outline-color|"
                                                                          }
                                                                        },
                                                                        "right": {
                                                                          "type": "Literal",
                                                                          "value": "outline-offset|outline-radius|outline-radius-bottomleft|"
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "Literal",
                                                                        "value": "outline-radius-bottomright|outline-radius-topleft|outline-radius-topright|"
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "Literal",
                                                                      "value": "outline-style|outline-width|padding-end|padding-start|stack-sizing|"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "Literal",
                                                                    "value": "tab-size|text-blink|text-decoration-color|text-decoration-line|"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "Literal",
                                                                  "value": "text-decoration-style|transform|transform-origin|transition|"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": "transition-delay|transition-duration|transition-property|"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": "transition-timing-function|user-focus|user-input|user-modify|user-select|"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "window-shadow|border-radius"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "split"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Literal",
                                                          "value": "|"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ],
                                                "kind": "var"
                                              },
                                              {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                  {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "properties"
                                                    },
                                                    "init": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "BinaryExpression",
                                                              "operator": "+",
                                                              "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "+",
                                                                  "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "+",
                                                                      "left": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                          "type": "BinaryExpression",
                                                                          "operator": "+",
                                                                          "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                              "type": "BinaryExpression",
                                                                              "operator": "+",
                                                                              "left": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                  "type": "BinaryExpression",
                                                                                  "operator": "+",
                                                                                  "left": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                      "type": "BinaryExpression",
                                                                                      "operator": "+",
                                                                                      "left": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                          "type": "BinaryExpression",
                                                                                          "operator": "+",
                                                                                          "left": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "+",
                                                                                            "left": {
                                                                                              "type": "BinaryExpression",
                                                                                              "operator": "+",
                                                                                              "left": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "+",
                                                                                                "left": {
                                                                                                  "type": "BinaryExpression",
                                                                                                  "operator": "+",
                                                                                                  "left": {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "+",
                                                                                                    "left": {
                                                                                                      "type": "BinaryExpression",
                                                                                                      "operator": "+",
                                                                                                      "left": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "azimuth|background-attachment|background-color|background-image|"
                                                                                                      },
                                                                                                      "right": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "background-position|background-repeat|background|border-bottom-color|"
                                                                                                      }
                                                                                                    },
                                                                                                    "right": {
                                                                                                      "type": "Literal",
                                                                                                      "value": "border-bottom-style|border-bottom-width|border-bottom|border-collapse|"
                                                                                                    }
                                                                                                  },
                                                                                                  "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "border-color|border-left-color|border-left-style|border-left-width|"
                                                                                                  }
                                                                                                },
                                                                                                "right": {
                                                                                                  "type": "Literal",
                                                                                                  "value": "border-left|border-right-color|border-right-style|border-right-width|"
                                                                                                }
                                                                                              },
                                                                                              "right": {
                                                                                                "type": "Literal",
                                                                                                "value": "border-right|border-spacing|border-style|border-top-color|"
                                                                                              }
                                                                                            },
                                                                                            "right": {
                                                                                              "type": "Literal",
                                                                                              "value": "border-top-style|border-top-width|border-top|border-width|border|"
                                                                                            }
                                                                                          },
                                                                                          "right": {
                                                                                            "type": "Literal",
                                                                                            "value": "bottom|box-sizing|caption-side|clear|clip|color|content|counter-increment|"
                                                                                          }
                                                                                        },
                                                                                        "right": {
                                                                                          "type": "Literal",
                                                                                          "value": "counter-reset|cue-after|cue-before|cue|cursor|direction|display|"
                                                                                        }
                                                                                      },
                                                                                      "right": {
                                                                                        "type": "Literal",
                                                                                        "value": "elevation|empty-cells|float|font-family|font-size-adjust|font-size|"
                                                                                      }
                                                                                    },
                                                                                    "right": {
                                                                                      "type": "Literal",
                                                                                      "value": "font-stretch|font-style|font-variant|font-weight|font|height|left|"
                                                                                    }
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "Literal",
                                                                                    "value": "letter-spacing|line-height|list-style-image|list-style-position|"
                                                                                  }
                                                                                },
                                                                                "right": {
                                                                                  "type": "Literal",
                                                                                  "value": "list-style-type|list-style|margin-bottom|margin-left|margin-right|"
                                                                                }
                                                                              },
                                                                              "right": {
                                                                                "type": "Literal",
                                                                                "value": "margin-top|marker-offset|margin|marks|max-height|max-width|min-height|"
                                                                              }
                                                                            },
                                                                            "right": {
                                                                              "type": "Literal",
                                                                              "value": "min-width|opacity|orphans|outline-color|"
                                                                            }
                                                                          },
                                                                          "right": {
                                                                            "type": "Literal",
                                                                            "value": "outline-style|outline-width|outline|overflow|overflow-x|overflow-y|padding-bottom|"
                                                                          }
                                                                        },
                                                                        "right": {
                                                                          "type": "Literal",
                                                                          "value": "padding-left|padding-right|padding-top|padding|page-break-after|"
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "Literal",
                                                                        "value": "page-break-before|page-break-inside|page|pause-after|pause-before|"
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "Literal",
                                                                      "value": "pause|pitch-range|pitch|play-during|position|quotes|richness|right|"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "Literal",
                                                                    "value": "size|speak-header|speak-numeral|speak-punctuation|speech-rate|speak|"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "Literal",
                                                                  "value": "stress|table-layout|text-align|text-decoration|text-indent|"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": "text-shadow|text-transform|top|unicode-bidi|vertical-align|"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": "visibility|voice-family|volume|white-space|widows|width|word-spacing|"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "z-index"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "split"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Literal",
                                                          "value": "|"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ],
                                                "kind": "var"
                                              },
                                              {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                  {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "ret"
                                                    },
                                                    "init": {
                                                      "type": "ArrayExpression",
                                                      "elements": []
                                                    }
                                                  }
                                                ],
                                                "kind": "var"
                                              },
                                              {
                                                "type": "ForStatement",
                                                "init": {
                                                  "type": "VariableDeclaration",
                                                  "declarations": [
                                                    {
                                                      "type": "VariableDeclarator",
                                                      "id": {
                                                        "type": "Identifier",
                                                        "name": "i"
                                                      },
                                                      "init": {
                                                        "type": "Literal",
                                                        "value": 0
                                                      }
                                                    },
                                                    {
                                                      "type": "VariableDeclarator",
                                                      "id": {
                                                        "type": "Identifier",
                                                        "name": "ln"
                                                      },
                                                      "init": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "browserPrefix"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "length"
                                                        }
                                                      }
                                                    }
                                                  ],
                                                  "kind": "var"
                                                },
                                                "test": {
                                                  "type": "BinaryExpression",
                                                  "operator": "<",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "i"
                                                  },
                                                  "right": {
                                                    "type": "Identifier",
                                                    "name": "ln"
                                                  }
                                                },
                                                "update": {
                                                  "type": "UpdateExpression",
                                                  "operator": "++",
                                                  "argument": {
                                                    "type": "Identifier",
                                                    "name": "i"
                                                  },
                                                  "prefix": false
                                                },
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "Array"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "prototype"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "push"
                                                            }
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "apply"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "ret"
                                                          },
                                                          {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                  "type": "MemberExpression",
                                                                  "computed": true,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "browserPrefix"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "i"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "prefixProperties"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "join"
                                                                    }
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "+",
                                                                      "left": {
                                                                        "type": "Literal",
                                                                        "value": "|"
                                                                      },
                                                                      "right": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "browserPrefix"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "i"
                                                                        }
                                                                      }
                                                                    }
                                                                  ]
                                                                }
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "split"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Literal",
                                                                "value": "|"
                                                              }
                                                            ]
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ]
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "Array"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "prototype"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "push"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "apply"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "ret"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "prefixProperties"
                                                    }
                                                  ]
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "Array"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "prototype"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "push"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "apply"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "ret"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "properties"
                                                    }
                                                  ]
                                                }
                                              },
                                              {
                                                "type": "ReturnStatement",
                                                "argument": {
                                                  "type": "Identifier",
                                                  "name": "ret"
                                                }
                                              }
                                            ]
                                          },
                                          "rest": null,
                                          "generator": false,
                                          "expression": false
                                        },
                                        "arguments": []
                                      }
                                    ]
                                  }
                                }
                              ],
                              "kind": "var"
                            },
                            {
                              "type": "VariableDeclaration",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "functions"
                                  },
                                  "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "lang"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "arrayToMap"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                  "type": "BinaryExpression",
                                                  "operator": "+",
                                                  "left": {
                                                    "type": "Literal",
                                                    "value": "hsl|hsla|rgb|rgba|url|attr|counter|counters|abs|adjust_color|adjust_hue|"
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": "alpha|join|blue|ceil|change_color|comparable|complement|darken|desaturate|"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": "floor|grayscale|green|hue|if|invert|join|length|lighten|lightness|mix|"
                                                }
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": "nth|opacify|opacity|percentage|quote|red|round|saturate|saturation|"
                                              }
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": "scale_color|transparentize|type_of|unit|unitless|unqoute"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "split"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Literal",
                                            "value": "|"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ],
                              "kind": "var"
                            },
                            {
                              "type": "VariableDeclaration",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "constants"
                                  },
                                  "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "lang"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "arrayToMap"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                  "type": "BinaryExpression",
                                                  "operator": "+",
                                                  "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "BinaryExpression",
                                                      "operator": "+",
                                                      "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "BinaryExpression",
                                                              "operator": "+",
                                                              "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "+",
                                                                  "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "+",
                                                                      "left": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                          "type": "BinaryExpression",
                                                                          "operator": "+",
                                                                          "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                              "type": "BinaryExpression",
                                                                              "operator": "+",
                                                                              "left": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                  "type": "BinaryExpression",
                                                                                  "operator": "+",
                                                                                  "left": {
                                                                                    "type": "Literal",
                                                                                    "value": "absolute|all-scroll|always|armenian|auto|baseline|below|bidi-override|"
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "Literal",
                                                                                    "value": "block|bold|bolder|border-box|both|bottom|break-all|break-word|capitalize|center|"
                                                                                  }
                                                                                },
                                                                                "right": {
                                                                                  "type": "Literal",
                                                                                  "value": "char|circle|cjk-ideographic|col-resize|collapse|content-box|crosshair|dashed|"
                                                                                }
                                                                              },
                                                                              "right": {
                                                                                "type": "Literal",
                                                                                "value": "decimal-leading-zero|decimal|default|disabled|disc|"
                                                                              }
                                                                            },
                                                                            "right": {
                                                                              "type": "Literal",
                                                                              "value": "distribute-all-lines|distribute-letter|distribute-space|"
                                                                            }
                                                                          },
                                                                          "right": {
                                                                            "type": "Literal",
                                                                            "value": "distribute|dotted|double|e-resize|ellipsis|fixed|georgian|groove|"
                                                                          }
                                                                        },
                                                                        "right": {
                                                                          "type": "Literal",
                                                                          "value": "hand|hebrew|help|hidden|hiragana-iroha|hiragana|horizontal|"
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "Literal",
                                                                        "value": "ideograph-alpha|ideograph-numeric|ideograph-parenthesis|"
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "Literal",
                                                                      "value": "ideograph-space|inactive|inherit|inline-block|inline|inset|inside|"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "Literal",
                                                                    "value": "inter-ideograph|inter-word|italic|justify|katakana-iroha|katakana|"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "Literal",
                                                                  "value": "keep-all|left|lighter|line-edge|line-through|line|list-item|loose|"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": "lower-alpha|lower-greek|lower-latin|lower-roman|lowercase|lr-tb|ltr|"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": "medium|middle|move|n-resize|ne-resize|newspaper|no-drop|no-repeat|"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "nw-resize|none|normal|not-allowed|nowrap|oblique|outset|outside|"
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": "overline|pointer|progress|relative|repeat-x|repeat-y|repeat|right|"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": "ridge|row-resize|rtl|s-resize|scroll|se-resize|separate|small-caps|"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": "solid|square|static|strict|super|sw-resize|table-footer-group|"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": "table-header-group|tb-rl|text-bottom|text-top|text|thick|thin|top|"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": "transparent|underline|upper-alpha|upper-latin|upper-roman|uppercase|"
                                                }
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": "vertical-ideographic|vertical-text|visible|w-resize|wait|whitespace|"
                                              }
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": "zero"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "split"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Literal",
                                            "value": "|"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ],
                              "kind": "var"
                            },
                            {
                              "type": "VariableDeclaration",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "colors"
                                  },
                                  "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "lang"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "arrayToMap"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "Literal",
                                              "value": "aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|"
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": "purple|red|silver|teal|white|yellow"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "split"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Literal",
                                            "value": "|"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ],
                              "kind": "var"
                            },
                            {
                              "type": "VariableDeclaration",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "keywords"
                                  },
                                  "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "lang"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "arrayToMap"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Literal",
                                            "value": "@mixin|@extend|@include|@import|@media|@debug|@warn|@if|@for|@each|@while|@else|@font-face|@-webkit-keyframes|if|and|!default|module|def|end|declare"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "split"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Literal",
                                            "value": "|"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ],
                              "kind": "var"
                            },
                            {
                              "type": "VariableDeclaration",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "tags"
                                  },
                                  "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "lang"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "arrayToMap"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                  "type": "BinaryExpression",
                                                  "operator": "+",
                                                  "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "BinaryExpression",
                                                      "operator": "+",
                                                      "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "Literal",
                                                            "value": "a|abbr|acronym|address|applet|area|article|aside|audio|b|base|basefont|bdo|"
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "big|blockquote|body|br|button|canvas|caption|center|cite|code|col|colgroup|"
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": "command|datalist|dd|del|details|dfn|dir|div|dl|dt|em|embed|fieldset|"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": "figcaption|figure|font|footer|form|frame|frameset|h1|h2|h3|h4|h5|h6|head|"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": "header|hgroup|hr|html|i|iframe|img|input|ins|keygen|kbd|label|legend|li|"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": "link|map|mark|menu|meta|meter|nav|noframes|noscript|object|ol|optgroup|"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": "option|output|p|param|pre|progress|q|rp|rt|ruby|s|samp|script|section|select|"
                                                }
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": "small|source|span|strike|strong|style|sub|summary|sup|table|tbody|td|"
                                              }
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": "textarea|tfoot|th|thead|time|title|tr|tt|u|ul|var|video|wbr|xmp"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "split"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Literal",
                                            "value": "|"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ],
                              "kind": "var"
                            },
                            {
                              "type": "VariableDeclaration",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "numRe"
                                  },
                                  "init": {
                                    "type": "Literal",
                                    "value": "\\-?(?:(?:[0-9]+)|(?:[0-9]*\\.[0-9]+))"
                                  }
                                }
                              ],
                              "kind": "var"
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "ThisExpression"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "$rules"
                                  }
                                },
                                "right": {
                                  "type": "ObjectExpression",
                                  "properties": [
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Literal",
                                        "value": "start"
                                      },
                                      "value": {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "comment"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "\\/\\/.*$"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "comment"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "merge"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "\\/\\*"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "comment"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "string"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "[\"](?:(?:\\\\.)|(?:[^\"\\\\]))*?[\"]"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "string"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "merge"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "[\"].*\\\\$"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "qqstring"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "string"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "['](?:(?:\\\\.)|(?:[^'\\\\]))*?[']"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "string"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "merge"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "['].*\\\\$"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "qstring"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "constant.numeric"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "BinaryExpression",
                                                  "operator": "+",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "numRe"
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": "(?:em|ex|px|cm|mm|in|pt|pc|deg|rad|grad|ms|s|hz|khz|%)"
                                                  }
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "constant.numeric"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "#[a-f0-9]{6}"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "constant.numeric"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "#[a-f0-9]{3}"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "constant.numeric"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Identifier",
                                                  "name": "numRe"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "value"
                                                    }
                                                  ],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "IfStatement",
                                                        "test": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "properties"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "hasOwnProperty"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "value"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "toLowerCase"
                                                                }
                                                              },
                                                              "arguments": []
                                                            }
                                                          ]
                                                        },
                                                        "consequent": {
                                                          "type": "ReturnStatement",
                                                          "argument": {
                                                            "type": "Literal",
                                                            "value": "support.type"
                                                          }
                                                        },
                                                        "alternate": null
                                                      },
                                                      {
                                                        "type": "IfStatement",
                                                        "test": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "keywords"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "hasOwnProperty"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "value"
                                                            }
                                                          ]
                                                        },
                                                        "consequent": {
                                                          "type": "ReturnStatement",
                                                          "argument": {
                                                            "type": "Literal",
                                                            "value": "keyword"
                                                          }
                                                        },
                                                        "alternate": {
                                                          "type": "IfStatement",
                                                          "test": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "constants"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "hasOwnProperty"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Identifier",
                                                                "name": "value"
                                                              }
                                                            ]
                                                          },
                                                          "consequent": {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                              "type": "Literal",
                                                              "value": "constant.language"
                                                            }
                                                          },
                                                          "alternate": {
                                                            "type": "IfStatement",
                                                            "test": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "functions"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "hasOwnProperty"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "value"
                                                                }
                                                              ]
                                                            },
                                                            "consequent": {
                                                              "type": "ReturnStatement",
                                                              "argument": {
                                                                "type": "Literal",
                                                                "value": "support.function"
                                                              }
                                                            },
                                                            "alternate": {
                                                              "type": "IfStatement",
                                                              "test": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "colors"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "hasOwnProperty"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "value"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "toLowerCase"
                                                                      }
                                                                    },
                                                                    "arguments": []
                                                                  }
                                                                ]
                                                              },
                                                              "consequent": {
                                                                "type": "ReturnStatement",
                                                                "argument": {
                                                                  "type": "Literal",
                                                                  "value": "support.constant.color"
                                                                }
                                                              },
                                                              "alternate": {
                                                                "type": "IfStatement",
                                                                "test": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "tags"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "hasOwnProperty"
                                                                    }
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "value"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "toLowerCase"
                                                                        }
                                                                      },
                                                                      "arguments": []
                                                                    }
                                                                  ]
                                                                },
                                                                "consequent": {
                                                                  "type": "ReturnStatement",
                                                                  "argument": {
                                                                    "type": "Literal",
                                                                    "value": "variable.language"
                                                                  }
                                                                },
                                                                "alternate": {
                                                                  "type": "ReturnStatement",
                                                                  "argument": {
                                                                    "type": "Literal",
                                                                    "value": "text"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "\\-?[@a-z_][@a-z0-9_\\-]*"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "variable"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "[a-z_\\-$][a-z0-9_\\-$]*\\b"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "variable.language"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "#[a-z0-9-_]+"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "variable.language"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "\\.[a-z0-9-_]+"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "variable.language"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": ":[a-z0-9-_]+"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "constant"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "[a-z0-9-_]+"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "keyword.operator"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "<|>|<=|>=|==|!=|-|%|#|\\+|\\$|\\+|\\*"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "paren.lparen"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "[[({]"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "paren.rparen"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "[\\])}]"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "text"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "\\s+"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Literal",
                                        "value": "comment"
                                      },
                                      "value": {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "comment"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": ".*?\\*\\/"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "start"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "comment"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "merge"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": ".+"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Literal",
                                        "value": "qqstring"
                                      },
                                      "value": {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "string"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "(?:(?:\\\\.)|(?:[^\"\\\\]))*?\""
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "start"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "string"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "merge"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": ".+"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Literal",
                                        "value": "qstring"
                                      },
                                      "value": {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "string"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "(?:(?:\\\\.)|(?:[^'\\\\]))*?'"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "start"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "string"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "merge"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": ".+"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "kind": "init"
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "oop"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "inherits"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "ScssHighlightRules"
                      },
                      {
                        "type": "Identifier",
                        "name": "TextHighlightRules"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "exports"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "ScssHighlightRules"
                      }
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "ScssHighlightRules"
                    }
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "ace"
          },
          "property": {
            "type": "Identifier",
            "name": "define"
          }
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "ace/mode/less_highlight_rules"
          },
          {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": "require"
              },
              {
                "type": "Literal",
                "value": "exports"
              },
              {
                "type": "Literal",
                "value": "module"
              },
              {
                "type": "Literal",
                "value": "ace/lib/oop"
              },
              {
                "type": "Literal",
                "value": "ace/lib/lang"
              },
              {
                "type": "Literal",
                "value": "ace/mode/text_highlight_rules"
              }
            ]
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "require"
              },
              {
                "type": "Identifier",
                "name": "exports"
              },
              {
                "type": "Identifier",
                "name": "module"
              }
            ],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "oop"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "require"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "../lib/oop"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "lang"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "require"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "../lib/lang"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "TextHighlightRules"
                      },
                      "init": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "require"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "./text_highlight_rules"
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "TextHighlightRules"
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "LessHighlightRules"
                      },
                      "init": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "VariableDeclaration",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "properties"
                                  },
                                  "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "lang"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "arrayToMap"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "FunctionExpression",
                                          "id": null,
                                          "params": [],
                                          "defaults": [],
                                          "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                  {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "browserPrefix"
                                                    },
                                                    "init": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Literal",
                                                          "value": "-webkit-|-moz-|-o-|-ms-|-svg-|-pie-|-khtml-"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "split"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Literal",
                                                          "value": "|"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ],
                                                "kind": "var"
                                              },
                                              {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                  {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "prefixProperties"
                                                    },
                                                    "init": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "BinaryExpression",
                                                              "operator": "+",
                                                              "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "+",
                                                                  "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "+",
                                                                      "left": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                          "type": "BinaryExpression",
                                                                          "operator": "+",
                                                                          "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                              "type": "BinaryExpression",
                                                                              "operator": "+",
                                                                              "left": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                  "type": "BinaryExpression",
                                                                                  "operator": "+",
                                                                                  "left": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                      "type": "BinaryExpression",
                                                                                      "operator": "+",
                                                                                      "left": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                          "type": "BinaryExpression",
                                                                                          "operator": "+",
                                                                                          "left": {
                                                                                            "type": "Literal",
                                                                                            "value": "appearance|background-clip|background-inline-policy|background-origin|"
                                                                                          },
                                                                                          "right": {
                                                                                            "type": "Literal",
                                                                                            "value": "background-size|binding|border-bottom-colors|border-left-colors|"
                                                                                          }
                                                                                        },
                                                                                        "right": {
                                                                                          "type": "Literal",
                                                                                          "value": "border-right-colors|border-top-colors|border-end|border-end-color|"
                                                                                        }
                                                                                      },
                                                                                      "right": {
                                                                                        "type": "Literal",
                                                                                        "value": "border-end-style|border-end-width|border-image|border-start|"
                                                                                      }
                                                                                    },
                                                                                    "right": {
                                                                                      "type": "Literal",
                                                                                      "value": "border-start-color|border-start-style|border-start-width|box-align|"
                                                                                    }
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "Literal",
                                                                                    "value": "box-direction|box-flex|box-flexgroup|box-ordinal-group|box-orient|"
                                                                                  }
                                                                                },
                                                                                "right": {
                                                                                  "type": "Literal",
                                                                                  "value": "box-pack|box-sizing|column-count|column-gap|column-width|column-rule|"
                                                                                }
                                                                              },
                                                                              "right": {
                                                                                "type": "Literal",
                                                                                "value": "column-rule-width|column-rule-style|column-rule-color|float-edge|"
                                                                              }
                                                                            },
                                                                            "right": {
                                                                              "type": "Literal",
                                                                              "value": "font-feature-settings|font-language-override|force-broken-image-icon|"
                                                                            }
                                                                          },
                                                                          "right": {
                                                                            "type": "Literal",
                                                                            "value": "image-region|margin-end|margin-start|opacity|outline|outline-color|"
                                                                          }
                                                                        },
                                                                        "right": {
                                                                          "type": "Literal",
                                                                          "value": "outline-offset|outline-radius|outline-radius-bottomleft|"
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "Literal",
                                                                        "value": "outline-radius-bottomright|outline-radius-topleft|outline-radius-topright|"
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "Literal",
                                                                      "value": "outline-style|outline-width|padding-end|padding-start|stack-sizing|"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "Literal",
                                                                    "value": "tab-size|text-blink|text-decoration-color|text-decoration-line|"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "Literal",
                                                                  "value": "text-decoration-style|transform|transform-origin|transition|"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": "transition-delay|transition-duration|transition-property|"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": "transition-timing-function|user-focus|user-input|user-modify|user-select|"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "window-shadow|border-radius"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "split"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Literal",
                                                          "value": "|"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ],
                                                "kind": "var"
                                              },
                                              {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                  {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "properties"
                                                    },
                                                    "init": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "BinaryExpression",
                                                              "operator": "+",
                                                              "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "+",
                                                                  "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "+",
                                                                      "left": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                          "type": "BinaryExpression",
                                                                          "operator": "+",
                                                                          "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                              "type": "BinaryExpression",
                                                                              "operator": "+",
                                                                              "left": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                  "type": "BinaryExpression",
                                                                                  "operator": "+",
                                                                                  "left": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                      "type": "BinaryExpression",
                                                                                      "operator": "+",
                                                                                      "left": {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                          "type": "BinaryExpression",
                                                                                          "operator": "+",
                                                                                          "left": {
                                                                                            "type": "BinaryExpression",
                                                                                            "operator": "+",
                                                                                            "left": {
                                                                                              "type": "BinaryExpression",
                                                                                              "operator": "+",
                                                                                              "left": {
                                                                                                "type": "BinaryExpression",
                                                                                                "operator": "+",
                                                                                                "left": {
                                                                                                  "type": "BinaryExpression",
                                                                                                  "operator": "+",
                                                                                                  "left": {
                                                                                                    "type": "BinaryExpression",
                                                                                                    "operator": "+",
                                                                                                    "left": {
                                                                                                      "type": "BinaryExpression",
                                                                                                      "operator": "+",
                                                                                                      "left": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "azimuth|background-attachment|background-color|background-image|"
                                                                                                      },
                                                                                                      "right": {
                                                                                                        "type": "Literal",
                                                                                                        "value": "background-position|background-repeat|background|border-bottom-color|"
                                                                                                      }
                                                                                                    },
                                                                                                    "right": {
                                                                                                      "type": "Literal",
                                                                                                      "value": "border-bottom-style|border-bottom-width|border-bottom|border-collapse|"
                                                                                                    }
                                                                                                  },
                                                                                                  "right": {
                                                                                                    "type": "Literal",
                                                                                                    "value": "border-color|border-left-color|border-left-style|border-left-width|"
                                                                                                  }
                                                                                                },
                                                                                                "right": {
                                                                                                  "type": "Literal",
                                                                                                  "value": "border-left|border-right-color|border-right-style|border-right-width|"
                                                                                                }
                                                                                              },
                                                                                              "right": {
                                                                                                "type": "Literal",
                                                                                                "value": "border-right|border-spacing|border-style|border-top-color|"
                                                                                              }
                                                                                            },
                                                                                            "right": {
                                                                                              "type": "Literal",
                                                                                              "value": "border-top-style|border-top-width|border-top|border-width|border|"
                                                                                            }
                                                                                          },
                                                                                          "right": {
                                                                                            "type": "Literal",
                                                                                            "value": "bottom|box-sizing|caption-side|clear|clip|color|content|counter-increment|"
                                                                                          }
                                                                                        },
                                                                                        "right": {
                                                                                          "type": "Literal",
                                                                                          "value": "counter-reset|cue-after|cue-before|cue|cursor|direction|display|"
                                                                                        }
                                                                                      },
                                                                                      "right": {
                                                                                        "type": "Literal",
                                                                                        "value": "elevation|empty-cells|float|font-family|font-size-adjust|font-size|"
                                                                                      }
                                                                                    },
                                                                                    "right": {
                                                                                      "type": "Literal",
                                                                                      "value": "font-stretch|font-style|font-variant|font-weight|font|height|left|"
                                                                                    }
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "Literal",
                                                                                    "value": "letter-spacing|line-height|list-style-image|list-style-position|"
                                                                                  }
                                                                                },
                                                                                "right": {
                                                                                  "type": "Literal",
                                                                                  "value": "list-style-type|list-style|margin-bottom|margin-left|margin-right|"
                                                                                }
                                                                              },
                                                                              "right": {
                                                                                "type": "Literal",
                                                                                "value": "margin-top|marker-offset|margin|marks|max-height|max-width|min-height|"
                                                                              }
                                                                            },
                                                                            "right": {
                                                                              "type": "Literal",
                                                                              "value": "min-width|opacity|orphans|outline-color|"
                                                                            }
                                                                          },
                                                                          "right": {
                                                                            "type": "Literal",
                                                                            "value": "outline-style|outline-width|outline|overflow|overflow-x|overflow-y|padding-bottom|"
                                                                          }
                                                                        },
                                                                        "right": {
                                                                          "type": "Literal",
                                                                          "value": "padding-left|padding-right|padding-top|padding|page-break-after|"
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "Literal",
                                                                        "value": "page-break-before|page-break-inside|page|pause-after|pause-before|"
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "Literal",
                                                                      "value": "pause|pitch-range|pitch|play-during|position|quotes|richness|right|"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "Literal",
                                                                    "value": "size|speak-header|speak-numeral|speak-punctuation|speech-rate|speak|"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "Literal",
                                                                  "value": "stress|table-layout|text-align|text-decoration|text-indent|"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": "text-shadow|text-transform|top|unicode-bidi|vertical-align|"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": "visibility|voice-family|volume|white-space|widows|width|word-spacing|"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "z-index"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "split"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Literal",
                                                          "value": "|"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ],
                                                "kind": "var"
                                              },
                                              {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                  {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "ret"
                                                    },
                                                    "init": {
                                                      "type": "ArrayExpression",
                                                      "elements": []
                                                    }
                                                  }
                                                ],
                                                "kind": "var"
                                              },
                                              {
                                                "type": "ForStatement",
                                                "init": {
                                                  "type": "VariableDeclaration",
                                                  "declarations": [
                                                    {
                                                      "type": "VariableDeclarator",
                                                      "id": {
                                                        "type": "Identifier",
                                                        "name": "i"
                                                      },
                                                      "init": {
                                                        "type": "Literal",
                                                        "value": 0
                                                      }
                                                    },
                                                    {
                                                      "type": "VariableDeclarator",
                                                      "id": {
                                                        "type": "Identifier",
                                                        "name": "ln"
                                                      },
                                                      "init": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "browserPrefix"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "length"
                                                        }
                                                      }
                                                    }
                                                  ],
                                                  "kind": "var"
                                                },
                                                "test": {
                                                  "type": "BinaryExpression",
                                                  "operator": "<",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "i"
                                                  },
                                                  "right": {
                                                    "type": "Identifier",
                                                    "name": "ln"
                                                  }
                                                },
                                                "update": {
                                                  "type": "UpdateExpression",
                                                  "operator": "++",
                                                  "argument": {
                                                    "type": "Identifier",
                                                    "name": "i"
                                                  },
                                                  "prefix": false
                                                },
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "Array"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "prototype"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "push"
                                                            }
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "apply"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "ret"
                                                          },
                                                          {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                  "type": "MemberExpression",
                                                                  "computed": true,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "browserPrefix"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "i"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "prefixProperties"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "join"
                                                                    }
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "+",
                                                                      "left": {
                                                                        "type": "Literal",
                                                                        "value": "|"
                                                                      },
                                                                      "right": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "browserPrefix"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "i"
                                                                        }
                                                                      }
                                                                    }
                                                                  ]
                                                                }
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "split"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Literal",
                                                                "value": "|"
                                                              }
                                                            ]
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ]
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "Array"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "prototype"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "push"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "apply"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "ret"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "prefixProperties"
                                                    }
                                                  ]
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "Array"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "prototype"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "push"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "apply"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "ret"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "properties"
                                                    }
                                                  ]
                                                }
                                              },
                                              {
                                                "type": "ReturnStatement",
                                                "argument": {
                                                  "type": "Identifier",
                                                  "name": "ret"
                                                }
                                              }
                                            ]
                                          },
                                          "rest": null,
                                          "generator": false,
                                          "expression": false
                                        },
                                        "arguments": []
                                      }
                                    ]
                                  }
                                }
                              ],
                              "kind": "var"
                            },
                            {
                              "type": "VariableDeclaration",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "functions"
                                  },
                                  "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "lang"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "arrayToMap"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                  "type": "Literal",
                                                  "value": "hsl|hsla|rgb|rgba|url|attr|counter|counters|lighten|darken|saturate|"
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": "desaturate|fadein|fadeout|fade|spin|mix|hue|saturation|lightness|"
                                                }
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": "alpha|round|ceil|floor|percentage|color|iscolor|isnumber|isstring|"
                                              }
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": "iskeyword|isurl|ispixel|ispercentage|isem"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "split"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Literal",
                                            "value": "|"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ],
                              "kind": "var"
                            },
                            {
                              "type": "VariableDeclaration",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "constants"
                                  },
                                  "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "lang"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "arrayToMap"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                  "type": "BinaryExpression",
                                                  "operator": "+",
                                                  "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "BinaryExpression",
                                                      "operator": "+",
                                                      "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "BinaryExpression",
                                                              "operator": "+",
                                                              "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "+",
                                                                  "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "+",
                                                                      "left": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                          "type": "BinaryExpression",
                                                                          "operator": "+",
                                                                          "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                              "type": "BinaryExpression",
                                                                              "operator": "+",
                                                                              "left": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                  "type": "BinaryExpression",
                                                                                  "operator": "+",
                                                                                  "left": {
                                                                                    "type": "Literal",
                                                                                    "value": "absolute|all-scroll|always|armenian|auto|baseline|below|bidi-override|"
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "Literal",
                                                                                    "value": "block|bold|bolder|border-box|both|bottom|break-all|break-word|capitalize|center|"
                                                                                  }
                                                                                },
                                                                                "right": {
                                                                                  "type": "Literal",
                                                                                  "value": "char|circle|cjk-ideographic|col-resize|collapse|content-box|crosshair|dashed|"
                                                                                }
                                                                              },
                                                                              "right": {
                                                                                "type": "Literal",
                                                                                "value": "decimal-leading-zero|decimal|default|disabled|disc|"
                                                                              }
                                                                            },
                                                                            "right": {
                                                                              "type": "Literal",
                                                                              "value": "distribute-all-lines|distribute-letter|distribute-space|"
                                                                            }
                                                                          },
                                                                          "right": {
                                                                            "type": "Literal",
                                                                            "value": "distribute|dotted|double|e-resize|ellipsis|fixed|georgian|groove|"
                                                                          }
                                                                        },
                                                                        "right": {
                                                                          "type": "Literal",
                                                                          "value": "hand|hebrew|help|hidden|hiragana-iroha|hiragana|horizontal|"
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "Literal",
                                                                        "value": "ideograph-alpha|ideograph-numeric|ideograph-parenthesis|"
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "Literal",
                                                                      "value": "ideograph-space|inactive|inherit|inline-block|inline|inset|inside|"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "Literal",
                                                                    "value": "inter-ideograph|inter-word|italic|justify|katakana-iroha|katakana|"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "Literal",
                                                                  "value": "keep-all|left|lighter|line-edge|line-through|line|list-item|loose|"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": "lower-alpha|lower-greek|lower-latin|lower-roman|lowercase|lr-tb|ltr|"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": "medium|middle|move|n-resize|ne-resize|newspaper|no-drop|no-repeat|"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "nw-resize|none|normal|not-allowed|nowrap|oblique|outset|outside|"
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": "overline|pointer|progress|relative|repeat-x|repeat-y|repeat|right|"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": "ridge|row-resize|rtl|s-resize|scroll|se-resize|separate|small-caps|"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": "solid|square|static|strict|super|sw-resize|table-footer-group|"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": "table-header-group|tb-rl|text-bottom|text-top|text|thick|thin|top|"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": "transparent|underline|upper-alpha|upper-latin|upper-roman|uppercase|"
                                                }
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": "vertical-ideographic|vertical-text|visible|w-resize|wait|whitespace|"
                                              }
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": "zero"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "split"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Literal",
                                            "value": "|"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ],
                              "kind": "var"
                            },
                            {
                              "type": "VariableDeclaration",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "colors"
                                  },
                                  "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "lang"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "arrayToMap"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "Literal",
                                              "value": "aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|"
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": "purple|red|silver|teal|white|yellow"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "split"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Literal",
                                            "value": "|"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ],
                              "kind": "var"
                            },
                            {
                              "type": "VariableDeclaration",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "keywords"
                                  },
                                  "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "lang"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "arrayToMap"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "Literal",
                                                "value": "@mixin|@extend|@include|@import|@media|@debug|@warn|@if|@for|@each|"
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": "@while|@else|@font-face|@-webkit-keyframes|if|and|!default|module|"
                                              }
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": "def|end|declare|when|not|and"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "split"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Literal",
                                            "value": "|"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ],
                              "kind": "var"
                            },
                            {
                              "type": "VariableDeclaration",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "tags"
                                  },
                                  "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "lang"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "arrayToMap"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                  "type": "BinaryExpression",
                                                  "operator": "+",
                                                  "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "BinaryExpression",
                                                      "operator": "+",
                                                      "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "Literal",
                                                            "value": "a|abbr|acronym|address|applet|area|article|aside|audio|b|base|basefont|bdo|"
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "big|blockquote|body|br|button|canvas|caption|center|cite|code|col|colgroup|"
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": "command|datalist|dd|del|details|dfn|dir|div|dl|dt|em|embed|fieldset|"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": "figcaption|figure|font|footer|form|frame|frameset|h1|h2|h3|h4|h5|h6|head|"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": "header|hgroup|hr|html|i|iframe|img|input|ins|keygen|kbd|label|legend|li|"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": "link|map|mark|menu|meta|meter|nav|noframes|noscript|object|ol|optgroup|"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": "option|output|p|param|pre|progress|q|rp|rt|ruby|s|samp|script|section|select|"
                                                }
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": "small|source|span|strike|strong|style|sub|summary|sup|table|tbody|td|"
                                              }
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": "textarea|tfoot|th|thead|time|title|tr|tt|u|ul|var|video|wbr|xmp"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "split"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Literal",
                                            "value": "|"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ],
                              "kind": "var"
                            },
                            {
                              "type": "VariableDeclaration",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "numRe"
                                  },
                                  "init": {
                                    "type": "Literal",
                                    "value": "\\-?(?:(?:[0-9]+)|(?:[0-9]*\\.[0-9]+))"
                                  }
                                }
                              ],
                              "kind": "var"
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "ThisExpression"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "$rules"
                                  }
                                },
                                "right": {
                                  "type": "ObjectExpression",
                                  "properties": [
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Literal",
                                        "value": "start"
                                      },
                                      "value": {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "comment"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "\\/\\/.*$"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "comment"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "merge"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "\\/\\*"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "comment"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "string"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "[\"](?:(?:\\\\.)|(?:[^\"\\\\]))*?[\"]"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "string"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "['](?:(?:\\\\.)|(?:[^'\\\\]))*?[']"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "constant.numeric"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "BinaryExpression",
                                                  "operator": "+",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "numRe"
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": "(?:em|ex|px|cm|mm|in|pt|pc|deg|rad|grad|ms|s|hz|khz|%)"
                                                  }
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "constant.numeric"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "#[a-f0-9]{6}"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "constant.numeric"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "#[a-f0-9]{3}"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "constant.numeric"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Identifier",
                                                  "name": "numRe"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "value"
                                                    }
                                                  ],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "IfStatement",
                                                        "test": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "keywords"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "hasOwnProperty"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "value"
                                                            }
                                                          ]
                                                        },
                                                        "consequent": {
                                                          "type": "ReturnStatement",
                                                          "argument": {
                                                            "type": "Literal",
                                                            "value": "keyword"
                                                          }
                                                        },
                                                        "alternate": {
                                                          "type": "ReturnStatement",
                                                          "argument": {
                                                            "type": "Literal",
                                                            "value": "variable"
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "@[a-z0-9_\\-@]*\\b"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "value"
                                                    }
                                                  ],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "IfStatement",
                                                        "test": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "properties"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "hasOwnProperty"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "value"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "toLowerCase"
                                                                }
                                                              },
                                                              "arguments": []
                                                            }
                                                          ]
                                                        },
                                                        "consequent": {
                                                          "type": "ReturnStatement",
                                                          "argument": {
                                                            "type": "Literal",
                                                            "value": "support.type"
                                                          }
                                                        },
                                                        "alternate": {
                                                          "type": "IfStatement",
                                                          "test": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "keywords"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "hasOwnProperty"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Identifier",
                                                                "name": "value"
                                                              }
                                                            ]
                                                          },
                                                          "consequent": {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                              "type": "Literal",
                                                              "value": "keyword"
                                                            }
                                                          },
                                                          "alternate": {
                                                            "type": "IfStatement",
                                                            "test": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "constants"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "hasOwnProperty"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "value"
                                                                }
                                                              ]
                                                            },
                                                            "consequent": {
                                                              "type": "ReturnStatement",
                                                              "argument": {
                                                                "type": "Literal",
                                                                "value": "constant.language"
                                                              }
                                                            },
                                                            "alternate": {
                                                              "type": "IfStatement",
                                                              "test": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "functions"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "hasOwnProperty"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "value"
                                                                  }
                                                                ]
                                                              },
                                                              "consequent": {
                                                                "type": "ReturnStatement",
                                                                "argument": {
                                                                  "type": "Literal",
                                                                  "value": "support.function"
                                                                }
                                                              },
                                                              "alternate": {
                                                                "type": "IfStatement",
                                                                "test": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "colors"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "hasOwnProperty"
                                                                    }
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "value"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "toLowerCase"
                                                                        }
                                                                      },
                                                                      "arguments": []
                                                                    }
                                                                  ]
                                                                },
                                                                "consequent": {
                                                                  "type": "ReturnStatement",
                                                                  "argument": {
                                                                    "type": "Literal",
                                                                    "value": "support.constant.color"
                                                                  }
                                                                },
                                                                "alternate": {
                                                                  "type": "IfStatement",
                                                                  "test": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "tags"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "hasOwnProperty"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "value"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "toLowerCase"
                                                                          }
                                                                        },
                                                                        "arguments": []
                                                                      }
                                                                    ]
                                                                  },
                                                                  "consequent": {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                      "type": "Literal",
                                                                      "value": "variable.language"
                                                                    }
                                                                  },
                                                                  "alternate": {
                                                                    "type": "ReturnStatement",
                                                                    "argument": {
                                                                      "type": "Literal",
                                                                      "value": "text"
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "\\-?[@a-z_][@a-z0-9_\\-]*"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "variable.language"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "#[a-z0-9-_]+"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "variable.language"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "\\.[a-z0-9-_]+"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "variable.language"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": ":[a-z0-9-_]+"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "constant"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "[a-z0-9-_]+"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "keyword.operator"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "<|>|<=|>=|==|!=|-|%|#|\\+|\\$|\\+|\\*"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "paren.lparen"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "[[({]"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "paren.rparen"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "[\\])}]"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "text"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "\\s+"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Literal",
                                        "value": "comment"
                                      },
                                      "value": {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "comment"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": ".*?\\*\\/"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "start"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          },
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": "comment"
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "merge"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                "kind": "init"
                                              },
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "regex"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": ".+"
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "kind": "init"
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "oop"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "inherits"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "LessHighlightRules"
                      },
                      {
                        "type": "Identifier",
                        "name": "TextHighlightRules"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "exports"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "LessHighlightRules"
                      }
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "LessHighlightRules"
                    }
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "ace"
          },
          "property": {
            "type": "Identifier",
            "name": "define"
          }
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "ace/mode/coffee_highlight_rules"
          },
          {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": "require"
              },
              {
                "type": "Literal",
                "value": "exports"
              },
              {
                "type": "Literal",
                "value": "module"
              },
              {
                "type": "Literal",
                "value": "ace/lib/oop"
              },
              {
                "type": "Literal",
                "value": "ace/mode/text_highlight_rules"
              }
            ]
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "require"
              },
              {
                "type": "Identifier",
                "name": "exports"
              },
              {
                "type": "Identifier",
                "name": "module"
              }
            ],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "oop"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "require"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "../lib/oop"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "TextHighlightRules"
                      },
                      "init": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "require"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "./text_highlight_rules"
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "TextHighlightRules"
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "oop"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "inherits"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "CoffeeHighlightRules"
                      },
                      {
                        "type": "Identifier",
                        "name": "TextHighlightRules"
                      }
                    ]
                  }
                },
                {
                  "type": "FunctionDeclaration",
                  "id": {
                    "type": "Identifier",
                    "name": "CoffeeHighlightRules"
                  },
                  "params": [],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "identifier"
                            },
                            "init": {
                              "type": "Literal",
                              "value": "[$A-Za-z_\\x7f-\\uffff][$\\w\\x7f-\\uffff]*"
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "stringfill"
                            },
                            "init": {
                              "type": "ObjectExpression",
                              "properties": [
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "token"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": "string"
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "merge"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": true
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "regex"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": ".+"
                                  },
                                  "kind": "init"
                                }
                              ]
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "keywords"
                            },
                            "init": {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "Literal",
                                    "value": "this|throw|then|try|typeof|super|switch|return|break|by|continue|"
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": "catch|class|in|instanceof|is|isnt|if|else|extends|for|forown|"
                                  }
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": "finally|function|while|when|new|no|not|delete|debugger|do|loop|of|off|"
                                }
                              },
                              "right": {
                                "type": "Literal",
                                "value": "or|on|unless|until|and|yes"
                              }
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "langConstant"
                            },
                            "init": {
                              "type": "Literal",
                              "value": "true|false|null|undefined|NaN|Infinity"
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "illegal"
                            },
                            "init": {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                  "type": "Literal",
                                  "value": "case|const|default|function|var|void|with|enum|export|implements|"
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": "interface|let|package|private|protected|public|static|yield|"
                                }
                              },
                              "right": {
                                "type": "Literal",
                                "value": "__hasProp|slice|bind|indexOf"
                              }
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "supportClass"
                            },
                            "init": {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                      "type": "Literal",
                                      "value": "Array|Boolean|Date|Function|Number|Object|RegExp|ReferenceError|String|"
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": "Error|EvalError|InternalError|RangeError|ReferenceError|StopIteration|"
                                    }
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": "SyntaxError|TypeError|URIError|"
                                  }
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": "ArrayBuffer|Float32Array|Float64Array|Int16Array|Int32Array|Int8Array|"
                                }
                              },
                              "right": {
                                "type": "Literal",
                                "value": "Uint16Array|Uint32Array|Uint8Array|Uint8ClampedArray"
                              }
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "supportFunction"
                            },
                            "init": {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "Literal",
                                "value": "Math|JSON|isNaN|isFinite|parseInt|parseFloat|encodeURI|"
                              },
                              "right": {
                                "type": "Literal",
                                "value": "encodeURIComponent|decodeURI|decodeURIComponent|String|"
                              }
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "variableLanguage"
                            },
                            "init": {
                              "type": "Literal",
                              "value": "window|arguments|prototype|document"
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "keywordMapper"
                            },
                            "init": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "ThisExpression"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "createKeywordMapper"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "ObjectExpression",
                                  "properties": [
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Literal",
                                        "value": "keyword"
                                      },
                                      "value": {
                                        "type": "Identifier",
                                        "name": "keywords"
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Literal",
                                        "value": "constant.language"
                                      },
                                      "value": {
                                        "type": "Identifier",
                                        "name": "langConstant"
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Literal",
                                        "value": "invalid.illegal"
                                      },
                                      "value": {
                                        "type": "Identifier",
                                        "name": "illegal"
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Literal",
                                        "value": "language.support.class"
                                      },
                                      "value": {
                                        "type": "Identifier",
                                        "name": "supportClass"
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Literal",
                                        "value": "language.support.function"
                                      },
                                      "value": {
                                        "type": "Identifier",
                                        "name": "supportFunction"
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Literal",
                                        "value": "variable.language"
                                      },
                                      "value": {
                                        "type": "Identifier",
                                        "name": "variableLanguage"
                                      },
                                      "kind": "init"
                                    }
                                  ]
                                },
                                {
                                  "type": "Literal",
                                  "value": "identifier"
                                }
                              ]
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "functionRules"
                            },
                            "init": {
                              "type": "ObjectExpression",
                              "properties": [
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Literal",
                                    "value": "({args})->"
                                  },
                                  "value": {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Identifier",
                                          "name": "token"
                                        },
                                        "value": {
                                          "type": "ArrayExpression",
                                          "elements": [
                                            {
                                              "type": "Literal",
                                              "value": "paren.lparen"
                                            },
                                            {
                                              "type": "Literal",
                                              "value": "text"
                                            },
                                            {
                                              "type": "Literal",
                                              "value": "paren.lparen"
                                            },
                                            {
                                              "type": "Literal",
                                              "value": "text"
                                            },
                                            {
                                              "type": "Literal",
                                              "value": "variable.parameter"
                                            },
                                            {
                                              "type": "Literal",
                                              "value": "text"
                                            },
                                            {
                                              "type": "Literal",
                                              "value": "paren.rparen"
                                            },
                                            {
                                              "type": "Literal",
                                              "value": "text"
                                            },
                                            {
                                              "type": "Literal",
                                              "value": "paren.rparen"
                                            },
                                            {
                                              "type": "Literal",
                                              "value": "text"
                                            },
                                            {
                                              "type": "Literal",
                                              "value": "storage.type"
                                            }
                                          ]
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Identifier",
                                          "name": "regex"
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": "(\\()(\\s*)(\\{)(\\s*)([$@A-Za-z_\\x7f-\\uffff][$@\\w\\s,\\x7f-\\uffff]*)(\\s*)(\\})(\\s*)(\\))(\\s*)([\\-=]>)"
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Literal",
                                    "value": "({})->"
                                  },
                                  "value": {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Identifier",
                                          "name": "token"
                                        },
                                        "value": {
                                          "type": "ArrayExpression",
                                          "elements": [
                                            {
                                              "type": "Literal",
                                              "value": "paren.lparen"
                                            },
                                            {
                                              "type": "Literal",
                                              "value": "text"
                                            },
                                            {
                                              "type": "Literal",
                                              "value": "paren.lparen"
                                            },
                                            {
                                              "type": "Literal",
                                              "value": "text"
                                            },
                                            {
                                              "type": "Literal",
                                              "value": "paren.rparen"
                                            },
                                            {
                                              "type": "Literal",
                                              "value": "text"
                                            },
                                            {
                                              "type": "Literal",
                                              "value": "paren.rparen"
                                            },
                                            {
                                              "type": "Literal",
                                              "value": "text"
                                            },
                                            {
                                              "type": "Literal",
                                              "value": "storage.type"
                                            }
                                          ]
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Identifier",
                                          "name": "regex"
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": "(\\()(\\s*)(\\{)(\\s*)(\\})(\\s*)(\\))(\\s*)([\\-=]>)"
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Literal",
                                    "value": "(args)->"
                                  },
                                  "value": {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Identifier",
                                          "name": "token"
                                        },
                                        "value": {
                                          "type": "ArrayExpression",
                                          "elements": [
                                            {
                                              "type": "Literal",
                                              "value": "paren.lparen"
                                            },
                                            {
                                              "type": "Literal",
                                              "value": "text"
                                            },
                                            {
                                              "type": "Literal",
                                              "value": "variable.parameter"
                                            },
                                            {
                                              "type": "Literal",
                                              "value": "text"
                                            },
                                            {
                                              "type": "Literal",
                                              "value": "paren.rparen"
                                            },
                                            {
                                              "type": "Literal",
                                              "value": "text"
                                            },
                                            {
                                              "type": "Literal",
                                              "value": "storage.type"
                                            }
                                          ]
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Identifier",
                                          "name": "regex"
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": "(\\()(\\s*)([$@A-Za-z_\\x7f-\\uffff][\\s\\x21-\\uffff]*)(\\s*)(\\))(\\s*)([\\-=]>)"
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Literal",
                                    "value": "()->"
                                  },
                                  "value": {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Identifier",
                                          "name": "token"
                                        },
                                        "value": {
                                          "type": "ArrayExpression",
                                          "elements": [
                                            {
                                              "type": "Literal",
                                              "value": "paren.lparen"
                                            },
                                            {
                                              "type": "Literal",
                                              "value": "text"
                                            },
                                            {
                                              "type": "Literal",
                                              "value": "paren.rparen"
                                            },
                                            {
                                              "type": "Literal",
                                              "value": "text"
                                            },
                                            {
                                              "type": "Literal",
                                              "value": "storage.type"
                                            }
                                          ]
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Identifier",
                                          "name": "regex"
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": "(\\()(\\s*)(\\))(\\s*)([\\-=]>)"
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  },
                                  "kind": "init"
                                }
                              ]
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "ThisExpression"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "$rules"
                            }
                          },
                          "right": {
                            "type": "ObjectExpression",
                            "properties": [
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "start"
                                },
                                "value": {
                                  "type": "ArrayExpression",
                                  "elements": [
                                    {
                                      "type": "ObjectExpression",
                                      "properties": [
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "token"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "constant.numeric"
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "regex"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "(?:0x[\\da-fA-F]+|(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:[eE][+-]?\\d+)?)"
                                          },
                                          "kind": "init"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ObjectExpression",
                                      "properties": [
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "token"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "string"
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "merge"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": true
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "regex"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "'''"
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "next"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "qdoc"
                                          },
                                          "kind": "init"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ObjectExpression",
                                      "properties": [
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "token"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "string"
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "merge"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": true
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "regex"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "\"\"\""
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "next"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "qqdoc"
                                          },
                                          "kind": "init"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ObjectExpression",
                                      "properties": [
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "token"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "string"
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "merge"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": true
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "regex"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "'"
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "next"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "qstring"
                                          },
                                          "kind": "init"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ObjectExpression",
                                      "properties": [
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "token"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "string"
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "merge"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": true
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "regex"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "\""
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "next"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "qqstring"
                                          },
                                          "kind": "init"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ObjectExpression",
                                      "properties": [
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "token"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "string"
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "merge"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": true
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "regex"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "`"
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "next"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "js"
                                          },
                                          "kind": "init"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ObjectExpression",
                                      "properties": [
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "token"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "string.regex"
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "merge"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": true
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "regex"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "///"
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "next"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "heregex"
                                          },
                                          "kind": "init"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ObjectExpression",
                                      "properties": [
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "token"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "string.regex"
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "regex"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": {}
                                          },
                                          "kind": "init"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ObjectExpression",
                                      "properties": [
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "token"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "comment"
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "merge"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": true
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "regex"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "###(?!#)"
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "next"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "comment"
                                          },
                                          "kind": "init"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ObjectExpression",
                                      "properties": [
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "token"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "comment"
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "regex"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "#.*"
                                          },
                                          "kind": "init"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ObjectExpression",
                                      "properties": [
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "token"
                                          },
                                          "value": {
                                            "type": "ArrayExpression",
                                            "elements": [
                                              {
                                                "type": "Literal",
                                                "value": "punctuation.operator"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": "identifier"
                                              }
                                            ]
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "regex"
                                          },
                                          "value": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "Literal",
                                                "value": "(\\.)("
                                              },
                                              "right": {
                                                "type": "Identifier",
                                                "name": "illegal"
                                              }
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": ")"
                                            }
                                          },
                                          "kind": "init"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ObjectExpression",
                                      "properties": [
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "token"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "punctuation.operator"
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "regex"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "\\."
                                          },
                                          "kind": "init"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ObjectExpression",
                                      "properties": [
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "token"
                                          },
                                          "value": {
                                            "type": "ArrayExpression",
                                            "elements": [
                                              {
                                                "type": "Literal",
                                                "value": "keyword"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": "text"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": "language.support.class"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": "text"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": "keyword"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": "text"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": "language.support.class"
                                              }
                                            ]
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "regex"
                                          },
                                          "value": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                  "type": "BinaryExpression",
                                                  "operator": "+",
                                                  "left": {
                                                    "type": "Literal",
                                                    "value": "(class)(\\s+)("
                                                  },
                                                  "right": {
                                                    "type": "Identifier",
                                                    "name": "identifier"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": ")(\\s+)(extends)(\\s+)("
                                                }
                                              },
                                              "right": {
                                                "type": "Identifier",
                                                "name": "identifier"
                                              }
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": ")"
                                            }
                                          },
                                          "kind": "init"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ObjectExpression",
                                      "properties": [
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "token"
                                          },
                                          "value": {
                                            "type": "ArrayExpression",
                                            "elements": [
                                              {
                                                "type": "Literal",
                                                "value": "keyword"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": "text"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": "language.support.class"
                                              }
                                            ]
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "regex"
                                          },
                                          "value": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "Literal",
                                                "value": "(class)(\\s+)("
                                              },
                                              "right": {
                                                "type": "Identifier",
                                                "name": "identifier"
                                              }
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": ")"
                                            }
                                          },
                                          "kind": "init"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ObjectExpression",
                                      "properties": [
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "token"
                                          },
                                          "value": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ArrayExpression",
                                                "elements": [
                                                  {
                                                    "type": "Literal",
                                                    "value": "entity.name.function"
                                                  },
                                                  {
                                                    "type": "Literal",
                                                    "value": "text"
                                                  },
                                                  {
                                                    "type": "Literal",
                                                    "value": "keyword.operator"
                                                  },
                                                  {
                                                    "type": "Literal",
                                                    "value": "text"
                                                  }
                                                ]
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "concat"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": true,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "functionRules"
                                                  },
                                                  "property": {
                                                    "type": "Literal",
                                                    "value": "({args})->"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                }
                                              }
                                            ]
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "regex"
                                          },
                                          "value": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                  "type": "Literal",
                                                  "value": "("
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "identifier"
                                                }
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": ")(\\s*)(=)(\\s*)"
                                              }
                                            },
                                            "right": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "functionRules"
                                                },
                                                "property": {
                                                  "type": "Literal",
                                                  "value": "({args})->"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "regex"
                                              }
                                            }
                                          },
                                          "kind": "init"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ObjectExpression",
                                      "properties": [
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "token"
                                          },
                                          "value": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ArrayExpression",
                                                "elements": [
                                                  {
                                                    "type": "Literal",
                                                    "value": "entity.name.function"
                                                  },
                                                  {
                                                    "type": "Literal",
                                                    "value": "text"
                                                  },
                                                  {
                                                    "type": "Literal",
                                                    "value": "punctuation.operator"
                                                  },
                                                  {
                                                    "type": "Literal",
                                                    "value": "text"
                                                  }
                                                ]
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "concat"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": true,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "functionRules"
                                                  },
                                                  "property": {
                                                    "type": "Literal",
                                                    "value": "({args})->"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                }
                                              }
                                            ]
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "regex"
                                          },
                                          "value": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                  "type": "Literal",
                                                  "value": "("
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "identifier"
                                                }
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": ")(\\s*)(:)(\\s*)"
                                              }
                                            },
                                            "right": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "functionRules"
                                                },
                                                "property": {
                                                  "type": "Literal",
                                                  "value": "({args})->"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "regex"
                                              }
                                            }
                                          },
                                          "kind": "init"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ObjectExpression",
                                      "properties": [
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "token"
                                          },
                                          "value": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ArrayExpression",
                                                "elements": [
                                                  {
                                                    "type": "Literal",
                                                    "value": "entity.name.function"
                                                  },
                                                  {
                                                    "type": "Literal",
                                                    "value": "text"
                                                  },
                                                  {
                                                    "type": "Literal",
                                                    "value": "keyword.operator"
                                                  },
                                                  {
                                                    "type": "Literal",
                                                    "value": "text"
                                                  }
                                                ]
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "concat"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": true,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "functionRules"
                                                  },
                                                  "property": {
                                                    "type": "Literal",
                                                    "value": "({})->"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                }
                                              }
                                            ]
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "regex"
                                          },
                                          "value": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                  "type": "Literal",
                                                  "value": "("
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "identifier"
                                                }
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": ")(\\s*)(=)(\\s*)"
                                              }
                                            },
                                            "right": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "functionRules"
                                                },
                                                "property": {
                                                  "type": "Literal",
                                                  "value": "({})->"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "regex"
                                              }
                                            }
                                          },
                                          "kind": "init"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ObjectExpression",
                                      "properties": [
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "token"
                                          },
                                          "value": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ArrayExpression",
                                                "elements": [
                                                  {
                                                    "type": "Literal",
                                                    "value": "entity.name.function"
                                                  },
                                                  {
                                                    "type": "Literal",
                                                    "value": "text"
                                                  },
                                                  {
                                                    "type": "Literal",
                                                    "value": "punctuation.operator"
                                                  },
                                                  {
                                                    "type": "Literal",
                                                    "value": "text"
                                                  }
                                                ]
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "concat"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": true,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "functionRules"
                                                  },
                                                  "property": {
                                                    "type": "Literal",
                                                    "value": "({})->"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                }
                                              }
                                            ]
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "regex"
                                          },
                                          "value": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                  "type": "Literal",
                                                  "value": "("
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "identifier"
                                                }
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": ")(\\s*)(:)(\\s*)"
                                              }
                                            },
                                            "right": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "functionRules"
                                                },
                                                "property": {
                                                  "type": "Literal",
                                                  "value": "({})->"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "regex"
                                              }
                                            }
                                          },
                                          "kind": "init"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ObjectExpression",
                                      "properties": [
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "token"
                                          },
                                          "value": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ArrayExpression",
                                                "elements": [
                                                  {
                                                    "type": "Literal",
                                                    "value": "entity.name.function"
                                                  },
                                                  {
                                                    "type": "Literal",
                                                    "value": "text"
                                                  },
                                                  {
                                                    "type": "Literal",
                                                    "value": "keyword.operator"
                                                  },
                                                  {
                                                    "type": "Literal",
                                                    "value": "text"
                                                  }
                                                ]
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "concat"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": true,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "functionRules"
                                                  },
                                                  "property": {
                                                    "type": "Literal",
                                                    "value": "(args)->"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                }
                                              }
                                            ]
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "regex"
                                          },
                                          "value": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                  "type": "Literal",
                                                  "value": "("
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "identifier"
                                                }
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": ")(\\s*)(=)(\\s*)"
                                              }
                                            },
                                            "right": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "functionRules"
                                                },
                                                "property": {
                                                  "type": "Literal",
                                                  "value": "(args)->"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "regex"
                                              }
                                            }
                                          },
                                          "kind": "init"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ObjectExpression",
                                      "properties": [
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "token"
                                          },
                                          "value": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ArrayExpression",
                                                "elements": [
                                                  {
                                                    "type": "Literal",
                                                    "value": "entity.name.function"
                                                  },
                                                  {
                                                    "type": "Literal",
                                                    "value": "text"
                                                  },
                                                  {
                                                    "type": "Literal",
                                                    "value": "punctuation.operator"
                                                  },
                                                  {
                                                    "type": "Literal",
                                                    "value": "text"
                                                  }
                                                ]
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "concat"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": true,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "functionRules"
                                                  },
                                                  "property": {
                                                    "type": "Literal",
                                                    "value": "(args)->"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                }
                                              }
                                            ]
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "regex"
                                          },
                                          "value": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                  "type": "Literal",
                                                  "value": "("
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "identifier"
                                                }
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": ")(\\s*)(:)(\\s*)"
                                              }
                                            },
                                            "right": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "functionRules"
                                                },
                                                "property": {
                                                  "type": "Literal",
                                                  "value": "(args)->"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "regex"
                                              }
                                            }
                                          },
                                          "kind": "init"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ObjectExpression",
                                      "properties": [
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "token"
                                          },
                                          "value": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ArrayExpression",
                                                "elements": [
                                                  {
                                                    "type": "Literal",
                                                    "value": "entity.name.function"
                                                  },
                                                  {
                                                    "type": "Literal",
                                                    "value": "text"
                                                  },
                                                  {
                                                    "type": "Literal",
                                                    "value": "keyword.operator"
                                                  },
                                                  {
                                                    "type": "Literal",
                                                    "value": "text"
                                                  }
                                                ]
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "concat"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": true,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "functionRules"
                                                  },
                                                  "property": {
                                                    "type": "Literal",
                                                    "value": "()->"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                }
                                              }
                                            ]
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "regex"
                                          },
                                          "value": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                  "type": "Literal",
                                                  "value": "("
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "identifier"
                                                }
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": ")(\\s*)(=)(\\s*)"
                                              }
                                            },
                                            "right": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "functionRules"
                                                },
                                                "property": {
                                                  "type": "Literal",
                                                  "value": "()->"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "regex"
                                              }
                                            }
                                          },
                                          "kind": "init"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ObjectExpression",
                                      "properties": [
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "token"
                                          },
                                          "value": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ArrayExpression",
                                                "elements": [
                                                  {
                                                    "type": "Literal",
                                                    "value": "entity.name.function"
                                                  },
                                                  {
                                                    "type": "Literal",
                                                    "value": "text"
                                                  },
                                                  {
                                                    "type": "Literal",
                                                    "value": "punctuation.operator"
                                                  },
                                                  {
                                                    "type": "Literal",
                                                    "value": "text"
                                                  }
                                                ]
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "concat"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": true,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "functionRules"
                                                  },
                                                  "property": {
                                                    "type": "Literal",
                                                    "value": "()->"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                }
                                              }
                                            ]
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "regex"
                                          },
                                          "value": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                  "type": "Literal",
                                                  "value": "("
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "identifier"
                                                }
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": ")(\\s*)(:)(\\s*)"
                                              }
                                            },
                                            "right": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "functionRules"
                                                },
                                                "property": {
                                                  "type": "Literal",
                                                  "value": "()->"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "regex"
                                              }
                                            }
                                          },
                                          "kind": "init"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ObjectExpression",
                                      "properties": [
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "token"
                                          },
                                          "value": {
                                            "type": "ArrayExpression",
                                            "elements": [
                                              {
                                                "type": "Literal",
                                                "value": "entity.name.function"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": "text"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": "keyword.operator"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": "text"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": "storage.type"
                                              }
                                            ]
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "regex"
                                          },
                                          "value": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "Literal",
                                                "value": "("
                                              },
                                              "right": {
                                                "type": "Identifier",
                                                "name": "identifier"
                                              }
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": ")(\\s*)(=)(\\s*)([\\-=]>)"
                                            }
                                          },
                                          "kind": "init"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ObjectExpression",
                                      "properties": [
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "token"
                                          },
                                          "value": {
                                            "type": "ArrayExpression",
                                            "elements": [
                                              {
                                                "type": "Literal",
                                                "value": "entity.name.function"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": "text"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": "punctuation.operator"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": "text"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": "storage.type"
                                              }
                                            ]
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "regex"
                                          },
                                          "value": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "Literal",
                                                "value": "("
                                              },
                                              "right": {
                                                "type": "Identifier",
                                                "name": "identifier"
                                              }
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": ")(\\s*)(:)(\\s*)([\\-=]>)"
                                            }
                                          },
                                          "kind": "init"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "MemberExpression",
                                      "computed": true,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "functionRules"
                                      },
                                      "property": {
                                        "type": "Literal",
                                        "value": "({args})->"
                                      }
                                    },
                                    {
                                      "type": "MemberExpression",
                                      "computed": true,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "functionRules"
                                      },
                                      "property": {
                                        "type": "Literal",
                                        "value": "({})->"
                                      }
                                    },
                                    {
                                      "type": "MemberExpression",
                                      "computed": true,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "functionRules"
                                      },
                                      "property": {
                                        "type": "Literal",
                                        "value": "(args)->"
                                      }
                                    },
                                    {
                                      "type": "MemberExpression",
                                      "computed": true,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "functionRules"
                                      },
                                      "property": {
                                        "type": "Literal",
                                        "value": "()->"
                                      }
                                    },
                                    {
                                      "type": "ObjectExpression",
                                      "properties": [
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "token"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "identifier"
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "regex"
                                          },
                                          "value": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "Literal",
                                              "value": "(?:(?:\\.|::)\\s*)"
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "identifier"
                                            }
                                          },
                                          "kind": "init"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ObjectExpression",
                                      "properties": [
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "token"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "variable"
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "regex"
                                          },
                                          "value": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "Literal",
                                                "value": "@(?:"
                                              },
                                              "right": {
                                                "type": "Identifier",
                                                "name": "identifier"
                                              }
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": ")?"
                                            }
                                          },
                                          "kind": "init"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ObjectExpression",
                                      "properties": [
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "token"
                                          },
                                          "value": {
                                            "type": "Identifier",
                                            "name": "keywordMapper"
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "regex"
                                          },
                                          "value": {
                                            "type": "Identifier",
                                            "name": "identifier"
                                          },
                                          "kind": "init"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ObjectExpression",
                                      "properties": [
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "token"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "punctuation.operator"
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "regex"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "\\?|\\:|\\,|\\."
                                          },
                                          "kind": "init"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ObjectExpression",
                                      "properties": [
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "token"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "storage.type"
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "regex"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "[\\-=]>"
                                          },
                                          "kind": "init"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ObjectExpression",
                                      "properties": [
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "token"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "keyword.operator"
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "regex"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "(?:[-+*/%<>&|^!?=]=|>>>=?|\\-\\-|\\+\\+|::|&&=|\\|\\|=|<<=|>>=|\\?\\.|\\.{2,3}|[!*+-=><])"
                                          },
                                          "kind": "init"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ObjectExpression",
                                      "properties": [
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "token"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "paren.lparen"
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "regex"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "[({[]"
                                          },
                                          "kind": "init"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ObjectExpression",
                                      "properties": [
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "token"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "paren.rparen"
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "regex"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "[\\]})]"
                                          },
                                          "kind": "init"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ObjectExpression",
                                      "properties": [
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "token"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "text"
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "regex"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "\\s+"
                                          },
                                          "kind": "init"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "kind": "init"
                              },
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "qdoc"
                                },
                                "value": {
                                  "type": "ArrayExpression",
                                  "elements": [
                                    {
                                      "type": "ObjectExpression",
                                      "properties": [
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "token"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "string"
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "regex"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": ".*?'''"
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "next"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "start"
                                          },
                                          "kind": "init"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "stringfill"
                                    }
                                  ]
                                },
                                "kind": "init"
                              },
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "qqdoc"
                                },
                                "value": {
                                  "type": "ArrayExpression",
                                  "elements": [
                                    {
                                      "type": "ObjectExpression",
                                      "properties": [
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "token"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "string"
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "regex"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": ".*?\"\"\""
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "next"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "start"
                                          },
                                          "kind": "init"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "stringfill"
                                    }
                                  ]
                                },
                                "kind": "init"
                              },
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "qstring"
                                },
                                "value": {
                                  "type": "ArrayExpression",
                                  "elements": [
                                    {
                                      "type": "ObjectExpression",
                                      "properties": [
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "token"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "string"
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "regex"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "[^\\\\']*(?:\\\\.[^\\\\']*)*'"
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "merge"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": true
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "next"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "start"
                                          },
                                          "kind": "init"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "stringfill"
                                    }
                                  ]
                                },
                                "kind": "init"
                              },
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "qqstring"
                                },
                                "value": {
                                  "type": "ArrayExpression",
                                  "elements": [
                                    {
                                      "type": "ObjectExpression",
                                      "properties": [
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "token"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "string"
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "regex"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "[^\\\\\"]*(?:\\\\.[^\\\\\"]*)*\""
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "merge"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": true
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "next"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "start"
                                          },
                                          "kind": "init"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "stringfill"
                                    }
                                  ]
                                },
                                "kind": "init"
                              },
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "js"
                                },
                                "value": {
                                  "type": "ArrayExpression",
                                  "elements": [
                                    {
                                      "type": "ObjectExpression",
                                      "properties": [
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "token"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "string"
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "merge"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": true
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "regex"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "[^\\\\`]*(?:\\\\.[^\\\\`]*)*`"
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "next"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "start"
                                          },
                                          "kind": "init"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "stringfill"
                                    }
                                  ]
                                },
                                "kind": "init"
                              },
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "heregex"
                                },
                                "value": {
                                  "type": "ArrayExpression",
                                  "elements": [
                                    {
                                      "type": "ObjectExpression",
                                      "properties": [
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "token"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "string.regex"
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "regex"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": ".*?///[imgy]{0,4}"
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "next"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "start"
                                          },
                                          "kind": "init"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ObjectExpression",
                                      "properties": [
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "token"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "comment.regex"
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "regex"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "\\s+(?:#.*)?"
                                          },
                                          "kind": "init"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ObjectExpression",
                                      "properties": [
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "token"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "string.regex"
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "merge"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": true
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "regex"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "\\S+"
                                          },
                                          "kind": "init"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "kind": "init"
                              },
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "comment"
                                },
                                "value": {
                                  "type": "ArrayExpression",
                                  "elements": [
                                    {
                                      "type": "ObjectExpression",
                                      "properties": [
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "token"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "comment"
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "regex"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": ".*?###"
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "next"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "start"
                                          },
                                          "kind": "init"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "ObjectExpression",
                                      "properties": [
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "token"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": "comment"
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "merge"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": true
                                          },
                                          "kind": "init"
                                        },
                                        {
                                          "type": "Property",
                                          "key": {
                                            "type": "Identifier",
                                            "name": "regex"
                                          },
                                          "value": {
                                            "type": "Literal",
                                            "value": ".+"
                                          },
                                          "kind": "init"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "kind": "init"
                              }
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "exports"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "CoffeeHighlightRules"
                      }
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "CoffeeHighlightRules"
                    }
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "ace"
          },
          "property": {
            "type": "Identifier",
            "name": "define"
          }
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "ace/mode/folding/coffee"
          },
          {
            "type": "ArrayExpression",
            "elements": [
              {
                "type": "Literal",
                "value": "require"
              },
              {
                "type": "Literal",
                "value": "exports"
              },
              {
                "type": "Literal",
                "value": "module"
              },
              {
                "type": "Literal",
                "value": "ace/lib/oop"
              },
              {
                "type": "Literal",
                "value": "ace/mode/folding/fold_mode"
              },
              {
                "type": "Literal",
                "value": "ace/range"
              }
            ]
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "require"
              },
              {
                "type": "Identifier",
                "name": "exports"
              },
              {
                "type": "Identifier",
                "name": "module"
              }
            ],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "oop"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "require"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "../../lib/oop"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "BaseFoldMode"
                      },
                      "init": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "require"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "./fold_mode"
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "FoldMode"
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "Range"
                      },
                      "init": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "require"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "../../range"
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "Range"
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "FoldMode"
                      },
                      "init": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "exports"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "FoldMode"
                          }
                        },
                        "right": {
                          "type": "FunctionExpression",
                          "id": null,
                          "params": [],
                          "defaults": [],
                          "body": {
                            "type": "BlockStatement",
                            "body": []
                          },
                          "rest": null,
                          "generator": false,
                          "expression": false
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "oop"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "inherits"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "FoldMode"
                      },
                      {
                        "type": "Identifier",
                        "name": "BaseFoldMode"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "ThisExpression"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "getFoldWidgetRange"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "session"
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "foldStyle"
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "row"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "range"
                                            },
                                            "init": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ThisExpression"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "indentationBlock"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "session"
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "row"
                                                }
                                              ]
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "Identifier",
                                          "name": "range"
                                        },
                                        "consequent": {
                                          "type": "ReturnStatement",
                                          "argument": {
                                            "type": "Identifier",
                                            "name": "range"
                                          }
                                        },
                                        "alternate": null
                                      },
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "re"
                                            },
                                            "init": {
                                              "type": "Literal",
                                              "value": {}
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "line"
                                            },
                                            "init": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "session"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "getLine"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "row"
                                                }
                                              ]
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "startLevel"
                                            },
                                            "init": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "line"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "search"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "re"
                                                }
                                              ]
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "LogicalExpression",
                                          "operator": "||",
                                          "left": {
                                            "type": "BinaryExpression",
                                            "operator": "==",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "startLevel"
                                            },
                                            "right": {
                                              "type": "UnaryExpression",
                                              "operator": "-",
                                              "argument": {
                                                "type": "Literal",
                                                "value": 1
                                              },
                                              "prefix": true
                                            }
                                          },
                                          "right": {
                                            "type": "BinaryExpression",
                                            "operator": "!=",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": true,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "line"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "startLevel"
                                              }
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": "#"
                                            }
                                          }
                                        },
                                        "consequent": {
                                          "type": "ReturnStatement",
                                          "argument": null
                                        },
                                        "alternate": null
                                      },
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "startColumn"
                                            },
                                            "init": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "line"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "length"
                                              }
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "maxRow"
                                            },
                                            "init": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "session"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "getLength"
                                                }
                                              },
                                              "arguments": []
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "startRow"
                                            },
                                            "init": {
                                              "type": "Identifier",
                                              "name": "row"
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "endRow"
                                            },
                                            "init": {
                                              "type": "Identifier",
                                              "name": "row"
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "WhileStatement",
                                        "test": {
                                          "type": "BinaryExpression",
                                          "operator": "<",
                                          "left": {
                                            "type": "UpdateExpression",
                                            "operator": "++",
                                            "argument": {
                                              "type": "Identifier",
                                              "name": "row"
                                            },
                                            "prefix": true
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "maxRow"
                                          }
                                        },
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "line"
                                                },
                                                "right": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "session"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "getLine"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "row"
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            {
                                              "type": "VariableDeclaration",
                                              "declarations": [
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "level"
                                                  },
                                                  "init": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "line"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "search"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Identifier",
                                                        "name": "re"
                                                      }
                                                    ]
                                                  }
                                                }
                                              ],
                                              "kind": "var"
                                            },
                                            {
                                              "type": "IfStatement",
                                              "test": {
                                                "type": "BinaryExpression",
                                                "operator": "==",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "level"
                                                },
                                                "right": {
                                                  "type": "UnaryExpression",
                                                  "operator": "-",
                                                  "argument": {
                                                    "type": "Literal",
                                                    "value": 1
                                                  },
                                                  "prefix": true
                                                }
                                              },
                                              "consequent": {
                                                "type": "ContinueStatement",
                                                "label": null
                                              },
                                              "alternate": null
                                            },
                                            {
                                              "type": "IfStatement",
                                              "test": {
                                                "type": "BinaryExpression",
                                                "operator": "!=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": true,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "line"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "level"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": "#"
                                                }
                                              },
                                              "consequent": {
                                                "type": "BreakStatement",
                                                "label": null
                                              },
                                              "alternate": null
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "endRow"
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "row"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "BinaryExpression",
                                          "operator": ">",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "endRow"
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "startRow"
                                          }
                                        },
                                        "consequent": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "VariableDeclaration",
                                              "declarations": [
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "endColumn"
                                                  },
                                                  "init": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "session"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "getLine"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "endRow"
                                                        }
                                                      ]
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "length"
                                                    }
                                                  }
                                                }
                                              ],
                                              "kind": "var"
                                            },
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "NewExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "Range"
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "startRow"
                                                  },
                                                  {
                                                    "type": "Identifier",
                                                    "name": "startColumn"
                                                  },
                                                  {
                                                    "type": "Identifier",
                                                    "name": "endRow"
                                                  },
                                                  {
                                                    "type": "Identifier",
                                                    "name": "endColumn"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "alternate": null
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "ThisExpression"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "getFoldWidget"
                                  }
                                },
                                "right": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "session"
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "foldStyle"
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "row"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "line"
                                            },
                                            "init": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "session"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "getLine"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "row"
                                                }
                                              ]
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "indent"
                                            },
                                            "init": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "line"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "search"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": {}
                                                }
                                              ]
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "next"
                                            },
                                            "init": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "session"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "getLine"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "BinaryExpression",
                                                  "operator": "+",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "row"
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": 1
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "prev"
                                            },
                                            "init": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "session"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "getLine"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "BinaryExpression",
                                                  "operator": "-",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "row"
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": 1
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "prevIndent"
                                            },
                                            "init": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "prev"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "search"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": {}
                                                }
                                              ]
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "nextIndent"
                                            },
                                            "init": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "search"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": {}
                                                }
                                              ]
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "BinaryExpression",
                                          "operator": "==",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "indent"
                                          },
                                          "right": {
                                            "type": "UnaryExpression",
                                            "operator": "-",
                                            "argument": {
                                              "type": "Literal",
                                              "value": 1
                                            },
                                            "prefix": true
                                          }
                                        },
                                        "consequent": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": true,
                                                  "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "session"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "foldWidgets"
                                                    }
                                                  },
                                                  "property": {
                                                    "type": "BinaryExpression",
                                                    "operator": "-",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "row"
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": 1
                                                    }
                                                  }
                                                },
                                                "right": {
                                                  "type": "ConditionalExpression",
                                                  "test": {
                                                    "type": "LogicalExpression",
                                                    "operator": "&&",
                                                    "left": {
                                                      "type": "BinaryExpression",
                                                      "operator": "!=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "prevIndent"
                                                      },
                                                      "right": {
                                                        "type": "UnaryExpression",
                                                        "operator": "-",
                                                        "argument": {
                                                          "type": "Literal",
                                                          "value": 1
                                                        },
                                                        "prefix": true
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "BinaryExpression",
                                                      "operator": "<",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "prevIndent"
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "nextIndent"
                                                      }
                                                    }
                                                  },
                                                  "consequent": {
                                                    "type": "Literal",
                                                    "value": "start"
                                                  },
                                                  "alternate": {
                                                    "type": "Literal",
                                                    "value": ""
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "Literal",
                                                "value": ""
                                              }
                                            }
                                          ]
                                        },
                                        "alternate": null
                                      },
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "BinaryExpression",
                                          "operator": "==",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "prevIndent"
                                          },
                                          "right": {
                                            "type": "UnaryExpression",
                                            "operator": "-",
                                            "argument": {
                                              "type": "Literal",
                                              "value": 1
                                            },
                                            "prefix": true
                                          }
                                        },
                                        "consequent": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "IfStatement",
                                              "test": {
                                                "type": "LogicalExpression",
                                                "operator": "&&",
                                                "left": {
                                                  "type": "LogicalExpression",
                                                  "operator": "&&",
                                                  "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "==",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "indent"
                                                    },
                                                    "right": {
                                                      "type": "Identifier",
                                                      "name": "nextIndent"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "==",
                                                    "left": {
                                                      "type": "MemberExpression",
                                                      "computed": true,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "line"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "indent"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": "#"
                                                    }
                                                  }
                                                },
                                                "right": {
                                                  "type": "BinaryExpression",
                                                  "operator": "==",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "next"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "indent"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": "#"
                                                  }
                                                }
                                              },
                                              "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "session"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "foldWidgets"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "BinaryExpression",
                                                          "operator": "-",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "row"
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": 1
                                                          }
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": ""
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "session"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "foldWidgets"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "row"
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": 1
                                                          }
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": ""
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "Literal",
                                                      "value": "start"
                                                    }
                                                  }
                                                ]
                                              },
                                              "alternate": null
                                            }
                                          ]
                                        },
                                        "alternate": {
                                          "type": "IfStatement",
                                          "test": {
                                            "type": "LogicalExpression",
                                            "operator": "&&",
                                            "left": {
                                              "type": "LogicalExpression",
                                              "operator": "&&",
                                              "left": {
                                                "type": "BinaryExpression",
                                                "operator": "==",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "prevIndent"
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "indent"
                                                }
                                              },
                                              "right": {
                                                "type": "BinaryExpression",
                                                "operator": "==",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": true,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "line"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "indent"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": "#"
                                                }
                                              }
                                            },
                                            "right": {
                                              "type": "BinaryExpression",
                                              "operator": "==",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "prev"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "indent"
                                                }
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": "#"
                                              }
                                            }
                                          },
                                          "consequent": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "IfStatement",
                                                "test": {
                                                  "type": "BinaryExpression",
                                                  "operator": "==",
                                                  "left": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "session"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "getLine"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "BinaryExpression",
                                                            "operator": "-",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "row"
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": 2
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "search"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Literal",
                                                        "value": {}
                                                      }
                                                    ]
                                                  },
                                                  "right": {
                                                    "type": "UnaryExpression",
                                                    "operator": "-",
                                                    "argument": {
                                                      "type": "Literal",
                                                      "value": 1
                                                    },
                                                    "prefix": true
                                                  }
                                                },
                                                "consequent": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "session"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "foldWidgets"
                                                            }
                                                          },
                                                          "property": {
                                                            "type": "BinaryExpression",
                                                            "operator": "-",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "row"
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": 1
                                                            }
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": "start"
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "session"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "foldWidgets"
                                                            }
                                                          },
                                                          "property": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "row"
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": 1
                                                            }
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": ""
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "ReturnStatement",
                                                      "argument": {
                                                        "type": "Literal",
                                                        "value": ""
                                                      }
                                                    }
                                                  ]
                                                },
                                                "alternate": null
                                              }
                                            ]
                                          },
                                          "alternate": null
                                        }
                                      },
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "LogicalExpression",
                                          "operator": "&&",
                                          "left": {
                                            "type": "BinaryExpression",
                                            "operator": "!=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "prevIndent"
                                            },
                                            "right": {
                                              "type": "UnaryExpression",
                                              "operator": "-",
                                              "argument": {
                                                "type": "Literal",
                                                "value": 1
                                              },
                                              "prefix": true
                                            }
                                          },
                                          "right": {
                                            "type": "BinaryExpression",
                                            "operator": "<",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "prevIndent"
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "indent"
                                            }
                                          }
                                        },
                                        "consequent": {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": true,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "session"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "foldWidgets"
                                                }
                                              },
                                              "property": {
                                                "type": "BinaryExpression",
                                                "operator": "-",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "row"
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": 1
                                                }
                                              }
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": "start"
                                            }
                                          }
                                        },
                                        "alternate": {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": true,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "session"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "foldWidgets"
                                                }
                                              },
                                              "property": {
                                                "type": "BinaryExpression",
                                                "operator": "-",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "row"
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": 1
                                                }
                                              }
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": ""
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "BinaryExpression",
                                          "operator": "<",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "indent"
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "nextIndent"
                                          }
                                        },
                                        "consequent": {
                                          "type": "ReturnStatement",
                                          "argument": {
                                            "type": "Literal",
                                            "value": "start"
                                          }
                                        },
                                        "alternate": {
                                          "type": "ReturnStatement",
                                          "argument": {
                                            "type": "Literal",
                                            "value": ""
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "call"
                      }
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "FoldMode"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "prototype"
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    }
  ]
}
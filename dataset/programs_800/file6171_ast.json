{
  "type": "Program",
  "body": [
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "specsGoogleClosure"
      },
      "params": [
        {
          "type": "Identifier",
          "name": "specs"
        },
        {
          "type": "Identifier",
          "name": "context"
        }
      ],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "FunctionDeclaration",
            "id": {
              "type": "Identifier",
              "name": "makeSlickTestSearch"
            },
            "params": [
              {
                "type": "Identifier",
                "name": "selector"
              },
              {
                "type": "Identifier",
                "name": "count"
              },
              {
                "type": "Identifier",
                "name": "disableQSA"
              },
              {
                "type": "Identifier",
                "name": "rootNode"
              }
            ],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "FunctionExpression",
                    "id": null,
                    "params": [],
                    "defaults": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "context"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "SELECT"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "disableQSA"
                              }
                            },
                            "right": {
                              "type": "UnaryExpression",
                              "operator": "!",
                              "argument": {
                                "type": "UnaryExpression",
                                "operator": "!",
                                "argument": {
                                  "type": "Identifier",
                                  "name": "disableQSA"
                                },
                                "prefix": true
                              },
                              "prefix": true
                            }
                          }
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "value_of"
                                },
                                "arguments": [
                                  {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "context"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "SELECT"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Identifier",
                                          "name": "rootNode"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "selector"
                                        }
                                      ]
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "length"
                                    }
                                  }
                                ]
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "should_be"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "count"
                              }
                            ]
                          }
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "UnaryExpression",
                            "operator": "delete",
                            "argument": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "context"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "SELECT"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "disableQSA"
                              }
                            },
                            "prefix": true
                          }
                        }
                      ]
                    },
                    "rest": null,
                    "generator": false,
                    "expression": false
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          },
          {
            "type": "EmptyStatement"
          },
          {
            "type": "FunctionDeclaration",
            "id": {
              "type": "Identifier",
              "name": "setup_it_should_find"
            },
            "params": [
              {
                "type": "Identifier",
                "name": "specs"
              }
            ],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "FunctionExpression",
                    "id": {
                      "type": "Identifier",
                      "name": "it_should_find"
                    },
                    "params": [
                      {
                        "type": "Identifier",
                        "name": "count"
                      },
                      {
                        "type": "Identifier",
                        "name": "selector"
                      },
                      {
                        "type": "Identifier",
                        "name": "rootNodeId"
                      }
                    ],
                    "defaults": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "VariableDeclaration",
                          "declarations": [
                            {
                              "type": "VariableDeclarator",
                              "id": {
                                "type": "Identifier",
                                "name": "rootNode"
                              },
                              "init": {
                                "type": "ConditionalExpression",
                                "test": {
                                  "type": "Identifier",
                                  "name": "rootNodeId"
                                },
                                "consequent": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "context"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "document"
                                      }
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "getElementById"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "rootNodeId"
                                    }
                                  ]
                                },
                                "alternate": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "context"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "document"
                                  }
                                }
                              }
                            }
                          ],
                          "kind": "var"
                        },
                        {
                          "type": "IfStatement",
                          "test": {
                            "type": "LogicalExpression",
                            "operator": "&&",
                            "left": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "global"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "document"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "querySelectorAll"
                              }
                            },
                            "right": {
                              "type": "UnaryExpression",
                              "operator": "!",
                              "argument": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "global"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "cannotDisableQSA"
                                }
                              },
                              "prefix": true
                            }
                          },
                          "consequent": {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                  "type": "Identifier",
                                  "name": "specs"
                                },
                                "property": {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                      "type": "BinaryExpression",
                                      "operator": "+",
                                      "left": {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                          "type": "Literal",
                                          "value": "should find "
                                        },
                                        "right": {
                                          "type": "Identifier",
                                          "name": "count"
                                        }
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": " `"
                                      }
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "selector"
                                    }
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": "` with    QSA"
                                  }
                                }
                              },
                              "right": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "makeSlickTestSearch"
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "selector"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "count"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": false
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "rootNode"
                                  }
                                ]
                              }
                            }
                          },
                          "alternate": null
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                              "type": "MemberExpression",
                              "computed": true,
                              "object": {
                                "type": "Identifier",
                                "name": "specs"
                              },
                              "property": {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                      "type": "BinaryExpression",
                                      "operator": "+",
                                      "left": {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                          "type": "Literal",
                                          "value": "should find "
                                        },
                                        "right": {
                                          "type": "Identifier",
                                          "name": "count"
                                        }
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": " `"
                                      }
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "selector"
                                    }
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": "` "
                                  }
                                },
                                "right": {
                                  "type": "ConditionalExpression",
                                  "test": {
                                    "type": "UnaryExpression",
                                    "operator": "!",
                                    "argument": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "global"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "cannotDisableQSA"
                                      }
                                    },
                                    "prefix": true
                                  },
                                  "consequent": {
                                    "type": "Literal",
                                    "value": "` without QSA"
                                  },
                                  "alternate": {
                                    "type": "Literal",
                                    "value": ""
                                  }
                                }
                              }
                            },
                            "right": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "makeSlickTestSearch"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "selector"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "count"
                                },
                                {
                                  "type": "Literal",
                                  "value": true
                                },
                                {
                                  "type": "Identifier",
                                  "name": "rootNode"
                                }
                              ]
                            }
                          }
                        }
                      ]
                    },
                    "rest": null,
                    "generator": false,
                    "expression": false
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          },
          {
            "type": "EmptyStatement"
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "Describe"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "testBasicSelectors"
                },
                {
                  "type": "FunctionExpression",
                  "id": null,
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "specs"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "it_should_find"
                            },
                            "init": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "setup_it_should_find"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "specs"
                                }
                              ]
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 4
                            },
                            {
                              "type": "Literal",
                              "value": "h3"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 1
                            },
                            {
                              "type": "Literal",
                              "value": "h1:first-child"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 2
                            },
                            {
                              "type": "Literal",
                              "value": "h3:first-child"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 1
                            },
                            {
                              "type": "Literal",
                              "value": "#t"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 1
                            },
                            {
                              "type": "Literal",
                              "value": "#bug"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 4
                            },
                            {
                              "type": "Literal",
                              "value": "#t h3"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 1
                            },
                            {
                              "type": "Literal",
                              "value": "div#t"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 4
                            },
                            {
                              "type": "Literal",
                              "value": "div#t h3"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 0
                            },
                            {
                              "type": "Literal",
                              "value": "span#t"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 1
                            },
                            {
                              "type": "Literal",
                              "value": "#t div > h3"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 2
                            },
                            {
                              "type": "Literal",
                              "value": ".foo"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 1
                            },
                            {
                              "type": "Literal",
                              "value": ".foo.bar"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 2
                            },
                            {
                              "type": "Literal",
                              "value": ".baz"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 3
                            },
                            {
                              "type": "Literal",
                              "value": "#t > h3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "Describe"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "testSyntacticEquivalents"
                },
                {
                  "type": "FunctionExpression",
                  "id": null,
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "specs"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "it_should_find"
                            },
                            "init": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "setup_it_should_find"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "specs"
                                }
                              ]
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 12
                            },
                            {
                              "type": "Literal",
                              "value": "#t > *"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 12
                            },
                            {
                              "type": "Literal",
                              "value": "#t >"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 3
                            },
                            {
                              "type": "Literal",
                              "value": ".foo > *"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 3
                            },
                            {
                              "type": "Literal",
                              "value": ".foo >"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "Describe"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "testWithARootById"
                },
                {
                  "type": "FunctionExpression",
                  "id": null,
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "specs"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "it_should_find"
                            },
                            "init": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "setup_it_should_find"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "specs"
                                }
                              ]
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 3
                            },
                            {
                              "type": "Literal",
                              "value": "> *"
                            },
                            {
                              "type": "Literal",
                              "value": "container"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 3
                            },
                            {
                              "type": "Literal",
                              "value": "> h3"
                            },
                            {
                              "type": "Literal",
                              "value": "t"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "Describe"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "testCompoundQueries"
                },
                {
                  "type": "FunctionExpression",
                  "id": null,
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "specs"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "it_should_find"
                            },
                            "init": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "setup_it_should_find"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "specs"
                                }
                              ]
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 2
                            },
                            {
                              "type": "Literal",
                              "value": ".foo, .bar"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 2
                            },
                            {
                              "type": "Literal",
                              "value": ".foo,.bar"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "Describe"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "testMultipleClassAttributes"
                },
                {
                  "type": "FunctionExpression",
                  "id": null,
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "specs"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "it_should_find"
                            },
                            "init": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "setup_it_should_find"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "specs"
                                }
                              ]
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 1
                            },
                            {
                              "type": "Literal",
                              "value": ".foo.bar"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 2
                            },
                            {
                              "type": "Literal",
                              "value": ".foo"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 2
                            },
                            {
                              "type": "Literal",
                              "value": ".baz"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "Describe"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "testCaseSensitivity"
                },
                {
                  "type": "FunctionExpression",
                  "id": null,
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "specs"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "it_should_find"
                            },
                            "init": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "setup_it_should_find"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "specs"
                                }
                              ]
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 1
                            },
                            {
                              "type": "Literal",
                              "value": "span.baz"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 1
                            },
                            {
                              "type": "Literal",
                              "value": "sPaN.baz"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 1
                            },
                            {
                              "type": "Literal",
                              "value": "SPAN.baz"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 1
                            },
                            {
                              "type": "Literal",
                              "value": "[class = \"foo bar\"]"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 2
                            },
                            {
                              "type": "Literal",
                              "value": "[foo~=\"bar\"]"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 2
                            },
                            {
                              "type": "Literal",
                              "value": "[ foo ~= \"bar\" ]"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "Describe"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "testAttributes"
                },
                {
                  "type": "FunctionExpression",
                  "id": null,
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "specs"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "it_should_find"
                            },
                            "init": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "setup_it_should_find"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "specs"
                                }
                              ]
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 3
                            },
                            {
                              "type": "Literal",
                              "value": "[foo]"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 1
                            },
                            {
                              "type": "Literal",
                              "value": "[foo$=\"thud\"]"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 1
                            },
                            {
                              "type": "Literal",
                              "value": "[foo$=thud]"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 1
                            },
                            {
                              "type": "Literal",
                              "value": "[foo$=\"thudish\"]"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 1
                            },
                            {
                              "type": "Literal",
                              "value": "#t [foo$=thud]"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 1
                            },
                            {
                              "type": "Literal",
                              "value": "#t [ title $= thud ]"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 0
                            },
                            {
                              "type": "Literal",
                              "value": "#t span[ title $= thud ]"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 2
                            },
                            {
                              "type": "Literal",
                              "value": "[foo|=\"bar\"]"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 1
                            },
                            {
                              "type": "Literal",
                              "value": "[foo|=\"bar-baz\"]"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 0
                            },
                            {
                              "type": "Literal",
                              "value": "[foo|=\"baz\"]"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "Describe"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "testDescendantSelectors"
                },
                {
                  "type": "FunctionExpression",
                  "id": null,
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "specs"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "it_should_find"
                            },
                            "init": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "setup_it_should_find"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "specs"
                                }
                              ]
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 3
                            },
                            {
                              "type": "Literal",
                              "value": ">"
                            },
                            {
                              "type": "Literal",
                              "value": "container"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 3
                            },
                            {
                              "type": "Literal",
                              "value": "> *"
                            },
                            {
                              "type": "Literal",
                              "value": "container"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 2
                            },
                            {
                              "type": "Literal",
                              "value": "> [qux]"
                            },
                            {
                              "type": "Literal",
                              "value": "container"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 3
                            },
                            {
                              "type": "Literal",
                              "value": ">"
                            },
                            {
                              "type": "Literal",
                              "value": "container"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 3
                            },
                            {
                              "type": "Literal",
                              "value": "> *"
                            },
                            {
                              "type": "Literal",
                              "value": "container"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "Describe"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "testSiblingSelectors"
                },
                {
                  "type": "FunctionExpression",
                  "id": null,
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "specs"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "it_should_find"
                            },
                            "init": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "setup_it_should_find"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "specs"
                                }
                              ]
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 1
                            },
                            {
                              "type": "Literal",
                              "value": "+"
                            },
                            {
                              "type": "Literal",
                              "value": "container"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 3
                            },
                            {
                              "type": "Literal",
                              "value": "~"
                            },
                            {
                              "type": "Literal",
                              "value": "container"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 1
                            },
                            {
                              "type": "Literal",
                              "value": ".foo + span"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 4
                            },
                            {
                              "type": "Literal",
                              "value": ".foo ~ span"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 1
                            },
                            {
                              "type": "Literal",
                              "value": "#foo ~ *"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 1
                            },
                            {
                              "type": "Literal",
                              "value": "#foo ~"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "Describe"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "testSubSelectors"
                },
                {
                  "type": "FunctionExpression",
                  "id": null,
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "specs"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "it_should_find"
                            },
                            "init": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "setup_it_should_find"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "specs"
                                }
                              ]
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 1
                            },
                            {
                              "type": "Literal",
                              "value": "#t span.foo:not(span:first-child)"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 1
                            },
                            {
                              "type": "Literal",
                              "value": "#t span.foo:not(:first-child)"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "Describe"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "testNthChild"
                },
                {
                  "type": "FunctionExpression",
                  "id": null,
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "specs"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "it_should_find"
                            },
                            "init": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "setup_it_should_find"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "specs"
                                }
                              ]
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 2
                            },
                            {
                              "type": "Literal",
                              "value": "#t > h3:nth-child(odd)"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 3
                            },
                            {
                              "type": "Literal",
                              "value": "#t h3:nth-child(odd)"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 3
                            },
                            {
                              "type": "Literal",
                              "value": "#t h3:nth-child(2n+1)"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 1
                            },
                            {
                              "type": "Literal",
                              "value": "#t h3:nth-child(even)"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 1
                            },
                            {
                              "type": "Literal",
                              "value": "#t h3:nth-child(2n)"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 1
                            },
                            {
                              "type": "Literal",
                              "value": "#t h3:nth-child(2n+3)"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 2
                            },
                            {
                              "type": "Literal",
                              "value": "#t h3:nth-child(1)"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 1
                            },
                            {
                              "type": "Literal",
                              "value": "#t > h3:nth-child(1)"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 3
                            },
                            {
                              "type": "Literal",
                              "value": "#t :nth-child(3)"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 0
                            },
                            {
                              "type": "Literal",
                              "value": "#t > div:nth-child(1)"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 7
                            },
                            {
                              "type": "Literal",
                              "value": "#t span"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 3
                            },
                            {
                              "type": "Literal",
                              "value": "#t > *:nth-child(n+10)"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 1
                            },
                            {
                              "type": "Literal",
                              "value": "#t > *:nth-child(n+12)"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 10
                            },
                            {
                              "type": "Literal",
                              "value": "#t > *:nth-child(-n+10)"
                            }
                          ]
                        }
                      },
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "UnaryExpression",
                          "operator": "!",
                          "argument": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "global"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "disableNegNth"
                            }
                          },
                          "prefix": true
                        },
                        "consequent": {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "it_should_find"
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": 5
                              },
                              {
                                "type": "Literal",
                                "value": "#t > *:nth-child(-2n+10)"
                              }
                            ]
                          }
                        },
                        "alternate": null
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 6
                            },
                            {
                              "type": "Literal",
                              "value": "#t > *:nth-child(2n+2)"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 5
                            },
                            {
                              "type": "Literal",
                              "value": "#t > *:nth-child(2n+4)"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 5
                            },
                            {
                              "type": "Literal",
                              "value": "#t > *:nth-child(2n+4)"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 12
                            },
                            {
                              "type": "Literal",
                              "value": "#t > *:nth-child(n-5)"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 6
                            },
                            {
                              "type": "Literal",
                              "value": "#t > *:nth-child(2n-5)"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "Describe"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "testEmptyPseudoSelector"
                },
                {
                  "type": "FunctionExpression",
                  "id": null,
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "specs"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "it_should_find"
                            },
                            "init": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "setup_it_should_find"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "specs"
                                }
                              ]
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 4
                            },
                            {
                              "type": "Literal",
                              "value": "#t > span:empty"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 6
                            },
                            {
                              "type": "Literal",
                              "value": "#t span:empty"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 0
                            },
                            {
                              "type": "Literal",
                              "value": "h3 span:empty"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 1
                            },
                            {
                              "type": "Literal",
                              "value": "h3 :not(:empty)"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "Describe"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "testIdsWithColons"
                },
                {
                  "type": "FunctionExpression",
                  "id": null,
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "specs"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "it_should_find"
                            },
                            "init": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "setup_it_should_find"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "specs"
                                }
                              ]
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 1
                            },
                            {
                              "type": "Literal",
                              "value": "[id = 'silly:id::with:colons']"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "it_should_find"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": 1
                            },
                            {
                              "type": "Literal",
                              "value": "#silly\\:id\\:\\:with\\:colons"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "Describe"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "testOrder"
                },
                {
                  "type": "FunctionExpression",
                  "id": null,
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "specs"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                              "type": "Identifier",
                              "name": "it"
                            },
                            "property": {
                              "type": "Literal",
                              "value": "should return elements in source order"
                            }
                          },
                          "right": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "VariableDeclaration",
                                  "declarations": [
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "it_should_find"
                                      },
                                      "init": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "Identifier",
                                          "name": "setup_it_should_find"
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "specs"
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "kind": "var"
                                },
                                {
                                  "type": "VariableDeclaration",
                                  "declarations": [
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "els"
                                      },
                                      "init": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "context"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "SELECT"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "context"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "document"
                                            }
                                          },
                                          {
                                            "type": "Literal",
                                            "value": ".myupperclass .myclass input"
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "kind": "var"
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "Identifier",
                                          "name": "value_of"
                                        },
                                        "arguments": [
                                          {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": true,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "els"
                                              },
                                              "property": {
                                                "type": "Literal",
                                                "value": 0
                                              }
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "id"
                                            }
                                          }
                                        ]
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "should_be"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "value": "myid1"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "Identifier",
                                          "name": "value_of"
                                        },
                                        "arguments": [
                                          {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": true,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "els"
                                              },
                                              "property": {
                                                "type": "Literal",
                                                "value": 1
                                              }
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "id"
                                            }
                                          }
                                        ]
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "should_be"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "value": "myid2"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          }
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "Describe"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "testCorrectDocumentInFrame"
                },
                {
                  "type": "FunctionExpression",
                  "id": null,
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "specs"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                              "type": "Identifier",
                              "name": "it"
                            },
                            "property": {
                              "type": "Literal",
                              "value": "should testCorrectDocumentInFrame"
                            }
                          },
                          "right": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "VariableDeclaration",
                                  "declarations": [
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "it_should_find"
                                      },
                                      "init": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "Identifier",
                                          "name": "setup_it_should_find"
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "specs"
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "kind": "var"
                                },
                                {
                                  "type": "VariableDeclaration",
                                  "declarations": [
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "frameDocument"
                                      },
                                      "init": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "MemberExpression",
                                          "computed": true,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "context"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "window"
                                              }
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "frames"
                                            }
                                          },
                                          "property": {
                                            "type": "Literal",
                                            "value": "ifr"
                                          }
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "document"
                                        }
                                      }
                                    }
                                  ],
                                  "kind": "var"
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "frameDocument"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "body"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "innerHTML"
                                      }
                                    },
                                    "right": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "context"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "document"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "getElementById"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Literal",
                                            "value": "iframe-test"
                                          }
                                        ]
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "innerHTML"
                                      }
                                    }
                                  }
                                },
                                {
                                  "type": "VariableDeclaration",
                                  "declarations": [
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "els"
                                      },
                                      "init": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "context"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "SELECT"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "context"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "document"
                                            }
                                          },
                                          {
                                            "type": "Literal",
                                            "value": "#if1 .if2 div"
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "kind": "var"
                                },
                                {
                                  "type": "VariableDeclaration",
                                  "declarations": [
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "frameEls"
                                      },
                                      "init": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "context"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "SELECT"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "frameDocument"
                                          },
                                          {
                                            "type": "Literal",
                                            "value": "#if1 .if2 div"
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "kind": "var"
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "Identifier",
                                          "name": "value_of"
                                        },
                                        "arguments": [
                                          {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "frameEls"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "length"
                                            }
                                          }
                                        ]
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "should_be"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "els"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "length"
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "Identifier",
                                          "name": "value_of"
                                        },
                                        "arguments": [
                                          {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "frameEls"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "length"
                                            }
                                          }
                                        ]
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "should_be"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "value": 1
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "Identifier",
                                          "name": "value_of"
                                        },
                                        "arguments": [
                                          {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "frameDocument"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "getElementById"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "if3"
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "should_not_be"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "context"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "document"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "getElementById"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Literal",
                                            "value": "if3"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          }
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                }
              ]
            }
          }
        ]
      },
      "rest": null,
      "generator": false,
      "expression": false
    },
    {
      "type": "EmptyStatement"
    }
  ]
}
{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "parser"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "FunctionExpression",
              "id": null,
              "params": [],
              "defaults": [],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "VariableDeclaration",
                    "declarations": [
                      {
                        "type": "VariableDeclarator",
                        "id": {
                          "type": "Identifier",
                          "name": "o"
                        },
                        "init": {
                          "type": "FunctionExpression",
                          "id": null,
                          "params": [
                            {
                              "type": "Identifier",
                              "name": "k"
                            },
                            {
                              "type": "Identifier",
                              "name": "v"
                            },
                            {
                              "type": "Identifier",
                              "name": "o"
                            },
                            {
                              "type": "Identifier",
                              "name": "l"
                            }
                          ],
                          "defaults": [],
                          "body": {
                            "type": "BlockStatement",
                            "body": [
                              {
                                "type": "ForStatement",
                                "init": {
                                  "type": "SequenceExpression",
                                  "expressions": [
                                    {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "o"
                                      },
                                      "right": {
                                        "type": "LogicalExpression",
                                        "operator": "||",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "o"
                                        },
                                        "right": {
                                          "type": "ObjectExpression",
                                          "properties": []
                                        }
                                      }
                                    },
                                    {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "l"
                                      },
                                      "right": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "k"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "length"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "test": {
                                  "type": "UpdateExpression",
                                  "operator": "--",
                                  "argument": {
                                    "type": "Identifier",
                                    "name": "l"
                                  },
                                  "prefix": false
                                },
                                "update": {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "o"
                                    },
                                    "property": {
                                      "type": "MemberExpression",
                                      "computed": true,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "k"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "l"
                                      }
                                    }
                                  },
                                  "right": {
                                    "type": "Identifier",
                                    "name": "v"
                                  }
                                },
                                "body": {
                                  "type": "EmptyStatement"
                                }
                              },
                              {
                                "type": "ReturnStatement",
                                "argument": {
                                  "type": "Identifier",
                                  "name": "o"
                                }
                              }
                            ]
                          },
                          "rest": null,
                          "generator": false,
                          "expression": false
                        }
                      },
                      {
                        "type": "VariableDeclarator",
                        "id": {
                          "type": "Identifier",
                          "name": "$V0"
                        },
                        "init": {
                          "type": "ArrayExpression",
                          "elements": [
                            {
                              "type": "Literal",
                              "value": 1
                            },
                            {
                              "type": "Literal",
                              "value": 11
                            }
                          ]
                        }
                      },
                      {
                        "type": "VariableDeclarator",
                        "id": {
                          "type": "Identifier",
                          "name": "$V1"
                        },
                        "init": {
                          "type": "ArrayExpression",
                          "elements": [
                            {
                              "type": "Literal",
                              "value": 1
                            },
                            {
                              "type": "Literal",
                              "value": 12
                            }
                          ]
                        }
                      },
                      {
                        "type": "VariableDeclarator",
                        "id": {
                          "type": "Identifier",
                          "name": "$V2"
                        },
                        "init": {
                          "type": "ArrayExpression",
                          "elements": [
                            {
                              "type": "Literal",
                              "value": 1
                            },
                            {
                              "type": "Literal",
                              "value": 13
                            }
                          ]
                        }
                      },
                      {
                        "type": "VariableDeclarator",
                        "id": {
                          "type": "Identifier",
                          "name": "$V3"
                        },
                        "init": {
                          "type": "ArrayExpression",
                          "elements": [
                            {
                              "type": "Literal",
                              "value": 1
                            },
                            {
                              "type": "Literal",
                              "value": 18
                            }
                          ]
                        }
                      },
                      {
                        "type": "VariableDeclarator",
                        "id": {
                          "type": "Identifier",
                          "name": "$V4"
                        },
                        "init": {
                          "type": "ArrayExpression",
                          "elements": [
                            {
                              "type": "Literal",
                              "value": 1
                            },
                            {
                              "type": "Literal",
                              "value": 17
                            }
                          ]
                        }
                      },
                      {
                        "type": "VariableDeclarator",
                        "id": {
                          "type": "Identifier",
                          "name": "$V5"
                        },
                        "init": {
                          "type": "ArrayExpression",
                          "elements": [
                            {
                              "type": "Literal",
                              "value": 1
                            },
                            {
                              "type": "Literal",
                              "value": 14
                            }
                          ]
                        }
                      },
                      {
                        "type": "VariableDeclarator",
                        "id": {
                          "type": "Identifier",
                          "name": "$V6"
                        },
                        "init": {
                          "type": "ArrayExpression",
                          "elements": [
                            {
                              "type": "Literal",
                              "value": 1
                            },
                            {
                              "type": "Literal",
                              "value": 15
                            }
                          ]
                        }
                      },
                      {
                        "type": "VariableDeclarator",
                        "id": {
                          "type": "Identifier",
                          "name": "$V7"
                        },
                        "init": {
                          "type": "ArrayExpression",
                          "elements": [
                            {
                              "type": "Literal",
                              "value": 1
                            },
                            {
                              "type": "Literal",
                              "value": 19
                            }
                          ]
                        }
                      },
                      {
                        "type": "VariableDeclarator",
                        "id": {
                          "type": "Identifier",
                          "name": "$V8"
                        },
                        "init": {
                          "type": "ArrayExpression",
                          "elements": [
                            {
                              "type": "Literal",
                              "value": 1
                            },
                            {
                              "type": "Literal",
                              "value": 20
                            }
                          ]
                        }
                      },
                      {
                        "type": "VariableDeclarator",
                        "id": {
                          "type": "Identifier",
                          "name": "$V9"
                        },
                        "init": {
                          "type": "ArrayExpression",
                          "elements": [
                            {
                              "type": "Literal",
                              "value": 1
                            },
                            {
                              "type": "Literal",
                              "value": 21
                            }
                          ]
                        }
                      },
                      {
                        "type": "VariableDeclarator",
                        "id": {
                          "type": "Identifier",
                          "name": "$Va"
                        },
                        "init": {
                          "type": "ArrayExpression",
                          "elements": [
                            {
                              "type": "Literal",
                              "value": 5
                            },
                            {
                              "type": "Literal",
                              "value": 14
                            },
                            {
                              "type": "Literal",
                              "value": 15
                            },
                            {
                              "type": "Literal",
                              "value": 16
                            },
                            {
                              "type": "Literal",
                              "value": 17
                            },
                            {
                              "type": "Literal",
                              "value": 20
                            },
                            {
                              "type": "Literal",
                              "value": 21
                            },
                            {
                              "type": "Literal",
                              "value": 22
                            },
                            {
                              "type": "Literal",
                              "value": 23
                            },
                            {
                              "type": "Literal",
                              "value": 27
                            },
                            {
                              "type": "Literal",
                              "value": 28
                            },
                            {
                              "type": "Literal",
                              "value": 29
                            },
                            {
                              "type": "Literal",
                              "value": 32
                            },
                            {
                              "type": "Literal",
                              "value": 33
                            },
                            {
                              "type": "Literal",
                              "value": 34
                            }
                          ]
                        }
                      },
                      {
                        "type": "VariableDeclarator",
                        "id": {
                          "type": "Identifier",
                          "name": "$Vb"
                        },
                        "init": {
                          "type": "ArrayExpression",
                          "elements": [
                            {
                              "type": "Literal",
                              "value": 2
                            },
                            {
                              "type": "Literal",
                              "value": 18
                            }
                          ]
                        }
                      },
                      {
                        "type": "VariableDeclarator",
                        "id": {
                          "type": "Identifier",
                          "name": "$Vc"
                        },
                        "init": {
                          "type": "ArrayExpression",
                          "elements": [
                            {
                              "type": "Literal",
                              "value": 1
                            },
                            {
                              "type": "Literal",
                              "value": 31
                            }
                          ]
                        }
                      },
                      {
                        "type": "VariableDeclarator",
                        "id": {
                          "type": "Identifier",
                          "name": "$Vd"
                        },
                        "init": {
                          "type": "ArrayExpression",
                          "elements": [
                            {
                              "type": "Literal",
                              "value": 2
                            },
                            {
                              "type": "Literal",
                              "value": 25
                            }
                          ]
                        }
                      },
                      {
                        "type": "VariableDeclarator",
                        "id": {
                          "type": "Identifier",
                          "name": "$Ve"
                        },
                        "init": {
                          "type": "ArrayExpression",
                          "elements": [
                            {
                              "type": "Literal",
                              "value": 20
                            },
                            {
                              "type": "Literal",
                              "value": 29
                            }
                          ]
                        }
                      },
                      {
                        "type": "VariableDeclarator",
                        "id": {
                          "type": "Identifier",
                          "name": "$Vf"
                        },
                        "init": {
                          "type": "ArrayExpression",
                          "elements": [
                            {
                              "type": "Literal",
                              "value": 1
                            },
                            {
                              "type": "Literal",
                              "value": 44
                            }
                          ]
                        }
                      },
                      {
                        "type": "VariableDeclarator",
                        "id": {
                          "type": "Identifier",
                          "name": "$Vg"
                        },
                        "init": {
                          "type": "ArrayExpression",
                          "elements": [
                            {
                              "type": "Literal",
                              "value": 2
                            },
                            {
                              "type": "Literal",
                              "value": 29
                            }
                          ]
                        }
                      }
                    ],
                    "kind": "var"
                  },
                  {
                    "type": "VariableDeclaration",
                    "declarations": [
                      {
                        "type": "VariableDeclarator",
                        "id": {
                          "type": "Identifier",
                          "name": "parser"
                        },
                        "init": {
                          "type": "ObjectExpression",
                          "properties": [
                            {
                              "type": "Property",
                              "key": {
                                "type": "Identifier",
                                "name": "trace"
                              },
                              "value": {
                                "type": "FunctionExpression",
                                "id": {
                                  "type": "Identifier",
                                  "name": "trace"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                  "type": "BlockStatement",
                                  "body": []
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                              },
                              "kind": "init"
                            },
                            {
                              "type": "Property",
                              "key": {
                                "type": "Identifier",
                                "name": "yy"
                              },
                              "value": {
                                "type": "ObjectExpression",
                                "properties": []
                              },
                              "kind": "init"
                            },
                            {
                              "type": "Property",
                              "key": {
                                "type": "Identifier",
                                "name": "symbols_"
                              },
                              "value": {
                                "type": "ObjectExpression",
                                "properties": [
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "error"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": 2
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "program"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": 3
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "exp"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": 4
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "EOF"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": 5
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "var_exp"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": 6
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "intlit_exp"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": 7
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "reallit_exp"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": 8
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "fn_exp"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": 9
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "app_exp"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": 10
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "prim_app_exp"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": 11
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "sub_exp"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": 12
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "gt1_exp"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": 13
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "VAR"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": 14
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "INT"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": 15
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "REAL"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": 16
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "GT1"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": 17
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "LBRACKET"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": 18
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "args"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": 19
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "RBRACKET"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": 20
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "SUB"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": 21
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "FROM"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": 22
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "FN"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": 23
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "formals"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": 24
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "THATRETURNS"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": 25
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "moreformals"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": 26
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "COMMA"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": 27
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "LPAREN"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": 28
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "RPAREN"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": 29
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "prim_op"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": 30
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "prim_args"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": 31
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "PLUS"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": 32
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "TIMES"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": 33
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "ADD1"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": 34
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "more_prim_args"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": 35
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "$accept"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": 0
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": "$end"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": 1
                                    },
                                    "kind": "init"
                                  }
                                ]
                              },
                              "kind": "init"
                            },
                            {
                              "type": "Property",
                              "key": {
                                "type": "Identifier",
                                "name": "terminals_"
                              },
                              "value": {
                                "type": "ObjectExpression",
                                "properties": [
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": 2
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": "error"
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": 5
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": "EOF"
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": 14
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": "VAR"
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": 15
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": "INT"
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": 16
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": "REAL"
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": 17
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": "GT1"
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": 18
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": "LBRACKET"
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": 20
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": "RBRACKET"
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": 21
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": "SUB"
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": 22
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": "FROM"
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": 23
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": "FN"
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": 25
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": "THATRETURNS"
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": 27
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": "COMMA"
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": 28
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": "LPAREN"
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": 29
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": "RPAREN"
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": 32
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": "PLUS"
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": 33
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": "TIMES"
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": 34
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": "ADD1"
                                    },
                                    "kind": "init"
                                  }
                                ]
                              },
                              "kind": "init"
                            },
                            {
                              "type": "Property",
                              "key": {
                                "type": "Identifier",
                                "name": "productions_"
                              },
                              "value": {
                                "type": "ArrayExpression",
                                "elements": [
                                  {
                                    "type": "Literal",
                                    "value": 0
                                  },
                                  {
                                    "type": "ArrayExpression",
                                    "elements": [
                                      {
                                        "type": "Literal",
                                        "value": 3
                                      },
                                      {
                                        "type": "Literal",
                                        "value": 2
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ArrayExpression",
                                    "elements": [
                                      {
                                        "type": "Literal",
                                        "value": 4
                                      },
                                      {
                                        "type": "Literal",
                                        "value": 1
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ArrayExpression",
                                    "elements": [
                                      {
                                        "type": "Literal",
                                        "value": 4
                                      },
                                      {
                                        "type": "Literal",
                                        "value": 1
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ArrayExpression",
                                    "elements": [
                                      {
                                        "type": "Literal",
                                        "value": 4
                                      },
                                      {
                                        "type": "Literal",
                                        "value": 1
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ArrayExpression",
                                    "elements": [
                                      {
                                        "type": "Literal",
                                        "value": 4
                                      },
                                      {
                                        "type": "Literal",
                                        "value": 1
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ArrayExpression",
                                    "elements": [
                                      {
                                        "type": "Literal",
                                        "value": 4
                                      },
                                      {
                                        "type": "Literal",
                                        "value": 1
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ArrayExpression",
                                    "elements": [
                                      {
                                        "type": "Literal",
                                        "value": 4
                                      },
                                      {
                                        "type": "Literal",
                                        "value": 1
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ArrayExpression",
                                    "elements": [
                                      {
                                        "type": "Literal",
                                        "value": 4
                                      },
                                      {
                                        "type": "Literal",
                                        "value": 1
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ArrayExpression",
                                    "elements": [
                                      {
                                        "type": "Literal",
                                        "value": 4
                                      },
                                      {
                                        "type": "Literal",
                                        "value": 1
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ArrayExpression",
                                    "elements": [
                                      {
                                        "type": "Literal",
                                        "value": 6
                                      },
                                      {
                                        "type": "Literal",
                                        "value": 1
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ArrayExpression",
                                    "elements": [
                                      {
                                        "type": "Literal",
                                        "value": 7
                                      },
                                      {
                                        "type": "Literal",
                                        "value": 1
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ArrayExpression",
                                    "elements": [
                                      {
                                        "type": "Literal",
                                        "value": 8
                                      },
                                      {
                                        "type": "Literal",
                                        "value": 1
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ArrayExpression",
                                    "elements": [
                                      {
                                        "type": "Literal",
                                        "value": 13
                                      },
                                      {
                                        "type": "Literal",
                                        "value": 4
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ArrayExpression",
                                    "elements": [
                                      {
                                        "type": "Literal",
                                        "value": 12
                                      },
                                      {
                                        "type": "Literal",
                                        "value": 4
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ArrayExpression",
                                    "elements": [
                                      {
                                        "type": "Literal",
                                        "value": 9
                                      },
                                      {
                                        "type": "Literal",
                                        "value": 4
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ArrayExpression",
                                    "elements": [
                                      {
                                        "type": "Literal",
                                        "value": 24
                                      },
                                      {
                                        "type": "Literal",
                                        "value": 0
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ArrayExpression",
                                    "elements": [
                                      {
                                        "type": "Literal",
                                        "value": 24
                                      },
                                      {
                                        "type": "Literal",
                                        "value": 2
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ArrayExpression",
                                    "elements": [
                                      {
                                        "type": "Literal",
                                        "value": 26
                                      },
                                      {
                                        "type": "Literal",
                                        "value": 0
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ArrayExpression",
                                    "elements": [
                                      {
                                        "type": "Literal",
                                        "value": 26
                                      },
                                      {
                                        "type": "Literal",
                                        "value": 3
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ArrayExpression",
                                    "elements": [
                                      {
                                        "type": "Literal",
                                        "value": 10
                                      },
                                      {
                                        "type": "Literal",
                                        "value": 4
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ArrayExpression",
                                    "elements": [
                                      {
                                        "type": "Literal",
                                        "value": 11
                                      },
                                      {
                                        "type": "Literal",
                                        "value": 4
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ArrayExpression",
                                    "elements": [
                                      {
                                        "type": "Literal",
                                        "value": 30
                                      },
                                      {
                                        "type": "Literal",
                                        "value": 1
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ArrayExpression",
                                    "elements": [
                                      {
                                        "type": "Literal",
                                        "value": 30
                                      },
                                      {
                                        "type": "Literal",
                                        "value": 1
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ArrayExpression",
                                    "elements": [
                                      {
                                        "type": "Literal",
                                        "value": 30
                                      },
                                      {
                                        "type": "Literal",
                                        "value": 1
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ArrayExpression",
                                    "elements": [
                                      {
                                        "type": "Literal",
                                        "value": 19
                                      },
                                      {
                                        "type": "Literal",
                                        "value": 0
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ArrayExpression",
                                    "elements": [
                                      {
                                        "type": "Literal",
                                        "value": 19
                                      },
                                      {
                                        "type": "Literal",
                                        "value": 2
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ArrayExpression",
                                    "elements": [
                                      {
                                        "type": "Literal",
                                        "value": 31
                                      },
                                      {
                                        "type": "Literal",
                                        "value": 0
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ArrayExpression",
                                    "elements": [
                                      {
                                        "type": "Literal",
                                        "value": 31
                                      },
                                      {
                                        "type": "Literal",
                                        "value": 2
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ArrayExpression",
                                    "elements": [
                                      {
                                        "type": "Literal",
                                        "value": 35
                                      },
                                      {
                                        "type": "Literal",
                                        "value": 0
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ArrayExpression",
                                    "elements": [
                                      {
                                        "type": "Literal",
                                        "value": 35
                                      },
                                      {
                                        "type": "Literal",
                                        "value": 3
                                      }
                                    ]
                                  }
                                ]
                              },
                              "kind": "init"
                            },
                            {
                              "type": "Property",
                              "key": {
                                "type": "Identifier",
                                "name": "performAction"
                              },
                              "value": {
                                "type": "FunctionExpression",
                                "id": {
                                  "type": "Identifier",
                                  "name": "anonymous"
                                },
                                "params": [
                                  {
                                    "type": "Identifier",
                                    "name": "yytext"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "yyleng"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "yylineno"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "yy"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "yystate"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "$$"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "_$"
                                  }
                                ],
                                "defaults": [],
                                "body": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "VariableDeclaration",
                                      "declarations": [
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "$0"
                                          },
                                          "init": {
                                            "type": "BinaryExpression",
                                            "operator": "-",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "$$"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "length"
                                              }
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": 1
                                            }
                                          }
                                        }
                                      ],
                                      "kind": "var"
                                    },
                                    {
                                      "type": "SwitchStatement",
                                      "discriminant": {
                                        "type": "Identifier",
                                        "name": "yystate"
                                      },
                                      "cases": [
                                        {
                                          "type": "SwitchCase",
                                          "test": {
                                            "type": "Literal",
                                            "value": 1
                                          },
                                          "consequent": [
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "SLang"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "absyn"
                                                    }
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "createProgram"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "$$"
                                                    },
                                                    "property": {
                                                      "type": "BinaryExpression",
                                                      "operator": "-",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "$0"
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": 1
                                                      }
                                                    }
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "BreakStatement",
                                              "label": null
                                            }
                                          ]
                                        },
                                        {
                                          "type": "SwitchCase",
                                          "test": {
                                            "type": "Literal",
                                            "value": 2
                                          },
                                          "consequent": []
                                        },
                                        {
                                          "type": "SwitchCase",
                                          "test": {
                                            "type": "Literal",
                                            "value": 3
                                          },
                                          "consequent": []
                                        },
                                        {
                                          "type": "SwitchCase",
                                          "test": {
                                            "type": "Literal",
                                            "value": 4
                                          },
                                          "consequent": []
                                        },
                                        {
                                          "type": "SwitchCase",
                                          "test": {
                                            "type": "Literal",
                                            "value": 5
                                          },
                                          "consequent": []
                                        },
                                        {
                                          "type": "SwitchCase",
                                          "test": {
                                            "type": "Literal",
                                            "value": 6
                                          },
                                          "consequent": []
                                        },
                                        {
                                          "type": "SwitchCase",
                                          "test": {
                                            "type": "Literal",
                                            "value": 7
                                          },
                                          "consequent": []
                                        },
                                        {
                                          "type": "SwitchCase",
                                          "test": {
                                            "type": "Literal",
                                            "value": 8
                                          },
                                          "consequent": []
                                        },
                                        {
                                          "type": "SwitchCase",
                                          "test": {
                                            "type": "Literal",
                                            "value": 9
                                          },
                                          "consequent": []
                                        },
                                        {
                                          "type": "SwitchCase",
                                          "test": {
                                            "type": "Literal",
                                            "value": 22
                                          },
                                          "consequent": []
                                        },
                                        {
                                          "type": "SwitchCase",
                                          "test": {
                                            "type": "Literal",
                                            "value": 23
                                          },
                                          "consequent": []
                                        },
                                        {
                                          "type": "SwitchCase",
                                          "test": {
                                            "type": "Literal",
                                            "value": 24
                                          },
                                          "consequent": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "$"
                                                  }
                                                },
                                                "right": {
                                                  "type": "MemberExpression",
                                                  "computed": true,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "$$"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "$0"
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "type": "BreakStatement",
                                              "label": null
                                            }
                                          ]
                                        },
                                        {
                                          "type": "SwitchCase",
                                          "test": {
                                            "type": "Literal",
                                            "value": 10
                                          },
                                          "consequent": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "$"
                                                  }
                                                },
                                                "right": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "SLang"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "absyn"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "createVarExp"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "MemberExpression",
                                                      "computed": true,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "$$"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "$0"
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            {
                                              "type": "BreakStatement",
                                              "label": null
                                            }
                                          ]
                                        },
                                        {
                                          "type": "SwitchCase",
                                          "test": {
                                            "type": "Literal",
                                            "value": 11
                                          },
                                          "consequent": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "$"
                                                  }
                                                },
                                                "right": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "SLang"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "absyn"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "createIntExp"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "MemberExpression",
                                                      "computed": true,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "$$"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "$0"
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            {
                                              "type": "BreakStatement",
                                              "label": null
                                            }
                                          ]
                                        },
                                        {
                                          "type": "SwitchCase",
                                          "test": {
                                            "type": "Literal",
                                            "value": 12
                                          },
                                          "consequent": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "$"
                                                  }
                                                },
                                                "right": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "SLang"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "absyn"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "createRealExp"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "MemberExpression",
                                                      "computed": true,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "$$"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "$0"
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            {
                                              "type": "BreakStatement",
                                              "label": null
                                            }
                                          ]
                                        },
                                        {
                                          "type": "SwitchCase",
                                          "test": {
                                            "type": "Literal",
                                            "value": 13
                                          },
                                          "consequent": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "$"
                                                  }
                                                },
                                                "right": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "SLang"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "absyn"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "createGt1Exp"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "MemberExpression",
                                                      "computed": true,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "$$"
                                                      },
                                                      "property": {
                                                        "type": "BinaryExpression",
                                                        "operator": "-",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "$0"
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": 1
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            {
                                              "type": "BreakStatement",
                                              "label": null
                                            }
                                          ]
                                        },
                                        {
                                          "type": "SwitchCase",
                                          "test": {
                                            "type": "Literal",
                                            "value": 14
                                          },
                                          "consequent": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "$"
                                                  }
                                                },
                                                "right": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "SLang"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "absyn"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "createPrimAppExp"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "-"
                                                    },
                                                    {
                                                      "type": "ArrayExpression",
                                                      "elements": [
                                                        {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "$$"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "$0"
                                                          }
                                                        },
                                                        {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "$$"
                                                          },
                                                          "property": {
                                                            "type": "BinaryExpression",
                                                            "operator": "-",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "$0"
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": 2
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            {
                                              "type": "BreakStatement",
                                              "label": null
                                            }
                                          ]
                                        },
                                        {
                                          "type": "SwitchCase",
                                          "test": {
                                            "type": "Literal",
                                            "value": 15
                                          },
                                          "consequent": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "$"
                                                  }
                                                },
                                                "right": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "SLang"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "absyn"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "createFnExp"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "MemberExpression",
                                                      "computed": true,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "$$"
                                                      },
                                                      "property": {
                                                        "type": "BinaryExpression",
                                                        "operator": "-",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "$0"
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": 2
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "MemberExpression",
                                                      "computed": true,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "$$"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "$0"
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            {
                                              "type": "BreakStatement",
                                              "label": null
                                            }
                                          ]
                                        },
                                        {
                                          "type": "SwitchCase",
                                          "test": {
                                            "type": "Literal",
                                            "value": 16
                                          },
                                          "consequent": []
                                        },
                                        {
                                          "type": "SwitchCase",
                                          "test": {
                                            "type": "Literal",
                                            "value": 25
                                          },
                                          "consequent": []
                                        },
                                        {
                                          "type": "SwitchCase",
                                          "test": {
                                            "type": "Literal",
                                            "value": 27
                                          },
                                          "consequent": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "$"
                                                  }
                                                },
                                                "right": {
                                                  "type": "ArrayExpression",
                                                  "elements": []
                                                }
                                              }
                                            },
                                            {
                                              "type": "BreakStatement",
                                              "label": null
                                            }
                                          ]
                                        },
                                        {
                                          "type": "SwitchCase",
                                          "test": {
                                            "type": "Literal",
                                            "value": 17
                                          },
                                          "consequent": []
                                        },
                                        {
                                          "type": "SwitchCase",
                                          "test": {
                                            "type": "Literal",
                                            "value": 26
                                          },
                                          "consequent": [
                                            {
                                              "type": "VariableDeclaration",
                                              "declarations": [
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "result"
                                                  },
                                                  "init": null
                                                }
                                              ],
                                              "kind": "var"
                                            },
                                            {
                                              "type": "IfStatement",
                                              "test": {
                                                "type": "BinaryExpression",
                                                "operator": "===",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": true,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "$$"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "$0"
                                                  }
                                                },
                                                "right": {
                                                  "type": "ArrayExpression",
                                                  "elements": []
                                                }
                                              },
                                              "consequent": {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "result"
                                                  },
                                                  "right": {
                                                    "type": "ArrayExpression",
                                                    "elements": [
                                                      {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "$$"
                                                        },
                                                        "property": {
                                                          "type": "BinaryExpression",
                                                          "operator": "-",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "$0"
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": 1
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  }
                                                }
                                              },
                                              "alternate": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "$$"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "$0"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "unshift"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "$$"
                                                          },
                                                          "property": {
                                                            "type": "BinaryExpression",
                                                            "operator": "-",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "$0"
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": 1
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "result"
                                                      },
                                                      "right": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "$$"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "$0"
                                                        }
                                                      }
                                                    }
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "$"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "result"
                                                }
                                              }
                                            },
                                            {
                                              "type": "BreakStatement",
                                              "label": null
                                            }
                                          ]
                                        },
                                        {
                                          "type": "SwitchCase",
                                          "test": {
                                            "type": "Literal",
                                            "value": 18
                                          },
                                          "consequent": []
                                        },
                                        {
                                          "type": "SwitchCase",
                                          "test": {
                                            "type": "Literal",
                                            "value": 29
                                          },
                                          "consequent": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "$"
                                                  }
                                                },
                                                "right": {
                                                  "type": "ArrayExpression",
                                                  "elements": []
                                                }
                                              }
                                            },
                                            {
                                              "type": "BreakStatement",
                                              "label": null
                                            }
                                          ]
                                        },
                                        {
                                          "type": "SwitchCase",
                                          "test": {
                                            "type": "Literal",
                                            "value": 19
                                          },
                                          "consequent": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "$$"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "$0"
                                                    }
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "unshift"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "$$"
                                                    },
                                                    "property": {
                                                      "type": "BinaryExpression",
                                                      "operator": "-",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "$0"
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": 1
                                                      }
                                                    }
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "$"
                                                  }
                                                },
                                                "right": {
                                                  "type": "MemberExpression",
                                                  "computed": true,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "$$"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "$0"
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "type": "BreakStatement",
                                              "label": null
                                            }
                                          ]
                                        },
                                        {
                                          "type": "SwitchCase",
                                          "test": {
                                            "type": "Literal",
                                            "value": 20
                                          },
                                          "consequent": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "$$"
                                                    },
                                                    "property": {
                                                      "type": "BinaryExpression",
                                                      "operator": "-",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "$0"
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": 1
                                                      }
                                                    }
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "unshift"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Literal",
                                                    "value": "args"
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "$"
                                                  }
                                                },
                                                "right": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "SLang"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "absyn"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "createAppExp"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "MemberExpression",
                                                      "computed": true,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "$$"
                                                      },
                                                      "property": {
                                                        "type": "BinaryExpression",
                                                        "operator": "-",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "$0"
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": 2
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "MemberExpression",
                                                      "computed": true,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "$$"
                                                      },
                                                      "property": {
                                                        "type": "BinaryExpression",
                                                        "operator": "-",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "$0"
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": 1
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            {
                                              "type": "BreakStatement",
                                              "label": null
                                            }
                                          ]
                                        },
                                        {
                                          "type": "SwitchCase",
                                          "test": {
                                            "type": "Literal",
                                            "value": 21
                                          },
                                          "consequent": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "$"
                                                  }
                                                },
                                                "right": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "SLang"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "absyn"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "createPrimAppExp"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "MemberExpression",
                                                      "computed": true,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "$$"
                                                      },
                                                      "property": {
                                                        "type": "BinaryExpression",
                                                        "operator": "-",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "$0"
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": 3
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "MemberExpression",
                                                      "computed": true,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "$$"
                                                      },
                                                      "property": {
                                                        "type": "BinaryExpression",
                                                        "operator": "-",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "$0"
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": 1
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            {
                                              "type": "BreakStatement",
                                              "label": null
                                            }
                                          ]
                                        },
                                        {
                                          "type": "SwitchCase",
                                          "test": {
                                            "type": "Literal",
                                            "value": 28
                                          },
                                          "consequent": []
                                        },
                                        {
                                          "type": "SwitchCase",
                                          "test": {
                                            "type": "Literal",
                                            "value": 30
                                          },
                                          "consequent": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "$$"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "$0"
                                                    }
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "unshift"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "$$"
                                                    },
                                                    "property": {
                                                      "type": "BinaryExpression",
                                                      "operator": "-",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "$0"
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": 1
                                                      }
                                                    }
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "$"
                                                  }
                                                },
                                                "right": {
                                                  "type": "MemberExpression",
                                                  "computed": true,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "$$"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "$0"
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "type": "BreakStatement",
                                              "label": null
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                              },
                              "kind": "init"
                            },
                            {
                              "type": "Property",
                              "key": {
                                "type": "Identifier",
                                "name": "table"
                              },
                              "value": {
                                "type": "ArrayExpression",
                                "elements": [
                                  {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 3
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 1
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 4
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 2
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 6
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 3
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 7
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 4
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 8
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 5
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 9
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 6
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 10
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 7
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 11
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 8
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 12
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 9
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 13
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 10
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 14
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V0"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 15
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V1"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 16
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V2"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 17
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V3"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 21
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V4"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 23
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V5"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 28
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V6"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 30
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 16
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 32
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V7"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 33
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V8"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 34
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V9"
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 1
                                        },
                                        "value": {
                                          "type": "ArrayExpression",
                                          "elements": [
                                            {
                                              "type": "Literal",
                                              "value": 3
                                            }
                                          ]
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 5
                                        },
                                        "value": {
                                          "type": "ArrayExpression",
                                          "elements": [
                                            {
                                              "type": "Literal",
                                              "value": 1
                                            },
                                            {
                                              "type": "Literal",
                                              "value": 22
                                            }
                                          ]
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "o"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "$Va"
                                      },
                                      {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "Literal",
                                            "value": 2
                                          },
                                          {
                                            "type": "Literal",
                                            "value": 2
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "o"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "$Va"
                                      },
                                      {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "Literal",
                                            "value": 2
                                          },
                                          {
                                            "type": "Literal",
                                            "value": 3
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "o"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "$Va"
                                      },
                                      {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "Literal",
                                            "value": 2
                                          },
                                          {
                                            "type": "Literal",
                                            "value": 4
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "o"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "$Va"
                                      },
                                      {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "Literal",
                                            "value": 2
                                          },
                                          {
                                            "type": "Literal",
                                            "value": 5
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "o"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "$Va"
                                      },
                                      {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "Literal",
                                            "value": 2
                                          },
                                          {
                                            "type": "Literal",
                                            "value": 6
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "o"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "$Va"
                                      },
                                      {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "Literal",
                                            "value": 2
                                          },
                                          {
                                            "type": "Literal",
                                            "value": 7
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "o"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "$Va"
                                      },
                                      {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "Literal",
                                            "value": 2
                                          },
                                          {
                                            "type": "Literal",
                                            "value": 8
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "o"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "$Va"
                                      },
                                      {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "Literal",
                                            "value": 2
                                          },
                                          {
                                            "type": "Literal",
                                            "value": 9
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "o"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "$Va"
                                      },
                                      {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "Literal",
                                            "value": 2
                                          },
                                          {
                                            "type": "Literal",
                                            "value": 10
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "o"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "$Va"
                                      },
                                      {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "Literal",
                                            "value": 2
                                          },
                                          {
                                            "type": "Literal",
                                            "value": 11
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "o"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "$Va"
                                      },
                                      {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "Literal",
                                            "value": 2
                                          },
                                          {
                                            "type": "Literal",
                                            "value": 12
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 14
                                        },
                                        "value": {
                                          "type": "ArrayExpression",
                                          "elements": [
                                            {
                                              "type": "Literal",
                                              "value": 1
                                            },
                                            {
                                              "type": "Literal",
                                              "value": 24
                                            }
                                          ]
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 24
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 23
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 25
                                        },
                                        "value": {
                                          "type": "ArrayExpression",
                                          "elements": [
                                            {
                                              "type": "Literal",
                                              "value": 2
                                            },
                                            {
                                              "type": "Literal",
                                              "value": 16
                                            }
                                          ]
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 4
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 25
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 6
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 3
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 7
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 4
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 8
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 5
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 9
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 6
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 10
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 7
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 11
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 8
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 12
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 9
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 13
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 10
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 14
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V0"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 15
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V1"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 16
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V2"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 17
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V3"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 21
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V4"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 23
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V5"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 28
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V6"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 30
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 16
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 32
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V7"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 33
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V8"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 34
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V9"
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 28
                                        },
                                        "value": {
                                          "type": "ArrayExpression",
                                          "elements": [
                                            {
                                              "type": "Literal",
                                              "value": 1
                                            },
                                            {
                                              "type": "Literal",
                                              "value": 26
                                            }
                                          ]
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 4
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 27
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 6
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 3
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 7
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 4
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 8
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 5
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 9
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 6
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 10
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 7
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 11
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 8
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 12
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 9
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 13
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 10
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 14
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V0"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 15
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V1"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 16
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V2"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 17
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V3"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 21
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V4"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 23
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V5"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 28
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V6"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 30
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 16
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 32
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V7"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 33
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V8"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 34
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V9"
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 18
                                        },
                                        "value": {
                                          "type": "ArrayExpression",
                                          "elements": [
                                            {
                                              "type": "Literal",
                                              "value": 1
                                            },
                                            {
                                              "type": "Literal",
                                              "value": 28
                                            }
                                          ]
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 28
                                        },
                                        "value": {
                                          "type": "ArrayExpression",
                                          "elements": [
                                            {
                                              "type": "Literal",
                                              "value": 2
                                            },
                                            {
                                              "type": "Literal",
                                              "value": 22
                                            }
                                          ]
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 28
                                        },
                                        "value": {
                                          "type": "ArrayExpression",
                                          "elements": [
                                            {
                                              "type": "Literal",
                                              "value": 2
                                            },
                                            {
                                              "type": "Literal",
                                              "value": 23
                                            }
                                          ]
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 28
                                        },
                                        "value": {
                                          "type": "ArrayExpression",
                                          "elements": [
                                            {
                                              "type": "Literal",
                                              "value": 2
                                            },
                                            {
                                              "type": "Literal",
                                              "value": 24
                                            }
                                          ]
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 1
                                        },
                                        "value": {
                                          "type": "ArrayExpression",
                                          "elements": [
                                            {
                                              "type": "Literal",
                                              "value": 2
                                            },
                                            {
                                              "type": "Literal",
                                              "value": 1
                                            }
                                          ]
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 25
                                        },
                                        "value": {
                                          "type": "ArrayExpression",
                                          "elements": [
                                            {
                                              "type": "Literal",
                                              "value": 1
                                            },
                                            {
                                              "type": "Literal",
                                              "value": 29
                                            }
                                          ]
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 25
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$Vb"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 26
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 30
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 27
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$Vc"
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 4
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 33
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 6
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 3
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 7
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 4
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 8
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 5
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 9
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 6
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 10
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 7
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 11
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 8
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 12
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 9
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 13
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 10
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 14
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V0"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 15
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V1"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 16
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V2"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 17
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V3"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 19
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 32
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 21
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V4"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 23
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V5"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 28
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V6"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 29
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$Vd"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 30
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 16
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 32
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V7"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 33
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V8"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 34
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V9"
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 4
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 35
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 6
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 3
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 7
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 4
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 8
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 5
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 9
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 6
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 10
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 7
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 11
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 8
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 12
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 9
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 13
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 10
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 14
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V0"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 15
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V1"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 16
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V2"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 17
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V3"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 21
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V4"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 23
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V5"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 28
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V6"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 29
                                        },
                                        "value": {
                                          "type": "ArrayExpression",
                                          "elements": [
                                            {
                                              "type": "Literal",
                                              "value": 2
                                            },
                                            {
                                              "type": "Literal",
                                              "value": 27
                                            }
                                          ]
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 30
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 16
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 31
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 34
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 32
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V7"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 33
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V8"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 34
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V9"
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 22
                                        },
                                        "value": {
                                          "type": "ArrayExpression",
                                          "elements": [
                                            {
                                              "type": "Literal",
                                              "value": 1
                                            },
                                            {
                                              "type": "Literal",
                                              "value": 36
                                            }
                                          ]
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 4
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 33
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 6
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 3
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 7
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 4
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 8
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 5
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 9
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 6
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 10
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 7
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 11
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 8
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 12
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 9
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 13
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 10
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 14
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V0"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 15
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V1"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 16
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V2"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 17
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V3"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 19
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 37
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 20
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$Vd"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 21
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V4"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 23
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V5"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 28
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V6"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 30
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 16
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 32
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V7"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 33
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V8"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 34
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V9"
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 4
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 38
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 6
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 3
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 7
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 4
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 8
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 5
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 9
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 6
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 10
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 7
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 11
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 8
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 12
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 9
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 13
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 10
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 14
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V0"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 15
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V1"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 16
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V2"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 17
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V3"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 21
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V4"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 23
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V5"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 28
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V6"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 30
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 16
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 32
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V7"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 33
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V8"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 34
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V9"
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 25
                                        },
                                        "value": {
                                          "type": "ArrayExpression",
                                          "elements": [
                                            {
                                              "type": "Literal",
                                              "value": 2
                                            },
                                            {
                                              "type": "Literal",
                                              "value": 17
                                            }
                                          ]
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 14
                                        },
                                        "value": {
                                          "type": "ArrayExpression",
                                          "elements": [
                                            {
                                              "type": "Literal",
                                              "value": 1
                                            },
                                            {
                                              "type": "Literal",
                                              "value": 39
                                            }
                                          ]
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 29
                                        },
                                        "value": {
                                          "type": "ArrayExpression",
                                          "elements": [
                                            {
                                              "type": "Literal",
                                              "value": 1
                                            },
                                            {
                                              "type": "Literal",
                                              "value": 40
                                            }
                                          ]
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "o"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "$Ve"
                                      },
                                      {
                                        "type": "Identifier",
                                        "name": "$Vd"
                                      },
                                      {
                                        "type": "ObjectExpression",
                                        "properties": [
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Literal",
                                              "value": 6
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": 3
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Literal",
                                              "value": 7
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": 4
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Literal",
                                              "value": 8
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": 5
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Literal",
                                              "value": 9
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": 6
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Literal",
                                              "value": 10
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": 7
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Literal",
                                              "value": 11
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": 8
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Literal",
                                              "value": 12
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": 9
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Literal",
                                              "value": 13
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": 10
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Literal",
                                              "value": 30
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": 16
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Literal",
                                              "value": 4
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": 33
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Literal",
                                              "value": 19
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": 41
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Literal",
                                              "value": 14
                                            },
                                            "value": {
                                              "type": "Identifier",
                                              "name": "$V0"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Literal",
                                              "value": 15
                                            },
                                            "value": {
                                              "type": "Identifier",
                                              "name": "$V1"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Literal",
                                              "value": 16
                                            },
                                            "value": {
                                              "type": "Identifier",
                                              "name": "$V2"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Literal",
                                              "value": 17
                                            },
                                            "value": {
                                              "type": "Identifier",
                                              "name": "$V3"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Literal",
                                              "value": 21
                                            },
                                            "value": {
                                              "type": "Identifier",
                                              "name": "$V4"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Literal",
                                              "value": 23
                                            },
                                            "value": {
                                              "type": "Identifier",
                                              "name": "$V5"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Literal",
                                              "value": 28
                                            },
                                            "value": {
                                              "type": "Identifier",
                                              "name": "$V6"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Literal",
                                              "value": 32
                                            },
                                            "value": {
                                              "type": "Identifier",
                                              "name": "$V7"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Literal",
                                              "value": 33
                                            },
                                            "value": {
                                              "type": "Identifier",
                                              "name": "$V8"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Literal",
                                              "value": 34
                                            },
                                            "value": {
                                              "type": "Identifier",
                                              "name": "$V9"
                                            },
                                            "kind": "init"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 29
                                        },
                                        "value": {
                                          "type": "ArrayExpression",
                                          "elements": [
                                            {
                                              "type": "Literal",
                                              "value": 1
                                            },
                                            {
                                              "type": "Literal",
                                              "value": 42
                                            }
                                          ]
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 27
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$Vf"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 29
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$Vg"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 35
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 43
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 4
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 45
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 6
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 3
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 7
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 4
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 8
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 5
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 9
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 6
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 10
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 7
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 11
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 8
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 12
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 9
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 13
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 10
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 14
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V0"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 15
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V1"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 16
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V2"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 17
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V3"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 21
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V4"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 23
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V5"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 28
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V6"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 30
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 16
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 32
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V7"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 33
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V8"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 34
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V9"
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 20
                                        },
                                        "value": {
                                          "type": "ArrayExpression",
                                          "elements": [
                                            {
                                              "type": "Literal",
                                              "value": 1
                                            },
                                            {
                                              "type": "Literal",
                                              "value": 46
                                            }
                                          ]
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "o"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "$Va"
                                      },
                                      {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "Literal",
                                            "value": 2
                                          },
                                          {
                                            "type": "Literal",
                                            "value": 15
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 25
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$Vb"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 26
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 47
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 27
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$Vc"
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "o"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "$Va"
                                      },
                                      {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "Literal",
                                            "value": 2
                                          },
                                          {
                                            "type": "Literal",
                                            "value": 20
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "o"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "$Ve"
                                      },
                                      {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "Literal",
                                            "value": 2
                                          },
                                          {
                                            "type": "Literal",
                                            "value": 26
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "o"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "$Va"
                                      },
                                      {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "Literal",
                                            "value": 2
                                          },
                                          {
                                            "type": "Literal",
                                            "value": 21
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 29
                                        },
                                        "value": {
                                          "type": "ArrayExpression",
                                          "elements": [
                                            {
                                              "type": "Literal",
                                              "value": 2
                                            },
                                            {
                                              "type": "Literal",
                                              "value": 28
                                            }
                                          ]
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 4
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 48
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 6
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 3
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 7
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 4
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 8
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 5
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 9
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 6
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 10
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 7
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 11
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 8
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 12
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 9
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 13
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 10
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 14
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V0"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 15
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V1"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 16
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V2"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 17
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V3"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 21
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V4"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 23
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V5"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 28
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V6"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 30
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 16
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 32
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V7"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 33
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V8"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 34
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$V9"
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "o"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "$Va"
                                      },
                                      {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "Literal",
                                            "value": 2
                                          },
                                          {
                                            "type": "Literal",
                                            "value": 14
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "o"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "$Va"
                                      },
                                      {
                                        "type": "ArrayExpression",
                                        "elements": [
                                          {
                                            "type": "Literal",
                                            "value": 2
                                          },
                                          {
                                            "type": "Literal",
                                            "value": 13
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 25
                                        },
                                        "value": {
                                          "type": "ArrayExpression",
                                          "elements": [
                                            {
                                              "type": "Literal",
                                              "value": 2
                                            },
                                            {
                                              "type": "Literal",
                                              "value": 19
                                            }
                                          ]
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 27
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$Vf"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 29
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "$Vg"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 35
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": 49
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": 29
                                        },
                                        "value": {
                                          "type": "ArrayExpression",
                                          "elements": [
                                            {
                                              "type": "Literal",
                                              "value": 2
                                            },
                                            {
                                              "type": "Literal",
                                              "value": 30
                                            }
                                          ]
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "kind": "init"
                            },
                            {
                              "type": "Property",
                              "key": {
                                "type": "Identifier",
                                "name": "defaultActions"
                              },
                              "value": {
                                "type": "ObjectExpression",
                                "properties": [
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": 19
                                    },
                                    "value": {
                                      "type": "ArrayExpression",
                                      "elements": [
                                        {
                                          "type": "Literal",
                                          "value": 2
                                        },
                                        {
                                          "type": "Literal",
                                          "value": 22
                                        }
                                      ]
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": 20
                                    },
                                    "value": {
                                      "type": "ArrayExpression",
                                      "elements": [
                                        {
                                          "type": "Literal",
                                          "value": 2
                                        },
                                        {
                                          "type": "Literal",
                                          "value": 23
                                        }
                                      ]
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": 21
                                    },
                                    "value": {
                                      "type": "ArrayExpression",
                                      "elements": [
                                        {
                                          "type": "Literal",
                                          "value": 2
                                        },
                                        {
                                          "type": "Literal",
                                          "value": 24
                                        }
                                      ]
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": 22
                                    },
                                    "value": {
                                      "type": "ArrayExpression",
                                      "elements": [
                                        {
                                          "type": "Literal",
                                          "value": 2
                                        },
                                        {
                                          "type": "Literal",
                                          "value": 1
                                        }
                                      ]
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": 30
                                    },
                                    "value": {
                                      "type": "ArrayExpression",
                                      "elements": [
                                        {
                                          "type": "Literal",
                                          "value": 2
                                        },
                                        {
                                          "type": "Literal",
                                          "value": 17
                                        }
                                      ]
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": 43
                                    },
                                    "value": {
                                      "type": "ArrayExpression",
                                      "elements": [
                                        {
                                          "type": "Literal",
                                          "value": 2
                                        },
                                        {
                                          "type": "Literal",
                                          "value": 28
                                        }
                                      ]
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": 47
                                    },
                                    "value": {
                                      "type": "ArrayExpression",
                                      "elements": [
                                        {
                                          "type": "Literal",
                                          "value": 2
                                        },
                                        {
                                          "type": "Literal",
                                          "value": 19
                                        }
                                      ]
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Literal",
                                      "value": 49
                                    },
                                    "value": {
                                      "type": "ArrayExpression",
                                      "elements": [
                                        {
                                          "type": "Literal",
                                          "value": 2
                                        },
                                        {
                                          "type": "Literal",
                                          "value": 30
                                        }
                                      ]
                                    },
                                    "kind": "init"
                                  }
                                ]
                              },
                              "kind": "init"
                            },
                            {
                              "type": "Property",
                              "key": {
                                "type": "Identifier",
                                "name": "parseError"
                              },
                              "value": {
                                "type": "FunctionExpression",
                                "id": {
                                  "type": "Identifier",
                                  "name": "parseError"
                                },
                                "params": [
                                  {
                                    "type": "Identifier",
                                    "name": "str"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "hash"
                                  }
                                ],
                                "defaults": [],
                                "body": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "IfStatement",
                                      "test": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "hash"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "recoverable"
                                        }
                                      },
                                      "consequent": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ThisExpression"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "trace"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "str"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      },
                                      "alternate": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ThrowStatement",
                                            "argument": {
                                              "type": "NewExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "Error"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "str"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                              },
                              "kind": "init"
                            },
                            {
                              "type": "Property",
                              "key": {
                                "type": "Identifier",
                                "name": "parse"
                              },
                              "value": {
                                "type": "FunctionExpression",
                                "id": {
                                  "type": "Identifier",
                                  "name": "parse"
                                },
                                "params": [
                                  {
                                    "type": "Identifier",
                                    "name": "input"
                                  }
                                ],
                                "defaults": [],
                                "body": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "VariableDeclaration",
                                      "declarations": [
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "self"
                                          },
                                          "init": {
                                            "type": "ThisExpression"
                                          }
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "stack"
                                          },
                                          "init": {
                                            "type": "ArrayExpression",
                                            "elements": [
                                              {
                                                "type": "Literal",
                                                "value": 0
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "tstack"
                                          },
                                          "init": {
                                            "type": "ArrayExpression",
                                            "elements": []
                                          }
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "vstack"
                                          },
                                          "init": {
                                            "type": "ArrayExpression",
                                            "elements": [
                                              {
                                                "type": "Literal",
                                                "value": null
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "lstack"
                                          },
                                          "init": {
                                            "type": "ArrayExpression",
                                            "elements": []
                                          }
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "table"
                                          },
                                          "init": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "table"
                                            }
                                          }
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "yytext"
                                          },
                                          "init": {
                                            "type": "Literal",
                                            "value": ""
                                          }
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "yylineno"
                                          },
                                          "init": {
                                            "type": "Literal",
                                            "value": 0
                                          }
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "yyleng"
                                          },
                                          "init": {
                                            "type": "Literal",
                                            "value": 0
                                          }
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "recovering"
                                          },
                                          "init": {
                                            "type": "Literal",
                                            "value": 0
                                          }
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "TERROR"
                                          },
                                          "init": {
                                            "type": "Literal",
                                            "value": 2
                                          }
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "EOF"
                                          },
                                          "init": {
                                            "type": "Literal",
                                            "value": 1
                                          }
                                        }
                                      ],
                                      "kind": "var"
                                    },
                                    {
                                      "type": "VariableDeclaration",
                                      "declarations": [
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "args"
                                          },
                                          "init": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "lstack"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "slice"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "call"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "arguments"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": 1
                                              }
                                            ]
                                          }
                                        }
                                      ],
                                      "kind": "var"
                                    },
                                    {
                                      "type": "VariableDeclaration",
                                      "declarations": [
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "lexer"
                                          },
                                          "init": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "Object"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "create"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ThisExpression"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "lexer"
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      ],
                                      "kind": "var"
                                    },
                                    {
                                      "type": "VariableDeclaration",
                                      "declarations": [
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "sharedState"
                                          },
                                          "init": {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "yy"
                                                },
                                                "value": {
                                                  "type": "ObjectExpression",
                                                  "properties": []
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          }
                                        }
                                      ],
                                      "kind": "var"
                                    },
                                    {
                                      "type": "ForInStatement",
                                      "left": {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "k"
                                            },
                                            "init": null
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      "right": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "yy"
                                        }
                                      },
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "IfStatement",
                                            "test": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "Object"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "prototype"
                                                    }
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "hasOwnProperty"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "call"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "ThisExpression"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "yy"
                                                  }
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "k"
                                                }
                                              ]
                                            },
                                            "consequent": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "MemberExpression",
                                                      "computed": true,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "sharedState"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "yy"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "k"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "MemberExpression",
                                                      "computed": true,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "yy"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "k"
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            "alternate": null
                                          }
                                        ]
                                      },
                                      "each": false
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "lexer"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "setInput"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "input"
                                          },
                                          {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "sharedState"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "yy"
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "sharedState"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "yy"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "lexer"
                                          }
                                        },
                                        "right": {
                                          "type": "Identifier",
                                          "name": "lexer"
                                        }
                                      }
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "sharedState"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "yy"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "parser"
                                          }
                                        },
                                        "right": {
                                          "type": "ThisExpression"
                                        }
                                      }
                                    },
                                    {
                                      "type": "IfStatement",
                                      "test": {
                                        "type": "BinaryExpression",
                                        "operator": "==",
                                        "left": {
                                          "type": "UnaryExpression",
                                          "operator": "typeof",
                                          "argument": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "lexer"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "yylloc"
                                            }
                                          },
                                          "prefix": true
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": "undefined"
                                        }
                                      },
                                      "consequent": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "lexer"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "yylloc"
                                                }
                                              },
                                              "right": {
                                                "type": "ObjectExpression",
                                                "properties": []
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      "alternate": null
                                    },
                                    {
                                      "type": "VariableDeclaration",
                                      "declarations": [
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "yyloc"
                                          },
                                          "init": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "lexer"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "yylloc"
                                            }
                                          }
                                        }
                                      ],
                                      "kind": "var"
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "lstack"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "push"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "yyloc"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "VariableDeclaration",
                                      "declarations": [
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "ranges"
                                          },
                                          "init": {
                                            "type": "LogicalExpression",
                                            "operator": "&&",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "lexer"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "options"
                                              }
                                            },
                                            "right": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "lexer"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "options"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "ranges"
                                              }
                                            }
                                          }
                                        }
                                      ],
                                      "kind": "var"
                                    },
                                    {
                                      "type": "IfStatement",
                                      "test": {
                                        "type": "BinaryExpression",
                                        "operator": "===",
                                        "left": {
                                          "type": "UnaryExpression",
                                          "operator": "typeof",
                                          "argument": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "sharedState"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "yy"
                                              }
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "parseError"
                                            }
                                          },
                                          "prefix": true
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": "function"
                                        }
                                      },
                                      "consequent": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ThisExpression"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "parseError"
                                                }
                                              },
                                              "right": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "sharedState"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "yy"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "parseError"
                                                }
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      "alternate": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ThisExpression"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "parseError"
                                                }
                                              },
                                              "right": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "Object"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "getPrototypeOf"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "ThisExpression"
                                                    }
                                                  ]
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "parseError"
                                                }
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "FunctionDeclaration",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "popStack"
                                      },
                                      "params": [
                                        {
                                          "type": "Identifier",
                                          "name": "n"
                                        }
                                      ],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "stack"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "length"
                                                }
                                              },
                                              "right": {
                                                "type": "BinaryExpression",
                                                "operator": "-",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "stack"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "length"
                                                  }
                                                },
                                                "right": {
                                                  "type": "BinaryExpression",
                                                  "operator": "*",
                                                  "left": {
                                                    "type": "Literal",
                                                    "value": 2
                                                  },
                                                  "right": {
                                                    "type": "Identifier",
                                                    "name": "n"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "vstack"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "length"
                                                }
                                              },
                                              "right": {
                                                "type": "BinaryExpression",
                                                "operator": "-",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "vstack"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "length"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "n"
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "lstack"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "length"
                                                }
                                              },
                                              "right": {
                                                "type": "BinaryExpression",
                                                "operator": "-",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "lstack"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "length"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "n"
                                                }
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    },
                                    {
                                      "type": "LabeledStatement",
                                      "label": {
                                        "type": "Identifier",
                                        "name": "_token_stack"
                                      },
                                      "body": {
                                        "type": "FunctionDeclaration",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "lex"
                                        },
                                        "params": [],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "VariableDeclaration",
                                              "declarations": [
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "token"
                                                  },
                                                  "init": null
                                                }
                                              ],
                                              "kind": "var"
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "token"
                                                },
                                                "right": {
                                                  "type": "LogicalExpression",
                                                  "operator": "||",
                                                  "left": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "lexer"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "lex"
                                                      }
                                                    },
                                                    "arguments": []
                                                  },
                                                  "right": {
                                                    "type": "Identifier",
                                                    "name": "EOF"
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "type": "IfStatement",
                                              "test": {
                                                "type": "BinaryExpression",
                                                "operator": "!==",
                                                "left": {
                                                  "type": "UnaryExpression",
                                                  "operator": "typeof",
                                                  "argument": {
                                                    "type": "Identifier",
                                                    "name": "token"
                                                  },
                                                  "prefix": true
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": "number"
                                                }
                                              },
                                              "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "token"
                                                      },
                                                      "right": {
                                                        "type": "LogicalExpression",
                                                        "operator": "||",
                                                        "left": {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "self"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "symbols_"
                                                            }
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "token"
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "Identifier",
                                                          "name": "token"
                                                        }
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              "alternate": null
                                            },
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "Identifier",
                                                "name": "token"
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      }
                                    },
                                    {
                                      "type": "VariableDeclaration",
                                      "declarations": [
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "symbol"
                                          },
                                          "init": null
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "preErrorSymbol"
                                          },
                                          "init": null
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "state"
                                          },
                                          "init": null
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "action"
                                          },
                                          "init": null
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "a"
                                          },
                                          "init": null
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "r"
                                          },
                                          "init": null
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "yyval"
                                          },
                                          "init": {
                                            "type": "ObjectExpression",
                                            "properties": []
                                          }
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "p"
                                          },
                                          "init": null
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "len"
                                          },
                                          "init": null
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "newState"
                                          },
                                          "init": null
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "expected"
                                          },
                                          "init": null
                                        }
                                      ],
                                      "kind": "var"
                                    },
                                    {
                                      "type": "WhileStatement",
                                      "test": {
                                        "type": "Literal",
                                        "value": true
                                      },
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "state"
                                              },
                                              "right": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "stack"
                                                },
                                                "property": {
                                                  "type": "BinaryExpression",
                                                  "operator": "-",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "stack"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "length"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": 1
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          {
                                            "type": "IfStatement",
                                            "test": {
                                              "type": "MemberExpression",
                                              "computed": true,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ThisExpression"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "defaultActions"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "state"
                                              }
                                            },
                                            "consequent": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "action"
                                                    },
                                                    "right": {
                                                      "type": "MemberExpression",
                                                      "computed": true,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "defaultActions"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "state"
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            "alternate": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "IfStatement",
                                                  "test": {
                                                    "type": "LogicalExpression",
                                                    "operator": "||",
                                                    "left": {
                                                      "type": "BinaryExpression",
                                                      "operator": "===",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "symbol"
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": null
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "BinaryExpression",
                                                      "operator": "==",
                                                      "left": {
                                                        "type": "UnaryExpression",
                                                        "operator": "typeof",
                                                        "argument": {
                                                          "type": "Identifier",
                                                          "name": "symbol"
                                                        },
                                                        "prefix": true
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": "undefined"
                                                      }
                                                    }
                                                  },
                                                  "consequent": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "symbol"
                                                          },
                                                          "right": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "Identifier",
                                                              "name": "lex"
                                                            },
                                                            "arguments": []
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "alternate": null
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "action"
                                                    },
                                                    "right": {
                                                      "type": "LogicalExpression",
                                                      "operator": "&&",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "table"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "state"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "table"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "state"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "symbol"
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "IfStatement",
                                            "test": {
                                              "type": "LogicalExpression",
                                              "operator": "||",
                                              "left": {
                                                "type": "LogicalExpression",
                                                "operator": "||",
                                                "left": {
                                                  "type": "BinaryExpression",
                                                  "operator": "===",
                                                  "left": {
                                                    "type": "UnaryExpression",
                                                    "operator": "typeof",
                                                    "argument": {
                                                      "type": "Identifier",
                                                      "name": "action"
                                                    },
                                                    "prefix": true
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": "undefined"
                                                  }
                                                },
                                                "right": {
                                                  "type": "UnaryExpression",
                                                  "operator": "!",
                                                  "argument": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "action"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "length"
                                                    }
                                                  },
                                                  "prefix": true
                                                }
                                              },
                                              "right": {
                                                "type": "UnaryExpression",
                                                "operator": "!",
                                                "argument": {
                                                  "type": "MemberExpression",
                                                  "computed": true,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "action"
                                                  },
                                                  "property": {
                                                    "type": "Literal",
                                                    "value": 0
                                                  }
                                                },
                                                "prefix": true
                                              }
                                            },
                                            "consequent": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "VariableDeclaration",
                                                  "declarations": [
                                                    {
                                                      "type": "VariableDeclarator",
                                                      "id": {
                                                        "type": "Identifier",
                                                        "name": "errStr"
                                                      },
                                                      "init": {
                                                        "type": "Literal",
                                                        "value": ""
                                                      }
                                                    }
                                                  ],
                                                  "kind": "var"
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "expected"
                                                    },
                                                    "right": {
                                                      "type": "ArrayExpression",
                                                      "elements": []
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "ForInStatement",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "p"
                                                  },
                                                  "right": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "table"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "state"
                                                    }
                                                  },
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "IfStatement",
                                                        "test": {
                                                          "type": "LogicalExpression",
                                                          "operator": "&&",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ThisExpression"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "terminals_"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "p"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "BinaryExpression",
                                                            "operator": ">",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "p"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "TERROR"
                                                            }
                                                          }
                                                        },
                                                        "consequent": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "expected"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "push"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "+",
                                                                      "left": {
                                                                        "type": "Literal",
                                                                        "value": "'"
                                                                      },
                                                                      "right": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "ThisExpression"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "terminals_"
                                                                          }
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "p"
                                                                        }
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "Literal",
                                                                      "value": "'"
                                                                    }
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "alternate": null
                                                      }
                                                    ]
                                                  },
                                                  "each": false
                                                },
                                                {
                                                  "type": "IfStatement",
                                                  "test": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "lexer"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "showPosition"
                                                    }
                                                  },
                                                  "consequent": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "errStr"
                                                          },
                                                          "right": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "BinaryExpression",
                                                              "operator": "+",
                                                              "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "+",
                                                                  "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "+",
                                                                      "left": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                          "type": "BinaryExpression",
                                                                          "operator": "+",
                                                                          "left": {
                                                                            "type": "Literal",
                                                                            "value": "Parse error on line "
                                                                          },
                                                                          "right": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                              "type": "Identifier",
                                                                              "name": "yylineno"
                                                                            },
                                                                            "right": {
                                                                              "type": "Literal",
                                                                              "value": 1
                                                                            }
                                                                          }
                                                                        },
                                                                        "right": {
                                                                          "type": "Literal",
                                                                          "value": ":\n"
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "lexer"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "showPosition"
                                                                          }
                                                                        },
                                                                        "arguments": []
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "Literal",
                                                                      "value": "\nExpecting "
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "expected"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "join"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "Literal",
                                                                        "value": ", "
                                                                      }
                                                                    ]
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "Literal",
                                                                  "value": ", got '"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "LogicalExpression",
                                                                "operator": "||",
                                                                "left": {
                                                                  "type": "MemberExpression",
                                                                  "computed": true,
                                                                  "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "terminals_"
                                                                    }
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "symbol"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "Identifier",
                                                                  "name": "symbol"
                                                                }
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": "'"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "alternate": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "errStr"
                                                          },
                                                          "right": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "BinaryExpression",
                                                              "operator": "+",
                                                              "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                  "type": "Literal",
                                                                  "value": "Parse error on line "
                                                                },
                                                                "right": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "+",
                                                                  "left": {
                                                                    "type": "Identifier",
                                                                    "name": "yylineno"
                                                                  },
                                                                  "right": {
                                                                    "type": "Literal",
                                                                    "value": 1
                                                                  }
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": ": Unexpected "
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "ConditionalExpression",
                                                              "test": {
                                                                "type": "BinaryExpression",
                                                                "operator": "==",
                                                                "left": {
                                                                  "type": "Identifier",
                                                                  "name": "symbol"
                                                                },
                                                                "right": {
                                                                  "type": "Identifier",
                                                                  "name": "EOF"
                                                                }
                                                              },
                                                              "consequent": {
                                                                "type": "Literal",
                                                                "value": "end of input"
                                                              },
                                                              "alternate": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "+",
                                                                  "left": {
                                                                    "type": "Literal",
                                                                    "value": "'"
                                                                  },
                                                                  "right": {
                                                                    "type": "LogicalExpression",
                                                                    "operator": "||",
                                                                    "left": {
                                                                      "type": "MemberExpression",
                                                                      "computed": true,
                                                                      "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "terminals_"
                                                                        }
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "symbol"
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "Identifier",
                                                                      "name": "symbol"
                                                                    }
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "Literal",
                                                                  "value": "'"
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  }
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "ThisExpression"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "parseError"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Identifier",
                                                        "name": "errStr"
                                                      },
                                                      {
                                                        "type": "ObjectExpression",
                                                        "properties": [
                                                          {
                                                            "type": "Property",
                                                            "key": {
                                                              "type": "Identifier",
                                                              "name": "text"
                                                            },
                                                            "value": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "lexer"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "match"
                                                              }
                                                            },
                                                            "kind": "init"
                                                          },
                                                          {
                                                            "type": "Property",
                                                            "key": {
                                                              "type": "Identifier",
                                                              "name": "token"
                                                            },
                                                            "value": {
                                                              "type": "LogicalExpression",
                                                              "operator": "||",
                                                              "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "ThisExpression"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "terminals_"
                                                                  }
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "symbol"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "Identifier",
                                                                "name": "symbol"
                                                              }
                                                            },
                                                            "kind": "init"
                                                          },
                                                          {
                                                            "type": "Property",
                                                            "key": {
                                                              "type": "Identifier",
                                                              "name": "line"
                                                            },
                                                            "value": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "lexer"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "yylineno"
                                                              }
                                                            },
                                                            "kind": "init"
                                                          },
                                                          {
                                                            "type": "Property",
                                                            "key": {
                                                              "type": "Identifier",
                                                              "name": "loc"
                                                            },
                                                            "value": {
                                                              "type": "Identifier",
                                                              "name": "yyloc"
                                                            },
                                                            "kind": "init"
                                                          },
                                                          {
                                                            "type": "Property",
                                                            "key": {
                                                              "type": "Identifier",
                                                              "name": "expected"
                                                            },
                                                            "value": {
                                                              "type": "Identifier",
                                                              "name": "expected"
                                                            },
                                                            "kind": "init"
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  }
                                                }
                                              ]
                                            },
                                            "alternate": null
                                          },
                                          {
                                            "type": "IfStatement",
                                            "test": {
                                              "type": "LogicalExpression",
                                              "operator": "&&",
                                              "left": {
                                                "type": "BinaryExpression",
                                                "operator": "instanceof",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": true,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "action"
                                                  },
                                                  "property": {
                                                    "type": "Literal",
                                                    "value": 0
                                                  }
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "Array"
                                                }
                                              },
                                              "right": {
                                                "type": "BinaryExpression",
                                                "operator": ">",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "action"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "length"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": 1
                                                }
                                              }
                                            },
                                            "consequent": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "ThrowStatement",
                                                  "argument": {
                                                    "type": "NewExpression",
                                                    "callee": {
                                                      "type": "Identifier",
                                                      "name": "Error"
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "Parse Error: multiple actions possible at state: "
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "state"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": ", token: "
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "Identifier",
                                                          "name": "symbol"
                                                        }
                                                      }
                                                    ]
                                                  }
                                                }
                                              ]
                                            },
                                            "alternate": null
                                          },
                                          {
                                            "type": "SwitchStatement",
                                            "discriminant": {
                                              "type": "MemberExpression",
                                              "computed": true,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "action"
                                              },
                                              "property": {
                                                "type": "Literal",
                                                "value": 0
                                              }
                                            },
                                            "cases": [
                                              {
                                                "type": "SwitchCase",
                                                "test": {
                                                  "type": "Literal",
                                                  "value": 1
                                                },
                                                "consequent": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "stack"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "push"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "symbol"
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "vstack"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "push"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "lexer"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "yytext"
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "lstack"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "push"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "lexer"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "yylloc"
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "stack"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "push"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "action"
                                                          },
                                                          "property": {
                                                            "type": "Literal",
                                                            "value": 1
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "symbol"
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": null
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "UnaryExpression",
                                                      "operator": "!",
                                                      "argument": {
                                                        "type": "Identifier",
                                                        "name": "preErrorSymbol"
                                                      },
                                                      "prefix": true
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "yyleng"
                                                            },
                                                            "right": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "lexer"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "yyleng"
                                                              }
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "yytext"
                                                            },
                                                            "right": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "lexer"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "yytext"
                                                              }
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "yylineno"
                                                            },
                                                            "right": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "lexer"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "yylineno"
                                                              }
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "yyloc"
                                                            },
                                                            "right": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "lexer"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "yylloc"
                                                              }
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "IfStatement",
                                                          "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": ">",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "recovering"
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": 0
                                                            }
                                                          },
                                                          "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "UpdateExpression",
                                                                  "operator": "--",
                                                                  "argument": {
                                                                    "type": "Identifier",
                                                                    "name": "recovering"
                                                                  },
                                                                  "prefix": false
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "alternate": null
                                                        }
                                                      ]
                                                    },
                                                    "alternate": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "symbol"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "preErrorSymbol"
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "preErrorSymbol"
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": null
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "type": "BreakStatement",
                                                    "label": null
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "SwitchCase",
                                                "test": {
                                                  "type": "Literal",
                                                  "value": 2
                                                },
                                                "consequent": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "len"
                                                      },
                                                      "right": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "productions_"
                                                            }
                                                          },
                                                          "property": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "action"
                                                            },
                                                            "property": {
                                                              "type": "Literal",
                                                              "value": 1
                                                            }
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Literal",
                                                          "value": 1
                                                        }
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "yyval"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "$"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "vstack"
                                                        },
                                                        "property": {
                                                          "type": "BinaryExpression",
                                                          "operator": "-",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "vstack"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "length"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Identifier",
                                                            "name": "len"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "yyval"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "_$"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "ObjectExpression",
                                                        "properties": [
                                                          {
                                                            "type": "Property",
                                                            "key": {
                                                              "type": "Identifier",
                                                              "name": "first_line"
                                                            },
                                                            "value": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "lstack"
                                                                },
                                                                "property": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "-",
                                                                  "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "lstack"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "length"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "LogicalExpression",
                                                                    "operator": "||",
                                                                    "left": {
                                                                      "type": "Identifier",
                                                                      "name": "len"
                                                                    },
                                                                    "right": {
                                                                      "type": "Literal",
                                                                      "value": 1
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "first_line"
                                                              }
                                                            },
                                                            "kind": "init"
                                                          },
                                                          {
                                                            "type": "Property",
                                                            "key": {
                                                              "type": "Identifier",
                                                              "name": "last_line"
                                                            },
                                                            "value": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "lstack"
                                                                },
                                                                "property": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "-",
                                                                  "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "lstack"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "length"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "Literal",
                                                                    "value": 1
                                                                  }
                                                                }
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "last_line"
                                                              }
                                                            },
                                                            "kind": "init"
                                                          },
                                                          {
                                                            "type": "Property",
                                                            "key": {
                                                              "type": "Identifier",
                                                              "name": "first_column"
                                                            },
                                                            "value": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "lstack"
                                                                },
                                                                "property": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "-",
                                                                  "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "lstack"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "length"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "LogicalExpression",
                                                                    "operator": "||",
                                                                    "left": {
                                                                      "type": "Identifier",
                                                                      "name": "len"
                                                                    },
                                                                    "right": {
                                                                      "type": "Literal",
                                                                      "value": 1
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "first_column"
                                                              }
                                                            },
                                                            "kind": "init"
                                                          },
                                                          {
                                                            "type": "Property",
                                                            "key": {
                                                              "type": "Identifier",
                                                              "name": "last_column"
                                                            },
                                                            "value": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "lstack"
                                                                },
                                                                "property": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "-",
                                                                  "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "lstack"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "length"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "Literal",
                                                                    "value": 1
                                                                  }
                                                                }
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "last_column"
                                                              }
                                                            },
                                                            "kind": "init"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "Identifier",
                                                      "name": "ranges"
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "yyval"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "_$"
                                                                }
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "range"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "ArrayExpression",
                                                              "elements": [
                                                                {
                                                                  "type": "MemberExpression",
                                                                  "computed": true,
                                                                  "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "MemberExpression",
                                                                      "computed": true,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "lstack"
                                                                      },
                                                                      "property": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "-",
                                                                        "left": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "lstack"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "length"
                                                                          }
                                                                        },
                                                                        "right": {
                                                                          "type": "LogicalExpression",
                                                                          "operator": "||",
                                                                          "left": {
                                                                            "type": "Identifier",
                                                                            "name": "len"
                                                                          },
                                                                          "right": {
                                                                            "type": "Literal",
                                                                            "value": 1
                                                                          }
                                                                        }
                                                                      }
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "range"
                                                                    }
                                                                  },
                                                                  "property": {
                                                                    "type": "Literal",
                                                                    "value": 0
                                                                  }
                                                                },
                                                                {
                                                                  "type": "MemberExpression",
                                                                  "computed": true,
                                                                  "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "MemberExpression",
                                                                      "computed": true,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "lstack"
                                                                      },
                                                                      "property": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "-",
                                                                        "left": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "lstack"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "length"
                                                                          }
                                                                        },
                                                                        "right": {
                                                                          "type": "Literal",
                                                                          "value": 1
                                                                        }
                                                                      }
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "range"
                                                                    }
                                                                  },
                                                                  "property": {
                                                                    "type": "Literal",
                                                                    "value": 1
                                                                  }
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": null
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "r"
                                                      },
                                                      "right": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "performAction"
                                                            }
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "apply"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "yyval"
                                                          },
                                                          {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ArrayExpression",
                                                                "elements": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "yytext"
                                                                  },
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "yyleng"
                                                                  },
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "yylineno"
                                                                  },
                                                                  {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "sharedState"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "yy"
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "action"
                                                                    },
                                                                    "property": {
                                                                      "type": "Literal",
                                                                      "value": 1
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "vstack"
                                                                  },
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "lstack"
                                                                  }
                                                                ]
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "concat"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Identifier",
                                                                "name": "args"
                                                              }
                                                            ]
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "BinaryExpression",
                                                      "operator": "!==",
                                                      "left": {
                                                        "type": "UnaryExpression",
                                                        "operator": "typeof",
                                                        "argument": {
                                                          "type": "Identifier",
                                                          "name": "r"
                                                        },
                                                        "prefix": true
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": "undefined"
                                                      }
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ReturnStatement",
                                                          "argument": {
                                                            "type": "Identifier",
                                                            "name": "r"
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": null
                                                  },
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "Identifier",
                                                      "name": "len"
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "stack"
                                                            },
                                                            "right": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "stack"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "slice"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Literal",
                                                                  "value": 0
                                                                },
                                                                {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "*",
                                                                  "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "*",
                                                                    "left": {
                                                                      "type": "UnaryExpression",
                                                                      "operator": "-",
                                                                      "argument": {
                                                                        "type": "Literal",
                                                                        "value": 1
                                                                      },
                                                                      "prefix": true
                                                                    },
                                                                    "right": {
                                                                      "type": "Identifier",
                                                                      "name": "len"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "Literal",
                                                                    "value": 2
                                                                  }
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "vstack"
                                                            },
                                                            "right": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "vstack"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "slice"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Literal",
                                                                  "value": 0
                                                                },
                                                                {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "*",
                                                                  "left": {
                                                                    "type": "UnaryExpression",
                                                                    "operator": "-",
                                                                    "argument": {
                                                                      "type": "Literal",
                                                                      "value": 1
                                                                    },
                                                                    "prefix": true
                                                                  },
                                                                  "right": {
                                                                    "type": "Identifier",
                                                                    "name": "len"
                                                                  }
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "lstack"
                                                            },
                                                            "right": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "lstack"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "slice"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Literal",
                                                                  "value": 0
                                                                },
                                                                {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "*",
                                                                  "left": {
                                                                    "type": "UnaryExpression",
                                                                    "operator": "-",
                                                                    "argument": {
                                                                      "type": "Literal",
                                                                      "value": 1
                                                                    },
                                                                    "prefix": true
                                                                  },
                                                                  "right": {
                                                                    "type": "Identifier",
                                                                    "name": "len"
                                                                  }
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": null
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "stack"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "push"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ThisExpression"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "productions_"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "MemberExpression",
                                                              "computed": true,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "action"
                                                              },
                                                              "property": {
                                                                "type": "Literal",
                                                                "value": 1
                                                              }
                                                            }
                                                          },
                                                          "property": {
                                                            "type": "Literal",
                                                            "value": 0
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "vstack"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "push"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "yyval"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "$"
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "lstack"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "push"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "yyval"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "_$"
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "newState"
                                                      },
                                                      "right": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "table"
                                                          },
                                                          "property": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "stack"
                                                            },
                                                            "property": {
                                                              "type": "BinaryExpression",
                                                              "operator": "-",
                                                              "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "stack"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "length"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": 2
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "stack"
                                                          },
                                                          "property": {
                                                            "type": "BinaryExpression",
                                                            "operator": "-",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "stack"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "length"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": 1
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "stack"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "push"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "newState"
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "type": "BreakStatement",
                                                    "label": null
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "SwitchCase",
                                                "test": {
                                                  "type": "Literal",
                                                  "value": 3
                                                },
                                                "consequent": [
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "Literal",
                                                      "value": true
                                                    }
                                                  }
                                                ]
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "ReturnStatement",
                                      "argument": {
                                        "type": "Literal",
                                        "value": true
                                      }
                                    }
                                  ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                              },
                              "kind": "init"
                            }
                          ]
                        }
                      }
                    ],
                    "kind": "var"
                  },
                  {
                    "type": "VariableDeclaration",
                    "declarations": [
                      {
                        "type": "VariableDeclarator",
                        "id": {
                          "type": "Identifier",
                          "name": "lexer"
                        },
                        "init": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "VariableDeclaration",
                                  "declarations": [
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "lexer"
                                      },
                                      "init": {
                                        "type": "ObjectExpression",
                                        "properties": [
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "EOF"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": 1
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "parseError"
                                            },
                                            "value": {
                                              "type": "FunctionExpression",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "parseError"
                                              },
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "str"
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "hash"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "yy"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "parser"
                                                      }
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "ThisExpression"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "yy"
                                                                  }
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "parser"
                                                                }
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "parseError"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Identifier",
                                                                "name": "str"
                                                              },
                                                              {
                                                                "type": "Identifier",
                                                                "name": "hash"
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ThrowStatement",
                                                          "argument": {
                                                            "type": "NewExpression",
                                                            "callee": {
                                                              "type": "Identifier",
                                                              "name": "Error"
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Identifier",
                                                                "name": "str"
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "setInput"
                                            },
                                            "value": {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "input"
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "yy"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "yy"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "LogicalExpression",
                                                        "operator": "||",
                                                        "left": {
                                                          "type": "LogicalExpression",
                                                          "operator": "||",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "yy"
                                                          },
                                                          "right": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "yy"
                                                            }
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "ObjectExpression",
                                                          "properties": []
                                                        }
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "_input"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "input"
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "_more"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "ThisExpression"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "_backtrack"
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "done"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": false
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "yylineno"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "ThisExpression"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "yyleng"
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": 0
                                                        }
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "yytext"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "ThisExpression"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "matched"
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "match"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": ""
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "conditionStack"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "ArrayExpression",
                                                        "elements": [
                                                          {
                                                            "type": "Literal",
                                                            "value": "INITIAL"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "yylloc"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "ObjectExpression",
                                                        "properties": [
                                                          {
                                                            "type": "Property",
                                                            "key": {
                                                              "type": "Identifier",
                                                              "name": "first_line"
                                                            },
                                                            "value": {
                                                              "type": "Literal",
                                                              "value": 1
                                                            },
                                                            "kind": "init"
                                                          },
                                                          {
                                                            "type": "Property",
                                                            "key": {
                                                              "type": "Identifier",
                                                              "name": "first_column"
                                                            },
                                                            "value": {
                                                              "type": "Literal",
                                                              "value": 0
                                                            },
                                                            "kind": "init"
                                                          },
                                                          {
                                                            "type": "Property",
                                                            "key": {
                                                              "type": "Identifier",
                                                              "name": "last_line"
                                                            },
                                                            "value": {
                                                              "type": "Literal",
                                                              "value": 1
                                                            },
                                                            "kind": "init"
                                                          },
                                                          {
                                                            "type": "Property",
                                                            "key": {
                                                              "type": "Identifier",
                                                              "name": "last_column"
                                                            },
                                                            "value": {
                                                              "type": "Literal",
                                                              "value": 0
                                                            },
                                                            "kind": "init"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "options"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "ranges"
                                                      }
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "yylloc"
                                                                }
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "range"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "ArrayExpression",
                                                              "elements": [
                                                                {
                                                                  "type": "Literal",
                                                                  "value": 0
                                                                },
                                                                {
                                                                  "type": "Literal",
                                                                  "value": 0
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": null
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "offset"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": 0
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "ThisExpression"
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "input"
                                            },
                                            "value": {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "ch"
                                                        },
                                                        "init": {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "_input"
                                                            }
                                                          },
                                                          "property": {
                                                            "type": "Literal",
                                                            "value": 0
                                                          }
                                                        }
                                                      }
                                                    ],
                                                    "kind": "var"
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "+=",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "yytext"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "ch"
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "UpdateExpression",
                                                      "operator": "++",
                                                      "argument": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "yyleng"
                                                        }
                                                      },
                                                      "prefix": false
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "UpdateExpression",
                                                      "operator": "++",
                                                      "argument": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "offset"
                                                        }
                                                      },
                                                      "prefix": false
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "+=",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "match"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "ch"
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "+=",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "matched"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "ch"
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "lines"
                                                        },
                                                        "init": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "ch"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "match"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Literal",
                                                              "value": {}
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ],
                                                    "kind": "var"
                                                  },
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "Identifier",
                                                      "name": "lines"
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "UpdateExpression",
                                                            "operator": "++",
                                                            "argument": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ThisExpression"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "yylineno"
                                                              }
                                                            },
                                                            "prefix": false
                                                          }
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "UpdateExpression",
                                                            "operator": "++",
                                                            "argument": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "yylloc"
                                                                }
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "last_line"
                                                              }
                                                            },
                                                            "prefix": false
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "UpdateExpression",
                                                            "operator": "++",
                                                            "argument": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "yylloc"
                                                                }
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "last_column"
                                                              }
                                                            },
                                                            "prefix": false
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "options"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "ranges"
                                                      }
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "UpdateExpression",
                                                            "operator": "++",
                                                            "argument": {
                                                              "type": "MemberExpression",
                                                              "computed": true,
                                                              "object": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "ThisExpression"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "yylloc"
                                                                  }
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "range"
                                                                }
                                                              },
                                                              "property": {
                                                                "type": "Literal",
                                                                "value": 1
                                                              }
                                                            },
                                                            "prefix": false
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": null
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "_input"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "_input"
                                                            }
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "slice"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Literal",
                                                            "value": 1
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "Identifier",
                                                      "name": "ch"
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "unput"
                                            },
                                            "value": {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "ch"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "len"
                                                        },
                                                        "init": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "ch"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "length"
                                                          }
                                                        }
                                                      }
                                                    ],
                                                    "kind": "var"
                                                  },
                                                  {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "lines"
                                                        },
                                                        "init": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "ch"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "split"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Literal",
                                                              "value": {}
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ],
                                                    "kind": "var"
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "_input"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "ch"
                                                        },
                                                        "right": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "ThisExpression"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "_input"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "yytext"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "yytext"
                                                            }
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "substr"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Literal",
                                                            "value": 0
                                                          },
                                                          {
                                                            "type": "BinaryExpression",
                                                            "operator": "-",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "yytext"
                                                                }
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "length"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "len"
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "-=",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "offset"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "len"
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "oldLines"
                                                        },
                                                        "init": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ThisExpression"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "match"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "split"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Literal",
                                                              "value": {}
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ],
                                                    "kind": "var"
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "match"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "match"
                                                            }
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "substr"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Literal",
                                                            "value": 0
                                                          },
                                                          {
                                                            "type": "BinaryExpression",
                                                            "operator": "-",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "match"
                                                                }
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "length"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": 1
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "matched"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "matched"
                                                            }
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "substr"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Literal",
                                                            "value": 0
                                                          },
                                                          {
                                                            "type": "BinaryExpression",
                                                            "operator": "-",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "matched"
                                                                }
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "length"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": 1
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "BinaryExpression",
                                                      "operator": "-",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "lines"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "length"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": 1
                                                      }
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "-=",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ThisExpression"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "yylineno"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "BinaryExpression",
                                                              "operator": "-",
                                                              "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "lines"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "length"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": 1
                                                              }
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": null
                                                  },
                                                  {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "r"
                                                        },
                                                        "init": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "yylloc"
                                                            }
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "range"
                                                          }
                                                        }
                                                      }
                                                    ],
                                                    "kind": "var"
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "yylloc"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "ObjectExpression",
                                                        "properties": [
                                                          {
                                                            "type": "Property",
                                                            "key": {
                                                              "type": "Identifier",
                                                              "name": "first_line"
                                                            },
                                                            "value": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "yylloc"
                                                                }
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "first_line"
                                                              }
                                                            },
                                                            "kind": "init"
                                                          },
                                                          {
                                                            "type": "Property",
                                                            "key": {
                                                              "type": "Identifier",
                                                              "name": "last_line"
                                                            },
                                                            "value": {
                                                              "type": "BinaryExpression",
                                                              "operator": "+",
                                                              "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "yylineno"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": 1
                                                              }
                                                            },
                                                            "kind": "init"
                                                          },
                                                          {
                                                            "type": "Property",
                                                            "key": {
                                                              "type": "Identifier",
                                                              "name": "first_column"
                                                            },
                                                            "value": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "yylloc"
                                                                }
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "first_column"
                                                              }
                                                            },
                                                            "kind": "init"
                                                          },
                                                          {
                                                            "type": "Property",
                                                            "key": {
                                                              "type": "Identifier",
                                                              "name": "last_column"
                                                            },
                                                            "value": {
                                                              "type": "ConditionalExpression",
                                                              "test": {
                                                                "type": "Identifier",
                                                                "name": "lines"
                                                              },
                                                              "consequent": {
                                                                "type": "BinaryExpression",
                                                                "operator": "-",
                                                                "left": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "+",
                                                                  "left": {
                                                                    "type": "ConditionalExpression",
                                                                    "test": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "===",
                                                                      "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "lines"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "length"
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "oldLines"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "length"
                                                                        }
                                                                      }
                                                                    },
                                                                    "consequent": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "yylloc"
                                                                        }
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "first_column"
                                                                      }
                                                                    },
                                                                    "alternate": {
                                                                      "type": "Literal",
                                                                      "value": 0
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "MemberExpression",
                                                                      "computed": true,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "oldLines"
                                                                      },
                                                                      "property": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "-",
                                                                        "left": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "oldLines"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "length"
                                                                          }
                                                                        },
                                                                        "right": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "lines"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "length"
                                                                          }
                                                                        }
                                                                      }
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "length"
                                                                    }
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "lines"
                                                                    },
                                                                    "property": {
                                                                      "type": "Literal",
                                                                      "value": 0
                                                                    }
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "length"
                                                                  }
                                                                }
                                                              },
                                                              "alternate": {
                                                                "type": "BinaryExpression",
                                                                "operator": "-",
                                                                "left": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "yylloc"
                                                                    }
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "first_column"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "Identifier",
                                                                  "name": "len"
                                                                }
                                                              }
                                                            },
                                                            "kind": "init"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "options"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "ranges"
                                                      }
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "yylloc"
                                                                }
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "range"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "ArrayExpression",
                                                              "elements": [
                                                                {
                                                                  "type": "MemberExpression",
                                                                  "computed": true,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "r"
                                                                  },
                                                                  "property": {
                                                                    "type": "Literal",
                                                                    "value": 0
                                                                  }
                                                                },
                                                                {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "-",
                                                                  "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                      "type": "MemberExpression",
                                                                      "computed": true,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "r"
                                                                      },
                                                                      "property": {
                                                                        "type": "Literal",
                                                                        "value": 0
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "ThisExpression"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "yyleng"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "Identifier",
                                                                    "name": "len"
                                                                  }
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": null
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "yyleng"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "ThisExpression"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "yytext"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "length"
                                                        }
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "ThisExpression"
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "more"
                                            },
                                            "value": {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "_more"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": true
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "ThisExpression"
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "reject"
                                            },
                                            "value": {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "options"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "backtrack_lexer"
                                                      }
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ThisExpression"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "_backtrack"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": true
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ReturnStatement",
                                                          "argument": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ThisExpression"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "parseError"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "+",
                                                                  "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                      "type": "Literal",
                                                                      "value": "Lexical error on line "
                                                                    },
                                                                    "right": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "+",
                                                                      "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "yylineno"
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "Literal",
                                                                        "value": 1
                                                                      }
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "Literal",
                                                                    "value": ". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\n"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "showPosition"
                                                                    }
                                                                  },
                                                                  "arguments": []
                                                                }
                                                              },
                                                              {
                                                                "type": "ObjectExpression",
                                                                "properties": [
                                                                  {
                                                                    "type": "Property",
                                                                    "key": {
                                                                      "type": "Identifier",
                                                                      "name": "text"
                                                                    },
                                                                    "value": {
                                                                      "type": "Literal",
                                                                      "value": ""
                                                                    },
                                                                    "kind": "init"
                                                                  },
                                                                  {
                                                                    "type": "Property",
                                                                    "key": {
                                                                      "type": "Identifier",
                                                                      "name": "token"
                                                                    },
                                                                    "value": {
                                                                      "type": "Literal",
                                                                      "value": null
                                                                    },
                                                                    "kind": "init"
                                                                  },
                                                                  {
                                                                    "type": "Property",
                                                                    "key": {
                                                                      "type": "Identifier",
                                                                      "name": "line"
                                                                    },
                                                                    "value": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "ThisExpression"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "yylineno"
                                                                      }
                                                                    },
                                                                    "kind": "init"
                                                                  }
                                                                ]
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "ThisExpression"
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "less"
                                            },
                                            "value": {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "n"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "unput"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ThisExpression"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "match"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "slice"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "n"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "pastInput"
                                            },
                                            "value": {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "past"
                                                        },
                                                        "init": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ThisExpression"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "matched"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "substr"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Literal",
                                                              "value": 0
                                                            },
                                                            {
                                                              "type": "BinaryExpression",
                                                              "operator": "-",
                                                              "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "ThisExpression"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "matched"
                                                                  }
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "length"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "ThisExpression"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "match"
                                                                  }
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "length"
                                                                }
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ],
                                                    "kind": "var"
                                                  },
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "BinaryExpression",
                                                      "operator": "+",
                                                      "left": {
                                                        "type": "ConditionalExpression",
                                                        "test": {
                                                          "type": "BinaryExpression",
                                                          "operator": ">",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "past"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "length"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": 20
                                                          }
                                                        },
                                                        "consequent": {
                                                          "type": "Literal",
                                                          "value": "..."
                                                        },
                                                        "alternate": {
                                                          "type": "Literal",
                                                          "value": ""
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "past"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "substr"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "UnaryExpression",
                                                                "operator": "-",
                                                                "argument": {
                                                                  "type": "Literal",
                                                                  "value": 20
                                                                },
                                                                "prefix": true
                                                              }
                                                            ]
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "replace"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Literal",
                                                            "value": {}
                                                          },
                                                          {
                                                            "type": "Literal",
                                                            "value": ""
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "upcomingInput"
                                            },
                                            "value": {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "next"
                                                        },
                                                        "init": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "ThisExpression"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "match"
                                                          }
                                                        }
                                                      }
                                                    ],
                                                    "kind": "var"
                                                  },
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "BinaryExpression",
                                                      "operator": "<",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "next"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "length"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": 20
                                                      }
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "+=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "next"
                                                            },
                                                            "right": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "ThisExpression"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_input"
                                                                  }
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "substr"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Literal",
                                                                  "value": 0
                                                                },
                                                                {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "-",
                                                                  "left": {
                                                                    "type": "Literal",
                                                                    "value": 20
                                                                  },
                                                                  "right": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "next"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "length"
                                                                    }
                                                                  }
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": null
                                                  },
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "next"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "substr"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Literal",
                                                                "value": 0
                                                              },
                                                              {
                                                                "type": "Literal",
                                                                "value": 20
                                                              }
                                                            ]
                                                          },
                                                          "right": {
                                                            "type": "ConditionalExpression",
                                                            "test": {
                                                              "type": "BinaryExpression",
                                                              "operator": ">",
                                                              "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "next"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "length"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": 20
                                                              }
                                                            },
                                                            "consequent": {
                                                              "type": "Literal",
                                                              "value": "..."
                                                            },
                                                            "alternate": {
                                                              "type": "Literal",
                                                              "value": ""
                                                            }
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "replace"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Literal",
                                                          "value": {}
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": ""
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "showPosition"
                                            },
                                            "value": {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "pre"
                                                        },
                                                        "init": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "pastInput"
                                                            }
                                                          },
                                                          "arguments": []
                                                        }
                                                      }
                                                    ],
                                                    "kind": "var"
                                                  },
                                                  {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "c"
                                                        },
                                                        "init": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "NewExpression",
                                                              "callee": {
                                                                "type": "Identifier",
                                                                "name": "Array"
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "+",
                                                                  "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "pre"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "length"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "Literal",
                                                                    "value": 1
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "join"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Literal",
                                                              "value": "-"
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ],
                                                    "kind": "var"
                                                  },
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "BinaryExpression",
                                                      "operator": "+",
                                                      "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "pre"
                                                            },
                                                            "right": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "upcomingInput"
                                                                }
                                                              },
                                                              "arguments": []
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "\n"
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "Identifier",
                                                          "name": "c"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": "^"
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "test_match"
                                            },
                                            "value": {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "match"
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "indexed_rule"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "token"
                                                        },
                                                        "init": null
                                                      },
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "lines"
                                                        },
                                                        "init": null
                                                      },
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "backup"
                                                        },
                                                        "init": null
                                                      }
                                                    ],
                                                    "kind": "var"
                                                  },
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "options"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "backtrack_lexer"
                                                      }
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "backup"
                                                            },
                                                            "right": {
                                                              "type": "ObjectExpression",
                                                              "properties": [
                                                                {
                                                                  "type": "Property",
                                                                  "key": {
                                                                    "type": "Identifier",
                                                                    "name": "yylineno"
                                                                  },
                                                                  "value": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "yylineno"
                                                                    }
                                                                  },
                                                                  "kind": "init"
                                                                },
                                                                {
                                                                  "type": "Property",
                                                                  "key": {
                                                                    "type": "Identifier",
                                                                    "name": "yylloc"
                                                                  },
                                                                  "value": {
                                                                    "type": "ObjectExpression",
                                                                    "properties": [
                                                                      {
                                                                        "type": "Property",
                                                                        "key": {
                                                                          "type": "Identifier",
                                                                          "name": "first_line"
                                                                        },
                                                                        "value": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "yylloc"
                                                                            }
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "first_line"
                                                                          }
                                                                        },
                                                                        "kind": "init"
                                                                      },
                                                                      {
                                                                        "type": "Property",
                                                                        "key": {
                                                                          "type": "Identifier",
                                                                          "name": "last_line"
                                                                        },
                                                                        "value": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "ThisExpression"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "last_line"
                                                                          }
                                                                        },
                                                                        "kind": "init"
                                                                      },
                                                                      {
                                                                        "type": "Property",
                                                                        "key": {
                                                                          "type": "Identifier",
                                                                          "name": "first_column"
                                                                        },
                                                                        "value": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "yylloc"
                                                                            }
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "first_column"
                                                                          }
                                                                        },
                                                                        "kind": "init"
                                                                      },
                                                                      {
                                                                        "type": "Property",
                                                                        "key": {
                                                                          "type": "Identifier",
                                                                          "name": "last_column"
                                                                        },
                                                                        "value": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "yylloc"
                                                                            }
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "last_column"
                                                                          }
                                                                        },
                                                                        "kind": "init"
                                                                      }
                                                                    ]
                                                                  },
                                                                  "kind": "init"
                                                                },
                                                                {
                                                                  "type": "Property",
                                                                  "key": {
                                                                    "type": "Identifier",
                                                                    "name": "yytext"
                                                                  },
                                                                  "value": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "yytext"
                                                                    }
                                                                  },
                                                                  "kind": "init"
                                                                },
                                                                {
                                                                  "type": "Property",
                                                                  "key": {
                                                                    "type": "Identifier",
                                                                    "name": "match"
                                                                  },
                                                                  "value": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "match"
                                                                    }
                                                                  },
                                                                  "kind": "init"
                                                                },
                                                                {
                                                                  "type": "Property",
                                                                  "key": {
                                                                    "type": "Identifier",
                                                                    "name": "matches"
                                                                  },
                                                                  "value": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "matches"
                                                                    }
                                                                  },
                                                                  "kind": "init"
                                                                },
                                                                {
                                                                  "type": "Property",
                                                                  "key": {
                                                                    "type": "Identifier",
                                                                    "name": "matched"
                                                                  },
                                                                  "value": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "matched"
                                                                    }
                                                                  },
                                                                  "kind": "init"
                                                                },
                                                                {
                                                                  "type": "Property",
                                                                  "key": {
                                                                    "type": "Identifier",
                                                                    "name": "yyleng"
                                                                  },
                                                                  "value": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "yyleng"
                                                                    }
                                                                  },
                                                                  "kind": "init"
                                                                },
                                                                {
                                                                  "type": "Property",
                                                                  "key": {
                                                                    "type": "Identifier",
                                                                    "name": "offset"
                                                                  },
                                                                  "value": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "offset"
                                                                    }
                                                                  },
                                                                  "kind": "init"
                                                                },
                                                                {
                                                                  "type": "Property",
                                                                  "key": {
                                                                    "type": "Identifier",
                                                                    "name": "_more"
                                                                  },
                                                                  "value": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "_more"
                                                                    }
                                                                  },
                                                                  "kind": "init"
                                                                },
                                                                {
                                                                  "type": "Property",
                                                                  "key": {
                                                                    "type": "Identifier",
                                                                    "name": "_input"
                                                                  },
                                                                  "value": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "_input"
                                                                    }
                                                                  },
                                                                  "kind": "init"
                                                                },
                                                                {
                                                                  "type": "Property",
                                                                  "key": {
                                                                    "type": "Identifier",
                                                                    "name": "yy"
                                                                  },
                                                                  "value": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "yy"
                                                                    }
                                                                  },
                                                                  "kind": "init"
                                                                },
                                                                {
                                                                  "type": "Property",
                                                                  "key": {
                                                                    "type": "Identifier",
                                                                    "name": "conditionStack"
                                                                  },
                                                                  "value": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "conditionStack"
                                                                        }
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "slice"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "Literal",
                                                                        "value": 0
                                                                      }
                                                                    ]
                                                                  },
                                                                  "kind": "init"
                                                                },
                                                                {
                                                                  "type": "Property",
                                                                  "key": {
                                                                    "type": "Identifier",
                                                                    "name": "done"
                                                                  },
                                                                  "value": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "done"
                                                                    }
                                                                  },
                                                                  "kind": "init"
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "IfStatement",
                                                          "test": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ThisExpression"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "options"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "ranges"
                                                            }
                                                          },
                                                          "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "AssignmentExpression",
                                                                  "operator": "=",
                                                                  "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "backup"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "yylloc"
                                                                      }
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "range"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "ThisExpression"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "yylloc"
                                                                          }
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "range"
                                                                        }
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "slice"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "Literal",
                                                                        "value": 0
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "alternate": null
                                                        }
                                                      ]
                                                    },
                                                    "alternate": null
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "lines"
                                                      },
                                                      "right": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "match"
                                                            },
                                                            "property": {
                                                              "type": "Literal",
                                                              "value": 0
                                                            }
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "match"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Literal",
                                                            "value": {}
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "Identifier",
                                                      "name": "lines"
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "+=",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ThisExpression"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "yylineno"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "lines"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "length"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": null
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "yylloc"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "ObjectExpression",
                                                        "properties": [
                                                          {
                                                            "type": "Property",
                                                            "key": {
                                                              "type": "Identifier",
                                                              "name": "first_line"
                                                            },
                                                            "value": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "yylloc"
                                                                }
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "last_line"
                                                              }
                                                            },
                                                            "kind": "init"
                                                          },
                                                          {
                                                            "type": "Property",
                                                            "key": {
                                                              "type": "Identifier",
                                                              "name": "last_line"
                                                            },
                                                            "value": {
                                                              "type": "BinaryExpression",
                                                              "operator": "+",
                                                              "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "yylineno"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": 1
                                                              }
                                                            },
                                                            "kind": "init"
                                                          },
                                                          {
                                                            "type": "Property",
                                                            "key": {
                                                              "type": "Identifier",
                                                              "name": "first_column"
                                                            },
                                                            "value": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "yylloc"
                                                                }
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "last_column"
                                                              }
                                                            },
                                                            "kind": "init"
                                                          },
                                                          {
                                                            "type": "Property",
                                                            "key": {
                                                              "type": "Identifier",
                                                              "name": "last_column"
                                                            },
                                                            "value": {
                                                              "type": "ConditionalExpression",
                                                              "test": {
                                                                "type": "Identifier",
                                                                "name": "lines"
                                                              },
                                                              "consequent": {
                                                                "type": "BinaryExpression",
                                                                "operator": "-",
                                                                "left": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "lines"
                                                                    },
                                                                    "property": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "-",
                                                                      "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "lines"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "length"
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "Literal",
                                                                        "value": 1
                                                                      }
                                                                    }
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "length"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "MemberExpression",
                                                                          "computed": true,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "lines"
                                                                          },
                                                                          "property": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "-",
                                                                            "left": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "lines"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "length"
                                                                              }
                                                                            },
                                                                            "right": {
                                                                              "type": "Literal",
                                                                              "value": 1
                                                                            }
                                                                          }
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "match"
                                                                        }
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "Literal",
                                                                          "value": {}
                                                                        }
                                                                      ]
                                                                    },
                                                                    "property": {
                                                                      "type": "Literal",
                                                                      "value": 0
                                                                    }
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "length"
                                                                  }
                                                                }
                                                              },
                                                              "alternate": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "yylloc"
                                                                    }
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "last_column"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "match"
                                                                    },
                                                                    "property": {
                                                                      "type": "Literal",
                                                                      "value": 0
                                                                    }
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "length"
                                                                  }
                                                                }
                                                              }
                                                            },
                                                            "kind": "init"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "+=",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "yytext"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "match"
                                                        },
                                                        "property": {
                                                          "type": "Literal",
                                                          "value": 0
                                                        }
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "+=",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "match"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "match"
                                                        },
                                                        "property": {
                                                          "type": "Literal",
                                                          "value": 0
                                                        }
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "matches"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "match"
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "yyleng"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "ThisExpression"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "yytext"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "length"
                                                        }
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "options"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "ranges"
                                                      }
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "yylloc"
                                                                }
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "range"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "ArrayExpression",
                                                              "elements": [
                                                                {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "ThisExpression"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "offset"
                                                                  }
                                                                },
                                                                {
                                                                  "type": "AssignmentExpression",
                                                                  "operator": "+=",
                                                                  "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "offset"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "yyleng"
                                                                    }
                                                                  }
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": null
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "_more"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": false
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "_backtrack"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": false
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "_input"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "_input"
                                                            }
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "slice"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": true,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "match"
                                                              },
                                                              "property": {
                                                                "type": "Literal",
                                                                "value": 0
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "length"
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "+=",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "matched"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "match"
                                                        },
                                                        "property": {
                                                          "type": "Literal",
                                                          "value": 0
                                                        }
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "token"
                                                      },
                                                      "right": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "performAction"
                                                            }
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "call"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "ThisExpression"
                                                          },
                                                          {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "yy"
                                                            }
                                                          },
                                                          {
                                                            "type": "ThisExpression"
                                                          },
                                                          {
                                                            "type": "Identifier",
                                                            "name": "indexed_rule"
                                                          },
                                                          {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ThisExpression"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "conditionStack"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "BinaryExpression",
                                                              "operator": "-",
                                                              "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "ThisExpression"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "conditionStack"
                                                                  }
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "length"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": 1
                                                              }
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "LogicalExpression",
                                                      "operator": "&&",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "done"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "_input"
                                                        }
                                                      }
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ThisExpression"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "done"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": false
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": null
                                                  },
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "Identifier",
                                                      "name": "token"
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ReturnStatement",
                                                          "argument": {
                                                            "type": "Identifier",
                                                            "name": "token"
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": {
                                                      "type": "IfStatement",
                                                      "test": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "_backtrack"
                                                        }
                                                      },
                                                      "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ForInStatement",
                                                            "left": {
                                                              "type": "VariableDeclaration",
                                                              "declarations": [
                                                                {
                                                                  "type": "VariableDeclarator",
                                                                  "id": {
                                                                    "type": "Identifier",
                                                                    "name": "k"
                                                                  },
                                                                  "init": null
                                                                }
                                                              ],
                                                              "kind": "var"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "backup"
                                                            },
                                                            "body": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                      "type": "MemberExpression",
                                                                      "computed": true,
                                                                      "object": {
                                                                        "type": "ThisExpression"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "k"
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "MemberExpression",
                                                                      "computed": true,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "backup"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "k"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "each": false
                                                          },
                                                          {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                              "type": "Literal",
                                                              "value": false
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "alternate": null
                                                    }
                                                  },
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "Literal",
                                                      "value": false
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "next"
                                            },
                                            "value": {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "ThisExpression"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "done"
                                                      }
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ReturnStatement",
                                                          "argument": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "EOF"
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": null
                                                  },
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "UnaryExpression",
                                                      "operator": "!",
                                                      "argument": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "_input"
                                                        }
                                                      },
                                                      "prefix": true
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ThisExpression"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "done"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": true
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": null
                                                  },
                                                  {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "token"
                                                        },
                                                        "init": null
                                                      },
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "match"
                                                        },
                                                        "init": null
                                                      },
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "tempMatch"
                                                        },
                                                        "init": null
                                                      },
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "index"
                                                        },
                                                        "init": null
                                                      }
                                                    ],
                                                    "kind": "var"
                                                  },
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "UnaryExpression",
                                                      "operator": "!",
                                                      "argument": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "_more"
                                                        }
                                                      },
                                                      "prefix": true
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ThisExpression"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "yytext"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": ""
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ThisExpression"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "match"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": ""
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": null
                                                  },
                                                  {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "rules"
                                                        },
                                                        "init": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "_currentRules"
                                                            }
                                                          },
                                                          "arguments": []
                                                        }
                                                      }
                                                    ],
                                                    "kind": "var"
                                                  },
                                                  {
                                                    "type": "ForStatement",
                                                    "init": {
                                                      "type": "VariableDeclaration",
                                                      "declarations": [
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "i"
                                                          },
                                                          "init": {
                                                            "type": "Literal",
                                                            "value": 0
                                                          }
                                                        }
                                                      ],
                                                      "kind": "var"
                                                    },
                                                    "test": {
                                                      "type": "BinaryExpression",
                                                      "operator": "<",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "i"
                                                      },
                                                      "right": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "rules"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "length"
                                                        }
                                                      }
                                                    },
                                                    "update": {
                                                      "type": "UpdateExpression",
                                                      "operator": "++",
                                                      "argument": {
                                                        "type": "Identifier",
                                                        "name": "i"
                                                      },
                                                      "prefix": false
                                                    },
                                                    "body": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "tempMatch"
                                                            },
                                                            "right": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "ThisExpression"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "_input"
                                                                  }
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "match"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "MemberExpression",
                                                                  "computed": true,
                                                                  "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "rules"
                                                                    }
                                                                  },
                                                                  "property": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "rules"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "i"
                                                                    }
                                                                  }
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "IfStatement",
                                                          "test": {
                                                            "type": "LogicalExpression",
                                                            "operator": "&&",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "tempMatch"
                                                            },
                                                            "right": {
                                                              "type": "LogicalExpression",
                                                              "operator": "||",
                                                              "left": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                  "type": "Identifier",
                                                                  "name": "match"
                                                                },
                                                                "prefix": true
                                                              },
                                                              "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": ">",
                                                                "left": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "tempMatch"
                                                                    },
                                                                    "property": {
                                                                      "type": "Literal",
                                                                      "value": 0
                                                                    }
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "length"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "match"
                                                                    },
                                                                    "property": {
                                                                      "type": "Literal",
                                                                      "value": 0
                                                                    }
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "length"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "AssignmentExpression",
                                                                  "operator": "=",
                                                                  "left": {
                                                                    "type": "Identifier",
                                                                    "name": "match"
                                                                  },
                                                                  "right": {
                                                                    "type": "Identifier",
                                                                    "name": "tempMatch"
                                                                  }
                                                                }
                                                              },
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "AssignmentExpression",
                                                                  "operator": "=",
                                                                  "left": {
                                                                    "type": "Identifier",
                                                                    "name": "index"
                                                                  },
                                                                  "right": {
                                                                    "type": "Identifier",
                                                                    "name": "i"
                                                                  }
                                                                }
                                                              },
                                                              {
                                                                "type": "IfStatement",
                                                                "test": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "options"
                                                                    }
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "backtrack_lexer"
                                                                  }
                                                                },
                                                                "consequent": {
                                                                  "type": "BlockStatement",
                                                                  "body": [
                                                                    {
                                                                      "type": "ExpressionStatement",
                                                                      "expression": {
                                                                        "type": "AssignmentExpression",
                                                                        "operator": "=",
                                                                        "left": {
                                                                          "type": "Identifier",
                                                                          "name": "token"
                                                                        },
                                                                        "right": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "ThisExpression"
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "test_match"
                                                                            }
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "tempMatch"
                                                                            },
                                                                            {
                                                                              "type": "MemberExpression",
                                                                              "computed": true,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "rules"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "i"
                                                                              }
                                                                            }
                                                                          ]
                                                                        }
                                                                      }
                                                                    },
                                                                    {
                                                                      "type": "IfStatement",
                                                                      "test": {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "!==",
                                                                        "left": {
                                                                          "type": "Identifier",
                                                                          "name": "token"
                                                                        },
                                                                        "right": {
                                                                          "type": "Literal",
                                                                          "value": false
                                                                        }
                                                                      },
                                                                      "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                          {
                                                                            "type": "ReturnStatement",
                                                                            "argument": {
                                                                              "type": "Identifier",
                                                                              "name": "token"
                                                                            }
                                                                          }
                                                                        ]
                                                                      },
                                                                      "alternate": {
                                                                        "type": "IfStatement",
                                                                        "test": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "ThisExpression"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "_backtrack"
                                                                          }
                                                                        },
                                                                        "consequent": {
                                                                          "type": "BlockStatement",
                                                                          "body": [
                                                                            {
                                                                              "type": "ExpressionStatement",
                                                                              "expression": {
                                                                                "type": "AssignmentExpression",
                                                                                "operator": "=",
                                                                                "left": {
                                                                                  "type": "Identifier",
                                                                                  "name": "match"
                                                                                },
                                                                                "right": {
                                                                                  "type": "Literal",
                                                                                  "value": false
                                                                                }
                                                                              }
                                                                            },
                                                                            {
                                                                              "type": "ContinueStatement",
                                                                              "label": null
                                                                            }
                                                                          ]
                                                                        },
                                                                        "alternate": {
                                                                          "type": "BlockStatement",
                                                                          "body": [
                                                                            {
                                                                              "type": "ReturnStatement",
                                                                              "argument": {
                                                                                "type": "Literal",
                                                                                "value": false
                                                                              }
                                                                            }
                                                                          ]
                                                                        }
                                                                      }
                                                                    }
                                                                  ]
                                                                },
                                                                "alternate": {
                                                                  "type": "IfStatement",
                                                                  "test": {
                                                                    "type": "UnaryExpression",
                                                                    "operator": "!",
                                                                    "argument": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "options"
                                                                        }
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "flex"
                                                                      }
                                                                    },
                                                                    "prefix": true
                                                                  },
                                                                  "consequent": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                      {
                                                                        "type": "BreakStatement",
                                                                        "label": null
                                                                      }
                                                                    ]
                                                                  },
                                                                  "alternate": null
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "alternate": null
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "Identifier",
                                                      "name": "match"
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "token"
                                                            },
                                                            "right": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "test_match"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "match"
                                                                },
                                                                {
                                                                  "type": "MemberExpression",
                                                                  "computed": true,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "rules"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "index"
                                                                  }
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "IfStatement",
                                                          "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "!==",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "token"
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": false
                                                            }
                                                          },
                                                          "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                              {
                                                                "type": "ReturnStatement",
                                                                "argument": {
                                                                  "type": "Identifier",
                                                                  "name": "token"
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "alternate": null
                                                        },
                                                        {
                                                          "type": "ReturnStatement",
                                                          "argument": {
                                                            "type": "Literal",
                                                            "value": false
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": null
                                                  },
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "BinaryExpression",
                                                      "operator": "===",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "_input"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": ""
                                                      }
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ReturnStatement",
                                                          "argument": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "EOF"
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ReturnStatement",
                                                          "argument": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ThisExpression"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "parseError"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "+",
                                                                  "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                      "type": "Literal",
                                                                      "value": "Lexical error on line "
                                                                    },
                                                                    "right": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "+",
                                                                      "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "ThisExpression"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "yylineno"
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "Literal",
                                                                        "value": 1
                                                                      }
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "Literal",
                                                                    "value": ". Unrecognized text.\n"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "ThisExpression"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "showPosition"
                                                                    }
                                                                  },
                                                                  "arguments": []
                                                                }
                                                              },
                                                              {
                                                                "type": "ObjectExpression",
                                                                "properties": [
                                                                  {
                                                                    "type": "Property",
                                                                    "key": {
                                                                      "type": "Identifier",
                                                                      "name": "text"
                                                                    },
                                                                    "value": {
                                                                      "type": "Literal",
                                                                      "value": ""
                                                                    },
                                                                    "kind": "init"
                                                                  },
                                                                  {
                                                                    "type": "Property",
                                                                    "key": {
                                                                      "type": "Identifier",
                                                                      "name": "token"
                                                                    },
                                                                    "value": {
                                                                      "type": "Literal",
                                                                      "value": null
                                                                    },
                                                                    "kind": "init"
                                                                  },
                                                                  {
                                                                    "type": "Property",
                                                                    "key": {
                                                                      "type": "Identifier",
                                                                      "name": "line"
                                                                    },
                                                                    "value": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "ThisExpression"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "yylineno"
                                                                      }
                                                                    },
                                                                    "kind": "init"
                                                                  }
                                                                ]
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "lex"
                                            },
                                            "value": {
                                              "type": "FunctionExpression",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "lex"
                                              },
                                              "params": [],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "r"
                                                        },
                                                        "init": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "next"
                                                            }
                                                          },
                                                          "arguments": []
                                                        }
                                                      }
                                                    ],
                                                    "kind": "var"
                                                  },
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "Identifier",
                                                      "name": "r"
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ReturnStatement",
                                                          "argument": {
                                                            "type": "Identifier",
                                                            "name": "r"
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ReturnStatement",
                                                          "argument": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ThisExpression"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "lex"
                                                              }
                                                            },
                                                            "arguments": []
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "begin"
                                            },
                                            "value": {
                                              "type": "FunctionExpression",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "begin"
                                              },
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "condition"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "ThisExpression"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "conditionStack"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "push"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "condition"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "popState"
                                            },
                                            "value": {
                                              "type": "FunctionExpression",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "popState"
                                              },
                                              "params": [],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "n"
                                                        },
                                                        "init": {
                                                          "type": "BinaryExpression",
                                                          "operator": "-",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ThisExpression"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "conditionStack"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "length"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": 1
                                                          }
                                                        }
                                                      }
                                                    ],
                                                    "kind": "var"
                                                  },
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "BinaryExpression",
                                                      "operator": ">",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "n"
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": 0
                                                      }
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ReturnStatement",
                                                          "argument": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "conditionStack"
                                                                }
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "pop"
                                                              }
                                                            },
                                                            "arguments": []
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ReturnStatement",
                                                          "argument": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ThisExpression"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "conditionStack"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Literal",
                                                              "value": 0
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "_currentRules"
                                            },
                                            "value": {
                                              "type": "FunctionExpression",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "_currentRules"
                                              },
                                              "params": [],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "LogicalExpression",
                                                      "operator": "&&",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "ThisExpression"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "conditionStack"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "length"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "ThisExpression"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "conditionStack"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "BinaryExpression",
                                                          "operator": "-",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ThisExpression"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "conditionStack"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "length"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": 1
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ReturnStatement",
                                                          "argument": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": true,
                                                              "object": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "conditions"
                                                                }
                                                              },
                                                              "property": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "ThisExpression"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "conditionStack"
                                                                  }
                                                                },
                                                                "property": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "-",
                                                                  "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "ThisExpression"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "conditionStack"
                                                                      }
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "length"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "Literal",
                                                                    "value": 1
                                                                  }
                                                                }
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "rules"
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ReturnStatement",
                                                          "argument": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": true,
                                                              "object": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "ThisExpression"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "conditions"
                                                                }
                                                              },
                                                              "property": {
                                                                "type": "Literal",
                                                                "value": "INITIAL"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "rules"
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "topState"
                                            },
                                            "value": {
                                              "type": "FunctionExpression",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "topState"
                                              },
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "n"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "n"
                                                      },
                                                      "right": {
                                                        "type": "BinaryExpression",
                                                        "operator": "-",
                                                        "left": {
                                                          "type": "BinaryExpression",
                                                          "operator": "-",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ThisExpression"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "conditionStack"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "length"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": 1
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "Math"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "abs"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "LogicalExpression",
                                                              "operator": "||",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "n"
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": 0
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "BinaryExpression",
                                                      "operator": ">=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "n"
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": 0
                                                      }
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ReturnStatement",
                                                          "argument": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "ThisExpression"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "conditionStack"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "n"
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ReturnStatement",
                                                          "argument": {
                                                            "type": "Literal",
                                                            "value": "INITIAL"
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "pushState"
                                            },
                                            "value": {
                                              "type": "FunctionExpression",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "pushState"
                                              },
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "condition"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "begin"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "condition"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "stateStackSize"
                                            },
                                            "value": {
                                              "type": "FunctionExpression",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "stateStackSize"
                                              },
                                              "params": [],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ThisExpression"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "conditionStack"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "length"
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "options"
                                            },
                                            "value": {
                                              "type": "ObjectExpression",
                                              "properties": []
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "performAction"
                                            },
                                            "value": {
                                              "type": "FunctionExpression",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "anonymous"
                                              },
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "yy"
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "yy_"
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "$avoiding_name_collisions"
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "YY_START"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "YYSTATE"
                                                        },
                                                        "init": {
                                                          "type": "Identifier",
                                                          "name": "YY_START"
                                                        }
                                                      }
                                                    ],
                                                    "kind": "var"
                                                  },
                                                  {
                                                    "type": "SwitchStatement",
                                                    "discriminant": {
                                                      "type": "Identifier",
                                                      "name": "$avoiding_name_collisions"
                                                    },
                                                    "cases": [
                                                      {
                                                        "type": "SwitchCase",
                                                        "test": {
                                                          "type": "Literal",
                                                          "value": 0
                                                        },
                                                        "consequent": [
                                                          {
                                                            "type": "BreakStatement",
                                                            "label": null
                                                          }
                                                        ]
                                                      },
                                                      {
                                                        "type": "SwitchCase",
                                                        "test": {
                                                          "type": "Literal",
                                                          "value": 1
                                                        },
                                                        "consequent": [
                                                          {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                              "type": "Literal",
                                                              "value": 23
                                                            }
                                                          },
                                                          {
                                                            "type": "BreakStatement",
                                                            "label": null
                                                          }
                                                        ]
                                                      },
                                                      {
                                                        "type": "SwitchCase",
                                                        "test": {
                                                          "type": "Literal",
                                                          "value": 2
                                                        },
                                                        "consequent": [
                                                          {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                              "type": "Literal",
                                                              "value": 28
                                                            }
                                                          },
                                                          {
                                                            "type": "BreakStatement",
                                                            "label": null
                                                          }
                                                        ]
                                                      },
                                                      {
                                                        "type": "SwitchCase",
                                                        "test": {
                                                          "type": "Literal",
                                                          "value": 3
                                                        },
                                                        "consequent": [
                                                          {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                              "type": "Literal",
                                                              "value": 29
                                                            }
                                                          },
                                                          {
                                                            "type": "BreakStatement",
                                                            "label": null
                                                          }
                                                        ]
                                                      },
                                                      {
                                                        "type": "SwitchCase",
                                                        "test": {
                                                          "type": "Literal",
                                                          "value": 4
                                                        },
                                                        "consequent": [
                                                          {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                              "type": "Literal",
                                                              "value": 18
                                                            }
                                                          },
                                                          {
                                                            "type": "BreakStatement",
                                                            "label": null
                                                          }
                                                        ]
                                                      },
                                                      {
                                                        "type": "SwitchCase",
                                                        "test": {
                                                          "type": "Literal",
                                                          "value": 5
                                                        },
                                                        "consequent": [
                                                          {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                              "type": "Literal",
                                                              "value": 20
                                                            }
                                                          },
                                                          {
                                                            "type": "BreakStatement",
                                                            "label": null
                                                          }
                                                        ]
                                                      },
                                                      {
                                                        "type": "SwitchCase",
                                                        "test": {
                                                          "type": "Literal",
                                                          "value": 6
                                                        },
                                                        "consequent": [
                                                          {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                              "type": "Literal",
                                                              "value": 32
                                                            }
                                                          },
                                                          {
                                                            "type": "BreakStatement",
                                                            "label": null
                                                          }
                                                        ]
                                                      },
                                                      {
                                                        "type": "SwitchCase",
                                                        "test": {
                                                          "type": "Literal",
                                                          "value": 7
                                                        },
                                                        "consequent": [
                                                          {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                              "type": "Literal",
                                                              "value": 33
                                                            }
                                                          },
                                                          {
                                                            "type": "BreakStatement",
                                                            "label": null
                                                          }
                                                        ]
                                                      },
                                                      {
                                                        "type": "SwitchCase",
                                                        "test": {
                                                          "type": "Literal",
                                                          "value": 8
                                                        },
                                                        "consequent": [
                                                          {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                              "type": "Literal",
                                                              "value": 34
                                                            }
                                                          },
                                                          {
                                                            "type": "BreakStatement",
                                                            "label": null
                                                          }
                                                        ]
                                                      },
                                                      {
                                                        "type": "SwitchCase",
                                                        "test": {
                                                          "type": "Literal",
                                                          "value": 9
                                                        },
                                                        "consequent": [
                                                          {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                              "type": "Literal",
                                                              "value": 21
                                                            }
                                                          },
                                                          {
                                                            "type": "BreakStatement",
                                                            "label": null
                                                          }
                                                        ]
                                                      },
                                                      {
                                                        "type": "SwitchCase",
                                                        "test": {
                                                          "type": "Literal",
                                                          "value": 10
                                                        },
                                                        "consequent": [
                                                          {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                              "type": "Literal",
                                                              "value": 22
                                                            }
                                                          },
                                                          {
                                                            "type": "BreakStatement",
                                                            "label": null
                                                          }
                                                        ]
                                                      },
                                                      {
                                                        "type": "SwitchCase",
                                                        "test": {
                                                          "type": "Literal",
                                                          "value": 11
                                                        },
                                                        "consequent": [
                                                          {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                              "type": "Literal",
                                                              "value": 17
                                                            }
                                                          },
                                                          {
                                                            "type": "BreakStatement",
                                                            "label": null
                                                          }
                                                        ]
                                                      },
                                                      {
                                                        "type": "SwitchCase",
                                                        "test": {
                                                          "type": "Literal",
                                                          "value": 12
                                                        },
                                                        "consequent": [
                                                          {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                              "type": "Literal",
                                                              "value": 27
                                                            }
                                                          },
                                                          {
                                                            "type": "BreakStatement",
                                                            "label": null
                                                          }
                                                        ]
                                                      },
                                                      {
                                                        "type": "SwitchCase",
                                                        "test": {
                                                          "type": "Literal",
                                                          "value": 13
                                                        },
                                                        "consequent": [
                                                          {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                              "type": "Literal",
                                                              "value": 25
                                                            }
                                                          },
                                                          {
                                                            "type": "BreakStatement",
                                                            "label": null
                                                          }
                                                        ]
                                                      },
                                                      {
                                                        "type": "SwitchCase",
                                                        "test": {
                                                          "type": "Literal",
                                                          "value": 14
                                                        },
                                                        "consequent": [
                                                          {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                              "type": "Literal",
                                                              "value": 5
                                                            }
                                                          },
                                                          {
                                                            "type": "BreakStatement",
                                                            "label": null
                                                          }
                                                        ]
                                                      },
                                                      {
                                                        "type": "SwitchCase",
                                                        "test": {
                                                          "type": "Literal",
                                                          "value": 15
                                                        },
                                                        "consequent": [
                                                          {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                              "type": "Literal",
                                                              "value": 16
                                                            }
                                                          },
                                                          {
                                                            "type": "BreakStatement",
                                                            "label": null
                                                          }
                                                        ]
                                                      },
                                                      {
                                                        "type": "SwitchCase",
                                                        "test": {
                                                          "type": "Literal",
                                                          "value": 16
                                                        },
                                                        "consequent": [
                                                          {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                              "type": "Literal",
                                                              "value": 14
                                                            }
                                                          },
                                                          {
                                                            "type": "BreakStatement",
                                                            "label": null
                                                          }
                                                        ]
                                                      },
                                                      {
                                                        "type": "SwitchCase",
                                                        "test": {
                                                          "type": "Literal",
                                                          "value": 17
                                                        },
                                                        "consequent": [
                                                          {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                              "type": "Literal",
                                                              "value": 15
                                                            }
                                                          },
                                                          {
                                                            "type": "BreakStatement",
                                                            "label": null
                                                          }
                                                        ]
                                                      },
                                                      {
                                                        "type": "SwitchCase",
                                                        "test": {
                                                          "type": "Literal",
                                                          "value": 18
                                                        },
                                                        "consequent": [
                                                          {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                              "type": "Literal",
                                                              "value": "DOT"
                                                            }
                                                          },
                                                          {
                                                            "type": "BreakStatement",
                                                            "label": null
                                                          }
                                                        ]
                                                      },
                                                      {
                                                        "type": "SwitchCase",
                                                        "test": {
                                                          "type": "Literal",
                                                          "value": 19
                                                        },
                                                        "consequent": [
                                                          {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                              "type": "Literal",
                                                              "value": "INVALID"
                                                            }
                                                          },
                                                          {
                                                            "type": "BreakStatement",
                                                            "label": null
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "rules"
                                            },
                                            "value": {
                                              "type": "ArrayExpression",
                                              "elements": [
                                                {
                                                  "type": "Literal",
                                                  "value": {}
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": {}
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": {}
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": {}
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": {}
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": {}
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": {}
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": {}
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": {}
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": {}
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": {}
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": {}
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": {}
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": {}
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": {}
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": {}
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": {}
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": {}
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": {}
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": {}
                                                }
                                              ]
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "conditions"
                                            },
                                            "value": {
                                              "type": "ObjectExpression",
                                              "properties": [
                                                {
                                                  "type": "Property",
                                                  "key": {
                                                    "type": "Literal",
                                                    "value": "INITIAL"
                                                  },
                                                  "value": {
                                                    "type": "ObjectExpression",
                                                    "properties": [
                                                      {
                                                        "type": "Property",
                                                        "key": {
                                                          "type": "Literal",
                                                          "value": "rules"
                                                        },
                                                        "value": {
                                                          "type": "ArrayExpression",
                                                          "elements": [
                                                            {
                                                              "type": "Literal",
                                                              "value": 0
                                                            },
                                                            {
                                                              "type": "Literal",
                                                              "value": 1
                                                            },
                                                            {
                                                              "type": "Literal",
                                                              "value": 2
                                                            },
                                                            {
                                                              "type": "Literal",
                                                              "value": 3
                                                            },
                                                            {
                                                              "type": "Literal",
                                                              "value": 4
                                                            },
                                                            {
                                                              "type": "Literal",
                                                              "value": 5
                                                            },
                                                            {
                                                              "type": "Literal",
                                                              "value": 6
                                                            },
                                                            {
                                                              "type": "Literal",
                                                              "value": 7
                                                            },
                                                            {
                                                              "type": "Literal",
                                                              "value": 8
                                                            },
                                                            {
                                                              "type": "Literal",
                                                              "value": 9
                                                            },
                                                            {
                                                              "type": "Literal",
                                                              "value": 10
                                                            },
                                                            {
                                                              "type": "Literal",
                                                              "value": 11
                                                            },
                                                            {
                                                              "type": "Literal",
                                                              "value": 12
                                                            },
                                                            {
                                                              "type": "Literal",
                                                              "value": 13
                                                            },
                                                            {
                                                              "type": "Literal",
                                                              "value": 14
                                                            },
                                                            {
                                                              "type": "Literal",
                                                              "value": 15
                                                            },
                                                            {
                                                              "type": "Literal",
                                                              "value": 16
                                                            },
                                                            {
                                                              "type": "Literal",
                                                              "value": 17
                                                            },
                                                            {
                                                              "type": "Literal",
                                                              "value": 18
                                                            },
                                                            {
                                                              "type": "Literal",
                                                              "value": 19
                                                            }
                                                          ]
                                                        },
                                                        "kind": "init"
                                                      },
                                                      {
                                                        "type": "Property",
                                                        "key": {
                                                          "type": "Literal",
                                                          "value": "inclusive"
                                                        },
                                                        "value": {
                                                          "type": "Literal",
                                                          "value": true
                                                        },
                                                        "kind": "init"
                                                      }
                                                    ]
                                                  },
                                                  "kind": "init"
                                                }
                                              ]
                                            },
                                            "kind": "init"
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "kind": "var"
                                },
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "Identifier",
                                    "name": "lexer"
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          "arguments": []
                        }
                      }
                    ],
                    "kind": "var"
                  },
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "AssignmentExpression",
                      "operator": "=",
                      "left": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "parser"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "lexer"
                        }
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "lexer"
                      }
                    }
                  },
                  {
                    "type": "FunctionDeclaration",
                    "id": {
                      "type": "Identifier",
                      "name": "Parser"
                    },
                    "params": [],
                    "defaults": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "ThisExpression"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "yy"
                              }
                            },
                            "right": {
                              "type": "ObjectExpression",
                              "properties": []
                            }
                          }
                        }
                      ]
                    },
                    "rest": null,
                    "generator": false,
                    "expression": false
                  },
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "AssignmentExpression",
                      "operator": "=",
                      "left": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "Parser"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "prototype"
                        }
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "parser"
                      }
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "AssignmentExpression",
                      "operator": "=",
                      "left": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "parser"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "Parser"
                        }
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "Parser"
                      }
                    }
                  },
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "NewExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "Parser"
                      },
                      "arguments": []
                    }
                  }
                ]
              },
              "rest": null,
              "generator": false,
              "expression": false
            },
            "arguments": []
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "IfStatement",
      "test": {
        "type": "LogicalExpression",
        "operator": "&&",
        "left": {
          "type": "BinaryExpression",
          "operator": "!==",
          "left": {
            "type": "UnaryExpression",
            "operator": "typeof",
            "argument": {
              "type": "Identifier",
              "name": "require"
            },
            "prefix": true
          },
          "right": {
            "type": "Literal",
            "value": "undefined"
          }
        },
        "right": {
          "type": "BinaryExpression",
          "operator": "!==",
          "left": {
            "type": "UnaryExpression",
            "operator": "typeof",
            "argument": {
              "type": "Identifier",
              "name": "exports"
            },
            "prefix": true
          },
          "right": {
            "type": "Literal",
            "value": "undefined"
          }
        }
      },
      "consequent": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "exports"
                },
                "property": {
                  "type": "Identifier",
                  "name": "parser"
                }
              },
              "right": {
                "type": "Identifier",
                "name": "parser"
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "exports"
                },
                "property": {
                  "type": "Identifier",
                  "name": "Parser"
                }
              },
              "right": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "parser"
                },
                "property": {
                  "type": "Identifier",
                  "name": "Parser"
                }
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "exports"
                },
                "property": {
                  "type": "Identifier",
                  "name": "parse"
                }
              },
              "right": {
                "type": "FunctionExpression",
                "id": null,
                "params": [],
                "defaults": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "parser"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "parse"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "apply"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "parser"
                          },
                          {
                            "type": "Identifier",
                            "name": "arguments"
                          }
                        ]
                      }
                    }
                  ]
                },
                "rest": null,
                "generator": false,
                "expression": false
              }
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "exports"
                },
                "property": {
                  "type": "Identifier",
                  "name": "main"
                }
              },
              "right": {
                "type": "FunctionExpression",
                "id": {
                  "type": "Identifier",
                  "name": "commonjsMain"
                },
                "params": [
                  {
                    "type": "Identifier",
                    "name": "args"
                  }
                ],
                "defaults": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "UnaryExpression",
                        "operator": "!",
                        "argument": {
                          "type": "MemberExpression",
                          "computed": true,
                          "object": {
                            "type": "Identifier",
                            "name": "args"
                          },
                          "property": {
                            "type": "Literal",
                            "value": 1
                          }
                        },
                        "prefix": true
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "console"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "log"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                      "type": "Literal",
                                      "value": "Usage: "
                                    },
                                    "right": {
                                      "type": "MemberExpression",
                                      "computed": true,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "args"
                                      },
                                      "property": {
                                        "type": "Literal",
                                        "value": 0
                                      }
                                    }
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": " FILE"
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "process"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "exit"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": 1
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "alternate": null
                    },
                    {
                      "type": "VariableDeclaration",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "Identifier",
                            "name": "source"
                          },
                          "init": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "require"
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": "fs"
                                  }
                                ]
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "readFileSync"
                              }
                            },
                            "arguments": [
                              {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "require"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "value": "path"
                                      }
                                    ]
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "normalize"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "args"
                                    },
                                    "property": {
                                      "type": "Literal",
                                      "value": 1
                                    }
                                  }
                                ]
                              },
                              {
                                "type": "Literal",
                                "value": "utf8"
                              }
                            ]
                          }
                        }
                      ],
                      "kind": "var"
                    },
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "exports"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "parser"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "parse"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "source"
                          }
                        ]
                      }
                    }
                  ]
                },
                "rest": null,
                "generator": false,
                "expression": false
              }
            }
          },
          {
            "type": "IfStatement",
            "test": {
              "type": "LogicalExpression",
              "operator": "&&",
              "left": {
                "type": "BinaryExpression",
                "operator": "!==",
                "left": {
                  "type": "UnaryExpression",
                  "operator": "typeof",
                  "argument": {
                    "type": "Identifier",
                    "name": "module"
                  },
                  "prefix": true
                },
                "right": {
                  "type": "Literal",
                  "value": "undefined"
                }
              },
              "right": {
                "type": "BinaryExpression",
                "operator": "===",
                "left": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "Identifier",
                    "name": "require"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "main"
                  }
                },
                "right": {
                  "type": "Identifier",
                  "name": "module"
                }
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "exports"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "main"
                      }
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "process"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "argv"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "slice"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": 1
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            },
            "alternate": null
          }
        ]
      },
      "alternate": null
    }
  ]
}
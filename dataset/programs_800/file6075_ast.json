{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "oid"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "require"
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "oid"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "Q"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "require"
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "kew"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "nodeunitq"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "require"
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "nodeunitq"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "builder"
          },
          "init": {
            "type": "NewExpression",
            "callee": {
              "type": "MemberExpression",
              "computed": false,
              "object": {
                "type": "Identifier",
                "name": "nodeunitq"
              },
              "property": {
                "type": "Identifier",
                "name": "Builder"
              }
            },
            "arguments": [
              {
                "type": "Identifier",
                "name": "exports"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "utils"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "require"
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "../lib/utils"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "exports"
          },
          "property": {
            "type": "Identifier",
            "name": "setUp"
          }
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "params": [
            {
              "type": "Identifier",
              "name": "done"
            }
          ],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "graph"
                    }
                  },
                  "right": {
                    "type": "NewExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "require"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "../lib/shepherd"
                          }
                        ]
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "Graph"
                      }
                    },
                    "arguments": []
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "done"
                  },
                  "arguments": []
                }
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "builder"
          },
          "property": {
            "type": "Identifier",
            "name": "add"
          }
        },
        "arguments": [
          {
            "type": "FunctionExpression",
            "id": {
              "type": "Identifier",
              "name": "testGetClones"
            },
            "params": [
              {
                "type": "Identifier",
                "name": "test"
              }
            ],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "graph1"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "ThisExpression"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "graph"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "clone"
                          }
                        },
                        "arguments": []
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "graph2"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "graph1"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "clone"
                          }
                        },
                        "arguments": []
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "graph3"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "graph2"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "clone"
                          }
                        },
                        "arguments": []
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "clones"
                      },
                      "init": null
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "clones"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "ThisExpression"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "graph"
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "getClones"
                        }
                      },
                      "arguments": []
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "test"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "equal"
                      }
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "clones"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "length"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": 1
                      },
                      {
                        "type": "Literal",
                        "value": "Parent graph should only have 1 clone"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "test"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "equal"
                      }
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                          "type": "Identifier",
                          "name": "clones"
                        },
                        "property": {
                          "type": "Literal",
                          "value": 0
                        }
                      },
                      {
                        "type": "Identifier",
                        "name": "graph1"
                      },
                      {
                        "type": "Literal",
                        "value": "Graph1 should be clone of parent graph"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "clones"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "graph1"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "getClones"
                        }
                      },
                      "arguments": []
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "test"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "equal"
                      }
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "clones"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "length"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": 1
                      },
                      {
                        "type": "Literal",
                        "value": "Graph1 should only have 1 clone"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "test"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "equal"
                      }
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                          "type": "Identifier",
                          "name": "clones"
                        },
                        "property": {
                          "type": "Literal",
                          "value": 0
                        }
                      },
                      {
                        "type": "Identifier",
                        "name": "graph2"
                      },
                      {
                        "type": "Literal",
                        "value": "Graph2 should be clone of Graph1"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "clones"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "graph2"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "getClones"
                        }
                      },
                      "arguments": []
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "test"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "equal"
                      }
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "clones"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "length"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": 1
                      },
                      {
                        "type": "Literal",
                        "value": "Graph2 should only have 1 clone"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "test"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "equal"
                      }
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                          "type": "Identifier",
                          "name": "clones"
                        },
                        "property": {
                          "type": "Literal",
                          "value": 0
                        }
                      },
                      {
                        "type": "Identifier",
                        "name": "graph3"
                      },
                      {
                        "type": "Literal",
                        "value": "Graph3 should be clone of Graph2"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "clones"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "graph3"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "getClones"
                        }
                      },
                      "arguments": []
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "test"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "equal"
                      }
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "clones"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "length"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": 0
                      },
                      {
                        "type": "Literal",
                        "value": "Graph2 should have no clones"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "test"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "done"
                      }
                    },
                    "arguments": []
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "builder"
          },
          "property": {
            "type": "Identifier",
            "name": "add"
          }
        },
        "arguments": [
          {
            "type": "FunctionExpression",
            "id": {
              "type": "Identifier",
              "name": "testGetBuilders"
            },
            "params": [
              {
                "type": "Identifier",
                "name": "test"
              }
            ],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "builders"
                      },
                      "init": {
                        "type": "ObjectExpression",
                        "properties": []
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "builder1"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "ThisExpression"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "graph"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "newBuilder"
                          }
                        },
                        "arguments": []
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "builder2"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "ThisExpression"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "graph"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "newBuilder"
                          }
                        },
                        "arguments": []
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "builder3"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "ThisExpression"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "graph"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "newBuilder"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "named"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": true,
                      "object": {
                        "type": "Identifier",
                        "name": "builders"
                      },
                      "property": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "oid"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "hash"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "builder1"
                          }
                        ]
                      }
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "builder1"
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": true,
                      "object": {
                        "type": "Identifier",
                        "name": "builders"
                      },
                      "property": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "oid"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "hash"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "builder2"
                          }
                        ]
                      }
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "builder2"
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": true,
                      "object": {
                        "type": "Identifier",
                        "name": "builders"
                      },
                      "property": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "oid"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "hash"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "builder3"
                          }
                        ]
                      }
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "builder3"
                    }
                  }
                },
                {
                  "type": "TryStatement",
                  "block": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "builder4"
                            },
                            "init": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "ThisExpression"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "graph"
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "newBuilder"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "named"
                                }
                              ]
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "test"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "fail"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": true
                            },
                            {
                              "type": "Literal",
                              "value": "Shouldn't be able to create another builder with the same name"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "guardedHandlers": [],
                  "handlers": [
                    {
                      "type": "CatchClause",
                      "param": {
                        "type": "Identifier",
                        "name": "e"
                      },
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "test"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "ok"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "Shouldn't be able to create another builder with the same name"
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "finalizer": null
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "builderMap"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "ThisExpression"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "graph"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "getBuilders"
                          }
                        },
                        "arguments": []
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "test"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "equal"
                      }
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "Object"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "keys"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "builderMap"
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "length"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": 3
                      },
                      {
                        "type": "Literal",
                        "value": "There should be 3 builders"
                      }
                    ]
                  }
                },
                {
                  "type": "ForInStatement",
                  "left": {
                    "type": "VariableDeclaration",
                    "declarations": [
                      {
                        "type": "VariableDeclarator",
                        "id": {
                          "type": "Identifier",
                          "name": "key"
                        },
                        "init": null
                      }
                    ],
                    "kind": "var"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "builderMap"
                  },
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "builder"
                            },
                            "init": {
                              "type": "MemberExpression",
                              "computed": true,
                              "object": {
                                "type": "Identifier",
                                "name": "builderMap"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "key"
                              }
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "hash"
                            },
                            "init": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "oid"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "hash"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "builder"
                                }
                              ]
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "test"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "equal"
                            }
                          },
                          "arguments": [
                            {
                              "type": "MemberExpression",
                              "computed": true,
                              "object": {
                                "type": "Identifier",
                                "name": "builders"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "hash"
                              }
                            },
                            {
                              "type": "Identifier",
                              "name": "builder"
                            },
                            {
                              "type": "Literal",
                              "value": "builder should exist"
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "UnaryExpression",
                          "operator": "delete",
                          "argument": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                              "type": "Identifier",
                              "name": "builders"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "hash"
                            }
                          },
                          "prefix": true
                        }
                      }
                    ]
                  },
                  "each": false
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "test"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "equal"
                      }
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "Object"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "keys"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "builders"
                            }
                          ]
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "length"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": 0
                      },
                      {
                        "type": "Literal",
                        "value": "There should be no builders remaining"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "test"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "done"
                      }
                    },
                    "arguments": []
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "builder"
          },
          "property": {
            "type": "Identifier",
            "name": "add"
          }
        },
        "arguments": [
          {
            "type": "FunctionExpression",
            "id": {
              "type": "Identifier",
              "name": "testDeepFreeze"
            },
            "params": [
              {
                "type": "Identifier",
                "name": "test"
              }
            ],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "ThisExpression"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "graph"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "add"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "user-default"
                      },
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "ObjectExpression",
                                "properties": [
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Identifier",
                                      "name": "name"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": "Jeremy"
                                    },
                                    "kind": "init"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "ThisExpression"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "graph"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "add"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "user-mutate"
                      },
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "user"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "user"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "name"
                                  }
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": "MUTTTTTAAAAATTTEEE"
                                }
                              }
                            },
                            {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "Identifier",
                                "name": "user"
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      },
                      {
                        "type": "ArrayExpression",
                        "elements": [
                          {
                            "type": "Literal",
                            "value": "user"
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "graph"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "newBuilder"
                                          }
                                        },
                                        "arguments": []
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "freezeOutputs"
                                      }
                                    },
                                    "arguments": []
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "builds"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": "user-mutate"
                                  }
                                ]
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "using"
                              }
                            },
                            "arguments": [
                              {
                                "type": "ObjectExpression",
                                "properties": [
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Identifier",
                                      "name": "user"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": "user-default"
                                    },
                                    "kind": "init"
                                  }
                                ]
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "run"
                          }
                        },
                        "arguments": []
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "then"
                      }
                    },
                    "arguments": [
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "data"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "test"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "equal"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "MemberExpression",
                                      "computed": true,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "data"
                                      },
                                      "property": {
                                        "type": "Literal",
                                        "value": "user-mutate"
                                      }
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "name"
                                    }
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "Jeremy"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "Name should not have changed"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    ]
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "builder"
          },
          "property": {
            "type": "Identifier",
            "name": "add"
          }
        },
        "arguments": [
          {
            "type": "FunctionExpression",
            "id": {
              "type": "Identifier",
              "name": "testDeepFreezePrivate"
            },
            "params": [
              {
                "type": "Identifier",
                "name": "test"
              }
            ],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "ThisExpression"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "graph"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "add"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "user-default_"
                      },
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "ThisExpression"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "graph"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "literal"
                          }
                        },
                        "arguments": [
                          {
                            "type": "ObjectExpression",
                            "properties": [
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "name"
                                },
                                "value": {
                                  "type": "Literal",
                                  "value": "Jeremy"
                                },
                                "kind": "init"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "ThisExpression"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "graph"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "add"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "user-mutate_"
                      },
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "user"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "user"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "name"
                                  }
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": "MUTTTTTAAAAATTTEEE"
                                }
                              }
                            },
                            {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "Identifier",
                                "name": "user"
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      },
                      {
                        "type": "ArrayExpression",
                        "elements": [
                          {
                            "type": "Literal",
                            "value": "user"
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "ThisExpression"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "graph"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "add"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "user-mutated"
                              },
                              {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "ThisExpression"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "graph"
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "subgraph"
                                }
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "builds"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "user-default_"
                          }
                        ]
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "modifiers"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "user-mutate_"
                      }
                    ]
                  }
                },
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "graph"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "newBuilder"
                                      }
                                    },
                                    "arguments": []
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "freezeOutputs"
                                  }
                                },
                                "arguments": []
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "builds"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "user-mutated"
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "run"
                          }
                        },
                        "arguments": []
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "then"
                      }
                    },
                    "arguments": [
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "data"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "test"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "equal"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "MemberExpression",
                                      "computed": true,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "data"
                                      },
                                      "property": {
                                        "type": "Literal",
                                        "value": "user-mutated"
                                      }
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "name"
                                    }
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "MUTTTTTAAAAATTTEEE"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "Name should have changed"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    ]
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "builder"
          },
          "property": {
            "type": "Identifier",
            "name": "add"
          }
        },
        "arguments": [
          {
            "type": "FunctionExpression",
            "id": {
              "type": "Identifier",
              "name": "testDeepFreezeError"
            },
            "params": [
              {
                "type": "Identifier",
                "name": "test"
              }
            ],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "Literal",
                    "value": "use strict"
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "ThisExpression"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "graph"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "add"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "user-default"
                      },
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "ObjectExpression",
                                "properties": [
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Identifier",
                                      "name": "name"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": "Jeremy"
                                    },
                                    "kind": "init"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "ThisExpression"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "graph"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "add"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "user-mutate"
                      },
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "user"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "user"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "name"
                                  }
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": "MUTTTTTAAAAATTTEEE"
                                }
                              }
                            },
                            {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "Identifier",
                                "name": "user"
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      },
                      {
                        "type": "ArrayExpression",
                        "elements": [
                          {
                            "type": "Literal",
                            "value": "user"
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ThisExpression"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "graph"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "newBuilder"
                                              }
                                            },
                                            "arguments": []
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "freezeOutputs"
                                          }
                                        },
                                        "arguments": []
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "builds"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "value": "user-mutate"
                                      }
                                    ]
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "using"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Identifier",
                                          "name": "user"
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": "user-default"
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "run"
                              }
                            },
                            "arguments": []
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "then"
                          }
                        },
                        "arguments": [
                          {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "data"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "test"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "fail"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "value": "Should have thrown an assertion error"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          }
                        ]
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "fail"
                      }
                    },
                    "arguments": [
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "e"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "test"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "equal"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "e"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "message"
                                    }
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "Cannot assign to read only property 'name' of #<Object>"
                                  },
                                  {
                                    "type": "Literal",
                                    "value": "Should have thrown an assertion error"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    ]
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "builder"
          },
          "property": {
            "type": "Identifier",
            "name": "add"
          }
        },
        "arguments": [
          {
            "type": "FunctionExpression",
            "id": {
              "type": "Identifier",
              "name": "testParseFnParams"
            },
            "params": [
              {
                "type": "Identifier",
                "name": "test"
              }
            ],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "FunctionDeclaration",
                  "id": {
                    "type": "Identifier",
                    "name": "fn1"
                  },
                  "params": [],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Literal",
                          "value": 1
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                },
                {
                  "type": "FunctionDeclaration",
                  "id": {
                    "type": "Identifier",
                    "name": "fn2"
                  },
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "x"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Literal",
                          "value": 2
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                },
                {
                  "type": "FunctionDeclaration",
                  "id": {
                    "type": "Identifier",
                    "name": "fn3"
                  },
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "x"
                    },
                    {
                      "type": "Identifier",
                      "name": "$y"
                    },
                    {
                      "type": "Identifier",
                      "name": "_z"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Literal",
                          "value": 3
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "fn4"
                      },
                      "init": {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "a"
                          },
                          {
                            "type": "Identifier",
                            "name": "b"
                          },
                          {
                            "type": "Identifier",
                            "name": "c"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "Literal",
                                "value": 4
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "parseFnParams"
                      },
                      "init": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "utils"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "parseFnParams"
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "test"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "deepEqual"
                      }
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "parseFnParams"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "fn1"
                          }
                        ]
                      },
                      {
                        "type": "ArrayExpression",
                        "elements": []
                      },
                      {
                        "type": "Literal",
                        "value": "No params"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "test"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "deepEqual"
                      }
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "parseFnParams"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "fn2"
                          }
                        ]
                      },
                      {
                        "type": "ArrayExpression",
                        "elements": [
                          {
                            "type": "Literal",
                            "value": "x"
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "One param"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "test"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "deepEqual"
                      }
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "parseFnParams"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "fn3"
                          }
                        ]
                      },
                      {
                        "type": "ArrayExpression",
                        "elements": [
                          {
                            "type": "Literal",
                            "value": "x"
                          },
                          {
                            "type": "Literal",
                            "value": "$y"
                          },
                          {
                            "type": "Literal",
                            "value": "_z"
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "Three params"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "test"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "deepEqual"
                      }
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "parseFnParams"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "fn4"
                          }
                        ]
                      },
                      {
                        "type": "ArrayExpression",
                        "elements": [
                          {
                            "type": "Literal",
                            "value": "a"
                          },
                          {
                            "type": "Literal",
                            "value": "b"
                          },
                          {
                            "type": "Literal",
                            "value": "c"
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "Three params, declaration with `var`"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "test"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "deepEqual"
                      }
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "parseFnParams"
                        },
                        "arguments": [
                          {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [
                              {
                                "type": "Identifier",
                                "name": "K"
                              },
                              {
                                "type": "Identifier",
                                "name": "J"
                              },
                              {
                                "type": "Identifier",
                                "name": "H"
                              }
                            ],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": []
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          }
                        ]
                      },
                      {
                        "type": "ArrayExpression",
                        "elements": [
                          {
                            "type": "Literal",
                            "value": "K"
                          },
                          {
                            "type": "Literal",
                            "value": "J"
                          },
                          {
                            "type": "Literal",
                            "value": "H"
                          }
                        ]
                      },
                      {
                        "type": "Literal",
                        "value": "Three params, anonymous funciton"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "test"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "done"
                      }
                    },
                    "arguments": []
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    }
  ]
}
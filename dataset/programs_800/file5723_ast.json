{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "sys"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "require"
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "sys"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "OAuth"
          },
          "init": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "require"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "./lib/oauth"
                }
              ]
            },
            "property": {
              "type": "Identifier",
              "name": "OAuth"
            }
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "Identifier",
          "name": "oa"
        },
        "right": {
          "type": "NewExpression",
          "callee": {
            "type": "Identifier",
            "name": "OAuth"
          },
          "arguments": [
            {
              "type": "Literal",
              "value": "https://www.google.com/accounts/OAuthGetRequestToken"
            },
            {
              "type": "Literal",
              "value": "https://www.google.com/accounts/OAuthAuthorizeToken"
            },
            {
              "type": "Literal",
              "value": "anonymous"
            },
            {
              "type": "Literal",
              "value": "anonymous"
            },
            {
              "type": "Literal",
              "value": "1.0A"
            },
            {
              "type": "Literal",
              "value": "http://localhost:3000/oauth/callback"
            },
            {
              "type": "Literal",
              "value": "HMAC-SHA1"
            }
          ]
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "oa"
          },
          "property": {
            "type": "Identifier",
            "name": "getOAuthRequestToken"
          }
        },
        "arguments": [
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Literal",
                  "value": "scope"
                },
                "value": {
                  "type": "Literal",
                  "value": "http://www.google.com/calendar/feeds"
                },
                "kind": "init"
              }
            ]
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "error"
              },
              {
                "type": "Identifier",
                "name": "oauth_token"
              },
              {
                "type": "Identifier",
                "name": "oauth_token_secret"
              },
              {
                "type": "Identifier",
                "name": "results"
              }
            ],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "Identifier",
                    "name": "error"
                  },
                  "consequent": {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "sys"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "puts"
                        }
                      },
                      "arguments": [
                        {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "Literal",
                            "value": "error :"
                          },
                          "right": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "JSON"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "stringify"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "error"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "alternate": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "sys"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "puts"
                            }
                          },
                          "arguments": [
                            {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "Literal",
                                "value": "oauth_token: "
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "oauth_token"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "sys"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "puts"
                            }
                          },
                          "arguments": [
                            {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "Literal",
                                "value": "oauth_token_secret: "
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "oauth_token_secret"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "sys"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "puts"
                            }
                          },
                          "arguments": [
                            {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "Literal",
                                "value": "requestoken results: "
                              },
                              "right": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "sys"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "inspect"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "results"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "sys"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "puts"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "Requesting access token"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    }
  ]
}
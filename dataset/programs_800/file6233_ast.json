{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "FunctionExpression",
          "id": null,
          "params": [],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "Literal",
                  "value": "use strict"
                }
              },
              {
                "type": "FunctionDeclaration",
                "id": {
                  "type": "Identifier",
                  "name": "createElement"
                },
                "params": [],
                "defaults": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "VariableDeclaration",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "Identifier",
                            "name": "element"
                          },
                          "init": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "document"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "createElement"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "div"
                              }
                            ]
                          }
                        }
                      ],
                      "kind": "var"
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "element"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "style"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "position"
                          }
                        },
                        "right": {
                          "type": "Literal",
                          "value": "absolute"
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "document"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "documentElement"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "appendChild"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "element"
                          }
                        ]
                      }
                    },
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "Identifier",
                        "name": "element"
                      }
                    }
                  ]
                },
                "rest": null,
                "generator": false,
                "expression": false
              },
              {
                "type": "FunctionDeclaration",
                "id": {
                  "type": "Identifier",
                  "name": "heldTiming"
                },
                "params": [
                  {
                    "type": "Identifier",
                    "name": "progress"
                  }
                ],
                "defaults": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "duration"
                            },
                            "value": {
                              "type": "Literal",
                              "value": 1000
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "fill"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "forwards"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "delay"
                            },
                            "value": {
                              "type": "BinaryExpression",
                              "operator": "*",
                              "left": {
                                "type": "UnaryExpression",
                                "operator": "-",
                                "argument": {
                                  "type": "Identifier",
                                  "name": "progress"
                                },
                                "prefix": true
                              },
                              "right": {
                                "type": "Literal",
                                "value": 1000
                              }
                            },
                            "kind": "init"
                          }
                        ]
                      }
                    }
                  ]
                },
                "rest": null,
                "generator": false,
                "expression": false
              },
              {
                "type": "FunctionDeclaration",
                "id": {
                  "type": "Identifier",
                  "name": "assertAnimationStyles"
                },
                "params": [
                  {
                    "type": "Identifier",
                    "name": "keyframes"
                  },
                  {
                    "type": "Identifier",
                    "name": "expectations"
                  },
                  {
                    "type": "Identifier",
                    "name": "description"
                  }
                ],
                "defaults": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ForInStatement",
                      "left": {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "progress"
                            },
                            "init": null
                          }
                        ],
                        "kind": "var"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "expectations"
                      },
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "element"
                                },
                                "init": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "createElement"
                                  },
                                  "arguments": []
                                }
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "element"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "animate"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "keyframes"
                                },
                                {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "heldTiming"
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "progress"
                                    }
                                  ]
                                }
                              ]
                            }
                          },
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "computedStyle"
                                },
                                "init": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "getComputedStyle"
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "element"
                                    }
                                  ]
                                }
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "ForInStatement",
                            "left": {
                              "type": "VariableDeclaration",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "property"
                                  },
                                  "init": null
                                }
                              ],
                              "kind": "var"
                            },
                            "right": {
                              "type": "MemberExpression",
                              "computed": true,
                              "object": {
                                "type": "Identifier",
                                "name": "expectations"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "progress"
                              }
                            },
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "assert_equals"
                                    },
                                    "arguments": [
                                      {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "computedStyle"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "property"
                                        }
                                      },
                                      {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                          "type": "MemberExpression",
                                          "computed": true,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "expectations"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "progress"
                                          }
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "property"
                                        }
                                      },
                                      {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                          "type": "BinaryExpression",
                                          "operator": "+",
                                          "left": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "property"
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": " at "
                                              }
                                            },
                                            "right": {
                                              "type": "BinaryExpression",
                                              "operator": "*",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "progress"
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": 100
                                              }
                                            }
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": "%"
                                          }
                                        },
                                        "right": {
                                          "type": "ConditionalExpression",
                                          "test": {
                                            "type": "Identifier",
                                            "name": "description"
                                          },
                                          "consequent": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "Literal",
                                              "value": " "
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "description"
                                            }
                                          },
                                          "alternate": {
                                            "type": "Literal",
                                            "value": ""
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "each": false
                          }
                        ]
                      },
                      "each": false
                    }
                  ]
                },
                "rest": null,
                "generator": false,
                "expression": false
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "window"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "assertAnimationStyles"
                    }
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "assertAnimationStyles"
                  }
                }
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        },
        "arguments": []
      }
    }
  ]
}
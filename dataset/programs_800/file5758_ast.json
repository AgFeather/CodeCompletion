{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "Literal",
        "value": "use strict"
      }
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "restify"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "require"
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "restify"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "_"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "require"
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "underscore"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "module"
          },
          "property": {
            "type": "Identifier",
            "name": "exports"
          }
        },
        "right": {
          "type": "FunctionExpression",
          "id": {
            "type": "Identifier",
            "name": "grantToken"
          },
          "params": [
            {
              "type": "Identifier",
              "name": "req"
            },
            {
              "type": "Identifier",
              "name": "res"
            },
            {
              "type": "Identifier",
              "name": "next"
            },
            {
              "type": "Identifier",
              "name": "options"
            }
          ],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "FunctionDeclaration",
                "id": {
                  "type": "Identifier",
                  "name": "sendOAuthError"
                },
                "params": [
                  {
                    "type": "Identifier",
                    "name": "errorClass"
                  },
                  {
                    "type": "Identifier",
                    "name": "errorType"
                  },
                  {
                    "type": "Identifier",
                    "name": "errorDescription"
                  }
                ],
                "defaults": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "VariableDeclaration",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "Identifier",
                            "name": "body"
                          },
                          "init": {
                            "type": "ObjectExpression",
                            "properties": [
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "error"
                                },
                                "value": {
                                  "type": "Identifier",
                                  "name": "errorType"
                                },
                                "kind": "init"
                              },
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "error_description"
                                },
                                "value": {
                                  "type": "Identifier",
                                  "name": "errorDescription"
                                },
                                "kind": "init"
                              }
                            ]
                          }
                        }
                      ],
                      "kind": "var"
                    },
                    {
                      "type": "VariableDeclaration",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "Identifier",
                            "name": "error"
                          },
                          "init": {
                            "type": "NewExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": true,
                              "object": {
                                "type": "Identifier",
                                "name": "restify"
                              },
                              "property": {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                  "type": "Identifier",
                                  "name": "errorClass"
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": "Error"
                                }
                              }
                            },
                            "arguments": [
                              {
                                "type": "ObjectExpression",
                                "properties": [
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Identifier",
                                      "name": "message"
                                    },
                                    "value": {
                                      "type": "Identifier",
                                      "name": "errorDescription"
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Identifier",
                                      "name": "body"
                                    },
                                    "value": {
                                      "type": "Identifier",
                                      "name": "body"
                                    },
                                    "kind": "init"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "kind": "var"
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "next"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "error"
                          }
                        ]
                      }
                    }
                  ]
                },
                "rest": null,
                "generator": false,
                "expression": false
              },
              {
                "type": "FunctionDeclaration",
                "id": {
                  "type": "Identifier",
                  "name": "sendBadRequestError"
                },
                "params": [
                  {
                    "type": "Identifier",
                    "name": "type"
                  },
                  {
                    "type": "Identifier",
                    "name": "description"
                  }
                ],
                "defaults": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "sendOAuthError"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "BadRequest"
                          },
                          {
                            "type": "Identifier",
                            "name": "type"
                          },
                          {
                            "type": "Identifier",
                            "name": "description"
                          }
                        ]
                      }
                    }
                  ]
                },
                "rest": null,
                "generator": false,
                "expression": false
              },
              {
                "type": "FunctionDeclaration",
                "id": {
                  "type": "Identifier",
                  "name": "sendUnauthorizedError"
                },
                "params": [
                  {
                    "type": "Identifier",
                    "name": "description"
                  }
                ],
                "defaults": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "res"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "header"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "WWW-Authenticate"
                          },
                          {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "Literal",
                                "value": "Basic realm=\""
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "description"
                              }
                            },
                            "right": {
                              "type": "Literal",
                              "value": "\""
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "sendOAuthError"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "Unauthorized"
                          },
                          {
                            "type": "Literal",
                            "value": "invalid_client"
                          },
                          {
                            "type": "Identifier",
                            "name": "description"
                          }
                        ]
                      }
                    }
                  ]
                },
                "rest": null,
                "generator": false,
                "expression": false
              },
              {
                "type": "IfStatement",
                "test": {
                  "type": "LogicalExpression",
                  "operator": "||",
                  "left": {
                    "type": "UnaryExpression",
                    "operator": "!",
                    "argument": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "req"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "body"
                      }
                    },
                    "prefix": true
                  },
                  "right": {
                    "type": "BinaryExpression",
                    "operator": "!==",
                    "left": {
                      "type": "UnaryExpression",
                      "operator": "typeof",
                      "argument": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "req"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "body"
                        }
                      },
                      "prefix": true
                    },
                    "right": {
                      "type": "Literal",
                      "value": "object"
                    }
                  }
                },
                "consequent": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "sendBadRequestError"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "invalid_request"
                          },
                          {
                            "type": "Literal",
                            "value": "Must supply a body."
                          }
                        ]
                      }
                    }
                  ]
                },
                "alternate": null
              },
              {
                "type": "IfStatement",
                "test": {
                  "type": "UnaryExpression",
                  "operator": "!",
                  "argument": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "_"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "has"
                      }
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "req"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "body"
                        }
                      },
                      {
                        "type": "Literal",
                        "value": "grant_type"
                      }
                    ]
                  },
                  "prefix": true
                },
                "consequent": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "sendBadRequestError"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "invalid_request"
                          },
                          {
                            "type": "Literal",
                            "value": "Must specify grant_type field."
                          }
                        ]
                      }
                    }
                  ]
                },
                "alternate": null
              },
              {
                "type": "IfStatement",
                "test": {
                  "type": "BinaryExpression",
                  "operator": "!==",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "req"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "body"
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "grant_type"
                    }
                  },
                  "right": {
                    "type": "Literal",
                    "value": "password"
                  }
                },
                "consequent": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "sendBadRequestError"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "unsupported_grant_type"
                          },
                          {
                            "type": "Literal",
                            "value": "Only grant_type=password is supported."
                          }
                        ]
                      }
                    }
                  ]
                },
                "alternate": null
              },
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "username"
                    },
                    "init": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "req"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "body"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "username"
                      }
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "password"
                    },
                    "init": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "req"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "body"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "password"
                      }
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "IfStatement",
                "test": {
                  "type": "UnaryExpression",
                  "operator": "!",
                  "argument": {
                    "type": "Identifier",
                    "name": "username"
                  },
                  "prefix": true
                },
                "consequent": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "sendBadRequestError"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "invalid_request"
                          },
                          {
                            "type": "Literal",
                            "value": "Must specify username field."
                          }
                        ]
                      }
                    }
                  ]
                },
                "alternate": null
              },
              {
                "type": "IfStatement",
                "test": {
                  "type": "UnaryExpression",
                  "operator": "!",
                  "argument": {
                    "type": "Identifier",
                    "name": "password"
                  },
                  "prefix": true
                },
                "consequent": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "sendBadRequestError"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "invalid_request"
                          },
                          {
                            "type": "Literal",
                            "value": "Must specify password field."
                          }
                        ]
                      }
                    }
                  ]
                },
                "alternate": null
              },
              {
                "type": "IfStatement",
                "test": {
                  "type": "LogicalExpression",
                  "operator": "||",
                  "left": {
                    "type": "UnaryExpression",
                    "operator": "!",
                    "argument": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "req"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "authorization"
                      }
                    },
                    "prefix": true
                  },
                  "right": {
                    "type": "UnaryExpression",
                    "operator": "!",
                    "argument": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "req"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "authorization"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "basic"
                      }
                    },
                    "prefix": true
                  }
                },
                "consequent": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "sendBadRequestError"
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "invalid_request"
                          },
                          {
                            "type": "Literal",
                            "value": "Must include a basic access authentication header."
                          }
                        ]
                      }
                    }
                  ]
                },
                "alternate": null
              },
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "clientId"
                    },
                    "init": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "req"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "authorization"
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "basic"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "username"
                      }
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "clientSecret"
                    },
                    "init": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "req"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "authorization"
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "basic"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "password"
                      }
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "options"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "hooks"
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "validateClient"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "clientId"
                    },
                    {
                      "type": "Identifier",
                      "name": "clientSecret"
                    },
                    {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "error"
                        },
                        {
                          "type": "Identifier",
                          "name": "result"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "Identifier",
                              "name": "error"
                            },
                            "consequent": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "next"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "error"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "alternate": null
                          },
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "UnaryExpression",
                              "operator": "!",
                              "argument": {
                                "type": "Identifier",
                                "name": "result"
                              },
                              "prefix": true
                            },
                            "consequent": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "sendUnauthorizedError"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "value": "Client ID and secret did not validate."
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "alternate": null
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "options"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "hooks"
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "grantUserToken"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "username"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "password"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "error"
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "token"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "Identifier",
                                          "name": "error"
                                        },
                                        "consequent": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "error"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "alternate": null
                                      },
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "UnaryExpression",
                                          "operator": "!",
                                          "argument": {
                                            "type": "Identifier",
                                            "name": "token"
                                          },
                                          "prefix": true
                                        },
                                        "consequent": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "sendUnauthorizedError"
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Literal",
                                                    "value": "Username and password did not authenticate."
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "alternate": null
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "res"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "send"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "ObjectExpression",
                                              "properties": [
                                                {
                                                  "type": "Property",
                                                  "key": {
                                                    "type": "Identifier",
                                                    "name": "access_token"
                                                  },
                                                  "value": {
                                                    "type": "Identifier",
                                                    "name": "token"
                                                  },
                                                  "kind": "init"
                                                },
                                                {
                                                  "type": "Property",
                                                  "key": {
                                                    "type": "Identifier",
                                                    "name": "token_type"
                                                  },
                                                  "value": {
                                                    "type": "Literal",
                                                    "value": "Bearer"
                                                  },
                                                  "kind": "init"
                                                },
                                                {
                                                  "type": "Property",
                                                  "key": {
                                                    "type": "Identifier",
                                                    "name": "expires_in"
                                                  },
                                                  "value": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "options"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "tokenExpirationTime"
                                                    }
                                                  },
                                                  "kind": "init"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  ]
                }
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        }
      }
    }
  ]
}
{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "ObjectExpression",
        "properties": [
          {
            "type": "Property",
            "key": {
              "type": "Identifier",
              "name": "testSimpleString"
            },
            "value": {
              "type": "ObjectExpression",
              "properties": [
                {
                  "type": "Property",
                  "key": {
                    "type": "Identifier",
                    "name": "test"
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "params": [
                      {
                        "type": "Identifier",
                        "name": "cmp"
                      }
                    ],
                    "defaults": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "VariableDeclaration",
                          "declarations": [
                            {
                              "type": "VariableDeclarator",
                              "id": {
                                "type": "Identifier",
                                "name": "errorMsg"
                              },
                              "init": {
                                "type": "Literal",
                                "value": "Simple text"
                              }
                            }
                          ],
                          "kind": "var"
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "$A"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "test"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "expectAuraError"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "errorMsg"
                              }
                            ]
                          }
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "$A"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "error"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "errorMsg"
                              }
                            ]
                          }
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "ThisExpression"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "assertErrorMessage"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "errorMsg"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "rest": null,
                    "generator": false,
                    "expression": false
                  },
                  "kind": "init"
                }
              ]
            },
            "kind": "init"
          },
          {
            "type": "Property",
            "key": {
              "type": "Identifier",
              "name": "testHtmlMarkup"
            },
            "value": {
              "type": "ObjectExpression",
              "properties": [
                {
                  "type": "Property",
                  "key": {
                    "type": "Identifier",
                    "name": "test"
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "params": [
                      {
                        "type": "Identifier",
                        "name": "cmp"
                      }
                    ],
                    "defaults": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "VariableDeclaration",
                          "declarations": [
                            {
                              "type": "VariableDeclarator",
                              "id": {
                                "type": "Identifier",
                                "name": "errorMsg"
                              },
                              "init": {
                                "type": "Literal",
                                "value": "<div>Run away, house on fire!</div>"
                              }
                            }
                          ],
                          "kind": "var"
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "$A"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "test"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "expectAuraError"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "errorMsg"
                              }
                            ]
                          }
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "$A"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "error"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "errorMsg"
                              }
                            ]
                          }
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "ThisExpression"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "assertErrorMessage"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "errorMsg"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "rest": null,
                    "generator": false,
                    "expression": false
                  },
                  "kind": "init"
                }
              ]
            },
            "kind": "init"
          },
          {
            "type": "Property",
            "key": {
              "type": "Identifier",
              "name": "testEscapedHtml"
            },
            "value": {
              "type": "ObjectExpression",
              "properties": [
                {
                  "type": "Property",
                  "key": {
                    "type": "Identifier",
                    "name": "test"
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "params": [
                      {
                        "type": "Identifier",
                        "name": "cmp"
                      }
                    ],
                    "defaults": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "VariableDeclaration",
                          "declarations": [
                            {
                              "type": "VariableDeclarator",
                              "id": {
                                "type": "Identifier",
                                "name": "errorMsg"
                              },
                              "init": {
                                "type": "Literal",
                                "value": "&lt;div&gt; Run forrest, run. &lt;/div&gt;"
                              }
                            }
                          ],
                          "kind": "var"
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "$A"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "test"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "expectAuraError"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "errorMsg"
                              }
                            ]
                          }
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "$A"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "error"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "errorMsg"
                              }
                            ]
                          }
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "ThisExpression"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "assertErrorMessage"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "errorMsg"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "rest": null,
                    "generator": false,
                    "expression": false
                  },
                  "kind": "init"
                }
              ]
            },
            "kind": "init"
          },
          {
            "type": "Property",
            "key": {
              "type": "Identifier",
              "name": "testStackTracePresent"
            },
            "value": {
              "type": "ObjectExpression",
              "properties": [
                {
                  "type": "Property",
                  "key": {
                    "type": "Identifier",
                    "name": "browsers"
                  },
                  "value": {
                    "type": "ArrayExpression",
                    "elements": [
                      {
                        "type": "Literal",
                        "value": "-IE7"
                      },
                      {
                        "type": "Literal",
                        "value": "-IE8"
                      },
                      {
                        "type": "Literal",
                        "value": "-IE9"
                      },
                      {
                        "type": "Literal",
                        "value": "-IPAD"
                      },
                      {
                        "type": "Literal",
                        "value": "-IPHONE"
                      },
                      {
                        "type": "Literal",
                        "value": "-SAFARI"
                      }
                    ]
                  },
                  "kind": "init"
                },
                {
                  "type": "Property",
                  "key": {
                    "type": "Identifier",
                    "name": "test"
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "params": [
                      {
                        "type": "Identifier",
                        "name": "cmp"
                      }
                    ],
                    "defaults": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "VariableDeclaration",
                          "declarations": [
                            {
                              "type": "VariableDeclarator",
                              "id": {
                                "type": "Identifier",
                                "name": "errorMsg"
                              },
                              "init": {
                                "type": "Literal",
                                "value": "Verifying stack trace present"
                              }
                            }
                          ],
                          "kind": "var"
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "$A"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "test"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "expectAuraError"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "errorMsg"
                              }
                            ]
                          }
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "$A"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "error"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "errorMsg"
                              }
                            ]
                          }
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "ThisExpression"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "assertErrorMessage"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "errorMsg"
                              }
                            ]
                          }
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "$A"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "test"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "assertTrue"
                              }
                            },
                            "arguments": [
                              {
                                "type": "BinaryExpression",
                                "operator": ">",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "$A"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "test"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "getAuraErrorMessage"
                                      }
                                    },
                                    "arguments": []
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "length"
                                  }
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": 35
                                }
                              },
                              {
                                "type": "Literal",
                                "value": "Missing stacktrace."
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "rest": null,
                    "generator": false,
                    "expression": false
                  },
                  "kind": "init"
                }
              ]
            },
            "kind": "init"
          },
          {
            "type": "Property",
            "key": {
              "type": "Identifier",
              "name": "testErrorObjectAsMessageParam"
            },
            "value": {
              "type": "ObjectExpression",
              "properties": [
                {
                  "type": "Property",
                  "key": {
                    "type": "Identifier",
                    "name": "test"
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "params": [
                      {
                        "type": "Identifier",
                        "name": "cmp"
                      }
                    ],
                    "defaults": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "$A"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "test"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "expectAuraError"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "Unknown Error"
                              }
                            ]
                          }
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "$A"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "error"
                              }
                            },
                            "arguments": [
                              {
                                "type": "NewExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "Error"
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": "foo"
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "ThisExpression"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "assertErrorMessage"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "Unknown Error : foo"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "rest": null,
                    "generator": false,
                    "expression": false
                  },
                  "kind": "init"
                }
              ]
            },
            "kind": "init"
          },
          {
            "type": "Property",
            "key": {
              "type": "Identifier",
              "name": "testEmptyErrorObjectAsMessageParam"
            },
            "value": {
              "type": "ObjectExpression",
              "properties": [
                {
                  "type": "Property",
                  "key": {
                    "type": "Identifier",
                    "name": "test"
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "params": [
                      {
                        "type": "Identifier",
                        "name": "cmp"
                      }
                    ],
                    "defaults": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "$A"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "test"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "expectAuraError"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "Unknown Error"
                              }
                            ]
                          }
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "$A"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "error"
                              }
                            },
                            "arguments": [
                              {
                                "type": "NewExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "Error"
                                },
                                "arguments": []
                              }
                            ]
                          }
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "ThisExpression"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "assertErrorMessage"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "Unknown Error"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "rest": null,
                    "generator": false,
                    "expression": false
                  },
                  "kind": "init"
                }
              ]
            },
            "kind": "init"
          },
          {
            "type": "Property",
            "key": {
              "type": "Identifier",
              "name": "testMapAsMessageParam"
            },
            "value": {
              "type": "ObjectExpression",
              "properties": [
                {
                  "type": "Property",
                  "key": {
                    "type": "Identifier",
                    "name": "test"
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "params": [
                      {
                        "type": "Identifier",
                        "name": "cmp"
                      }
                    ],
                    "defaults": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "VariableDeclaration",
                          "declarations": [
                            {
                              "type": "VariableDeclarator",
                              "id": {
                                "type": "Identifier",
                                "name": "map"
                              },
                              "init": {
                                "type": "ObjectExpression",
                                "properties": [
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Identifier",
                                      "name": "first"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": "first error"
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Identifier",
                                      "name": "second"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": "second error"
                                    },
                                    "kind": "init"
                                  }
                                ]
                              }
                            }
                          ],
                          "kind": "var"
                        },
                        {
                          "type": "VariableDeclaration",
                          "declarations": [
                            {
                              "type": "VariableDeclarator",
                              "id": {
                                "type": "Identifier",
                                "name": "errorMsg"
                              },
                              "init": {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                      "type": "BinaryExpression",
                                      "operator": "+",
                                      "left": {
                                        "type": "Literal",
                                        "value": "Unknown Error : caught {\"first\":\""
                                      },
                                      "right": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "map"
                                        },
                                        "property": {
                                          "type": "Literal",
                                          "value": "first"
                                        }
                                      }
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": "\",\"second\":\""
                                    }
                                  },
                                  "right": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "map"
                                    },
                                    "property": {
                                      "type": "Literal",
                                      "value": "second"
                                    }
                                  }
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": "\"}"
                                }
                              }
                            }
                          ],
                          "kind": "var"
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "$A"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "test"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "expectAuraError"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "errorMsg"
                              }
                            ]
                          }
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "$A"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "error"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "map"
                              }
                            ]
                          }
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "ThisExpression"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "assertErrorMessage"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "errorMsg"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "rest": null,
                    "generator": false,
                    "expression": false
                  },
                  "kind": "init"
                }
              ]
            },
            "kind": "init"
          },
          {
            "type": "Property",
            "key": {
              "type": "Identifier",
              "name": "testMessageAndError"
            },
            "value": {
              "type": "ObjectExpression",
              "properties": [
                {
                  "type": "Property",
                  "key": {
                    "type": "Identifier",
                    "name": "test"
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "params": [
                      {
                        "type": "Identifier",
                        "name": "cmp"
                      }
                    ],
                    "defaults": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "$A"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "test"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "expectAuraError"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "foo"
                              }
                            ]
                          }
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "$A"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "error"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "foo"
                              },
                              {
                                "type": "NewExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "Error"
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": "bar"
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "ThisExpression"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "assertErrorMessage"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "foo : bar"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "rest": null,
                    "generator": false,
                    "expression": false
                  },
                  "kind": "init"
                }
              ]
            },
            "kind": "init"
          },
          {
            "type": "Property",
            "key": {
              "type": "Identifier",
              "name": "testDuplicateErrorMsgAllExpected"
            },
            "value": {
              "type": "ObjectExpression",
              "properties": [
                {
                  "type": "Property",
                  "key": {
                    "type": "Identifier",
                    "name": "test"
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "params": [
                      {
                        "type": "Identifier",
                        "name": "cmp"
                      }
                    ],
                    "defaults": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "$A"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "test"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "expectAuraError"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "foo"
                              }
                            ]
                          }
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "$A"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "test"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "expectAuraError"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "foo"
                              }
                            ]
                          }
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "$A"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "error"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "foo"
                              },
                              {
                                "type": "NewExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "Error"
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": "bar1"
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "$A"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "error"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "foo"
                              },
                              {
                                "type": "NewExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "Error"
                                },
                                "arguments": [
                                  {
                                    "type": "Literal",
                                    "value": "bar2"
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "ThisExpression"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "assertErrorMessage"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "foo : bar2"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "rest": null,
                    "generator": false,
                    "expression": false
                  },
                  "kind": "init"
                }
              ]
            },
            "kind": "init"
          },
          {
            "type": "Property",
            "key": {
              "type": "Identifier",
              "name": "testStringForErrorParam"
            },
            "value": {
              "type": "ObjectExpression",
              "properties": [
                {
                  "type": "Property",
                  "key": {
                    "type": "Identifier",
                    "name": "test"
                  },
                  "value": {
                    "type": "FunctionExpression",
                    "id": null,
                    "params": [
                      {
                        "type": "Identifier",
                        "name": "cmp"
                      }
                    ],
                    "defaults": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "$A"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "test"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "expectAuraError"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "foo"
                              }
                            ]
                          }
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "$A"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "error"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "foo"
                              },
                              {
                                "type": "Literal",
                                "value": "bar"
                              }
                            ]
                          }
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "ThisExpression"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "assertErrorMessage"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Literal",
                                "value": "foo : caught \"bar\""
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "rest": null,
                    "generator": false,
                    "expression": false
                  },
                  "kind": "init"
                }
              ]
            },
            "kind": "init"
          },
          {
            "type": "Property",
            "key": {
              "type": "Identifier",
              "name": "assertErrorMessage"
            },
            "value": {
              "type": "FunctionExpression",
              "id": null,
              "params": [
                {
                  "type": "Identifier",
                  "name": "expectedMsg"
                }
              ],
              "defaults": [],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "VariableDeclaration",
                    "declarations": [
                      {
                        "type": "VariableDeclarator",
                        "id": {
                          "type": "Identifier",
                          "name": "messageDiv"
                        },
                        "init": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "$A"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "util"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "getElement"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "auraErrorMessage"
                            }
                          ]
                        }
                      }
                    ],
                    "kind": "var"
                  },
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "$A"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "test"
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "assertNotNull"
                        }
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "messageDiv"
                        },
                        {
                          "type": "Literal",
                          "value": "Aura error message box did is not present after $A.error()"
                        }
                      ]
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "$A"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "test"
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "assertEquals"
                        }
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": 1
                        },
                        {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "messageDiv"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "childNodes"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "length"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "$A"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "test"
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "assertEquals"
                        }
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "#text"
                        },
                        {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "messageDiv"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "childNodes"
                              }
                            },
                            "property": {
                              "type": "Literal",
                              "value": 0
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "nodeName"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "type": "VariableDeclaration",
                    "declarations": [
                      {
                        "type": "VariableDeclarator",
                        "id": {
                          "type": "Identifier",
                          "name": "actualMsg"
                        },
                        "init": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "$A"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "test"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "getAuraErrorMessage"
                            }
                          },
                          "arguments": []
                        }
                      }
                    ],
                    "kind": "var"
                  },
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "AssignmentExpression",
                      "operator": "=",
                      "left": {
                        "type": "Identifier",
                        "name": "actualMsg"
                      },
                      "right": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "actualMsg"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "replace"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": {}
                          },
                          {
                            "type": "Literal",
                            "value": ""
                          }
                        ]
                      }
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "AssignmentExpression",
                      "operator": "=",
                      "left": {
                        "type": "Identifier",
                        "name": "expectedMsg"
                      },
                      "right": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "expectedMsg"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "replace"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": {}
                          },
                          {
                            "type": "Literal",
                            "value": ""
                          }
                        ]
                      }
                    }
                  },
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "$A"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "test"
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "assertStartsWith"
                        }
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "expectedMsg"
                        },
                        {
                          "type": "Identifier",
                          "name": "actualMsg"
                        },
                        {
                          "type": "BinaryExpression",
                          "operator": "+",
                          "left": {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                  "type": "Literal",
                                  "value": "$A.error failed to display proper error text. Expecting <"
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "expectedMsg"
                                }
                              },
                              "right": {
                                "type": "Literal",
                                "value": "> but got <"
                              }
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "actualMsg"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": ">"
                          }
                        }
                      ]
                    }
                  }
                ]
              },
              "rest": null,
              "generator": false,
              "expression": false
            },
            "kind": "init"
          }
        ]
      }
    }
  ]
}
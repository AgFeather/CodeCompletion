{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "toString"
          },
          "init": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "MemberExpression",
              "computed": false,
              "object": {
                "type": "Identifier",
                "name": "Object"
              },
              "property": {
                "type": "Identifier",
                "name": "prototype"
              }
            },
            "property": {
              "type": "Identifier",
              "name": "toString"
            }
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "hasOwnProperty"
          },
          "init": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "MemberExpression",
              "computed": false,
              "object": {
                "type": "Identifier",
                "name": "Object"
              },
              "property": {
                "type": "Identifier",
                "name": "prototype"
              }
            },
            "property": {
              "type": "Identifier",
              "name": "hasOwnProperty"
            }
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "indexOf"
          },
          "init": {
            "type": "ConditionalExpression",
            "test": {
              "type": "BinaryExpression",
              "operator": "===",
              "left": {
                "type": "UnaryExpression",
                "operator": "typeof",
                "argument": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "Array"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "prototype"
                    }
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "indexOf"
                  }
                },
                "prefix": true
              },
              "right": {
                "type": "Literal",
                "value": "function"
              }
            },
            "consequent": {
              "type": "FunctionExpression",
              "id": null,
              "params": [
                {
                  "type": "Identifier",
                  "name": "arr"
                },
                {
                  "type": "Identifier",
                  "name": "el"
                }
              ],
              "defaults": [],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "arr"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "indexOf"
                        }
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "el"
                        }
                      ]
                    }
                  }
                ]
              },
              "rest": null,
              "generator": false,
              "expression": false
            },
            "alternate": {
              "type": "FunctionExpression",
              "id": null,
              "params": [
                {
                  "type": "Identifier",
                  "name": "arr"
                },
                {
                  "type": "Identifier",
                  "name": "el"
                }
              ],
              "defaults": [],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ForStatement",
                    "init": {
                      "type": "VariableDeclaration",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "Identifier",
                            "name": "i"
                          },
                          "init": {
                            "type": "Literal",
                            "value": 0
                          }
                        }
                      ],
                      "kind": "var"
                    },
                    "test": {
                      "type": "BinaryExpression",
                      "operator": "<",
                      "left": {
                        "type": "Identifier",
                        "name": "i"
                      },
                      "right": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "arr"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "length"
                        }
                      }
                    },
                    "update": {
                      "type": "UpdateExpression",
                      "operator": "++",
                      "argument": {
                        "type": "Identifier",
                        "name": "i"
                      },
                      "prefix": false
                    },
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "IfStatement",
                          "test": {
                            "type": "BinaryExpression",
                            "operator": "===",
                            "left": {
                              "type": "MemberExpression",
                              "computed": true,
                              "object": {
                                "type": "Identifier",
                                "name": "arr"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "i"
                              }
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "el"
                            }
                          },
                          "consequent": {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Identifier",
                              "name": "i"
                            }
                          },
                          "alternate": null
                        }
                      ]
                    }
                  },
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "UnaryExpression",
                      "operator": "-",
                      "argument": {
                        "type": "Literal",
                        "value": 1
                      },
                      "prefix": true
                    }
                  }
                ]
              },
              "rest": null,
              "generator": false,
              "expression": false
            }
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "isArray"
          },
          "init": {
            "type": "LogicalExpression",
            "operator": "||",
            "left": {
              "type": "MemberExpression",
              "computed": false,
              "object": {
                "type": "Identifier",
                "name": "Array"
              },
              "property": {
                "type": "Identifier",
                "name": "isArray"
              }
            },
            "right": {
              "type": "FunctionExpression",
              "id": null,
              "params": [
                {
                  "type": "Identifier",
                  "name": "arr"
                }
              ],
              "defaults": [],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "BinaryExpression",
                      "operator": "==",
                      "left": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "toString"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "call"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "arr"
                          }
                        ]
                      },
                      "right": {
                        "type": "Literal",
                        "value": "[object Array]"
                      }
                    }
                  }
                ]
              },
              "rest": null,
              "generator": false,
              "expression": false
            }
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "objectKeys"
          },
          "init": {
            "type": "LogicalExpression",
            "operator": "||",
            "left": {
              "type": "MemberExpression",
              "computed": false,
              "object": {
                "type": "Identifier",
                "name": "Object"
              },
              "property": {
                "type": "Identifier",
                "name": "keys"
              }
            },
            "right": {
              "type": "FunctionExpression",
              "id": null,
              "params": [
                {
                  "type": "Identifier",
                  "name": "obj"
                }
              ],
              "defaults": [],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "VariableDeclaration",
                    "declarations": [
                      {
                        "type": "VariableDeclarator",
                        "id": {
                          "type": "Identifier",
                          "name": "ret"
                        },
                        "init": {
                          "type": "ArrayExpression",
                          "elements": []
                        }
                      }
                    ],
                    "kind": "var"
                  },
                  {
                    "type": "ForInStatement",
                    "left": {
                      "type": "VariableDeclaration",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "Identifier",
                            "name": "key"
                          },
                          "init": null
                        }
                      ],
                      "kind": "var"
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "obj"
                    },
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "IfStatement",
                          "test": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "obj"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "hasOwnProperty"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "key"
                              }
                            ]
                          },
                          "consequent": {
                            "type": "BlockStatement",
                            "body": [
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "ret"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "push"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "key"
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "alternate": null
                        }
                      ]
                    },
                    "each": false
                  },
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "Identifier",
                      "name": "ret"
                    }
                  }
                ]
              },
              "rest": null,
              "generator": false,
              "expression": false
            }
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "forEach"
          },
          "init": {
            "type": "ConditionalExpression",
            "test": {
              "type": "BinaryExpression",
              "operator": "===",
              "left": {
                "type": "UnaryExpression",
                "operator": "typeof",
                "argument": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "Array"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "prototype"
                    }
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "forEach"
                  }
                },
                "prefix": true
              },
              "right": {
                "type": "Literal",
                "value": "function"
              }
            },
            "consequent": {
              "type": "FunctionExpression",
              "id": null,
              "params": [
                {
                  "type": "Identifier",
                  "name": "arr"
                },
                {
                  "type": "Identifier",
                  "name": "fn"
                }
              ],
              "defaults": [],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "arr"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "forEach"
                        }
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "fn"
                        }
                      ]
                    }
                  }
                ]
              },
              "rest": null,
              "generator": false,
              "expression": false
            },
            "alternate": {
              "type": "FunctionExpression",
              "id": null,
              "params": [
                {
                  "type": "Identifier",
                  "name": "arr"
                },
                {
                  "type": "Identifier",
                  "name": "fn"
                }
              ],
              "defaults": [],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ForStatement",
                    "init": {
                      "type": "VariableDeclaration",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "Identifier",
                            "name": "i"
                          },
                          "init": {
                            "type": "Literal",
                            "value": 0
                          }
                        }
                      ],
                      "kind": "var"
                    },
                    "test": {
                      "type": "BinaryExpression",
                      "operator": "<",
                      "left": {
                        "type": "Identifier",
                        "name": "i"
                      },
                      "right": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "arr"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "length"
                        }
                      }
                    },
                    "update": {
                      "type": "UpdateExpression",
                      "operator": "++",
                      "argument": {
                        "type": "Identifier",
                        "name": "i"
                      },
                      "prefix": false
                    },
                    "body": {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "fn"
                        },
                        "arguments": [
                          {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                              "type": "Identifier",
                              "name": "arr"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "i"
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              },
              "rest": null,
              "generator": false,
              "expression": false
            }
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "reduce"
          },
          "init": {
            "type": "FunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "arr"
              },
              {
                "type": "Identifier",
                "name": "fn"
              },
              {
                "type": "Identifier",
                "name": "initial"
              }
            ],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "operator": "===",
                    "left": {
                      "type": "UnaryExpression",
                      "operator": "typeof",
                      "argument": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "arr"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "reduce"
                        }
                      },
                      "prefix": true
                    },
                    "right": {
                      "type": "Literal",
                      "value": "function"
                    }
                  },
                  "consequent": {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "arr"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "reduce"
                        }
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "fn"
                        },
                        {
                          "type": "Identifier",
                          "name": "initial"
                        }
                      ]
                    }
                  },
                  "alternate": null
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "res"
                      },
                      "init": {
                        "type": "Identifier",
                        "name": "initial"
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ForStatement",
                  "init": {
                    "type": "VariableDeclaration",
                    "declarations": [
                      {
                        "type": "VariableDeclarator",
                        "id": {
                          "type": "Identifier",
                          "name": "i"
                        },
                        "init": {
                          "type": "Literal",
                          "value": 0
                        }
                      }
                    ],
                    "kind": "var"
                  },
                  "test": {
                    "type": "BinaryExpression",
                    "operator": "<",
                    "left": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "right": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "arr"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "length"
                      }
                    }
                  },
                  "update": {
                    "type": "UpdateExpression",
                    "operator": "++",
                    "argument": {
                      "type": "Identifier",
                      "name": "i"
                    },
                    "prefix": false
                  },
                  "body": {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "AssignmentExpression",
                      "operator": "=",
                      "left": {
                        "type": "Identifier",
                        "name": "res"
                      },
                      "right": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "fn"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "res"
                          },
                          {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                              "type": "Identifier",
                              "name": "arr"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "i"
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "Identifier",
                    "name": "res"
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "isint"
          },
          "init": {
            "type": "Literal",
            "value": {}
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "promote"
      },
      "params": [
        {
          "type": "Identifier",
          "name": "parent"
        },
        {
          "type": "Identifier",
          "name": "key"
        }
      ],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "operator": "==",
              "left": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "MemberExpression",
                  "computed": true,
                  "object": {
                    "type": "Identifier",
                    "name": "parent"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "key"
                  }
                },
                "property": {
                  "type": "Identifier",
                  "name": "length"
                }
              },
              "right": {
                "type": "Literal",
                "value": 0
              }
            },
            "consequent": {
              "type": "ReturnStatement",
              "argument": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                  "type": "MemberExpression",
                  "computed": true,
                  "object": {
                    "type": "Identifier",
                    "name": "parent"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "key"
                  }
                },
                "right": {
                  "type": "ObjectExpression",
                  "properties": []
                }
              }
            },
            "alternate": null
          },
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "t"
                },
                "init": {
                  "type": "ObjectExpression",
                  "properties": []
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "ForInStatement",
            "left": {
              "type": "VariableDeclaration",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "id": {
                    "type": "Identifier",
                    "name": "i"
                  },
                  "init": null
                }
              ],
              "kind": "var"
            },
            "right": {
              "type": "MemberExpression",
              "computed": true,
              "object": {
                "type": "Identifier",
                "name": "parent"
              },
              "property": {
                "type": "Identifier",
                "name": "key"
              }
            },
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "hasOwnProperty"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "call"
                      }
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                          "type": "Identifier",
                          "name": "parent"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "key"
                        }
                      },
                      {
                        "type": "Identifier",
                        "name": "i"
                      }
                    ]
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                              "type": "Identifier",
                              "name": "t"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "i"
                            }
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                              "type": "MemberExpression",
                              "computed": true,
                              "object": {
                                "type": "Identifier",
                                "name": "parent"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "key"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "i"
                            }
                          }
                        }
                      }
                    ]
                  },
                  "alternate": null
                }
              ]
            },
            "each": false
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "=",
              "left": {
                "type": "MemberExpression",
                "computed": true,
                "object": {
                  "type": "Identifier",
                  "name": "parent"
                },
                "property": {
                  "type": "Identifier",
                  "name": "key"
                }
              },
              "right": {
                "type": "Identifier",
                "name": "t"
              }
            }
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "Identifier",
              "name": "t"
            }
          }
        ]
      },
      "rest": null,
      "generator": false,
      "expression": false
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "parse"
      },
      "params": [
        {
          "type": "Identifier",
          "name": "parts"
        },
        {
          "type": "Identifier",
          "name": "parent"
        },
        {
          "type": "Identifier",
          "name": "key"
        },
        {
          "type": "Identifier",
          "name": "val"
        }
      ],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "part"
                },
                "init": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "parts"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "shift"
                    }
                  },
                  "arguments": []
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "IfStatement",
            "test": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "Object"
                },
                "property": {
                  "type": "Identifier",
                  "name": "getOwnPropertyDescriptor"
                }
              },
              "arguments": [
                {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "Identifier",
                    "name": "Object"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "prototype"
                  }
                },
                {
                  "type": "Identifier",
                  "name": "key"
                }
              ]
            },
            "consequent": {
              "type": "ReturnStatement",
              "argument": null
            },
            "alternate": null
          },
          {
            "type": "IfStatement",
            "test": {
              "type": "UnaryExpression",
              "operator": "!",
              "argument": {
                "type": "Identifier",
                "name": "part"
              },
              "prefix": true
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "isArray"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                          "type": "Identifier",
                          "name": "parent"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "key"
                        }
                      }
                    ]
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": true,
                              "object": {
                                "type": "Identifier",
                                "name": "parent"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "key"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "push"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "val"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "alternate": {
                    "type": "IfStatement",
                    "test": {
                      "type": "BinaryExpression",
                      "operator": "==",
                      "left": {
                        "type": "Literal",
                        "value": "object"
                      },
                      "right": {
                        "type": "UnaryExpression",
                        "operator": "typeof",
                        "argument": {
                          "type": "MemberExpression",
                          "computed": true,
                          "object": {
                            "type": "Identifier",
                            "name": "parent"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "key"
                          }
                        },
                        "prefix": true
                      }
                    },
                    "consequent": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                              "type": "MemberExpression",
                              "computed": true,
                              "object": {
                                "type": "Identifier",
                                "name": "parent"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "key"
                              }
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "val"
                            }
                          }
                        }
                      ]
                    },
                    "alternate": {
                      "type": "IfStatement",
                      "test": {
                        "type": "BinaryExpression",
                        "operator": "==",
                        "left": {
                          "type": "Literal",
                          "value": "undefined"
                        },
                        "right": {
                          "type": "UnaryExpression",
                          "operator": "typeof",
                          "argument": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                              "type": "Identifier",
                              "name": "parent"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "key"
                            }
                          },
                          "prefix": true
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                  "type": "Identifier",
                                  "name": "parent"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "key"
                                }
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "val"
                              }
                            }
                          }
                        ]
                      },
                      "alternate": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                  "type": "Identifier",
                                  "name": "parent"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "key"
                                }
                              },
                              "right": {
                                "type": "ArrayExpression",
                                "elements": [
                                  {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "parent"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "key"
                                    }
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "val"
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              ]
            },
            "alternate": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "obj"
                      },
                      "init": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "computed": true,
                          "object": {
                            "type": "Identifier",
                            "name": "parent"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "key"
                          }
                        },
                        "right": {
                          "type": "LogicalExpression",
                          "operator": "||",
                          "left": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                              "type": "Identifier",
                              "name": "parent"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "key"
                            }
                          },
                          "right": {
                            "type": "ArrayExpression",
                            "elements": []
                          }
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "operator": "==",
                    "left": {
                      "type": "Literal",
                      "value": "]"
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "part"
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "isArray"
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "obj"
                            }
                          ]
                        },
                        "consequent": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "IfStatement",
                              "test": {
                                "type": "BinaryExpression",
                                "operator": "!=",
                                "left": {
                                  "type": "Literal",
                                  "value": ""
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "val"
                                }
                              },
                              "consequent": {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "obj"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "push"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "val"
                                    }
                                  ]
                                }
                              },
                              "alternate": null
                            }
                          ]
                        },
                        "alternate": {
                          "type": "IfStatement",
                          "test": {
                            "type": "BinaryExpression",
                            "operator": "==",
                            "left": {
                              "type": "Literal",
                              "value": "object"
                            },
                            "right": {
                              "type": "UnaryExpression",
                              "operator": "typeof",
                              "argument": {
                                "type": "Identifier",
                                "name": "obj"
                              },
                              "prefix": true
                            }
                          },
                          "consequent": {
                            "type": "BlockStatement",
                            "body": [
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "obj"
                                    },
                                    "property": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "Identifier",
                                          "name": "objectKeys"
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "obj"
                                          }
                                        ]
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "length"
                                      }
                                    }
                                  },
                                  "right": {
                                    "type": "Identifier",
                                    "name": "val"
                                  }
                                }
                              }
                            ]
                          },
                          "alternate": {
                            "type": "BlockStatement",
                            "body": [
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "obj"
                                  },
                                  "right": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": true,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "parent"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "key"
                                      }
                                    },
                                    "right": {
                                      "type": "ArrayExpression",
                                      "elements": [
                                        {
                                          "type": "MemberExpression",
                                          "computed": true,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "parent"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "key"
                                          }
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "val"
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "alternate": {
                    "type": "IfStatement",
                    "test": {
                      "type": "UnaryExpression",
                      "operator": "~",
                      "argument": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "indexOf"
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "part"
                          },
                          {
                            "type": "Literal",
                            "value": "]"
                          }
                        ]
                      },
                      "prefix": true
                    },
                    "consequent": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                              "type": "Identifier",
                              "name": "part"
                            },
                            "right": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "part"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "substr"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": 0
                                },
                                {
                                  "type": "BinaryExpression",
                                  "operator": "-",
                                  "left": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "part"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "length"
                                    }
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": 1
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "type": "IfStatement",
                          "test": {
                            "type": "LogicalExpression",
                            "operator": "&&",
                            "left": {
                              "type": "UnaryExpression",
                              "operator": "!",
                              "argument": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "isint"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "test"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "part"
                                  }
                                ]
                              },
                              "prefix": true
                            },
                            "right": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "isArray"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "obj"
                                }
                              ]
                            }
                          },
                          "consequent": {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "obj"
                              },
                              "right": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "promote"
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "parent"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "key"
                                  }
                                ]
                              }
                            }
                          },
                          "alternate": null
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "parse"
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "parts"
                              },
                              {
                                "type": "Identifier",
                                "name": "obj"
                              },
                              {
                                "type": "Identifier",
                                "name": "part"
                              },
                              {
                                "type": "Identifier",
                                "name": "val"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "alternate": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "IfStatement",
                          "test": {
                            "type": "LogicalExpression",
                            "operator": "&&",
                            "left": {
                              "type": "UnaryExpression",
                              "operator": "!",
                              "argument": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "isint"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "test"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "part"
                                  }
                                ]
                              },
                              "prefix": true
                            },
                            "right": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "isArray"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "obj"
                                }
                              ]
                            }
                          },
                          "consequent": {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "obj"
                              },
                              "right": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "promote"
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "parent"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "key"
                                  }
                                ]
                              }
                            }
                          },
                          "alternate": null
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "parse"
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "parts"
                              },
                              {
                                "type": "Identifier",
                                "name": "obj"
                              },
                              {
                                "type": "Identifier",
                                "name": "part"
                              },
                              {
                                "type": "Identifier",
                                "name": "val"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              ]
            }
          }
        ]
      },
      "rest": null,
      "generator": false,
      "expression": false
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "merge"
      },
      "params": [
        {
          "type": "Identifier",
          "name": "parent"
        },
        {
          "type": "Identifier",
          "name": "key"
        },
        {
          "type": "Identifier",
          "name": "val"
        }
      ],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "IfStatement",
            "test": {
              "type": "UnaryExpression",
              "operator": "~",
              "argument": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "indexOf"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "key"
                  },
                  {
                    "type": "Literal",
                    "value": "]"
                  }
                ]
              },
              "prefix": true
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "parts"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "key"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "split"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "["
                          }
                        ]
                      }
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "len"
                      },
                      "init": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "parts"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "length"
                        }
                      }
                    },
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "last"
                      },
                      "init": {
                        "type": "BinaryExpression",
                        "operator": "-",
                        "left": {
                          "type": "Identifier",
                          "name": "len"
                        },
                        "right": {
                          "type": "Literal",
                          "value": 1
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "parse"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "parts"
                      },
                      {
                        "type": "Identifier",
                        "name": "parent"
                      },
                      {
                        "type": "Literal",
                        "value": "base"
                      },
                      {
                        "type": "Identifier",
                        "name": "val"
                      }
                    ]
                  }
                }
              ]
            },
            "alternate": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "UnaryExpression",
                      "operator": "!",
                      "argument": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "isint"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "test"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "key"
                          }
                        ]
                      },
                      "prefix": true
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "isArray"
                      },
                      "arguments": [
                        {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "parent"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "base"
                          }
                        }
                      ]
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "t"
                            },
                            "init": {
                              "type": "ObjectExpression",
                              "properties": []
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "ForInStatement",
                        "left": {
                          "type": "VariableDeclaration",
                          "declarations": [
                            {
                              "type": "VariableDeclarator",
                              "id": {
                                "type": "Identifier",
                                "name": "k"
                              },
                              "init": null
                            }
                          ],
                          "kind": "var"
                        },
                        "right": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "parent"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "base"
                          }
                        },
                        "body": {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                              "type": "MemberExpression",
                              "computed": true,
                              "object": {
                                "type": "Identifier",
                                "name": "t"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "k"
                              }
                            },
                            "right": {
                              "type": "MemberExpression",
                              "computed": true,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "parent"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "base"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "k"
                              }
                            }
                          }
                        },
                        "each": false
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "parent"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "base"
                            }
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "t"
                          }
                        }
                      }
                    ]
                  },
                  "alternate": null
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "set"
                    },
                    "arguments": [
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "parent"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "base"
                        }
                      },
                      {
                        "type": "Identifier",
                        "name": "key"
                      },
                      {
                        "type": "Identifier",
                        "name": "val"
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "Identifier",
              "name": "parent"
            }
          }
        ]
      },
      "rest": null,
      "generator": false,
      "expression": false
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "compact"
      },
      "params": [
        {
          "type": "Identifier",
          "name": "obj"
        }
      ],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "operator": "!=",
              "left": {
                "type": "Literal",
                "value": "object"
              },
              "right": {
                "type": "UnaryExpression",
                "operator": "typeof",
                "argument": {
                  "type": "Identifier",
                  "name": "obj"
                },
                "prefix": true
              }
            },
            "consequent": {
              "type": "ReturnStatement",
              "argument": {
                "type": "Identifier",
                "name": "obj"
              }
            },
            "alternate": null
          },
          {
            "type": "IfStatement",
            "test": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "isArray"
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "name": "obj"
                }
              ]
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "ret"
                      },
                      "init": {
                        "type": "ArrayExpression",
                        "elements": []
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ForInStatement",
                  "left": {
                    "type": "VariableDeclaration",
                    "declarations": [
                      {
                        "type": "VariableDeclarator",
                        "id": {
                          "type": "Identifier",
                          "name": "i"
                        },
                        "init": null
                      }
                    ],
                    "kind": "var"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "obj"
                  },
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "hasOwnProperty"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "call"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "obj"
                            },
                            {
                              "type": "Identifier",
                              "name": "i"
                            }
                          ]
                        },
                        "consequent": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "ret"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "push"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "obj"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "i"
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "alternate": null
                      }
                    ]
                  },
                  "each": false
                },
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "Identifier",
                    "name": "ret"
                  }
                }
              ]
            },
            "alternate": null
          },
          {
            "type": "ForInStatement",
            "left": {
              "type": "VariableDeclaration",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "id": {
                    "type": "Identifier",
                    "name": "key"
                  },
                  "init": null
                }
              ],
              "kind": "var"
            },
            "right": {
              "type": "Identifier",
              "name": "obj"
            },
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": true,
                      "object": {
                        "type": "Identifier",
                        "name": "obj"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "key"
                      }
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "compact"
                      },
                      "arguments": [
                        {
                          "type": "MemberExpression",
                          "computed": true,
                          "object": {
                            "type": "Identifier",
                            "name": "obj"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "key"
                          }
                        }
                      ]
                    }
                  }
                }
              ]
            },
            "each": false
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "Identifier",
              "name": "obj"
            }
          }
        ]
      },
      "rest": null,
      "generator": false,
      "expression": false
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "parseObject"
      },
      "params": [
        {
          "type": "Identifier",
          "name": "obj"
        }
      ],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "ret"
                },
                "init": {
                  "type": "ObjectExpression",
                  "properties": [
                    {
                      "type": "Property",
                      "key": {
                        "type": "Identifier",
                        "name": "base"
                      },
                      "value": {
                        "type": "ObjectExpression",
                        "properties": []
                      },
                      "kind": "init"
                    }
                  ]
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "forEach"
              },
              "arguments": [
                {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "objectKeys"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "obj"
                    }
                  ]
                },
                {
                  "type": "FunctionExpression",
                  "id": null,
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "name"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "merge"
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "ret"
                            },
                            {
                              "type": "Identifier",
                              "name": "name"
                            },
                            {
                              "type": "MemberExpression",
                              "computed": true,
                              "object": {
                                "type": "Identifier",
                                "name": "obj"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "name"
                              }
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                }
              ]
            }
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "compact"
              },
              "arguments": [
                {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "Identifier",
                    "name": "ret"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "base"
                  }
                }
              ]
            }
          }
        ]
      },
      "rest": null,
      "generator": false,
      "expression": false
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "parseString"
      },
      "params": [
        {
          "type": "Identifier",
          "name": "str"
        }
      ],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "ret"
                },
                "init": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "reduce"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "String"
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "str"
                              }
                            ]
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "split"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": "&"
                          }
                        ]
                      },
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "ret"
                          },
                          {
                            "type": "Identifier",
                            "name": "pair"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "VariableDeclaration",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "eql"
                                  },
                                  "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "indexOf"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "pair"
                                      },
                                      {
                                        "type": "Literal",
                                        "value": "="
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "brace"
                                  },
                                  "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "lastBraceInKey"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "pair"
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "key"
                                  },
                                  "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "pair"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "substr"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Literal",
                                        "value": 0
                                      },
                                      {
                                        "type": "LogicalExpression",
                                        "operator": "||",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "brace"
                                        },
                                        "right": {
                                          "type": "Identifier",
                                          "name": "eql"
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "val"
                                  },
                                  "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "pair"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "substr"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "LogicalExpression",
                                        "operator": "||",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "brace"
                                        },
                                        "right": {
                                          "type": "Identifier",
                                          "name": "eql"
                                        }
                                      },
                                      {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "pair"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "length"
                                        }
                                      }
                                    ]
                                  }
                                },
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "val"
                                  },
                                  "init": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "val"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "substr"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "indexOf"
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "val"
                                            },
                                            {
                                              "type": "Literal",
                                              "value": "="
                                            }
                                          ]
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": 1
                                        }
                                      },
                                      {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "val"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "length"
                                        }
                                      }
                                    ]
                                  }
                                }
                              ],
                              "kind": "var"
                            },
                            {
                              "type": "IfStatement",
                              "test": {
                                "type": "BinaryExpression",
                                "operator": "==",
                                "left": {
                                  "type": "Literal",
                                  "value": ""
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "key"
                                }
                              },
                              "consequent": {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "SequenceExpression",
                                  "expressions": [
                                    {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "key"
                                      },
                                      "right": {
                                        "type": "Identifier",
                                        "name": "pair"
                                      }
                                    },
                                    {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "val"
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": ""
                                      }
                                    }
                                  ]
                                }
                              },
                              "alternate": null
                            },
                            {
                              "type": "IfStatement",
                              "test": {
                                "type": "BinaryExpression",
                                "operator": "==",
                                "left": {
                                  "type": "Literal",
                                  "value": ""
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "key"
                                }
                              },
                              "consequent": {
                                "type": "ReturnStatement",
                                "argument": {
                                  "type": "Identifier",
                                  "name": "ret"
                                }
                              },
                              "alternate": null
                            },
                            {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "merge"
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "ret"
                                  },
                                  {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "decode"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "key"
                                      }
                                    ]
                                  },
                                  {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "decode"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "val"
                                      }
                                    ]
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      },
                      {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "base"
                            },
                            "value": {
                              "type": "ObjectExpression",
                              "properties": []
                            },
                            "kind": "init"
                          }
                        ]
                      }
                    ]
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "base"
                  }
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "compact"
              },
              "arguments": [
                {
                  "type": "Identifier",
                  "name": "ret"
                }
              ]
            }
          }
        ]
      },
      "rest": null,
      "generator": false,
      "expression": false
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "exports"
          },
          "property": {
            "type": "Identifier",
            "name": "parse"
          }
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "params": [
            {
              "type": "Identifier",
              "name": "str"
            }
          ],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "IfStatement",
                "test": {
                  "type": "LogicalExpression",
                  "operator": "||",
                  "left": {
                    "type": "BinaryExpression",
                    "operator": "==",
                    "left": {
                      "type": "Literal",
                      "value": null
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "str"
                    }
                  },
                  "right": {
                    "type": "BinaryExpression",
                    "operator": "==",
                    "left": {
                      "type": "Literal",
                      "value": ""
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "str"
                    }
                  }
                },
                "consequent": {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "ObjectExpression",
                    "properties": []
                  }
                },
                "alternate": null
              },
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "ConditionalExpression",
                  "test": {
                    "type": "BinaryExpression",
                    "operator": "==",
                    "left": {
                      "type": "Literal",
                      "value": "object"
                    },
                    "right": {
                      "type": "UnaryExpression",
                      "operator": "typeof",
                      "argument": {
                        "type": "Identifier",
                        "name": "str"
                      },
                      "prefix": true
                    }
                  },
                  "consequent": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "parseObject"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "str"
                      }
                    ]
                  },
                  "alternate": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "parseString"
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "str"
                      }
                    ]
                  }
                }
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        }
      }
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "stringify"
          },
          "init": {
            "type": "AssignmentExpression",
            "operator": "=",
            "left": {
              "type": "MemberExpression",
              "computed": false,
              "object": {
                "type": "Identifier",
                "name": "exports"
              },
              "property": {
                "type": "Identifier",
                "name": "stringify"
              }
            },
            "right": {
              "type": "FunctionExpression",
              "id": null,
              "params": [
                {
                  "type": "Identifier",
                  "name": "obj"
                },
                {
                  "type": "Identifier",
                  "name": "prefix"
                }
              ],
              "defaults": [],
              "body": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "IfStatement",
                    "test": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "Identifier",
                        "name": "isArray"
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "obj"
                        }
                      ]
                    },
                    "consequent": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "stringifyArray"
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "obj"
                              },
                              {
                                "type": "Identifier",
                                "name": "prefix"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "alternate": {
                      "type": "IfStatement",
                      "test": {
                        "type": "BinaryExpression",
                        "operator": "==",
                        "left": {
                          "type": "Literal",
                          "value": "[object Object]"
                        },
                        "right": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "toString"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "call"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "obj"
                            }
                          ]
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "stringifyObject"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "obj"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "prefix"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "alternate": {
                        "type": "IfStatement",
                        "test": {
                          "type": "BinaryExpression",
                          "operator": "==",
                          "left": {
                            "type": "Literal",
                            "value": "string"
                          },
                          "right": {
                            "type": "UnaryExpression",
                            "operator": "typeof",
                            "argument": {
                              "type": "Identifier",
                              "name": "obj"
                            },
                            "prefix": true
                          }
                        },
                        "consequent": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "stringifyString"
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "obj"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "prefix"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "alternate": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ReturnStatement",
                              "argument": {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "prefix"
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": "="
                                  }
                                },
                                "right": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "encodeURIComponent"
                                  },
                                  "arguments": [
                                    {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "String"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Identifier",
                                          "name": "obj"
                                        }
                                      ]
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                ]
              },
              "rest": null,
              "generator": false,
              "expression": false
            }
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "stringifyString"
      },
      "params": [
        {
          "type": "Identifier",
          "name": "str"
        },
        {
          "type": "Identifier",
          "name": "prefix"
        }
      ],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "IfStatement",
            "test": {
              "type": "UnaryExpression",
              "operator": "!",
              "argument": {
                "type": "Identifier",
                "name": "prefix"
              },
              "prefix": true
            },
            "consequent": {
              "type": "ThrowStatement",
              "argument": {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "TypeError"
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": "stringify expects an object"
                  }
                ]
              }
            },
            "alternate": null
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "BinaryExpression",
              "operator": "+",
              "left": {
                "type": "BinaryExpression",
                "operator": "+",
                "left": {
                  "type": "Identifier",
                  "name": "prefix"
                },
                "right": {
                  "type": "Literal",
                  "value": "="
                }
              },
              "right": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "encodeURIComponent"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "str"
                  }
                ]
              }
            }
          }
        ]
      },
      "rest": null,
      "generator": false,
      "expression": false
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "stringifyArray"
      },
      "params": [
        {
          "type": "Identifier",
          "name": "arr"
        },
        {
          "type": "Identifier",
          "name": "prefix"
        }
      ],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "ret"
                },
                "init": {
                  "type": "ArrayExpression",
                  "elements": []
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "IfStatement",
            "test": {
              "type": "UnaryExpression",
              "operator": "!",
              "argument": {
                "type": "Identifier",
                "name": "prefix"
              },
              "prefix": true
            },
            "consequent": {
              "type": "ThrowStatement",
              "argument": {
                "type": "NewExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "TypeError"
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": "stringify expects an object"
                  }
                ]
              }
            },
            "alternate": null
          },
          {
            "type": "ForStatement",
            "init": {
              "type": "VariableDeclaration",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "id": {
                    "type": "Identifier",
                    "name": "i"
                  },
                  "init": {
                    "type": "Literal",
                    "value": 0
                  }
                }
              ],
              "kind": "var"
            },
            "test": {
              "type": "BinaryExpression",
              "operator": "<",
              "left": {
                "type": "Identifier",
                "name": "i"
              },
              "right": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "arr"
                },
                "property": {
                  "type": "Identifier",
                  "name": "length"
                }
              }
            },
            "update": {
              "type": "UpdateExpression",
              "operator": "++",
              "argument": {
                "type": "Identifier",
                "name": "i"
              },
              "prefix": false
            },
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "ret"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "push"
                      }
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "Identifier",
                          "name": "stringify"
                        },
                        "arguments": [
                          {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                              "type": "Identifier",
                              "name": "arr"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "i"
                            }
                          },
                          {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "BinaryExpression",
                                "operator": "+",
                                "left": {
                                  "type": "Identifier",
                                  "name": "prefix"
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": "["
                                }
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "i"
                              }
                            },
                            "right": {
                              "type": "Literal",
                              "value": "]"
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "ret"
                },
                "property": {
                  "type": "Identifier",
                  "name": "join"
                }
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "&"
                }
              ]
            }
          }
        ]
      },
      "rest": null,
      "generator": false,
      "expression": false
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "stringifyObject"
      },
      "params": [
        {
          "type": "Identifier",
          "name": "obj"
        },
        {
          "type": "Identifier",
          "name": "prefix"
        }
      ],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "ret"
                },
                "init": {
                  "type": "ArrayExpression",
                  "elements": []
                }
              },
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "keys"
                },
                "init": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "objectKeys"
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "obj"
                    }
                  ]
                }
              },
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "key"
                },
                "init": null
              }
            ],
            "kind": "var"
          },
          {
            "type": "ForStatement",
            "init": {
              "type": "VariableDeclaration",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "id": {
                    "type": "Identifier",
                    "name": "i"
                  },
                  "init": {
                    "type": "Literal",
                    "value": 0
                  }
                },
                {
                  "type": "VariableDeclarator",
                  "id": {
                    "type": "Identifier",
                    "name": "len"
                  },
                  "init": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "keys"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "length"
                    }
                  }
                }
              ],
              "kind": "var"
            },
            "test": {
              "type": "BinaryExpression",
              "operator": "<",
              "left": {
                "type": "Identifier",
                "name": "i"
              },
              "right": {
                "type": "Identifier",
                "name": "len"
              }
            },
            "update": {
              "type": "UpdateExpression",
              "operator": "++",
              "argument": {
                "type": "Identifier",
                "name": "i"
              },
              "prefix": true
            },
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "key"
                    },
                    "right": {
                      "type": "MemberExpression",
                      "computed": true,
                      "object": {
                        "type": "Identifier",
                        "name": "keys"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "i"
                      }
                    }
                  }
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "operator": "==",
                    "left": {
                      "type": "Literal",
                      "value": ""
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "key"
                    }
                  },
                  "consequent": {
                    "type": "ContinueStatement",
                    "label": null
                  },
                  "alternate": null
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "operator": "==",
                    "left": {
                      "type": "Literal",
                      "value": null
                    },
                    "right": {
                      "type": "MemberExpression",
                      "computed": true,
                      "object": {
                        "type": "Identifier",
                        "name": "obj"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "key"
                      }
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "ret"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "push"
                            }
                          },
                          "arguments": [
                            {
                              "type": "BinaryExpression",
                              "operator": "+",
                              "left": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "encodeURIComponent"
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "key"
                                  }
                                ]
                              },
                              "right": {
                                "type": "Literal",
                                "value": "="
                              }
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "alternate": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "ret"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "push"
                            }
                          },
                          "arguments": [
                            {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "stringify"
                              },
                              "arguments": [
                                {
                                  "type": "MemberExpression",
                                  "computed": true,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "obj"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "key"
                                  }
                                },
                                {
                                  "type": "ConditionalExpression",
                                  "test": {
                                    "type": "Identifier",
                                    "name": "prefix"
                                  },
                                  "consequent": {
                                    "type": "BinaryExpression",
                                    "operator": "+",
                                    "left": {
                                      "type": "BinaryExpression",
                                      "operator": "+",
                                      "left": {
                                        "type": "BinaryExpression",
                                        "operator": "+",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "prefix"
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": "["
                                        }
                                      },
                                      "right": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "Identifier",
                                          "name": "encodeURIComponent"
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "key"
                                          }
                                        ]
                                      }
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": "]"
                                    }
                                  },
                                  "alternate": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "encodeURIComponent"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "key"
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "ret"
                },
                "property": {
                  "type": "Identifier",
                  "name": "join"
                }
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "&"
                }
              ]
            }
          }
        ]
      },
      "rest": null,
      "generator": false,
      "expression": false
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "set"
      },
      "params": [
        {
          "type": "Identifier",
          "name": "obj"
        },
        {
          "type": "Identifier",
          "name": "key"
        },
        {
          "type": "Identifier",
          "name": "val"
        }
      ],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "v"
                },
                "init": {
                  "type": "MemberExpression",
                  "computed": true,
                  "object": {
                    "type": "Identifier",
                    "name": "obj"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "key"
                  }
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "IfStatement",
            "test": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "Object"
                },
                "property": {
                  "type": "Identifier",
                  "name": "getOwnPropertyDescriptor"
                }
              },
              "arguments": [
                {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "Identifier",
                    "name": "Object"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "prototype"
                  }
                },
                {
                  "type": "Identifier",
                  "name": "key"
                }
              ]
            },
            "consequent": {
              "type": "ReturnStatement",
              "argument": null
            },
            "alternate": null
          },
          {
            "type": "IfStatement",
            "test": {
              "type": "BinaryExpression",
              "operator": "===",
              "left": {
                "type": "Identifier",
                "name": "undefined"
              },
              "right": {
                "type": "Identifier",
                "name": "v"
              }
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": true,
                      "object": {
                        "type": "Identifier",
                        "name": "obj"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "key"
                      }
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "val"
                    }
                  }
                }
              ]
            },
            "alternate": {
              "type": "IfStatement",
              "test": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "isArray"
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "v"
                  }
                ]
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "v"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "push"
                        }
                      },
                      "arguments": [
                        {
                          "type": "Identifier",
                          "name": "val"
                        }
                      ]
                    }
                  }
                ]
              },
              "alternate": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "AssignmentExpression",
                      "operator": "=",
                      "left": {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                          "type": "Identifier",
                          "name": "obj"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "key"
                        }
                      },
                      "right": {
                        "type": "ArrayExpression",
                        "elements": [
                          {
                            "type": "Identifier",
                            "name": "v"
                          },
                          {
                            "type": "Identifier",
                            "name": "val"
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        ]
      },
      "rest": null,
      "generator": false,
      "expression": false
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "lastBraceInKey"
      },
      "params": [
        {
          "type": "Identifier",
          "name": "str"
        }
      ],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "len"
                },
                "init": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "Identifier",
                    "name": "str"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "length"
                  }
                }
              },
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "brace"
                },
                "init": null
              },
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "c"
                },
                "init": null
              }
            ],
            "kind": "var"
          },
          {
            "type": "ForStatement",
            "init": {
              "type": "VariableDeclaration",
              "declarations": [
                {
                  "type": "VariableDeclarator",
                  "id": {
                    "type": "Identifier",
                    "name": "i"
                  },
                  "init": {
                    "type": "Literal",
                    "value": 0
                  }
                }
              ],
              "kind": "var"
            },
            "test": {
              "type": "BinaryExpression",
              "operator": "<",
              "left": {
                "type": "Identifier",
                "name": "i"
              },
              "right": {
                "type": "Identifier",
                "name": "len"
              }
            },
            "update": {
              "type": "UpdateExpression",
              "operator": "++",
              "argument": {
                "type": "Identifier",
                "name": "i"
              },
              "prefix": true
            },
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "c"
                    },
                    "right": {
                      "type": "MemberExpression",
                      "computed": true,
                      "object": {
                        "type": "Identifier",
                        "name": "str"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "i"
                      }
                    }
                  }
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "operator": "==",
                    "left": {
                      "type": "Literal",
                      "value": "]"
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "c"
                    }
                  },
                  "consequent": {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "AssignmentExpression",
                      "operator": "=",
                      "left": {
                        "type": "Identifier",
                        "name": "brace"
                      },
                      "right": {
                        "type": "Literal",
                        "value": false
                      }
                    }
                  },
                  "alternate": null
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "operator": "==",
                    "left": {
                      "type": "Literal",
                      "value": "["
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "c"
                    }
                  },
                  "consequent": {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "AssignmentExpression",
                      "operator": "=",
                      "left": {
                        "type": "Identifier",
                        "name": "brace"
                      },
                      "right": {
                        "type": "Literal",
                        "value": true
                      }
                    }
                  },
                  "alternate": null
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "BinaryExpression",
                      "operator": "==",
                      "left": {
                        "type": "Literal",
                        "value": "="
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "c"
                      }
                    },
                    "right": {
                      "type": "UnaryExpression",
                      "operator": "!",
                      "argument": {
                        "type": "Identifier",
                        "name": "brace"
                      },
                      "prefix": true
                    }
                  },
                  "consequent": {
                    "type": "ReturnStatement",
                    "argument": {
                      "type": "Identifier",
                      "name": "i"
                    }
                  },
                  "alternate": null
                }
              ]
            }
          }
        ]
      },
      "rest": null,
      "generator": false,
      "expression": false
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "decode"
      },
      "params": [
        {
          "type": "Identifier",
          "name": "str"
        }
      ],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "TryStatement",
            "block": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "decodeURIComponent"
                    },
                    "arguments": [
                      {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "str"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "replace"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Literal",
                            "value": {}
                          },
                          {
                            "type": "Literal",
                            "value": " "
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            },
            "guardedHandlers": [],
            "handlers": [
              {
                "type": "CatchClause",
                "param": {
                  "type": "Identifier",
                  "name": "err"
                },
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "Identifier",
                        "name": "str"
                      }
                    }
                  ]
                }
              }
            ],
            "finalizer": null
          }
        ]
      },
      "rest": null,
      "generator": false,
      "expression": false
    }
  ]
}
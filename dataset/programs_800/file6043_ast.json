{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "CodeMirror"
          },
          "property": {
            "type": "Identifier",
            "name": "defineMode"
          }
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "gas"
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "_config"
              },
              {
                "type": "Identifier",
                "name": "parserConfig"
              }
            ],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "Literal",
                    "value": "use strict"
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "custom"
                      },
                      "init": {
                        "type": "ArrayExpression",
                        "elements": []
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "lineCommentStartSymbol"
                      },
                      "init": {
                        "type": "Literal",
                        "value": ""
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "directives"
                      },
                      "init": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".abort"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".align"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".altmacro"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".ascii"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".asciz"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".balign"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".balignw"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".balignl"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".bundle_align_mode"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".bundle_lock"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".bundle_unlock"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".byte"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".cfi_startproc"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".comm"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".data"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".def"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".desc"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".dim"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".double"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".eject"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".else"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".elseif"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".end"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".endef"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".endfunc"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".endif"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".equ"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".equiv"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".eqv"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".err"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".error"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".exitm"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".extern"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".fail"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".file"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".fill"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".float"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".func"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".global"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".gnu_attribute"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".hidden"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".hword"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".ident"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".if"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".incbin"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".include"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".int"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".internal"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".irp"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".irpc"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".lcomm"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".lflags"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".line"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".linkonce"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".list"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".ln"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".loc"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".loc_mark_labels"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".local"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".long"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".macro"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".mri"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".noaltmacro"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".nolist"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".octa"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".offset"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".org"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".p2align"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".popsection"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".previous"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".print"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".protected"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".psize"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".purgem"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".pushsection"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".quad"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".reloc"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".rept"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".sbttl"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".scl"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".section"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".set"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".short"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".single"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".size"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".skip"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".sleb128"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".space"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".stab"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".string"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".struct"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".subsection"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".symver"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".tag"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".text"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".title"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".type"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".uleb128"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".val"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".version"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".vtable_entry"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".vtable_inherit"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".warning"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".weak"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".weakref"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": ".word"
                            },
                            "value": {
                              "type": "Literal",
                              "value": "builtin"
                            },
                            "kind": "init"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "registers"
                      },
                      "init": {
                        "type": "ObjectExpression",
                        "properties": []
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "FunctionDeclaration",
                  "id": {
                    "type": "Identifier",
                    "name": "x86"
                  },
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "_parserConfig"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "lineCommentStartSymbol"
                          },
                          "right": {
                            "type": "Literal",
                            "value": "#"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "ax"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "variable"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "eax"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "variable-2"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "rax"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "variable-3"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "bx"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "variable"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "ebx"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "variable-2"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "rbx"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "variable-3"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "cx"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "variable"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "ecx"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "variable-2"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "rcx"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "variable-3"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "dx"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "variable"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "edx"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "variable-2"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "rdx"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "variable-3"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "si"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "variable"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "esi"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "variable-2"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "rsi"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "variable-3"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "di"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "variable"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "edi"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "variable-2"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "rdi"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "variable-3"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "sp"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "variable"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "esp"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "variable-2"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "rsp"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "variable-3"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "bp"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "variable"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "ebp"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "variable-2"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "rbp"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "variable-3"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "ip"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "variable"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "eip"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "variable-2"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "rip"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "variable-3"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "cs"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "keyword"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "ds"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "keyword"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "ss"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "keyword"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "es"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "keyword"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "fs"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "keyword"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "gs"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "keyword"
                          }
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                },
                {
                  "type": "FunctionDeclaration",
                  "id": {
                    "type": "Identifier",
                    "name": "armv6"
                  },
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "_parserConfig"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "lineCommentStartSymbol"
                          },
                          "right": {
                            "type": "Literal",
                            "value": "@"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "directives"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "syntax"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "builtin"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "r0"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "variable"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "r1"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "variable"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "r2"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "variable"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "r3"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "variable"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "r4"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "variable"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "r5"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "variable"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "r6"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "variable"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "r7"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "variable"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "r8"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "variable"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "r9"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "variable"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "r10"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "variable"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "r11"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "variable"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "r12"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "variable"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "sp"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "variable-2"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "lr"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "variable-2"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "pc"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": "variable-2"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "r13"
                            }
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "sp"
                            }
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "r14"
                            }
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "lr"
                            }
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "r15"
                            }
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "registers"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "pc"
                            }
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "custom"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "push"
                            }
                          },
                          "arguments": [
                            {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [
                                {
                                  "type": "Identifier",
                                  "name": "ch"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "stream"
                                }
                              ],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "IfStatement",
                                    "test": {
                                      "type": "BinaryExpression",
                                      "operator": "===",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "ch"
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": "#"
                                      }
                                    },
                                    "consequent": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "stream"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "eatWhile"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": {}
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ReturnStatement",
                                          "argument": {
                                            "type": "Literal",
                                            "value": "number"
                                          }
                                        }
                                      ]
                                    },
                                    "alternate": null
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "arch"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "parserConfig"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "architecture"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "toLowerCase"
                          }
                        },
                        "arguments": []
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "operator": "===",
                    "left": {
                      "type": "Identifier",
                      "name": "arch"
                    },
                    "right": {
                      "type": "Literal",
                      "value": "x86"
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "x86"
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "parserConfig"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "alternate": {
                    "type": "IfStatement",
                    "test": {
                      "type": "LogicalExpression",
                      "operator": "||",
                      "left": {
                        "type": "BinaryExpression",
                        "operator": "===",
                        "left": {
                          "type": "Identifier",
                          "name": "arch"
                        },
                        "right": {
                          "type": "Literal",
                          "value": "arm"
                        }
                      },
                      "right": {
                        "type": "BinaryExpression",
                        "operator": "===",
                        "left": {
                          "type": "Identifier",
                          "name": "arch"
                        },
                        "right": {
                          "type": "Literal",
                          "value": "armv6"
                        }
                      }
                    },
                    "consequent": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "armv6"
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "parserConfig"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "alternate": null
                  }
                },
                {
                  "type": "FunctionDeclaration",
                  "id": {
                    "type": "Identifier",
                    "name": "nextUntilUnescaped"
                  },
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "stream"
                    },
                    {
                      "type": "Identifier",
                      "name": "end"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "escaped"
                            },
                            "init": {
                              "type": "Literal",
                              "value": false
                            }
                          },
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "next"
                            },
                            "init": null
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "WhileStatement",
                        "test": {
                          "type": "BinaryExpression",
                          "operator": "!=",
                          "left": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                              "type": "Identifier",
                              "name": "next"
                            },
                            "right": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "stream"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "next"
                                }
                              },
                              "arguments": []
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": null
                          }
                        },
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "IfStatement",
                              "test": {
                                "type": "LogicalExpression",
                                "operator": "&&",
                                "left": {
                                  "type": "BinaryExpression",
                                  "operator": "===",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "next"
                                  },
                                  "right": {
                                    "type": "Identifier",
                                    "name": "end"
                                  }
                                },
                                "right": {
                                  "type": "UnaryExpression",
                                  "operator": "!",
                                  "argument": {
                                    "type": "Identifier",
                                    "name": "escaped"
                                  },
                                  "prefix": true
                                }
                              },
                              "consequent": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "Literal",
                                      "value": false
                                    }
                                  }
                                ]
                              },
                              "alternate": null
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "escaped"
                                },
                                "right": {
                                  "type": "LogicalExpression",
                                  "operator": "&&",
                                  "left": {
                                    "type": "UnaryExpression",
                                    "operator": "!",
                                    "argument": {
                                      "type": "Identifier",
                                      "name": "escaped"
                                    },
                                    "prefix": true
                                  },
                                  "right": {
                                    "type": "BinaryExpression",
                                    "operator": "===",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "next"
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": "\\"
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Identifier",
                          "name": "escaped"
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                },
                {
                  "type": "FunctionDeclaration",
                  "id": {
                    "type": "Identifier",
                    "name": "clikeComment"
                  },
                  "params": [
                    {
                      "type": "Identifier",
                      "name": "stream"
                    },
                    {
                      "type": "Identifier",
                      "name": "state"
                    }
                  ],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "maybeEnd"
                            },
                            "init": {
                              "type": "Literal",
                              "value": false
                            }
                          },
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "ch"
                            },
                            "init": null
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "WhileStatement",
                        "test": {
                          "type": "BinaryExpression",
                          "operator": "!=",
                          "left": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                              "type": "Identifier",
                              "name": "ch"
                            },
                            "right": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "stream"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "next"
                                }
                              },
                              "arguments": []
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": null
                          }
                        },
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "IfStatement",
                              "test": {
                                "type": "LogicalExpression",
                                "operator": "&&",
                                "left": {
                                  "type": "BinaryExpression",
                                  "operator": "===",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "ch"
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": "/"
                                  }
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "maybeEnd"
                                }
                              },
                              "consequent": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "state"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "tokenize"
                                        }
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": null
                                      }
                                    }
                                  },
                                  {
                                    "type": "BreakStatement",
                                    "label": null
                                  }
                                ]
                              },
                              "alternate": null
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "maybeEnd"
                                },
                                "right": {
                                  "type": "BinaryExpression",
                                  "operator": "===",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "ch"
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": "*"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "Literal",
                          "value": "comment"
                        }
                      }
                    ]
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                },
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "ObjectExpression",
                    "properties": [
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "startState"
                        },
                        "value": {
                          "type": "FunctionExpression",
                          "id": null,
                          "params": [],
                          "defaults": [],
                          "body": {
                            "type": "BlockStatement",
                            "body": [
                              {
                                "type": "ReturnStatement",
                                "argument": {
                                  "type": "ObjectExpression",
                                  "properties": [
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "tokenize"
                                      },
                                      "value": {
                                        "type": "Literal",
                                        "value": null
                                      },
                                      "kind": "init"
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "rest": null,
                          "generator": false,
                          "expression": false
                        },
                        "kind": "init"
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "token"
                        },
                        "value": {
                          "type": "FunctionExpression",
                          "id": null,
                          "params": [
                            {
                              "type": "Identifier",
                              "name": "stream"
                            },
                            {
                              "type": "Identifier",
                              "name": "state"
                            }
                          ],
                          "defaults": [],
                          "body": {
                            "type": "BlockStatement",
                            "body": [
                              {
                                "type": "IfStatement",
                                "test": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "state"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "tokenize"
                                  }
                                },
                                "consequent": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "ReturnStatement",
                                      "argument": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "state"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "tokenize"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "stream"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "state"
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                "alternate": null
                              },
                              {
                                "type": "IfStatement",
                                "test": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "stream"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "eatSpace"
                                    }
                                  },
                                  "arguments": []
                                },
                                "consequent": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "ReturnStatement",
                                      "argument": {
                                        "type": "Literal",
                                        "value": null
                                      }
                                    }
                                  ]
                                },
                                "alternate": null
                              },
                              {
                                "type": "VariableDeclaration",
                                "declarations": [
                                  {
                                    "type": "VariableDeclarator",
                                    "id": {
                                      "type": "Identifier",
                                      "name": "style"
                                    },
                                    "init": null
                                  },
                                  {
                                    "type": "VariableDeclarator",
                                    "id": {
                                      "type": "Identifier",
                                      "name": "cur"
                                    },
                                    "init": null
                                  },
                                  {
                                    "type": "VariableDeclarator",
                                    "id": {
                                      "type": "Identifier",
                                      "name": "ch"
                                    },
                                    "init": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "stream"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "next"
                                        }
                                      },
                                      "arguments": []
                                    }
                                  }
                                ],
                                "kind": "var"
                              },
                              {
                                "type": "IfStatement",
                                "test": {
                                  "type": "BinaryExpression",
                                  "operator": "===",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "ch"
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": "/"
                                  }
                                },
                                "consequent": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "IfStatement",
                                      "test": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "stream"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "eat"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Literal",
                                            "value": "*"
                                          }
                                        ]
                                      },
                                      "consequent": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "state"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "tokenize"
                                                }
                                              },
                                              "right": {
                                                "type": "Identifier",
                                                "name": "clikeComment"
                                              }
                                            }
                                          },
                                          {
                                            "type": "ReturnStatement",
                                            "argument": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "clikeComment"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "stream"
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "state"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      },
                                      "alternate": null
                                    }
                                  ]
                                },
                                "alternate": null
                              },
                              {
                                "type": "IfStatement",
                                "test": {
                                  "type": "BinaryExpression",
                                  "operator": "===",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "ch"
                                  },
                                  "right": {
                                    "type": "Identifier",
                                    "name": "lineCommentStartSymbol"
                                  }
                                },
                                "consequent": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "stream"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "skipToEnd"
                                          }
                                        },
                                        "arguments": []
                                      }
                                    },
                                    {
                                      "type": "ReturnStatement",
                                      "argument": {
                                        "type": "Literal",
                                        "value": "comment"
                                      }
                                    }
                                  ]
                                },
                                "alternate": null
                              },
                              {
                                "type": "IfStatement",
                                "test": {
                                  "type": "BinaryExpression",
                                  "operator": "===",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "ch"
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": "\""
                                  }
                                },
                                "consequent": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "Identifier",
                                          "name": "nextUntilUnescaped"
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "stream"
                                          },
                                          {
                                            "type": "Literal",
                                            "value": "\""
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "ReturnStatement",
                                      "argument": {
                                        "type": "Literal",
                                        "value": "string"
                                      }
                                    }
                                  ]
                                },
                                "alternate": null
                              },
                              {
                                "type": "IfStatement",
                                "test": {
                                  "type": "BinaryExpression",
                                  "operator": "===",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "ch"
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": "."
                                  }
                                },
                                "consequent": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "stream"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "eatWhile"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Literal",
                                            "value": {}
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "cur"
                                        },
                                        "right": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "stream"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "current"
                                                }
                                              },
                                              "arguments": []
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toLowerCase"
                                            }
                                          },
                                          "arguments": []
                                        }
                                      }
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "style"
                                        },
                                        "right": {
                                          "type": "MemberExpression",
                                          "computed": true,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "directives"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "cur"
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "ReturnStatement",
                                      "argument": {
                                        "type": "LogicalExpression",
                                        "operator": "||",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "style"
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": null
                                        }
                                      }
                                    }
                                  ]
                                },
                                "alternate": null
                              },
                              {
                                "type": "IfStatement",
                                "test": {
                                  "type": "BinaryExpression",
                                  "operator": "===",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "ch"
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": "="
                                  }
                                },
                                "consequent": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "stream"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "eatWhile"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Literal",
                                            "value": {}
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "ReturnStatement",
                                      "argument": {
                                        "type": "Literal",
                                        "value": "tag"
                                      }
                                    }
                                  ]
                                },
                                "alternate": null
                              },
                              {
                                "type": "IfStatement",
                                "test": {
                                  "type": "BinaryExpression",
                                  "operator": "===",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "ch"
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": "{"
                                  }
                                },
                                "consequent": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "ReturnStatement",
                                      "argument": {
                                        "type": "Literal",
                                        "value": "braket"
                                      }
                                    }
                                  ]
                                },
                                "alternate": null
                              },
                              {
                                "type": "IfStatement",
                                "test": {
                                  "type": "BinaryExpression",
                                  "operator": "===",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "ch"
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": "}"
                                  }
                                },
                                "consequent": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "ReturnStatement",
                                      "argument": {
                                        "type": "Literal",
                                        "value": "braket"
                                      }
                                    }
                                  ]
                                },
                                "alternate": null
                              },
                              {
                                "type": "IfStatement",
                                "test": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Literal",
                                      "value": {}
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "test"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "ch"
                                    }
                                  ]
                                },
                                "consequent": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "IfStatement",
                                      "test": {
                                        "type": "LogicalExpression",
                                        "operator": "&&",
                                        "left": {
                                          "type": "BinaryExpression",
                                          "operator": "===",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "ch"
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": "0"
                                          }
                                        },
                                        "right": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "stream"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "eat"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": "x"
                                            }
                                          ]
                                        }
                                      },
                                      "consequent": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "stream"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "eatWhile"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": {}
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "ReturnStatement",
                                            "argument": {
                                              "type": "Literal",
                                              "value": "number"
                                            }
                                          }
                                        ]
                                      },
                                      "alternate": null
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "stream"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "eatWhile"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Literal",
                                            "value": {}
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "ReturnStatement",
                                      "argument": {
                                        "type": "Literal",
                                        "value": "number"
                                      }
                                    }
                                  ]
                                },
                                "alternate": null
                              },
                              {
                                "type": "IfStatement",
                                "test": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Literal",
                                      "value": {}
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "test"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "ch"
                                    }
                                  ]
                                },
                                "consequent": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "stream"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "eatWhile"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Literal",
                                            "value": {}
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "IfStatement",
                                      "test": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "stream"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "eat"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Literal",
                                            "value": ":"
                                          }
                                        ]
                                      },
                                      "consequent": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ReturnStatement",
                                            "argument": {
                                              "type": "Literal",
                                              "value": "tag"
                                            }
                                          }
                                        ]
                                      },
                                      "alternate": null
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "cur"
                                        },
                                        "right": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "stream"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "current"
                                                }
                                              },
                                              "arguments": []
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toLowerCase"
                                            }
                                          },
                                          "arguments": []
                                        }
                                      }
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "style"
                                        },
                                        "right": {
                                          "type": "MemberExpression",
                                          "computed": true,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "registers"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "cur"
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "ReturnStatement",
                                      "argument": {
                                        "type": "LogicalExpression",
                                        "operator": "||",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "style"
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": null
                                        }
                                      }
                                    }
                                  ]
                                },
                                "alternate": null
                              },
                              {
                                "type": "ForStatement",
                                "init": {
                                  "type": "VariableDeclaration",
                                  "declarations": [
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "i"
                                      },
                                      "init": {
                                        "type": "Literal",
                                        "value": 0
                                      }
                                    }
                                  ],
                                  "kind": "var"
                                },
                                "test": {
                                  "type": "BinaryExpression",
                                  "operator": "<",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "i"
                                  },
                                  "right": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "custom"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "length"
                                    }
                                  }
                                },
                                "update": {
                                  "type": "UpdateExpression",
                                  "operator": "++",
                                  "argument": {
                                    "type": "Identifier",
                                    "name": "i"
                                  },
                                  "prefix": false
                                },
                                "body": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "style"
                                        },
                                        "right": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "custom"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "i"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "ch"
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "stream"
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "state"
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "type": "IfStatement",
                                      "test": {
                                        "type": "Identifier",
                                        "name": "style"
                                      },
                                      "consequent": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ReturnStatement",
                                            "argument": {
                                              "type": "Identifier",
                                              "name": "style"
                                            }
                                          }
                                        ]
                                      },
                                      "alternate": null
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "rest": null,
                          "generator": false,
                          "expression": false
                        },
                        "kind": "init"
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "lineComment"
                        },
                        "value": {
                          "type": "Identifier",
                          "name": "lineCommentStartSymbol"
                        },
                        "kind": "init"
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "blockCommentStart"
                        },
                        "value": {
                          "type": "Literal",
                          "value": "/*"
                        },
                        "kind": "init"
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "blockCommentEnd"
                        },
                        "value": {
                          "type": "Literal",
                          "value": "*/"
                        },
                        "kind": "init"
                      }
                    ]
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    }
  ]
}
{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "shared"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "require"
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "./shared"
              }
            ]
          }
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "utils"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "Identifier",
              "name": "require"
            },
            "arguments": [
              {
                "type": "Literal",
                "value": "../utils"
              }
            ]
          }
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "AggregationCursor"
          },
          "init": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "require"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "../aggregation_cursor"
                }
              ]
            },
            "property": {
              "type": "Identifier",
              "name": "AggregationCursor"
            }
          }
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "Code"
          },
          "init": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "require"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "bson"
                }
              ]
            },
            "property": {
              "type": "Identifier",
              "name": "Code"
            }
          }
        },
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "DbCommand"
          },
          "init": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "require"
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "../commands/db_command"
                }
              ]
            },
            "property": {
              "type": "Identifier",
              "name": "DbCommand"
            }
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "processScope"
      },
      "params": [
        {
          "type": "Identifier",
          "name": "scope"
        }
      ],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "IfStatement",
            "test": {
              "type": "UnaryExpression",
              "operator": "!",
              "argument": {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "Identifier",
                    "name": "utils"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "isObject"
                  }
                },
                "arguments": [
                  {
                    "type": "Identifier",
                    "name": "scope"
                  }
                ]
              },
              "prefix": true
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "Identifier",
                    "name": "scope"
                  }
                }
              ]
            },
            "alternate": null
          },
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "keys"
                },
                "init": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "Object"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "keys"
                    }
                  },
                  "arguments": [
                    {
                      "type": "Identifier",
                      "name": "scope"
                    }
                  ]
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "i"
                },
                "init": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "Identifier",
                    "name": "keys"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "length"
                  }
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "key"
                },
                "init": null
              }
            ],
            "kind": "var"
          },
          {
            "type": "WhileStatement",
            "test": {
              "type": "UpdateExpression",
              "operator": "--",
              "argument": {
                "type": "Identifier",
                "name": "i"
              },
              "prefix": false
            },
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "key"
                    },
                    "right": {
                      "type": "MemberExpression",
                      "computed": true,
                      "object": {
                        "type": "Identifier",
                        "name": "keys"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "i"
                      }
                    }
                  }
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "operator": "==",
                    "left": {
                      "type": "Literal",
                      "value": "function"
                    },
                    "right": {
                      "type": "UnaryExpression",
                      "operator": "typeof",
                      "argument": {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                          "type": "Identifier",
                          "name": "scope"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "key"
                        }
                      },
                      "prefix": true
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                              "type": "Identifier",
                              "name": "scope"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "key"
                            }
                          },
                          "right": {
                            "type": "NewExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "Code"
                            },
                            "arguments": [
                              {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "String"
                                },
                                "arguments": [
                                  {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "scope"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "key"
                                    }
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "alternate": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                              "type": "Identifier",
                              "name": "scope"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "key"
                            }
                          },
                          "right": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "processScope"
                            },
                            "arguments": [
                              {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                  "type": "Identifier",
                                  "name": "scope"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "key"
                                }
                              }
                            ]
                          }
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "type": "ReturnStatement",
            "argument": {
              "type": "Identifier",
              "name": "scope"
            }
          }
        ]
      },
      "rest": null,
      "generator": false,
      "expression": false
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "pipe"
          },
          "init": {
            "type": "FunctionExpression",
            "id": null,
            "params": [],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "NewExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "AggregationCursor"
                    },
                    "arguments": [
                      {
                        "type": "ThisExpression"
                      },
                      {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "ThisExpression"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "serverCapabilities"
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "mapReduce"
          },
          "init": {
            "type": "FunctionExpression",
            "id": {
              "type": "Identifier",
              "name": "mapReduce"
            },
            "params": [
              {
                "type": "Identifier",
                "name": "map"
              },
              {
                "type": "Identifier",
                "name": "reduce"
              },
              {
                "type": "Identifier",
                "name": "options"
              },
              {
                "type": "Identifier",
                "name": "callback"
              }
            ],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "operator": "===",
                    "left": {
                      "type": "Literal",
                      "value": "function"
                    },
                    "right": {
                      "type": "UnaryExpression",
                      "operator": "typeof",
                      "argument": {
                        "type": "Identifier",
                        "name": "options"
                      },
                      "prefix": true
                    }
                  },
                  "consequent": {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "SequenceExpression",
                      "expressions": [
                        {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "callback"
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "options"
                          }
                        },
                        {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "options"
                          },
                          "right": {
                            "type": "ObjectExpression",
                            "properties": []
                          }
                        }
                      ]
                    }
                  },
                  "alternate": null
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "operator": "==",
                    "left": {
                      "type": "Literal",
                      "value": null
                    },
                    "right": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "options"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "out"
                      }
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ThrowStatement",
                        "argument": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "Error"
                          },
                          "arguments": [
                            {
                              "type": "Literal",
                              "value": "the out option parameter must be defined, see mongodb docs for possible values"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "alternate": null
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "operator": "===",
                    "left": {
                      "type": "Literal",
                      "value": "function"
                    },
                    "right": {
                      "type": "UnaryExpression",
                      "operator": "typeof",
                      "argument": {
                        "type": "Identifier",
                        "name": "map"
                      },
                      "prefix": true
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "map"
                          },
                          "right": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "map"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "toString"
                              }
                            },
                            "arguments": []
                          }
                        }
                      }
                    ]
                  },
                  "alternate": null
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "operator": "===",
                    "left": {
                      "type": "Literal",
                      "value": "function"
                    },
                    "right": {
                      "type": "UnaryExpression",
                      "operator": "typeof",
                      "argument": {
                        "type": "Identifier",
                        "name": "reduce"
                      },
                      "prefix": true
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "reduce"
                          },
                          "right": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "reduce"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "toString"
                              }
                            },
                            "arguments": []
                          }
                        }
                      }
                    ]
                  },
                  "alternate": null
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "operator": "===",
                    "left": {
                      "type": "Literal",
                      "value": "function"
                    },
                    "right": {
                      "type": "UnaryExpression",
                      "operator": "typeof",
                      "argument": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "options"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "finalize"
                        }
                      },
                      "prefix": true
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "options"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "finalize"
                            }
                          },
                          "right": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "options"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "finalize"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "toString"
                              }
                            },
                            "arguments": []
                          }
                        }
                      }
                    ]
                  },
                  "alternate": null
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "mapCommandHash"
                      },
                      "init": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "mapreduce"
                            },
                            "value": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "ThisExpression"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "collectionName"
                              }
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "map"
                            },
                            "value": {
                              "type": "Identifier",
                              "name": "map"
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "reduce"
                            },
                            "value": {
                              "type": "Identifier",
                              "name": "reduce"
                            },
                            "kind": "init"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ForInStatement",
                  "left": {
                    "type": "VariableDeclaration",
                    "declarations": [
                      {
                        "type": "VariableDeclarator",
                        "id": {
                          "type": "Identifier",
                          "name": "name"
                        },
                        "init": null
                      }
                    ],
                    "kind": "var"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "options"
                  },
                  "body": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "BinaryExpression",
                          "operator": "==",
                          "left": {
                            "type": "Literal",
                            "value": "scope"
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "name"
                          }
                        },
                        "consequent": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": true,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "mapCommandHash"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "name"
                                  }
                                },
                                "right": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "processScope"
                                  },
                                  "arguments": [
                                    {
                                      "type": "MemberExpression",
                                      "computed": true,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "options"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "name"
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        "alternate": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": true,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "mapCommandHash"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "name"
                                  }
                                },
                                "right": {
                                  "type": "MemberExpression",
                                  "computed": true,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "options"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "name"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "each": false
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "readPreference"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "shared"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "_getReadConcern"
                          }
                        },
                        "arguments": [
                          {
                            "type": "ThisExpression"
                          },
                          {
                            "type": "Identifier",
                            "name": "options"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "LogicalExpression",
                      "operator": "&&",
                      "left": {
                        "type": "LogicalExpression",
                        "operator": "&&",
                        "left": {
                          "type": "BinaryExpression",
                          "operator": "!=",
                          "left": {
                            "type": "Identifier",
                            "name": "readPreference"
                          },
                          "right": {
                            "type": "Literal",
                            "value": false
                          }
                        },
                        "right": {
                          "type": "BinaryExpression",
                          "operator": "!=",
                          "left": {
                            "type": "Identifier",
                            "name": "readPreference"
                          },
                          "right": {
                            "type": "Literal",
                            "value": "primary"
                          }
                        }
                      },
                      "right": {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                          "type": "Identifier",
                          "name": "options"
                        },
                        "property": {
                          "type": "Literal",
                          "value": "out"
                        }
                      }
                    },
                    "right": {
                      "type": "LogicalExpression",
                      "operator": "&&",
                      "left": {
                        "type": "BinaryExpression",
                        "operator": "!=",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": true,
                            "object": {
                              "type": "Identifier",
                              "name": "options"
                            },
                            "property": {
                              "type": "Literal",
                              "value": "out"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "inline"
                          }
                        },
                        "right": {
                          "type": "Literal",
                          "value": 1
                        }
                      },
                      "right": {
                        "type": "BinaryExpression",
                        "operator": "!=",
                        "left": {
                          "type": "MemberExpression",
                          "computed": true,
                          "object": {
                            "type": "Identifier",
                            "name": "options"
                          },
                          "property": {
                            "type": "Literal",
                            "value": "out"
                          }
                        },
                        "right": {
                          "type": "Literal",
                          "value": "inline"
                        }
                      }
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "readPreference"
                          },
                          "right": {
                            "type": "Literal",
                            "value": "primary"
                          }
                        }
                      }
                    ]
                  },
                  "alternate": null
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "self"
                      },
                      "init": {
                        "type": "ThisExpression"
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "cmd"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "DbCommand"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "createDbCommand"
                          }
                        },
                        "arguments": [
                          {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "ThisExpression"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "db"
                            }
                          },
                          {
                            "type": "Identifier",
                            "name": "mapCommandHash"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "ThisExpression"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "db"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "_executeQueryCommand"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "cmd"
                      },
                      {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "read"
                            },
                            "value": {
                              "type": "Identifier",
                              "name": "readPreference"
                            },
                            "kind": "init"
                          }
                        ]
                      },
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "err"
                          },
                          {
                            "type": "Identifier",
                            "name": "result"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "IfStatement",
                              "test": {
                                "type": "Identifier",
                                "name": "err"
                              },
                              "consequent": {
                                "type": "ReturnStatement",
                                "argument": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "callback"
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "err"
                                    }
                                  ]
                                }
                              },
                              "alternate": null
                            },
                            {
                              "type": "IfStatement",
                              "test": {
                                "type": "LogicalExpression",
                                "operator": "||",
                                "left": {
                                  "type": "LogicalExpression",
                                  "operator": "||",
                                  "left": {
                                    "type": "UnaryExpression",
                                    "operator": "!",
                                    "argument": {
                                      "type": "Identifier",
                                      "name": "result"
                                    },
                                    "prefix": true
                                  },
                                  "right": {
                                    "type": "UnaryExpression",
                                    "operator": "!",
                                    "argument": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "result"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "documents"
                                      }
                                    },
                                    "prefix": true
                                  }
                                },
                                "right": {
                                  "type": "BinaryExpression",
                                  "operator": "==",
                                  "left": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "result"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "documents"
                                      }
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "length"
                                    }
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": 0
                                  }
                                }
                              },
                              "consequent": {
                                "type": "ReturnStatement",
                                "argument": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "callback"
                                  },
                                  "arguments": [
                                    {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "Error"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "command failed to return results"
                                        }
                                      ]
                                    },
                                    {
                                      "type": "Literal",
                                      "value": null
                                    }
                                  ]
                                }
                              },
                              "alternate": null
                            },
                            {
                              "type": "IfStatement",
                              "test": {
                                "type": "LogicalExpression",
                                "operator": "||",
                                "left": {
                                  "type": "LogicalExpression",
                                  "operator": "||",
                                  "left": {
                                    "type": "BinaryExpression",
                                    "operator": "!=",
                                    "left": {
                                      "type": "Literal",
                                      "value": 1
                                    },
                                    "right": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "result"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "documents"
                                          }
                                        },
                                        "property": {
                                          "type": "Literal",
                                          "value": 0
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "ok"
                                      }
                                    }
                                  },
                                  "right": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "MemberExpression",
                                      "computed": true,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "result"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "documents"
                                        }
                                      },
                                      "property": {
                                        "type": "Literal",
                                        "value": 0
                                      }
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "err"
                                    }
                                  }
                                },
                                "right": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "result"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "documents"
                                      }
                                    },
                                    "property": {
                                      "type": "Literal",
                                      "value": 0
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "errmsg"
                                  }
                                }
                              },
                              "consequent": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "callback"
                                      },
                                      "arguments": [
                                        {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "utils"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toError"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "MemberExpression",
                                              "computed": true,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "result"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "documents"
                                                }
                                              },
                                              "property": {
                                                "type": "Literal",
                                                "value": 0
                                              }
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "alternate": null
                            },
                            {
                              "type": "VariableDeclaration",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "stats"
                                  },
                                  "init": {
                                    "type": "ObjectExpression",
                                    "properties": []
                                  }
                                }
                              ],
                              "kind": "var"
                            },
                            {
                              "type": "IfStatement",
                              "test": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": true,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "result"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "documents"
                                    }
                                  },
                                  "property": {
                                    "type": "Literal",
                                    "value": 0
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "timeMillis"
                                }
                              },
                              "consequent": {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "stats"
                                    },
                                    "property": {
                                      "type": "Literal",
                                      "value": "processtime"
                                    }
                                  },
                                  "right": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "MemberExpression",
                                      "computed": true,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "result"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "documents"
                                        }
                                      },
                                      "property": {
                                        "type": "Literal",
                                        "value": 0
                                      }
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "timeMillis"
                                    }
                                  }
                                }
                              },
                              "alternate": null
                            },
                            {
                              "type": "IfStatement",
                              "test": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": true,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "result"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "documents"
                                    }
                                  },
                                  "property": {
                                    "type": "Literal",
                                    "value": 0
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "counts"
                                }
                              },
                              "consequent": {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "stats"
                                    },
                                    "property": {
                                      "type": "Literal",
                                      "value": "counts"
                                    }
                                  },
                                  "right": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "MemberExpression",
                                      "computed": true,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "result"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "documents"
                                        }
                                      },
                                      "property": {
                                        "type": "Literal",
                                        "value": 0
                                      }
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "counts"
                                    }
                                  }
                                }
                              },
                              "alternate": null
                            },
                            {
                              "type": "IfStatement",
                              "test": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": true,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "result"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "documents"
                                    }
                                  },
                                  "property": {
                                    "type": "Literal",
                                    "value": 0
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "timing"
                                }
                              },
                              "consequent": {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "stats"
                                    },
                                    "property": {
                                      "type": "Literal",
                                      "value": "timing"
                                    }
                                  },
                                  "right": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "MemberExpression",
                                      "computed": true,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "result"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "documents"
                                        }
                                      },
                                      "property": {
                                        "type": "Literal",
                                        "value": 0
                                      }
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "timing"
                                    }
                                  }
                                }
                              },
                              "alternate": null
                            },
                            {
                              "type": "IfStatement",
                              "test": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": true,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "result"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "documents"
                                    }
                                  },
                                  "property": {
                                    "type": "Literal",
                                    "value": 0
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "results"
                                }
                              },
                              "consequent": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "IfStatement",
                                    "test": {
                                      "type": "LogicalExpression",
                                      "operator": "||",
                                      "left": {
                                        "type": "BinaryExpression",
                                        "operator": "==",
                                        "left": {
                                          "type": "MemberExpression",
                                          "computed": true,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "options"
                                          },
                                          "property": {
                                            "type": "Literal",
                                            "value": "verbose"
                                          }
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": null
                                        }
                                      },
                                      "right": {
                                        "type": "UnaryExpression",
                                        "operator": "!",
                                        "argument": {
                                          "type": "MemberExpression",
                                          "computed": true,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "options"
                                          },
                                          "property": {
                                            "type": "Literal",
                                            "value": "verbose"
                                          }
                                        },
                                        "prefix": true
                                      }
                                    },
                                    "consequent": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ReturnStatement",
                                          "argument": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "callback"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": null
                                              },
                                              {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": true,
                                                  "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "result"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "documents"
                                                    }
                                                  },
                                                  "property": {
                                                    "type": "Literal",
                                                    "value": 0
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "results"
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    },
                                    "alternate": null
                                  },
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "callback"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": null
                                        },
                                        {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "result"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "documents"
                                              }
                                            },
                                            "property": {
                                              "type": "Literal",
                                              "value": 0
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "results"
                                          }
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "stats"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "alternate": null
                            },
                            {
                              "type": "VariableDeclaration",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "collection"
                                  },
                                  "init": {
                                    "type": "Literal",
                                    "value": null
                                  }
                                }
                              ],
                              "kind": "var"
                            },
                            {
                              "type": "IfStatement",
                              "test": {
                                "type": "LogicalExpression",
                                "operator": "&&",
                                "left": {
                                  "type": "BinaryExpression",
                                  "operator": "!=",
                                  "left": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "MemberExpression",
                                      "computed": true,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "result"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "documents"
                                        }
                                      },
                                      "property": {
                                        "type": "Literal",
                                        "value": 0
                                      }
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "result"
                                    }
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": null
                                  }
                                },
                                "right": {
                                  "type": "BinaryExpression",
                                  "operator": "==",
                                  "left": {
                                    "type": "UnaryExpression",
                                    "operator": "typeof",
                                    "argument": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "result"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "documents"
                                          }
                                        },
                                        "property": {
                                          "type": "Literal",
                                          "value": 0
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "result"
                                      }
                                    },
                                    "prefix": true
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": "object"
                                  }
                                }
                              },
                              "consequent": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "doc"
                                        },
                                        "init": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "result"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "documents"
                                              }
                                            },
                                            "property": {
                                              "type": "Literal",
                                              "value": 0
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "result"
                                          }
                                        }
                                      }
                                    ],
                                    "kind": "var"
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "collection"
                                      },
                                      "right": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "self"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "db"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "db"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "doc"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "db"
                                                }
                                              }
                                            ]
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "collection"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "doc"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "collection"
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  }
                                ]
                              },
                              "alternate": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "collection"
                                      },
                                      "right": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "self"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "db"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "collection"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": true,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "result"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "documents"
                                                }
                                              },
                                              "property": {
                                                "type": "Literal",
                                                "value": 0
                                              }
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "result"
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "type": "IfStatement",
                              "test": {
                                "type": "LogicalExpression",
                                "operator": "||",
                                "left": {
                                  "type": "BinaryExpression",
                                  "operator": "==",
                                  "left": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "options"
                                    },
                                    "property": {
                                      "type": "Literal",
                                      "value": "verbose"
                                    }
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": null
                                  }
                                },
                                "right": {
                                  "type": "UnaryExpression",
                                  "operator": "!",
                                  "argument": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "options"
                                    },
                                    "property": {
                                      "type": "Literal",
                                      "value": "verbose"
                                    }
                                  },
                                  "prefix": true
                                }
                              },
                              "consequent": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ReturnStatement",
                                    "argument": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "callback"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Identifier",
                                          "name": "err"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "collection"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "alternate": null
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "callback"
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "err"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "collection"
                                  },
                                  {
                                    "type": "Identifier",
                                    "name": "stats"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    ]
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "groupFunction"
          },
          "init": {
            "type": "CallExpression",
            "callee": {
              "type": "MemberExpression",
              "computed": false,
              "object": {
                "type": "FunctionExpression",
                "id": null,
                "params": [],
                "defaults": [],
                "body": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "VariableDeclaration",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "Identifier",
                            "name": "c"
                          },
                          "init": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                  "type": "Identifier",
                                  "name": "db"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "ns"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "find"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "condition"
                              }
                            ]
                          }
                        }
                      ],
                      "kind": "var"
                    },
                    {
                      "type": "VariableDeclaration",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "Identifier",
                            "name": "map"
                          },
                          "init": {
                            "type": "NewExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "Map"
                            },
                            "arguments": []
                          }
                        }
                      ],
                      "kind": "var"
                    },
                    {
                      "type": "VariableDeclaration",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "Identifier",
                            "name": "reduce_function"
                          },
                          "init": {
                            "type": "Identifier",
                            "name": "reduce"
                          }
                        }
                      ],
                      "kind": "var"
                    },
                    {
                      "type": "WhileStatement",
                      "test": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "c"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "hasNext"
                          }
                        },
                        "arguments": []
                      },
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "obj"
                                },
                                "init": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "c"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "next"
                                    }
                                  },
                                  "arguments": []
                                }
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "key"
                                },
                                "init": {
                                  "type": "ObjectExpression",
                                  "properties": []
                                }
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "ForStatement",
                            "init": {
                              "type": "VariableDeclaration",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "i"
                                  },
                                  "init": {
                                    "type": "Literal",
                                    "value": 0
                                  }
                                },
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "len"
                                  },
                                  "init": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "keys"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "length"
                                    }
                                  }
                                }
                              ],
                              "kind": "var"
                            },
                            "test": {
                              "type": "BinaryExpression",
                              "operator": "<",
                              "left": {
                                "type": "Identifier",
                                "name": "i"
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "len"
                              }
                            },
                            "update": {
                              "type": "UpdateExpression",
                              "operator": "++",
                              "argument": {
                                "type": "Identifier",
                                "name": "i"
                              },
                              "prefix": true
                            },
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "VariableDeclaration",
                                  "declarations": [
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "k"
                                      },
                                      "init": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "keys"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "i"
                                        }
                                      }
                                    }
                                  ],
                                  "kind": "var"
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": true,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "key"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "k"
                                      }
                                    },
                                    "right": {
                                      "type": "MemberExpression",
                                      "computed": true,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "obj"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "k"
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "aggObj"
                                },
                                "init": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "map"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "get"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "key"
                                    }
                                  ]
                                }
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "BinaryExpression",
                              "operator": "==",
                              "left": {
                                "type": "Identifier",
                                "name": "aggObj"
                              },
                              "right": {
                                "type": "Literal",
                                "value": null
                              }
                            },
                            "consequent": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "VariableDeclaration",
                                  "declarations": [
                                    {
                                      "type": "VariableDeclarator",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "newObj"
                                      },
                                      "init": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "Object"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "extend"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "ObjectExpression",
                                            "properties": []
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "key"
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "kind": "var"
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "AssignmentExpression",
                                    "operator": "=",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "aggObj"
                                    },
                                    "right": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "Object"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "extend"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Identifier",
                                          "name": "newObj"
                                        },
                                        {
                                          "type": "Identifier",
                                          "name": "initial"
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "type": "ExpressionStatement",
                                  "expression": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "map"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "put"
                                      }
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "key"
                                      },
                                      {
                                        "type": "Identifier",
                                        "name": "aggObj"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "alternate": null
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "reduce_function"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "obj"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "aggObj"
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Literal",
                              "value": "result"
                            },
                            "value": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "map"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "values"
                                }
                              },
                              "arguments": []
                            },
                            "kind": "init"
                          }
                        ]
                      }
                    }
                  ]
                },
                "rest": null,
                "generator": false,
                "expression": false
              },
              "property": {
                "type": "Identifier",
                "name": "toString"
              }
            },
            "arguments": []
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "group"
          },
          "init": {
            "type": "FunctionExpression",
            "id": {
              "type": "Identifier",
              "name": "group"
            },
            "params": [
              {
                "type": "Identifier",
                "name": "keys"
              },
              {
                "type": "Identifier",
                "name": "condition"
              },
              {
                "type": "Identifier",
                "name": "initial"
              },
              {
                "type": "Identifier",
                "name": "reduce"
              },
              {
                "type": "Identifier",
                "name": "finalize"
              },
              {
                "type": "Identifier",
                "name": "command"
              },
              {
                "type": "Identifier",
                "name": "options"
              },
              {
                "type": "Identifier",
                "name": "callback"
              }
            ],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "args"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "Array"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "prototype"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "slice"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "call"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "arguments"
                          },
                          {
                            "type": "Literal",
                            "value": 3
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "callback"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "args"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "pop"
                        }
                      },
                      "arguments": []
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "reduce"
                    },
                    "right": {
                      "type": "ConditionalExpression",
                      "test": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "args"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "length"
                        }
                      },
                      "consequent": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "args"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "shift"
                          }
                        },
                        "arguments": []
                      },
                      "alternate": {
                        "type": "Literal",
                        "value": null
                      }
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "finalize"
                    },
                    "right": {
                      "type": "ConditionalExpression",
                      "test": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "args"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "length"
                        }
                      },
                      "consequent": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "args"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "shift"
                          }
                        },
                        "arguments": []
                      },
                      "alternate": {
                        "type": "Literal",
                        "value": null
                      }
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "command"
                    },
                    "right": {
                      "type": "ConditionalExpression",
                      "test": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "args"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "length"
                        }
                      },
                      "consequent": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "args"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "shift"
                          }
                        },
                        "arguments": []
                      },
                      "alternate": {
                        "type": "Literal",
                        "value": null
                      }
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "options"
                    },
                    "right": {
                      "type": "ConditionalExpression",
                      "test": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "args"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "length"
                        }
                      },
                      "consequent": {
                        "type": "LogicalExpression",
                        "operator": "||",
                        "left": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "args"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "shift"
                            }
                          },
                          "arguments": []
                        },
                        "right": {
                          "type": "ObjectExpression",
                          "properties": []
                        }
                      },
                      "alternate": {
                        "type": "ObjectExpression",
                        "properties": []
                      }
                    }
                  }
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "UnaryExpression",
                    "operator": "!",
                    "argument": {
                      "type": "BinaryExpression",
                      "operator": "==",
                      "left": {
                        "type": "UnaryExpression",
                        "operator": "typeof",
                        "argument": {
                          "type": "Identifier",
                          "name": "finalize"
                        },
                        "prefix": true
                      },
                      "right": {
                        "type": "Literal",
                        "value": "function"
                      }
                    },
                    "prefix": true
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "command"
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "finalize"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "finalize"
                          },
                          "right": {
                            "type": "Literal",
                            "value": null
                          }
                        }
                      }
                    ]
                  },
                  "alternate": null
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "LogicalExpression",
                      "operator": "&&",
                      "left": {
                        "type": "LogicalExpression",
                        "operator": "&&",
                        "left": {
                          "type": "UnaryExpression",
                          "operator": "!",
                          "argument": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "Array"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "isArray"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "keys"
                              }
                            ]
                          },
                          "prefix": true
                        },
                        "right": {
                          "type": "BinaryExpression",
                          "operator": "instanceof",
                          "left": {
                            "type": "Identifier",
                            "name": "keys"
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "Object"
                          }
                        }
                      },
                      "right": {
                        "type": "BinaryExpression",
                        "operator": "!==",
                        "left": {
                          "type": "UnaryExpression",
                          "operator": "typeof",
                          "argument": {
                            "type": "Identifier",
                            "name": "keys"
                          },
                          "prefix": true
                        },
                        "right": {
                          "type": "Literal",
                          "value": "function"
                        }
                      }
                    },
                    "right": {
                      "type": "UnaryExpression",
                      "operator": "!",
                      "argument": {
                        "type": "BinaryExpression",
                        "operator": "instanceof",
                        "left": {
                          "type": "Identifier",
                          "name": "keys"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "Code"
                        }
                      },
                      "prefix": true
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "keys"
                          },
                          "right": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "Object"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "keys"
                              }
                            },
                            "arguments": [
                              {
                                "type": "Identifier",
                                "name": "keys"
                              }
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "alternate": null
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "operator": "===",
                    "left": {
                      "type": "UnaryExpression",
                      "operator": "typeof",
                      "argument": {
                        "type": "Identifier",
                        "name": "reduce"
                      },
                      "prefix": true
                    },
                    "right": {
                      "type": "Literal",
                      "value": "function"
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "reduce"
                          },
                          "right": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "reduce"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "toString"
                              }
                            },
                            "arguments": []
                          }
                        }
                      }
                    ]
                  },
                  "alternate": null
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "operator": "===",
                    "left": {
                      "type": "UnaryExpression",
                      "operator": "typeof",
                      "argument": {
                        "type": "Identifier",
                        "name": "finalize"
                      },
                      "prefix": true
                    },
                    "right": {
                      "type": "Literal",
                      "value": "function"
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "finalize"
                          },
                          "right": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "finalize"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "toString"
                              }
                            },
                            "arguments": []
                          }
                        }
                      }
                    ]
                  },
                  "alternate": null
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "command"
                    },
                    "right": {
                      "type": "ConditionalExpression",
                      "test": {
                        "type": "BinaryExpression",
                        "operator": "==",
                        "left": {
                          "type": "Identifier",
                          "name": "command"
                        },
                        "right": {
                          "type": "Literal",
                          "value": null
                        }
                      },
                      "consequent": {
                        "type": "Literal",
                        "value": true
                      },
                      "alternate": {
                        "type": "Identifier",
                        "name": "command"
                      }
                    }
                  }
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "Identifier",
                    "name": "command"
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "reduceFunction"
                            },
                            "init": {
                              "type": "ConditionalExpression",
                              "test": {
                                "type": "BinaryExpression",
                                "operator": "instanceof",
                                "left": {
                                  "type": "Identifier",
                                  "name": "reduce"
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "Code"
                                }
                              },
                              "consequent": {
                                "type": "Identifier",
                                "name": "reduce"
                              },
                              "alternate": {
                                "type": "NewExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "Code"
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "reduce"
                                  }
                                ]
                              }
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "selector"
                            },
                            "init": {
                              "type": "ObjectExpression",
                              "properties": [
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "group"
                                  },
                                  "value": {
                                    "type": "ObjectExpression",
                                    "properties": [
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": "ns"
                                        },
                                        "value": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "ThisExpression"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "collectionName"
                                          }
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": "$reduce"
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "reduceFunction"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": "cond"
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "condition"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": "initial"
                                        },
                                        "value": {
                                          "type": "Identifier",
                                          "name": "initial"
                                        },
                                        "kind": "init"
                                      },
                                      {
                                        "type": "Property",
                                        "key": {
                                          "type": "Literal",
                                          "value": "out"
                                        },
                                        "value": {
                                          "type": "Literal",
                                          "value": "inline"
                                        },
                                        "kind": "init"
                                      }
                                    ]
                                  },
                                  "kind": "init"
                                }
                              ]
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "BinaryExpression",
                          "operator": "!=",
                          "left": {
                            "type": "Identifier",
                            "name": "finalize"
                          },
                          "right": {
                            "type": "Literal",
                            "value": null
                          }
                        },
                        "consequent": {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                              "type": "MemberExpression",
                              "computed": true,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "selector"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "group"
                                }
                              },
                              "property": {
                                "type": "Literal",
                                "value": "finalize"
                              }
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "finalize"
                            }
                          }
                        },
                        "alternate": null
                      },
                      {
                        "type": "IfStatement",
                        "test": {
                          "type": "LogicalExpression",
                          "operator": "||",
                          "left": {
                            "type": "BinaryExpression",
                            "operator": "===",
                            "left": {
                              "type": "Literal",
                              "value": "function"
                            },
                            "right": {
                              "type": "UnaryExpression",
                              "operator": "typeof",
                              "argument": {
                                "type": "Identifier",
                                "name": "keys"
                              },
                              "prefix": true
                            }
                          },
                          "right": {
                            "type": "BinaryExpression",
                            "operator": "instanceof",
                            "left": {
                              "type": "Identifier",
                              "name": "keys"
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "Code"
                            }
                          }
                        },
                        "consequent": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "selector"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "group"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "$keyf"
                                  }
                                },
                                "right": {
                                  "type": "ConditionalExpression",
                                  "test": {
                                    "type": "BinaryExpression",
                                    "operator": "instanceof",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "keys"
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "Code"
                                    }
                                  },
                                  "consequent": {
                                    "type": "Identifier",
                                    "name": "keys"
                                  },
                                  "alternate": {
                                    "type": "NewExpression",
                                    "callee": {
                                      "type": "Identifier",
                                      "name": "Code"
                                    },
                                    "arguments": [
                                      {
                                        "type": "Identifier",
                                        "name": "keys"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          ]
                        },
                        "alternate": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "VariableDeclaration",
                              "declarations": [
                                {
                                  "type": "VariableDeclarator",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "hash"
                                  },
                                  "init": {
                                    "type": "ObjectExpression",
                                    "properties": []
                                  }
                                }
                              ],
                              "kind": "var"
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "keys"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "forEach"
                                  }
                                },
                                "arguments": [
                                  {
                                    "type": "FunctionExpression",
                                    "id": null,
                                    "params": [
                                      {
                                        "type": "Identifier",
                                        "name": "key"
                                      }
                                    ],
                                    "defaults": [],
                                    "body": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": true,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "hash"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "key"
                                              }
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": 1
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "rest": null,
                                    "generator": false,
                                    "expression": false
                                  }
                                ]
                              }
                            },
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "selector"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "group"
                                    }
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "key"
                                  }
                                },
                                "right": {
                                  "type": "Identifier",
                                  "name": "hash"
                                }
                              }
                            }
                          ]
                        }
                      },
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "cmd"
                            },
                            "init": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "DbCommand"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "createDbSlaveOkCommand"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "ThisExpression"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "db"
                                  }
                                },
                                {
                                  "type": "Identifier",
                                  "name": "selector"
                                }
                              ]
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "readPreference"
                            },
                            "init": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "shared"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "_getReadConcern"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "ThisExpression"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "options"
                                }
                              ]
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "ThisExpression"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "db"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "_executeQueryCommand"
                            }
                          },
                          "arguments": [
                            {
                              "type": "Identifier",
                              "name": "cmd"
                            },
                            {
                              "type": "ObjectExpression",
                              "properties": [
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "read"
                                  },
                                  "value": {
                                    "type": "Identifier",
                                    "name": "readPreference"
                                  },
                                  "kind": "init"
                                }
                              ]
                            },
                            {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "utils"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "handleSingleCommandResultReturn"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": null
                                },
                                {
                                  "type": "Literal",
                                  "value": null
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "err"
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "result"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "Identifier",
                                          "name": "err"
                                        },
                                        "consequent": {
                                          "type": "ReturnStatement",
                                          "argument": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "callback"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "err"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": null
                                              }
                                            ]
                                          }
                                        },
                                        "alternate": null
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "callback"
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": null
                                            },
                                            {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "result"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "retval"
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "alternate": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "scope"
                            },
                            "init": {
                              "type": "ConditionalExpression",
                              "test": {
                                "type": "LogicalExpression",
                                "operator": "&&",
                                "left": {
                                  "type": "BinaryExpression",
                                  "operator": "!=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "reduce"
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": null
                                  }
                                },
                                "right": {
                                  "type": "BinaryExpression",
                                  "operator": "instanceof",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "reduce"
                                  },
                                  "right": {
                                    "type": "Identifier",
                                    "name": "Code"
                                  }
                                }
                              },
                              "consequent": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "reduce"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "scope"
                                }
                              },
                              "alternate": {
                                "type": "ObjectExpression",
                                "properties": []
                              }
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "scope"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "ns"
                            }
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "ThisExpression"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "collectionName"
                            }
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "scope"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "keys"
                            }
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "keys"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "scope"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "condition"
                            }
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "condition"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "scope"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "initial"
                            }
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "initial"
                          }
                        }
                      },
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "groupfn"
                            },
                            "init": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "groupFunction"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "replace"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": {}
                                },
                                {
                                  "type": "BinaryExpression",
                                  "operator": "+",
                                  "left": {
                                    "type": "CallExpression",
                                    "callee": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "reduce"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "toString"
                                      }
                                    },
                                    "arguments": []
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": ";"
                                  }
                                }
                              ]
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "ThisExpression"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "db"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "eval"
                            }
                          },
                          "arguments": [
                            {
                              "type": "NewExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "Code"
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "groupfn"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "scope"
                                }
                              ]
                            },
                            {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [
                                {
                                  "type": "Identifier",
                                  "name": "err"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "results"
                                }
                              ],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "IfStatement",
                                    "test": {
                                      "type": "Identifier",
                                      "name": "err"
                                    },
                                    "consequent": {
                                      "type": "ReturnStatement",
                                      "argument": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "Identifier",
                                          "name": "callback"
                                        },
                                        "arguments": [
                                          {
                                            "type": "Identifier",
                                            "name": "err"
                                          },
                                          {
                                            "type": "Literal",
                                            "value": null
                                          }
                                        ]
                                      }
                                    },
                                    "alternate": null
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "callback"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": null
                                        },
                                        {
                                          "type": "LogicalExpression",
                                          "operator": "||",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "results"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "result"
                                            }
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "results"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "aggregate"
          },
          "init": {
            "type": "FunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "pipeline"
              },
              {
                "type": "Identifier",
                "name": "options"
              },
              {
                "type": "Identifier",
                "name": "callback"
              }
            ],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "args"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "Array"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "prototype"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "slice"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "call"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "arguments"
                          },
                          {
                            "type": "Literal",
                            "value": 0
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "callback"
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "args"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "pop"
                        }
                      },
                      "arguments": []
                    }
                  }
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "self"
                      },
                      "init": {
                        "type": "ThisExpression"
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "opts"
                      },
                      "init": {
                        "type": "MemberExpression",
                        "computed": true,
                        "object": {
                          "type": "Identifier",
                          "name": "args"
                        },
                        "property": {
                          "type": "BinaryExpression",
                          "operator": "-",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "args"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "length"
                            }
                          },
                          "right": {
                            "type": "Literal",
                            "value": 1
                          }
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "Identifier",
                      "name": "options"
                    },
                    "right": {
                      "type": "ConditionalExpression",
                      "test": {
                        "type": "LogicalExpression",
                        "operator": "||",
                        "left": {
                          "type": "LogicalExpression",
                          "operator": "||",
                          "left": {
                            "type": "LogicalExpression",
                            "operator": "||",
                            "left": {
                              "type": "LogicalExpression",
                              "operator": "||",
                              "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "opts"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "readPreference"
                                }
                              },
                              "right": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "opts"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "explain"
                                }
                              }
                            },
                            "right": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "opts"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "cursor"
                              }
                            }
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "opts"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "out"
                            }
                          }
                        },
                        "right": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "opts"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "allowDiskUsage"
                          }
                        }
                      },
                      "consequent": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "args"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "pop"
                          }
                        },
                        "arguments": []
                      },
                      "alternate": {
                        "type": "ObjectExpression",
                        "properties": []
                      }
                    }
                  }
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "BinaryExpression",
                      "operator": "==",
                      "left": {
                        "type": "UnaryExpression",
                        "operator": "typeof",
                        "argument": {
                          "type": "Identifier",
                          "name": "callback"
                        },
                        "prefix": true
                      },
                      "right": {
                        "type": "Literal",
                        "value": "object"
                      }
                    },
                    "right": {
                      "type": "BinaryExpression",
                      "operator": "!=",
                      "left": {
                        "type": "Identifier",
                        "name": "callback"
                      },
                      "right": {
                        "type": "Literal",
                        "value": null
                      }
                    }
                  },
                  "consequent": {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "AssignmentExpression",
                      "operator": "=",
                      "left": {
                        "type": "Identifier",
                        "name": "options"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "callback"
                      }
                    }
                  },
                  "alternate": null
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "UnaryExpression",
                    "operator": "!",
                    "argument": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "Array"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "isArray"
                        }
                      },
                      "arguments": [
                        {
                          "type": "MemberExpression",
                          "computed": true,
                          "object": {
                            "type": "Identifier",
                            "name": "args"
                          },
                          "property": {
                            "type": "Literal",
                            "value": 0
                          }
                        }
                      ]
                    },
                    "prefix": true
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "Identifier",
                            "name": "pipeline"
                          },
                          "right": {
                            "type": "ArrayExpression",
                            "elements": []
                          }
                        }
                      },
                      {
                        "type": "ForStatement",
                        "init": {
                          "type": "VariableDeclaration",
                          "declarations": [
                            {
                              "type": "VariableDeclarator",
                              "id": {
                                "type": "Identifier",
                                "name": "i"
                              },
                              "init": {
                                "type": "Literal",
                                "value": 0
                              }
                            }
                          ],
                          "kind": "var"
                        },
                        "test": {
                          "type": "BinaryExpression",
                          "operator": "<",
                          "left": {
                            "type": "Identifier",
                            "name": "i"
                          },
                          "right": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "args"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "length"
                            }
                          }
                        },
                        "update": {
                          "type": "UpdateExpression",
                          "operator": "++",
                          "argument": {
                            "type": "Identifier",
                            "name": "i"
                          },
                          "prefix": false
                        },
                        "body": {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "pipeline"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "push"
                              }
                            },
                            "arguments": [
                              {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                  "type": "Identifier",
                                  "name": "args"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "i"
                                }
                              }
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "alternate": null
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "BinaryExpression",
                      "operator": "!=",
                      "left": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "options"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "cursor"
                        }
                      },
                      "right": {
                        "type": "Literal",
                        "value": null
                      }
                    },
                    "right": {
                      "type": "BinaryExpression",
                      "operator": "==",
                      "left": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "options"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "out"
                        }
                      },
                      "right": {
                        "type": "Literal",
                        "value": null
                      }
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "VariableDeclaration",
                        "declarations": [
                          {
                            "type": "VariableDeclarator",
                            "id": {
                              "type": "Identifier",
                              "name": "agg_cursor_options"
                            },
                            "init": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "options"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "cursor"
                              }
                            }
                          }
                        ],
                        "kind": "var"
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "agg_cursor_options"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "pipe"
                            }
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "pipeline"
                          }
                        }
                      },
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "=",
                          "left": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "agg_cursor_options"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "allowDiskUsage"
                            }
                          },
                          "right": {
                            "type": "ConditionalExpression",
                            "test": {
                              "type": "BinaryExpression",
                              "operator": "==",
                              "left": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "options"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "allowDiskUsage"
                                }
                              },
                              "right": {
                                "type": "Literal",
                                "value": null
                              }
                            },
                            "consequent": {
                              "type": "Literal",
                              "value": false
                            },
                            "alternate": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "options"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "allowDiskUsage"
                              }
                            }
                          }
                        }
                      },
                      {
                        "type": "ReturnStatement",
                        "argument": {
                          "type": "NewExpression",
                          "callee": {
                            "type": "Identifier",
                            "name": "AggregationCursor"
                          },
                          "arguments": [
                            {
                              "type": "ThisExpression"
                            },
                            {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "ThisExpression"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "serverCapabilities"
                              }
                            },
                            {
                              "type": "Identifier",
                              "name": "agg_cursor_options"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "alternate": null
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "operator": "==",
                    "left": {
                      "type": "UnaryExpression",
                      "operator": "typeof",
                      "argument": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "options"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "out"
                        }
                      },
                      "prefix": true
                    },
                    "right": {
                      "type": "Literal",
                      "value": "string"
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "pipeline"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "push"
                            }
                          },
                          "arguments": [
                            {
                              "type": "ObjectExpression",
                              "properties": [
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "$out"
                                  },
                                  "value": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "options"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "out"
                                    }
                                  },
                                  "kind": "init"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "alternate": null
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "command"
                      },
                      "init": {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "aggregate"
                            },
                            "value": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "ThisExpression"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "collectionName"
                              }
                            },
                            "kind": "init"
                          },
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "pipeline"
                            },
                            "value": {
                              "type": "Identifier",
                              "name": "pipeline"
                            },
                            "kind": "init"
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "options"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "allowDiskUsage"
                    }
                  },
                  "consequent": {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "AssignmentExpression",
                      "operator": "=",
                      "left": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "command"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "allowDiskUsage"
                        }
                      },
                      "right": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "options"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "allowDiskUsage"
                        }
                      }
                    }
                  },
                  "alternate": null
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "options"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "readPreference"
                      }
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "shared"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "_getReadConcern"
                        }
                      },
                      "arguments": [
                        {
                          "type": "ThisExpression"
                        },
                        {
                          "type": "Identifier",
                          "name": "options"
                        }
                      ]
                    }
                  }
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "options"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "explain"
                    }
                  },
                  "consequent": {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "AssignmentExpression",
                      "operator": "=",
                      "left": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "command"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "explain"
                        }
                      },
                      "right": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "options"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "explain"
                        }
                      }
                    }
                  },
                  "alternate": null
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "ThisExpression"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "db"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "command"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "command"
                      },
                      {
                        "type": "Identifier",
                        "name": "options"
                      },
                      {
                        "type": "FunctionExpression",
                        "id": null,
                        "params": [
                          {
                            "type": "Identifier",
                            "name": "err"
                          },
                          {
                            "type": "Identifier",
                            "name": "result"
                          }
                        ],
                        "defaults": [],
                        "body": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "IfStatement",
                              "test": {
                                "type": "Identifier",
                                "name": "err"
                              },
                              "consequent": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "callback"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Identifier",
                                          "name": "err"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "alternate": {
                                "type": "IfStatement",
                                "test": {
                                  "type": "LogicalExpression",
                                  "operator": "||",
                                  "left": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "result"
                                    },
                                    "property": {
                                      "type": "Literal",
                                      "value": "err"
                                    }
                                  },
                                  "right": {
                                    "type": "MemberExpression",
                                    "computed": true,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "result"
                                    },
                                    "property": {
                                      "type": "Literal",
                                      "value": "errmsg"
                                    }
                                  }
                                },
                                "consequent": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "Identifier",
                                          "name": "callback"
                                        },
                                        "arguments": [
                                          {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "utils"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "toError"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "result"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                "alternate": {
                                  "type": "IfStatement",
                                  "test": {
                                    "type": "LogicalExpression",
                                    "operator": "&&",
                                    "left": {
                                      "type": "BinaryExpression",
                                      "operator": "==",
                                      "left": {
                                        "type": "UnaryExpression",
                                        "operator": "typeof",
                                        "argument": {
                                          "type": "Identifier",
                                          "name": "result"
                                        },
                                        "prefix": true
                                      },
                                      "right": {
                                        "type": "Literal",
                                        "value": "object"
                                      }
                                    },
                                    "right": {
                                      "type": "MemberExpression",
                                      "computed": true,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "result"
                                      },
                                      "property": {
                                        "type": "Literal",
                                        "value": "serverPipeline"
                                      }
                                    }
                                  },
                                  "consequent": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "callback"
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": null
                                            },
                                            {
                                              "type": "MemberExpression",
                                              "computed": true,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "result"
                                              },
                                              "property": {
                                                "type": "Literal",
                                                "value": "serverPipeline"
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "alternate": {
                                    "type": "IfStatement",
                                    "test": {
                                      "type": "LogicalExpression",
                                      "operator": "&&",
                                      "left": {
                                        "type": "BinaryExpression",
                                        "operator": "==",
                                        "left": {
                                          "type": "UnaryExpression",
                                          "operator": "typeof",
                                          "argument": {
                                            "type": "Identifier",
                                            "name": "result"
                                          },
                                          "prefix": true
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": "object"
                                        }
                                      },
                                      "right": {
                                        "type": "MemberExpression",
                                        "computed": true,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "result"
                                        },
                                        "property": {
                                          "type": "Literal",
                                          "value": "stages"
                                        }
                                      }
                                    },
                                    "consequent": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "callback"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": null
                                              },
                                              {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "result"
                                                },
                                                "property": {
                                                  "type": "Literal",
                                                  "value": "stages"
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    },
                                    "alternate": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "callback"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": null
                                              },
                                              {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "result"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "result"
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        },
                        "rest": null,
                        "generator": false,
                        "expression": false
                      }
                    ]
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "exports"
          },
          "property": {
            "type": "Identifier",
            "name": "mapReduce"
          }
        },
        "right": {
          "type": "Identifier",
          "name": "mapReduce"
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "exports"
          },
          "property": {
            "type": "Identifier",
            "name": "group"
          }
        },
        "right": {
          "type": "Identifier",
          "name": "group"
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "exports"
          },
          "property": {
            "type": "Identifier",
            "name": "aggregate"
          }
        },
        "right": {
          "type": "Identifier",
          "name": "aggregate"
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "exports"
          },
          "property": {
            "type": "Identifier",
            "name": "pipe"
          }
        },
        "right": {
          "type": "Identifier",
          "name": "pipe"
        }
      }
    }
  ]
}
{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "YUI"
          },
          "property": {
            "type": "Identifier",
            "name": "add"
          }
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "dom-screen"
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "Y"
              },
              {
                "type": "Identifier",
                "name": "NAME"
              }
            ],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "Y"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "DOCUMENT_ELEMENT"
                                },
                                "init": {
                                  "type": "Literal",
                                  "value": "documentElement"
                                }
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "COMPAT_MODE"
                                },
                                "init": {
                                  "type": "Literal",
                                  "value": "compatMode"
                                }
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "POSITION"
                                },
                                "init": {
                                  "type": "Literal",
                                  "value": "position"
                                }
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "FIXED"
                                },
                                "init": {
                                  "type": "Literal",
                                  "value": "fixed"
                                }
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "RELATIVE"
                                },
                                "init": {
                                  "type": "Literal",
                                  "value": "relative"
                                }
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "LEFT"
                                },
                                "init": {
                                  "type": "Literal",
                                  "value": "left"
                                }
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "TOP"
                                },
                                "init": {
                                  "type": "Literal",
                                  "value": "top"
                                }
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "_BACK_COMPAT"
                                },
                                "init": {
                                  "type": "Literal",
                                  "value": "BackCompat"
                                }
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "MEDIUM"
                                },
                                "init": {
                                  "type": "Literal",
                                  "value": "medium"
                                }
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "BORDER_LEFT_WIDTH"
                                },
                                "init": {
                                  "type": "Literal",
                                  "value": "borderLeftWidth"
                                }
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "BORDER_TOP_WIDTH"
                                },
                                "init": {
                                  "type": "Literal",
                                  "value": "borderTopWidth"
                                }
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "GET_BOUNDING_CLIENT_RECT"
                                },
                                "init": {
                                  "type": "Literal",
                                  "value": "getBoundingClientRect"
                                }
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "GET_COMPUTED_STYLE"
                                },
                                "init": {
                                  "type": "Literal",
                                  "value": "getComputedStyle"
                                }
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "Y_DOM"
                                },
                                "init": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "Y"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "DOM"
                                  }
                                }
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "RE_TABLE"
                                },
                                "init": {
                                  "type": "Literal",
                                  "value": {}
                                }
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "SCROLL_NODE"
                                },
                                "init": null
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "IfStatement",
                            "test": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "Y"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "UA"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "ie"
                              }
                            },
                            "consequent": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "IfStatement",
                                  "test": {
                                    "type": "BinaryExpression",
                                    "operator": "!==",
                                    "left": {
                                      "type": "MemberExpression",
                                      "computed": true,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "Y"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "config"
                                          }
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "doc"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "COMPAT_MODE"
                                      }
                                    },
                                    "right": {
                                      "type": "Literal",
                                      "value": "BackCompat"
                                    }
                                  },
                                  "consequent": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "SCROLL_NODE"
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "DOCUMENT_ELEMENT"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "alternate": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "SCROLL_NODE"
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": "body"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "alternate": null
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "Y"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "mix"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "Y_DOM"
                                },
                                {
                                  "type": "ObjectExpression",
                                  "properties": [
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "winHeight"
                                      },
                                      "value": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "node"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "VariableDeclaration",
                                              "declarations": [
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "h"
                                                  },
                                                  "init": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "Y_DOM"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "_getWinSize"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "node"
                                                        }
                                                      ]
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "height"
                                                    }
                                                  }
                                                }
                                              ],
                                              "kind": "var"
                                            },
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "Identifier",
                                                "name": "h"
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "winWidth"
                                      },
                                      "value": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "node"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "VariableDeclaration",
                                              "declarations": [
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "w"
                                                  },
                                                  "init": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "Y_DOM"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "_getWinSize"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "node"
                                                        }
                                                      ]
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "width"
                                                    }
                                                  }
                                                }
                                              ],
                                              "kind": "var"
                                            },
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "Identifier",
                                                "name": "w"
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "docHeight"
                                      },
                                      "value": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "node"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "VariableDeclaration",
                                              "declarations": [
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "h"
                                                  },
                                                  "init": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "Y_DOM"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "_getDocSize"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "node"
                                                        }
                                                      ]
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "height"
                                                    }
                                                  }
                                                }
                                              ],
                                              "kind": "var"
                                            },
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "Math"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "max"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "h"
                                                  },
                                                  {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "Y_DOM"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "_getWinSize"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "node"
                                                        }
                                                      ]
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "height"
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "docWidth"
                                      },
                                      "value": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "node"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "VariableDeclaration",
                                              "declarations": [
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "w"
                                                  },
                                                  "init": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "Y_DOM"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "_getDocSize"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "node"
                                                        }
                                                      ]
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "width"
                                                    }
                                                  }
                                                }
                                              ],
                                              "kind": "var"
                                            },
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "Math"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "max"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "w"
                                                  },
                                                  {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "Y_DOM"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "_getWinSize"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "node"
                                                        }
                                                      ]
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "width"
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "docScrollX"
                                      },
                                      "value": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "node"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "doc"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "doc"
                                                },
                                                "right": {
                                                  "type": "ConditionalExpression",
                                                  "test": {
                                                    "type": "LogicalExpression",
                                                    "operator": "||",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "doc"
                                                    },
                                                    "right": {
                                                      "type": "Identifier",
                                                      "name": "node"
                                                    }
                                                  },
                                                  "consequent": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "Y_DOM"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "_getDoc"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Identifier",
                                                        "name": "node"
                                                      }
                                                    ]
                                                  },
                                                  "alternate": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "Y"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "config"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "doc"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "type": "VariableDeclaration",
                                              "declarations": [
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "dv"
                                                  },
                                                  "init": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "doc"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "defaultView"
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "pageOffset"
                                                  },
                                                  "init": {
                                                    "type": "ConditionalExpression",
                                                    "test": {
                                                      "type": "Identifier",
                                                      "name": "dv"
                                                    },
                                                    "consequent": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "dv"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "pageXOffset"
                                                      }
                                                    },
                                                    "alternate": {
                                                      "type": "Literal",
                                                      "value": 0
                                                    }
                                                  }
                                                }
                                              ],
                                              "kind": "var"
                                            },
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "Math"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "max"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": true,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "doc"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "DOCUMENT_ELEMENT"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "scrollLeft"
                                                    }
                                                  },
                                                  {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "doc"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "body"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "scrollLeft"
                                                    }
                                                  },
                                                  {
                                                    "type": "Identifier",
                                                    "name": "pageOffset"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "docScrollY"
                                      },
                                      "value": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "node"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "doc"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "doc"
                                                },
                                                "right": {
                                                  "type": "ConditionalExpression",
                                                  "test": {
                                                    "type": "LogicalExpression",
                                                    "operator": "||",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "doc"
                                                    },
                                                    "right": {
                                                      "type": "Identifier",
                                                      "name": "node"
                                                    }
                                                  },
                                                  "consequent": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "Y_DOM"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "_getDoc"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Identifier",
                                                        "name": "node"
                                                      }
                                                    ]
                                                  },
                                                  "alternate": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "Y"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "config"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "doc"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "type": "VariableDeclaration",
                                              "declarations": [
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "dv"
                                                  },
                                                  "init": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "doc"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "defaultView"
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "pageOffset"
                                                  },
                                                  "init": {
                                                    "type": "ConditionalExpression",
                                                    "test": {
                                                      "type": "Identifier",
                                                      "name": "dv"
                                                    },
                                                    "consequent": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "dv"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "pageYOffset"
                                                      }
                                                    },
                                                    "alternate": {
                                                      "type": "Literal",
                                                      "value": 0
                                                    }
                                                  }
                                                }
                                              ],
                                              "kind": "var"
                                            },
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "Math"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "max"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": true,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "doc"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "DOCUMENT_ELEMENT"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "scrollTop"
                                                    }
                                                  },
                                                  {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "doc"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "body"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "scrollTop"
                                                    }
                                                  },
                                                  {
                                                    "type": "Identifier",
                                                    "name": "pageOffset"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "getXY"
                                      },
                                      "value": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "FunctionExpression",
                                          "id": null,
                                          "params": [],
                                          "defaults": [],
                                          "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "IfStatement",
                                                "test": {
                                                  "type": "MemberExpression",
                                                  "computed": true,
                                                  "object": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "Y"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "config"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "doc"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "DOCUMENT_ELEMENT"
                                                    }
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "GET_BOUNDING_CLIENT_RECT"
                                                  }
                                                },
                                                "consequent": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "ReturnStatement",
                                                      "argument": {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "node"
                                                          }
                                                        ],
                                                        "defaults": [],
                                                        "body": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "VariableDeclaration",
                                                              "declarations": [
                                                                {
                                                                  "type": "VariableDeclarator",
                                                                  "id": {
                                                                    "type": "Identifier",
                                                                    "name": "xy"
                                                                  },
                                                                  "init": {
                                                                    "type": "Literal",
                                                                    "value": null
                                                                  }
                                                                },
                                                                {
                                                                  "type": "VariableDeclarator",
                                                                  "id": {
                                                                    "type": "Identifier",
                                                                    "name": "scrollLeft"
                                                                  },
                                                                  "init": null
                                                                },
                                                                {
                                                                  "type": "VariableDeclarator",
                                                                  "id": {
                                                                    "type": "Identifier",
                                                                    "name": "scrollTop"
                                                                  },
                                                                  "init": null
                                                                },
                                                                {
                                                                  "type": "VariableDeclarator",
                                                                  "id": {
                                                                    "type": "Identifier",
                                                                    "name": "mode"
                                                                  },
                                                                  "init": null
                                                                },
                                                                {
                                                                  "type": "VariableDeclarator",
                                                                  "id": {
                                                                    "type": "Identifier",
                                                                    "name": "box"
                                                                  },
                                                                  "init": null
                                                                },
                                                                {
                                                                  "type": "VariableDeclarator",
                                                                  "id": {
                                                                    "type": "Identifier",
                                                                    "name": "offX"
                                                                  },
                                                                  "init": null
                                                                },
                                                                {
                                                                  "type": "VariableDeclarator",
                                                                  "id": {
                                                                    "type": "Identifier",
                                                                    "name": "offY"
                                                                  },
                                                                  "init": null
                                                                },
                                                                {
                                                                  "type": "VariableDeclarator",
                                                                  "id": {
                                                                    "type": "Identifier",
                                                                    "name": "doc"
                                                                  },
                                                                  "init": null
                                                                },
                                                                {
                                                                  "type": "VariableDeclarator",
                                                                  "id": {
                                                                    "type": "Identifier",
                                                                    "name": "win"
                                                                  },
                                                                  "init": null
                                                                },
                                                                {
                                                                  "type": "VariableDeclarator",
                                                                  "id": {
                                                                    "type": "Identifier",
                                                                    "name": "inDoc"
                                                                  },
                                                                  "init": null
                                                                },
                                                                {
                                                                  "type": "VariableDeclarator",
                                                                  "id": {
                                                                    "type": "Identifier",
                                                                    "name": "rootNode"
                                                                  },
                                                                  "init": null
                                                                }
                                                              ],
                                                              "kind": "var"
                                                            },
                                                            {
                                                              "type": "IfStatement",
                                                              "test": {
                                                                "type": "LogicalExpression",
                                                                "operator": "&&",
                                                                "left": {
                                                                  "type": "Identifier",
                                                                  "name": "node"
                                                                },
                                                                "right": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "node"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "tagName"
                                                                  }
                                                                }
                                                              },
                                                              "consequent": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "AssignmentExpression",
                                                                      "operator": "=",
                                                                      "left": {
                                                                        "type": "Identifier",
                                                                        "name": "doc"
                                                                      },
                                                                      "right": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "node"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "ownerDocument"
                                                                        }
                                                                      }
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "AssignmentExpression",
                                                                      "operator": "=",
                                                                      "left": {
                                                                        "type": "Identifier",
                                                                        "name": "mode"
                                                                      },
                                                                      "right": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "doc"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "COMPAT_MODE"
                                                                        }
                                                                      }
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "!==",
                                                                      "left": {
                                                                        "type": "Identifier",
                                                                        "name": "mode"
                                                                      },
                                                                      "right": {
                                                                        "type": "Identifier",
                                                                        "name": "_BACK_COMPAT"
                                                                      }
                                                                    },
                                                                    "consequent": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "AssignmentExpression",
                                                                            "operator": "=",
                                                                            "left": {
                                                                              "type": "Identifier",
                                                                              "name": "rootNode"
                                                                            },
                                                                            "right": {
                                                                              "type": "MemberExpression",
                                                                              "computed": true,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "doc"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "DOCUMENT_ELEMENT"
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "alternate": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "AssignmentExpression",
                                                                            "operator": "=",
                                                                            "left": {
                                                                              "type": "Identifier",
                                                                              "name": "rootNode"
                                                                            },
                                                                            "right": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "doc"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "body"
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      ]
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "rootNode"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "contains"
                                                                      }
                                                                    },
                                                                    "consequent": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "AssignmentExpression",
                                                                            "operator": "=",
                                                                            "left": {
                                                                              "type": "Identifier",
                                                                              "name": "inDoc"
                                                                            },
                                                                            "right": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "rootNode"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "contains"
                                                                                }
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "node"
                                                                                }
                                                                              ]
                                                                            }
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "alternate": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "AssignmentExpression",
                                                                            "operator": "=",
                                                                            "left": {
                                                                              "type": "Identifier",
                                                                              "name": "inDoc"
                                                                            },
                                                                            "right": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "Y"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "DOM"
                                                                                  }
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "contains"
                                                                                }
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "rootNode"
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "node"
                                                                                }
                                                                              ]
                                                                            }
                                                                          }
                                                                        }
                                                                      ]
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                      "type": "Identifier",
                                                                      "name": "inDoc"
                                                                    },
                                                                    "consequent": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "AssignmentExpression",
                                                                            "operator": "=",
                                                                            "left": {
                                                                              "type": "Identifier",
                                                                              "name": "win"
                                                                            },
                                                                            "right": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "doc"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "defaultView"
                                                                              }
                                                                            }
                                                                          }
                                                                        },
                                                                        {
                                                                          "type": "IfStatement",
                                                                          "test": {
                                                                            "type": "LogicalExpression",
                                                                            "operator": "&&",
                                                                            "left": {
                                                                              "type": "Identifier",
                                                                              "name": "win"
                                                                            },
                                                                            "right": {
                                                                              "type": "BinaryExpression",
                                                                              "operator": "in",
                                                                              "left": {
                                                                                "type": "Literal",
                                                                                "value": "pageXOffset"
                                                                              },
                                                                              "right": {
                                                                                "type": "Identifier",
                                                                                "name": "win"
                                                                              }
                                                                            }
                                                                          },
                                                                          "consequent": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "AssignmentExpression",
                                                                                  "operator": "=",
                                                                                  "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "scrollLeft"
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "win"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "pageXOffset"
                                                                                    }
                                                                                  }
                                                                                }
                                                                              },
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "AssignmentExpression",
                                                                                  "operator": "=",
                                                                                  "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "scrollTop"
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "win"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "pageYOffset"
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            ]
                                                                          },
                                                                          "alternate": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "AssignmentExpression",
                                                                                  "operator": "=",
                                                                                  "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "scrollLeft"
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "ConditionalExpression",
                                                                                    "test": {
                                                                                      "type": "Identifier",
                                                                                      "name": "SCROLL_NODE"
                                                                                    },
                                                                                    "consequent": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "doc"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "SCROLL_NODE"
                                                                                        }
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "scrollLeft"
                                                                                      }
                                                                                    },
                                                                                    "alternate": {
                                                                                      "type": "CallExpression",
                                                                                      "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "Y_DOM"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "docScrollX"
                                                                                        }
                                                                                      },
                                                                                      "arguments": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "name": "node"
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "name": "doc"
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  }
                                                                                }
                                                                              },
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "AssignmentExpression",
                                                                                  "operator": "=",
                                                                                  "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "scrollTop"
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "ConditionalExpression",
                                                                                    "test": {
                                                                                      "type": "Identifier",
                                                                                      "name": "SCROLL_NODE"
                                                                                    },
                                                                                    "consequent": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "doc"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "SCROLL_NODE"
                                                                                        }
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "scrollTop"
                                                                                      }
                                                                                    },
                                                                                    "alternate": {
                                                                                      "type": "CallExpression",
                                                                                      "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "Y_DOM"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "docScrollY"
                                                                                        }
                                                                                      },
                                                                                      "arguments": [
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "name": "node"
                                                                                        },
                                                                                        {
                                                                                          "type": "Identifier",
                                                                                          "name": "doc"
                                                                                        }
                                                                                      ]
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            ]
                                                                          }
                                                                        },
                                                                        {
                                                                          "type": "IfStatement",
                                                                          "test": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "Y"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "UA"
                                                                              }
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "ie"
                                                                            }
                                                                          },
                                                                          "consequent": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                  "type": "LogicalExpression",
                                                                                  "operator": "||",
                                                                                  "left": {
                                                                                    "type": "LogicalExpression",
                                                                                    "operator": "||",
                                                                                    "left": {
                                                                                      "type": "UnaryExpression",
                                                                                      "operator": "!",
                                                                                      "argument": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "doc"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "documentMode"
                                                                                        }
                                                                                      },
                                                                                      "prefix": true
                                                                                    },
                                                                                    "right": {
                                                                                      "type": "BinaryExpression",
                                                                                      "operator": "<",
                                                                                      "left": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "doc"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "documentMode"
                                                                                        }
                                                                                      },
                                                                                      "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 8
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "===",
                                                                                    "left": {
                                                                                      "type": "Identifier",
                                                                                      "name": "mode"
                                                                                    },
                                                                                    "right": {
                                                                                      "type": "Identifier",
                                                                                      "name": "_BACK_COMPAT"
                                                                                    }
                                                                                  }
                                                                                },
                                                                                "consequent": {
                                                                                  "type": "BlockStatement",
                                                                                  "body": [
                                                                                    {
                                                                                      "type": "ExpressionStatement",
                                                                                      "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                          "type": "Identifier",
                                                                                          "name": "offX"
                                                                                        },
                                                                                        "right": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "rootNode"
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "clientLeft"
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    {
                                                                                      "type": "ExpressionStatement",
                                                                                      "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                          "type": "Identifier",
                                                                                          "name": "offY"
                                                                                        },
                                                                                        "right": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "rootNode"
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "clientTop"
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                "alternate": null
                                                                              }
                                                                            ]
                                                                          },
                                                                          "alternate": null
                                                                        },
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "AssignmentExpression",
                                                                            "operator": "=",
                                                                            "left": {
                                                                              "type": "Identifier",
                                                                              "name": "box"
                                                                            },
                                                                            "right": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "node"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "GET_BOUNDING_CLIENT_RECT"
                                                                                }
                                                                              },
                                                                              "arguments": []
                                                                            }
                                                                          }
                                                                        },
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "AssignmentExpression",
                                                                            "operator": "=",
                                                                            "left": {
                                                                              "type": "Identifier",
                                                                              "name": "xy"
                                                                            },
                                                                            "right": {
                                                                              "type": "ArrayExpression",
                                                                              "elements": [
                                                                                {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "box"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "left"
                                                                                  }
                                                                                },
                                                                                {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "box"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "top"
                                                                                  }
                                                                                }
                                                                              ]
                                                                            }
                                                                          }
                                                                        },
                                                                        {
                                                                          "type": "IfStatement",
                                                                          "test": {
                                                                            "type": "LogicalExpression",
                                                                            "operator": "||",
                                                                            "left": {
                                                                              "type": "Identifier",
                                                                              "name": "offX"
                                                                            },
                                                                            "right": {
                                                                              "type": "Identifier",
                                                                              "name": "offY"
                                                                            }
                                                                          },
                                                                          "consequent": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "AssignmentExpression",
                                                                                  "operator": "-=",
                                                                                  "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "xy"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Literal",
                                                                                      "value": 0
                                                                                    }
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "Identifier",
                                                                                    "name": "offX"
                                                                                  }
                                                                                }
                                                                              },
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "AssignmentExpression",
                                                                                  "operator": "-=",
                                                                                  "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "xy"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Literal",
                                                                                      "value": 1
                                                                                    }
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "Identifier",
                                                                                    "name": "offY"
                                                                                  }
                                                                                }
                                                                              }
                                                                            ]
                                                                          },
                                                                          "alternate": null
                                                                        },
                                                                        {
                                                                          "type": "IfStatement",
                                                                          "test": {
                                                                            "type": "LogicalExpression",
                                                                            "operator": "||",
                                                                            "left": {
                                                                              "type": "Identifier",
                                                                              "name": "scrollTop"
                                                                            },
                                                                            "right": {
                                                                              "type": "Identifier",
                                                                              "name": "scrollLeft"
                                                                            }
                                                                          },
                                                                          "consequent": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                  "type": "LogicalExpression",
                                                                                  "operator": "||",
                                                                                  "left": {
                                                                                    "type": "UnaryExpression",
                                                                                    "operator": "!",
                                                                                    "argument": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "Y"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "UA"
                                                                                        }
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "ios"
                                                                                      }
                                                                                    },
                                                                                    "prefix": true
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": ">=",
                                                                                    "left": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "Y"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "UA"
                                                                                        }
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "ios"
                                                                                      }
                                                                                    },
                                                                                    "right": {
                                                                                      "type": "Literal",
                                                                                      "value": 4.2
                                                                                    }
                                                                                  }
                                                                                },
                                                                                "consequent": {
                                                                                  "type": "BlockStatement",
                                                                                  "body": [
                                                                                    {
                                                                                      "type": "ExpressionStatement",
                                                                                      "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "+=",
                                                                                        "left": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": true,
                                                                                          "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "xy"
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Literal",
                                                                                            "value": 0
                                                                                          }
                                                                                        },
                                                                                        "right": {
                                                                                          "type": "Identifier",
                                                                                          "name": "scrollLeft"
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    {
                                                                                      "type": "ExpressionStatement",
                                                                                      "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "+=",
                                                                                        "left": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": true,
                                                                                          "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "xy"
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Literal",
                                                                                            "value": 1
                                                                                          }
                                                                                        },
                                                                                        "right": {
                                                                                          "type": "Identifier",
                                                                                          "name": "scrollTop"
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                "alternate": null
                                                                              }
                                                                            ]
                                                                          },
                                                                          "alternate": null
                                                                        }
                                                                      ]
                                                                    },
                                                                    "alternate": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "AssignmentExpression",
                                                                            "operator": "=",
                                                                            "left": {
                                                                              "type": "Identifier",
                                                                              "name": "xy"
                                                                            },
                                                                            "right": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "Y_DOM"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "_getOffset"
                                                                                }
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "node"
                                                                                }
                                                                              ]
                                                                            }
                                                                          }
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "alternate": null
                                                            },
                                                            {
                                                              "type": "ReturnStatement",
                                                              "argument": {
                                                                "type": "Identifier",
                                                                "name": "xy"
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "rest": null,
                                                        "generator": false,
                                                        "expression": false
                                                      }
                                                    }
                                                  ]
                                                },
                                                "alternate": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "ReturnStatement",
                                                      "argument": {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "node"
                                                          }
                                                        ],
                                                        "defaults": [],
                                                        "body": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "VariableDeclaration",
                                                              "declarations": [
                                                                {
                                                                  "type": "VariableDeclarator",
                                                                  "id": {
                                                                    "type": "Identifier",
                                                                    "name": "xy"
                                                                  },
                                                                  "init": {
                                                                    "type": "Literal",
                                                                    "value": null
                                                                  }
                                                                },
                                                                {
                                                                  "type": "VariableDeclarator",
                                                                  "id": {
                                                                    "type": "Identifier",
                                                                    "name": "doc"
                                                                  },
                                                                  "init": null
                                                                },
                                                                {
                                                                  "type": "VariableDeclarator",
                                                                  "id": {
                                                                    "type": "Identifier",
                                                                    "name": "parentNode"
                                                                  },
                                                                  "init": null
                                                                },
                                                                {
                                                                  "type": "VariableDeclarator",
                                                                  "id": {
                                                                    "type": "Identifier",
                                                                    "name": "bCheck"
                                                                  },
                                                                  "init": null
                                                                },
                                                                {
                                                                  "type": "VariableDeclarator",
                                                                  "id": {
                                                                    "type": "Identifier",
                                                                    "name": "scrollTop"
                                                                  },
                                                                  "init": null
                                                                },
                                                                {
                                                                  "type": "VariableDeclarator",
                                                                  "id": {
                                                                    "type": "Identifier",
                                                                    "name": "scrollLeft"
                                                                  },
                                                                  "init": null
                                                                }
                                                              ],
                                                              "kind": "var"
                                                            },
                                                            {
                                                              "type": "IfStatement",
                                                              "test": {
                                                                "type": "Identifier",
                                                                "name": "node"
                                                              },
                                                              "consequent": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "Y_DOM"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "inDoc"
                                                                        }
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "name": "node"
                                                                        }
                                                                      ]
                                                                    },
                                                                    "consequent": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "AssignmentExpression",
                                                                            "operator": "=",
                                                                            "left": {
                                                                              "type": "Identifier",
                                                                              "name": "xy"
                                                                            },
                                                                            "right": {
                                                                              "type": "ArrayExpression",
                                                                              "elements": [
                                                                                {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "node"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "offsetLeft"
                                                                                  }
                                                                                },
                                                                                {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "node"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "offsetTop"
                                                                                  }
                                                                                }
                                                                              ]
                                                                            }
                                                                          }
                                                                        },
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "AssignmentExpression",
                                                                            "operator": "=",
                                                                            "left": {
                                                                              "type": "Identifier",
                                                                              "name": "doc"
                                                                            },
                                                                            "right": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "node"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "ownerDocument"
                                                                              }
                                                                            }
                                                                          }
                                                                        },
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "AssignmentExpression",
                                                                            "operator": "=",
                                                                            "left": {
                                                                              "type": "Identifier",
                                                                              "name": "parentNode"
                                                                            },
                                                                            "right": {
                                                                              "type": "Identifier",
                                                                              "name": "node"
                                                                            }
                                                                          }
                                                                        },
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "AssignmentExpression",
                                                                            "operator": "=",
                                                                            "left": {
                                                                              "type": "Identifier",
                                                                              "name": "bCheck"
                                                                            },
                                                                            "right": {
                                                                              "type": "ConditionalExpression",
                                                                              "test": {
                                                                                "type": "LogicalExpression",
                                                                                "operator": "||",
                                                                                "left": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "Y"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "UA"
                                                                                    }
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "gecko"
                                                                                  }
                                                                                },
                                                                                "right": {
                                                                                  "type": "BinaryExpression",
                                                                                  "operator": ">",
                                                                                  "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "Y"
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "UA"
                                                                                      }
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "webkit"
                                                                                    }
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 519
                                                                                  }
                                                                                }
                                                                              },
                                                                              "consequent": {
                                                                                "type": "Literal",
                                                                                "value": true
                                                                              },
                                                                              "alternate": {
                                                                                "type": "Literal",
                                                                                "value": false
                                                                              }
                                                                            }
                                                                          }
                                                                        },
                                                                        {
                                                                          "type": "WhileStatement",
                                                                          "test": {
                                                                            "type": "AssignmentExpression",
                                                                            "operator": "=",
                                                                            "left": {
                                                                              "type": "Identifier",
                                                                              "name": "parentNode"
                                                                            },
                                                                            "right": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "parentNode"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "offsetParent"
                                                                              }
                                                                            }
                                                                          },
                                                                          "body": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "AssignmentExpression",
                                                                                  "operator": "+=",
                                                                                  "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "xy"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Literal",
                                                                                      "value": 0
                                                                                    }
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "parentNode"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "offsetLeft"
                                                                                    }
                                                                                  }
                                                                                }
                                                                              },
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "AssignmentExpression",
                                                                                  "operator": "+=",
                                                                                  "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "xy"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Literal",
                                                                                      "value": 1
                                                                                    }
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "parentNode"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "offsetTop"
                                                                                    }
                                                                                  }
                                                                                }
                                                                              },
                                                                              {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                  "type": "Identifier",
                                                                                  "name": "bCheck"
                                                                                },
                                                                                "consequent": {
                                                                                  "type": "BlockStatement",
                                                                                  "body": [
                                                                                    {
                                                                                      "type": "ExpressionStatement",
                                                                                      "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                          "type": "Identifier",
                                                                                          "name": "xy"
                                                                                        },
                                                                                        "right": {
                                                                                          "type": "CallExpression",
                                                                                          "callee": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                              "type": "Identifier",
                                                                                              "name": "Y_DOM"
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "Identifier",
                                                                                              "name": "_calcBorders"
                                                                                            }
                                                                                          },
                                                                                          "arguments": [
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "name": "parentNode"
                                                                                            },
                                                                                            {
                                                                                              "type": "Identifier",
                                                                                              "name": "xy"
                                                                                            }
                                                                                          ]
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                "alternate": null
                                                                              }
                                                                            ]
                                                                          }
                                                                        },
                                                                        {
                                                                          "type": "IfStatement",
                                                                          "test": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "!=",
                                                                            "left": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "Y_DOM"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "getStyle"
                                                                                }
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "node"
                                                                                },
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "POSITION"
                                                                                }
                                                                              ]
                                                                            },
                                                                            "right": {
                                                                              "type": "Identifier",
                                                                              "name": "FIXED"
                                                                            }
                                                                          },
                                                                          "consequent": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "AssignmentExpression",
                                                                                  "operator": "=",
                                                                                  "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "parentNode"
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "Identifier",
                                                                                    "name": "node"
                                                                                  }
                                                                                }
                                                                              },
                                                                              {
                                                                                "type": "WhileStatement",
                                                                                "test": {
                                                                                  "type": "AssignmentExpression",
                                                                                  "operator": "=",
                                                                                  "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "parentNode"
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "parentNode"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "parentNode"
                                                                                    }
                                                                                  }
                                                                                },
                                                                                "body": {
                                                                                  "type": "BlockStatement",
                                                                                  "body": [
                                                                                    {
                                                                                      "type": "ExpressionStatement",
                                                                                      "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                          "type": "Identifier",
                                                                                          "name": "scrollTop"
                                                                                        },
                                                                                        "right": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "parentNode"
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "scrollTop"
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    {
                                                                                      "type": "ExpressionStatement",
                                                                                      "expression": {
                                                                                        "type": "AssignmentExpression",
                                                                                        "operator": "=",
                                                                                        "left": {
                                                                                          "type": "Identifier",
                                                                                          "name": "scrollLeft"
                                                                                        },
                                                                                        "right": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "parentNode"
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "scrollLeft"
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    },
                                                                                    {
                                                                                      "type": "IfStatement",
                                                                                      "test": {
                                                                                        "type": "LogicalExpression",
                                                                                        "operator": "&&",
                                                                                        "left": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                              "type": "Identifier",
                                                                                              "name": "Y"
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "Identifier",
                                                                                              "name": "UA"
                                                                                            }
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "gecko"
                                                                                          }
                                                                                        },
                                                                                        "right": {
                                                                                          "type": "BinaryExpression",
                                                                                          "operator": "!==",
                                                                                          "left": {
                                                                                            "type": "CallExpression",
                                                                                            "callee": {
                                                                                              "type": "MemberExpression",
                                                                                              "computed": false,
                                                                                              "object": {
                                                                                                "type": "Identifier",
                                                                                                "name": "Y_DOM"
                                                                                              },
                                                                                              "property": {
                                                                                                "type": "Identifier",
                                                                                                "name": "getStyle"
                                                                                              }
                                                                                            },
                                                                                            "arguments": [
                                                                                              {
                                                                                                "type": "Identifier",
                                                                                                "name": "parentNode"
                                                                                              },
                                                                                              {
                                                                                                "type": "Literal",
                                                                                                "value": "overflow"
                                                                                              }
                                                                                            ]
                                                                                          },
                                                                                          "right": {
                                                                                            "type": "Literal",
                                                                                            "value": "visible"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "consequent": {
                                                                                        "type": "BlockStatement",
                                                                                        "body": [
                                                                                          {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                              "type": "AssignmentExpression",
                                                                                              "operator": "=",
                                                                                              "left": {
                                                                                                "type": "Identifier",
                                                                                                "name": "xy"
                                                                                              },
                                                                                              "right": {
                                                                                                "type": "CallExpression",
                                                                                                "callee": {
                                                                                                  "type": "MemberExpression",
                                                                                                  "computed": false,
                                                                                                  "object": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "Y_DOM"
                                                                                                  },
                                                                                                  "property": {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "_calcBorders"
                                                                                                  }
                                                                                                },
                                                                                                "arguments": [
                                                                                                  {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "parentNode"
                                                                                                  },
                                                                                                  {
                                                                                                    "type": "Identifier",
                                                                                                    "name": "xy"
                                                                                                  }
                                                                                                ]
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        ]
                                                                                      },
                                                                                      "alternate": null
                                                                                    },
                                                                                    {
                                                                                      "type": "IfStatement",
                                                                                      "test": {
                                                                                        "type": "LogicalExpression",
                                                                                        "operator": "||",
                                                                                        "left": {
                                                                                          "type": "Identifier",
                                                                                          "name": "scrollTop"
                                                                                        },
                                                                                        "right": {
                                                                                          "type": "Identifier",
                                                                                          "name": "scrollLeft"
                                                                                        }
                                                                                      },
                                                                                      "consequent": {
                                                                                        "type": "BlockStatement",
                                                                                        "body": [
                                                                                          {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                              "type": "AssignmentExpression",
                                                                                              "operator": "-=",
                                                                                              "left": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "xy"
                                                                                                },
                                                                                                "property": {
                                                                                                  "type": "Literal",
                                                                                                  "value": 0
                                                                                                }
                                                                                              },
                                                                                              "right": {
                                                                                                "type": "Identifier",
                                                                                                "name": "scrollLeft"
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          {
                                                                                            "type": "ExpressionStatement",
                                                                                            "expression": {
                                                                                              "type": "AssignmentExpression",
                                                                                              "operator": "-=",
                                                                                              "left": {
                                                                                                "type": "MemberExpression",
                                                                                                "computed": true,
                                                                                                "object": {
                                                                                                  "type": "Identifier",
                                                                                                  "name": "xy"
                                                                                                },
                                                                                                "property": {
                                                                                                  "type": "Literal",
                                                                                                  "value": 1
                                                                                                }
                                                                                              },
                                                                                              "right": {
                                                                                                "type": "Identifier",
                                                                                                "name": "scrollTop"
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        ]
                                                                                      },
                                                                                      "alternate": null
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              },
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "AssignmentExpression",
                                                                                  "operator": "+=",
                                                                                  "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "xy"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Literal",
                                                                                      "value": 0
                                                                                    }
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "Y_DOM"
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "docScrollX"
                                                                                      }
                                                                                    },
                                                                                    "arguments": [
                                                                                      {
                                                                                        "type": "Identifier",
                                                                                        "name": "node"
                                                                                      },
                                                                                      {
                                                                                        "type": "Identifier",
                                                                                        "name": "doc"
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                }
                                                                              },
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "AssignmentExpression",
                                                                                  "operator": "+=",
                                                                                  "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "xy"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Literal",
                                                                                      "value": 1
                                                                                    }
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "Y_DOM"
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "docScrollY"
                                                                                      }
                                                                                    },
                                                                                    "arguments": [
                                                                                      {
                                                                                        "type": "Identifier",
                                                                                        "name": "node"
                                                                                      },
                                                                                      {
                                                                                        "type": "Identifier",
                                                                                        "name": "doc"
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                }
                                                                              }
                                                                            ]
                                                                          },
                                                                          "alternate": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "AssignmentExpression",
                                                                                  "operator": "+=",
                                                                                  "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "xy"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Literal",
                                                                                      "value": 0
                                                                                    }
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "Y_DOM"
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "docScrollX"
                                                                                      }
                                                                                    },
                                                                                    "arguments": [
                                                                                      {
                                                                                        "type": "Identifier",
                                                                                        "name": "node"
                                                                                      },
                                                                                      {
                                                                                        "type": "Identifier",
                                                                                        "name": "doc"
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                }
                                                                              },
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "AssignmentExpression",
                                                                                  "operator": "+=",
                                                                                  "left": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "xy"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Literal",
                                                                                      "value": 1
                                                                                    }
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "Identifier",
                                                                                        "name": "Y_DOM"
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "docScrollY"
                                                                                      }
                                                                                    },
                                                                                    "arguments": [
                                                                                      {
                                                                                        "type": "Identifier",
                                                                                        "name": "node"
                                                                                      },
                                                                                      {
                                                                                        "type": "Identifier",
                                                                                        "name": "doc"
                                                                                      }
                                                                                    ]
                                                                                  }
                                                                                }
                                                                              }
                                                                            ]
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "alternate": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "AssignmentExpression",
                                                                            "operator": "=",
                                                                            "left": {
                                                                              "type": "Identifier",
                                                                              "name": "xy"
                                                                            },
                                                                            "right": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "Y_DOM"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "_getOffset"
                                                                                }
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "node"
                                                                                }
                                                                              ]
                                                                            }
                                                                          }
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "alternate": null
                                                            },
                                                            {
                                                              "type": "ReturnStatement",
                                                              "argument": {
                                                                "type": "Identifier",
                                                                "name": "xy"
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "rest": null,
                                                        "generator": false,
                                                        "expression": false
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          },
                                          "rest": null,
                                          "generator": false,
                                          "expression": false
                                        },
                                        "arguments": []
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "getScrollbarWidth"
                                      },
                                      "value": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "Y"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "cached"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [],
                                            "defaults": [],
                                            "body": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "VariableDeclaration",
                                                  "declarations": [
                                                    {
                                                      "type": "VariableDeclarator",
                                                      "id": {
                                                        "type": "Identifier",
                                                        "name": "doc"
                                                      },
                                                      "init": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "Y"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "config"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "doc"
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "VariableDeclarator",
                                                      "id": {
                                                        "type": "Identifier",
                                                        "name": "testNode"
                                                      },
                                                      "init": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "doc"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "createElement"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Literal",
                                                            "value": "div"
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    {
                                                      "type": "VariableDeclarator",
                                                      "id": {
                                                        "type": "Identifier",
                                                        "name": "body"
                                                      },
                                                      "init": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "doc"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "getElementsByTagName"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Literal",
                                                              "value": "body"
                                                            }
                                                          ]
                                                        },
                                                        "property": {
                                                          "type": "Literal",
                                                          "value": 0
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "VariableDeclarator",
                                                      "id": {
                                                        "type": "Identifier",
                                                        "name": "width"
                                                      },
                                                      "init": {
                                                        "type": "Literal",
                                                        "value": 0.1
                                                      }
                                                    }
                                                  ],
                                                  "kind": "var"
                                                },
                                                {
                                                  "type": "IfStatement",
                                                  "test": {
                                                    "type": "Identifier",
                                                    "name": "body"
                                                  },
                                                  "consequent": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "testNode"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "style"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "cssText"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "position:absolute;visibility:hidden;overflow:scroll;width:20px;"
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "testNode"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "appendChild"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "doc"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "createElement"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "Literal",
                                                                        "value": "p"
                                                                      }
                                                                    ]
                                                                  }
                                                                ]
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "style"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "height"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "1px"
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "body"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "insertBefore"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "testNode"
                                                            },
                                                            {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "body"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "firstChild"
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      },
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "width"
                                                          },
                                                          "right": {
                                                            "type": "BinaryExpression",
                                                            "operator": "-",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "testNode"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "offsetWidth"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "testNode"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "clientWidth"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "body"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "removeChild"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "testNode"
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "alternate": null
                                                },
                                                {
                                                  "type": "ReturnStatement",
                                                  "argument": {
                                                    "type": "Identifier",
                                                    "name": "width"
                                                  }
                                                }
                                              ]
                                            },
                                            "rest": null,
                                            "generator": false,
                                            "expression": false
                                          },
                                          {
                                            "type": "Literal",
                                            "value": null
                                          },
                                          {
                                            "type": "Literal",
                                            "value": 0.1
                                          }
                                        ]
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "getX"
                                      },
                                      "value": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "node"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "Y_DOM"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "getXY"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "node"
                                                    }
                                                  ]
                                                },
                                                "property": {
                                                  "type": "Literal",
                                                  "value": 0
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "getY"
                                      },
                                      "value": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "node"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "Y_DOM"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "getXY"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "node"
                                                    }
                                                  ]
                                                },
                                                "property": {
                                                  "type": "Literal",
                                                  "value": 1
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "setXY"
                                      },
                                      "value": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "node"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "xy"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "noRetry"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "VariableDeclaration",
                                              "declarations": [
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "setStyle"
                                                  },
                                                  "init": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "Y_DOM"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "setStyle"
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "pos"
                                                  },
                                                  "init": null
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "delta"
                                                  },
                                                  "init": null
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "newXY"
                                                  },
                                                  "init": null
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "currentXY"
                                                  },
                                                  "init": null
                                                }
                                              ],
                                              "kind": "var"
                                            },
                                            {
                                              "type": "IfStatement",
                                              "test": {
                                                "type": "LogicalExpression",
                                                "operator": "&&",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "node"
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "xy"
                                                }
                                              },
                                              "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "pos"
                                                      },
                                                      "right": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "Y_DOM"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "getStyle"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "node"
                                                          },
                                                          {
                                                            "type": "Identifier",
                                                            "name": "POSITION"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "delta"
                                                      },
                                                      "right": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "Y_DOM"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "_getOffset"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "node"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "BinaryExpression",
                                                      "operator": "==",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "pos"
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": "static"
                                                      }
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "pos"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "RELATIVE"
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "Identifier",
                                                              "name": "setStyle"
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Identifier",
                                                                "name": "node"
                                                              },
                                                              {
                                                                "type": "Identifier",
                                                                "name": "POSITION"
                                                              },
                                                              {
                                                                "type": "Identifier",
                                                                "name": "pos"
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": null
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "currentXY"
                                                      },
                                                      "right": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "Y_DOM"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "getXY"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "node"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "BinaryExpression",
                                                      "operator": "!==",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "xy"
                                                        },
                                                        "property": {
                                                          "type": "Literal",
                                                          "value": 0
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": null
                                                      }
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "Identifier",
                                                              "name": "setStyle"
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Identifier",
                                                                "name": "node"
                                                              },
                                                              {
                                                                "type": "Identifier",
                                                                "name": "LEFT"
                                                              },
                                                              {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "+",
                                                                  "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "-",
                                                                    "left": {
                                                                      "type": "MemberExpression",
                                                                      "computed": true,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "xy"
                                                                      },
                                                                      "property": {
                                                                        "type": "Literal",
                                                                        "value": 0
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "MemberExpression",
                                                                      "computed": true,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "currentXY"
                                                                      },
                                                                      "property": {
                                                                        "type": "Literal",
                                                                        "value": 0
                                                                      }
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "delta"
                                                                    },
                                                                    "property": {
                                                                      "type": "Literal",
                                                                      "value": 0
                                                                    }
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "Literal",
                                                                  "value": "px"
                                                                }
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": null
                                                  },
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "BinaryExpression",
                                                      "operator": "!==",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "xy"
                                                        },
                                                        "property": {
                                                          "type": "Literal",
                                                          "value": 1
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": null
                                                      }
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "Identifier",
                                                              "name": "setStyle"
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Identifier",
                                                                "name": "node"
                                                              },
                                                              {
                                                                "type": "Identifier",
                                                                "name": "TOP"
                                                              },
                                                              {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "+",
                                                                  "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "-",
                                                                    "left": {
                                                                      "type": "MemberExpression",
                                                                      "computed": true,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "xy"
                                                                      },
                                                                      "property": {
                                                                        "type": "Literal",
                                                                        "value": 1
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "MemberExpression",
                                                                      "computed": true,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "currentXY"
                                                                      },
                                                                      "property": {
                                                                        "type": "Literal",
                                                                        "value": 1
                                                                      }
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "delta"
                                                                    },
                                                                    "property": {
                                                                      "type": "Literal",
                                                                      "value": 1
                                                                    }
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "Literal",
                                                                  "value": "px"
                                                                }
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": null
                                                  },
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "UnaryExpression",
                                                      "operator": "!",
                                                      "argument": {
                                                        "type": "Identifier",
                                                        "name": "noRetry"
                                                      },
                                                      "prefix": true
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "newXY"
                                                            },
                                                            "right": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "Y_DOM"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "getXY"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "node"
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "IfStatement",
                                                          "test": {
                                                            "type": "LogicalExpression",
                                                            "operator": "||",
                                                            "left": {
                                                              "type": "BinaryExpression",
                                                              "operator": "!==",
                                                              "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "newXY"
                                                                },
                                                                "property": {
                                                                  "type": "Literal",
                                                                  "value": 0
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "xy"
                                                                },
                                                                "property": {
                                                                  "type": "Literal",
                                                                  "value": 0
                                                                }
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "BinaryExpression",
                                                              "operator": "!==",
                                                              "left": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "newXY"
                                                                },
                                                                "property": {
                                                                  "type": "Literal",
                                                                  "value": 1
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "xy"
                                                                },
                                                                "property": {
                                                                  "type": "Literal",
                                                                  "value": 1
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "Y_DOM"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "setXY"
                                                                    }
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "node"
                                                                    },
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "xy"
                                                                    },
                                                                    {
                                                                      "type": "Literal",
                                                                      "value": true
                                                                    }
                                                                  ]
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "alternate": null
                                                        }
                                                      ]
                                                    },
                                                    "alternate": null
                                                  }
                                                ]
                                              },
                                              "alternate": {
                                                "type": "BlockStatement",
                                                "body": []
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "setX"
                                      },
                                      "value": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "node"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "x"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "Y_DOM"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "setXY"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "node"
                                                  },
                                                  {
                                                    "type": "ArrayExpression",
                                                    "elements": [
                                                      {
                                                        "type": "Identifier",
                                                        "name": "x"
                                                      },
                                                      {
                                                        "type": "Literal",
                                                        "value": null
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "setY"
                                      },
                                      "value": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "node"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "y"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "Y_DOM"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "setXY"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "node"
                                                  },
                                                  {
                                                    "type": "ArrayExpression",
                                                    "elements": [
                                                      {
                                                        "type": "Literal",
                                                        "value": null
                                                      },
                                                      {
                                                        "type": "Identifier",
                                                        "name": "y"
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "swapXY"
                                      },
                                      "value": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "node"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "otherNode"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "VariableDeclaration",
                                              "declarations": [
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "xy"
                                                  },
                                                  "init": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "Y_DOM"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "getXY"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Identifier",
                                                        "name": "node"
                                                      }
                                                    ]
                                                  }
                                                }
                                              ],
                                              "kind": "var"
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "Y_DOM"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "setXY"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "node"
                                                  },
                                                  {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "Y_DOM"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "getXY"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Identifier",
                                                        "name": "otherNode"
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "Y_DOM"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "setXY"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "otherNode"
                                                  },
                                                  {
                                                    "type": "Identifier",
                                                    "name": "xy"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "_calcBorders"
                                      },
                                      "value": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "node"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "xy2"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "VariableDeclaration",
                                              "declarations": [
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "t"
                                                  },
                                                  "init": {
                                                    "type": "LogicalExpression",
                                                    "operator": "||",
                                                    "left": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "Identifier",
                                                        "name": "parseInt"
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "Y_DOM"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "GET_COMPUTED_STYLE"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "node"
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "name": "BORDER_TOP_WIDTH"
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 10
                                                        }
                                                      ]
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": 0
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "l"
                                                  },
                                                  "init": {
                                                    "type": "LogicalExpression",
                                                    "operator": "||",
                                                    "left": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "Identifier",
                                                        "name": "parseInt"
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "Y_DOM"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "GET_COMPUTED_STYLE"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "node"
                                                            },
                                                            {
                                                              "type": "Identifier",
                                                              "name": "BORDER_LEFT_WIDTH"
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 10
                                                        }
                                                      ]
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": 0
                                                    }
                                                  }
                                                }
                                              ],
                                              "kind": "var"
                                            },
                                            {
                                              "type": "IfStatement",
                                              "test": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "Y"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "UA"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "gecko"
                                                }
                                              },
                                              "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "RE_TABLE"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "test"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "node"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "tagName"
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "t"
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": 0
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "l"
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": 0
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": null
                                                  }
                                                ]
                                              },
                                              "alternate": null
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "+=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": true,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "xy2"
                                                  },
                                                  "property": {
                                                    "type": "Literal",
                                                    "value": 0
                                                  }
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "l"
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "+=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": true,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "xy2"
                                                  },
                                                  "property": {
                                                    "type": "Literal",
                                                    "value": 1
                                                  }
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "t"
                                                }
                                              }
                                            },
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "Identifier",
                                                "name": "xy2"
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "_getWinSize"
                                      },
                                      "value": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "node"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "doc"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "doc"
                                                },
                                                "right": {
                                                  "type": "ConditionalExpression",
                                                  "test": {
                                                    "type": "LogicalExpression",
                                                    "operator": "||",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "doc"
                                                    },
                                                    "right": {
                                                      "type": "Identifier",
                                                      "name": "node"
                                                    }
                                                  },
                                                  "consequent": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "Y_DOM"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "_getDoc"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Identifier",
                                                        "name": "node"
                                                      }
                                                    ]
                                                  },
                                                  "alternate": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "Y"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "config"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "doc"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "type": "VariableDeclaration",
                                              "declarations": [
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "win"
                                                  },
                                                  "init": {
                                                    "type": "LogicalExpression",
                                                    "operator": "||",
                                                    "left": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "doc"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "defaultView"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "doc"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "parentWindow"
                                                      }
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "mode"
                                                  },
                                                  "init": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "doc"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "COMPAT_MODE"
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "h"
                                                  },
                                                  "init": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "win"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "innerHeight"
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "w"
                                                  },
                                                  "init": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "win"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "innerWidth"
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "root"
                                                  },
                                                  "init": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "doc"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "DOCUMENT_ELEMENT"
                                                    }
                                                  }
                                                }
                                              ],
                                              "kind": "var"
                                            },
                                            {
                                              "type": "IfStatement",
                                              "test": {
                                                "type": "LogicalExpression",
                                                "operator": "&&",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "mode"
                                                },
                                                "right": {
                                                  "type": "UnaryExpression",
                                                  "operator": "!",
                                                  "argument": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "Y"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "UA"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "opera"
                                                    }
                                                  },
                                                  "prefix": true
                                                }
                                              },
                                              "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "BinaryExpression",
                                                      "operator": "!=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "mode"
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": "CSS1Compat"
                                                      }
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "root"
                                                            },
                                                            "right": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "doc"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "body"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": null
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "h"
                                                      },
                                                      "right": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "root"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "clientHeight"
                                                        }
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "w"
                                                      },
                                                      "right": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "root"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "clientWidth"
                                                        }
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              "alternate": null
                                            },
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "ObjectExpression",
                                                "properties": [
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Identifier",
                                                      "name": "height"
                                                    },
                                                    "value": {
                                                      "type": "Identifier",
                                                      "name": "h"
                                                    },
                                                    "kind": "init"
                                                  },
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Identifier",
                                                      "name": "width"
                                                    },
                                                    "value": {
                                                      "type": "Identifier",
                                                      "name": "w"
                                                    },
                                                    "kind": "init"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "_getDocSize"
                                      },
                                      "value": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "node"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "VariableDeclaration",
                                              "declarations": [
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "doc"
                                                  },
                                                  "init": {
                                                    "type": "ConditionalExpression",
                                                    "test": {
                                                      "type": "Identifier",
                                                      "name": "node"
                                                    },
                                                    "consequent": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "Y_DOM"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "_getDoc"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "node"
                                                        }
                                                      ]
                                                    },
                                                    "alternate": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "Y"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "config"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "doc"
                                                      }
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "root"
                                                  },
                                                  "init": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "doc"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "DOCUMENT_ELEMENT"
                                                    }
                                                  }
                                                }
                                              ],
                                              "kind": "var"
                                            },
                                            {
                                              "type": "IfStatement",
                                              "test": {
                                                "type": "BinaryExpression",
                                                "operator": "!=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": true,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "doc"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "COMPAT_MODE"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": "CSS1Compat"
                                                }
                                              },
                                              "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "root"
                                                      },
                                                      "right": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "doc"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "body"
                                                        }
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              "alternate": null
                                            },
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "ObjectExpression",
                                                "properties": [
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Identifier",
                                                      "name": "height"
                                                    },
                                                    "value": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "root"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "scrollHeight"
                                                      }
                                                    },
                                                    "kind": "init"
                                                  },
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Identifier",
                                                      "name": "width"
                                                    },
                                                    "value": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "root"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "scrollWidth"
                                                      }
                                                    },
                                                    "kind": "init"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      },
                                      "kind": "init"
                                    }
                                  ]
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "Y"
                      }
                    ]
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "Y"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "TOP"
                                },
                                "init": {
                                  "type": "Literal",
                                  "value": "top"
                                }
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "RIGHT"
                                },
                                "init": {
                                  "type": "Literal",
                                  "value": "right"
                                }
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "BOTTOM"
                                },
                                "init": {
                                  "type": "Literal",
                                  "value": "bottom"
                                }
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "LEFT"
                                },
                                "init": {
                                  "type": "Literal",
                                  "value": "left"
                                }
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "getOffsets"
                                },
                                "init": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "r1"
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "r2"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "t"
                                            },
                                            "init": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "Math"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "max"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "MemberExpression",
                                                  "computed": true,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "r1"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "TOP"
                                                  }
                                                },
                                                {
                                                  "type": "MemberExpression",
                                                  "computed": true,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "r2"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "TOP"
                                                  }
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "r"
                                            },
                                            "init": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "Math"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "min"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "MemberExpression",
                                                  "computed": true,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "r1"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "RIGHT"
                                                  }
                                                },
                                                {
                                                  "type": "MemberExpression",
                                                  "computed": true,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "r2"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "RIGHT"
                                                  }
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "b"
                                            },
                                            "init": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "Math"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "min"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "MemberExpression",
                                                  "computed": true,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "r1"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "BOTTOM"
                                                  }
                                                },
                                                {
                                                  "type": "MemberExpression",
                                                  "computed": true,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "r2"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "BOTTOM"
                                                  }
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "l"
                                            },
                                            "init": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "Math"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "max"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "MemberExpression",
                                                  "computed": true,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "r1"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "LEFT"
                                                  }
                                                },
                                                {
                                                  "type": "MemberExpression",
                                                  "computed": true,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "r2"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "LEFT"
                                                  }
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "ret"
                                            },
                                            "init": {
                                              "type": "ObjectExpression",
                                              "properties": []
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "ret"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "TOP"
                                            }
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "t"
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "ret"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "RIGHT"
                                            }
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "r"
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "ret"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "BOTTOM"
                                            }
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "b"
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "ret"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "LEFT"
                                            }
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "l"
                                          }
                                        }
                                      },
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "Identifier",
                                          "name": "ret"
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              },
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "DOM"
                                },
                                "init": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "Identifier",
                                    "name": "Y"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "DOM"
                                  }
                                }
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "Y"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "mix"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "Identifier",
                                  "name": "DOM"
                                },
                                {
                                  "type": "ObjectExpression",
                                  "properties": [
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "region"
                                      },
                                      "value": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "node"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "VariableDeclaration",
                                              "declarations": [
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "xy"
                                                  },
                                                  "init": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "DOM"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "getXY"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Identifier",
                                                        "name": "node"
                                                      }
                                                    ]
                                                  }
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "ret"
                                                  },
                                                  "init": {
                                                    "type": "Literal",
                                                    "value": false
                                                  }
                                                }
                                              ],
                                              "kind": "var"
                                            },
                                            {
                                              "type": "IfStatement",
                                              "test": {
                                                "type": "LogicalExpression",
                                                "operator": "&&",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "node"
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "xy"
                                                }
                                              },
                                              "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "ret"
                                                      },
                                                      "right": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "DOM"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "_getRegion"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "xy"
                                                            },
                                                            "property": {
                                                              "type": "Literal",
                                                              "value": 1
                                                            }
                                                          },
                                                          {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": true,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "xy"
                                                              },
                                                              "property": {
                                                                "type": "Literal",
                                                                "value": 0
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "node"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "offsetWidth"
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": true,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "xy"
                                                              },
                                                              "property": {
                                                                "type": "Literal",
                                                                "value": 1
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "node"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "offsetHeight"
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "xy"
                                                            },
                                                            "property": {
                                                              "type": "Literal",
                                                              "value": 0
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              "alternate": null
                                            },
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "Identifier",
                                                "name": "ret"
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "intersect"
                                      },
                                      "value": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "node"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "node2"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "altRegion"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "VariableDeclaration",
                                              "declarations": [
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "r"
                                                  },
                                                  "init": {
                                                    "type": "LogicalExpression",
                                                    "operator": "||",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "altRegion"
                                                    },
                                                    "right": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "DOM"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "region"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "node"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "region"
                                                  },
                                                  "init": {
                                                    "type": "ObjectExpression",
                                                    "properties": []
                                                  }
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "n"
                                                  },
                                                  "init": {
                                                    "type": "Identifier",
                                                    "name": "node2"
                                                  }
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "off"
                                                  },
                                                  "init": null
                                                }
                                              ],
                                              "kind": "var"
                                            },
                                            {
                                              "type": "IfStatement",
                                              "test": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "n"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "tagName"
                                                }
                                              },
                                              "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "region"
                                                      },
                                                      "right": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "DOM"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "region"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "n"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              "alternate": {
                                                "type": "IfStatement",
                                                "test": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "Y"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "Lang"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "isObject"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "node2"
                                                    }
                                                  ]
                                                },
                                                "consequent": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "region"
                                                        },
                                                        "right": {
                                                          "type": "Identifier",
                                                          "name": "node2"
                                                        }
                                                      }
                                                    }
                                                  ]
                                                },
                                                "alternate": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "ReturnStatement",
                                                      "argument": {
                                                        "type": "Literal",
                                                        "value": false
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "off"
                                                },
                                                "right": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "getOffsets"
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "region"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "r"
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "ObjectExpression",
                                                "properties": [
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Identifier",
                                                      "name": "top"
                                                    },
                                                    "value": {
                                                      "type": "MemberExpression",
                                                      "computed": true,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "off"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "TOP"
                                                      }
                                                    },
                                                    "kind": "init"
                                                  },
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Identifier",
                                                      "name": "right"
                                                    },
                                                    "value": {
                                                      "type": "MemberExpression",
                                                      "computed": true,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "off"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "RIGHT"
                                                      }
                                                    },
                                                    "kind": "init"
                                                  },
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Identifier",
                                                      "name": "bottom"
                                                    },
                                                    "value": {
                                                      "type": "MemberExpression",
                                                      "computed": true,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "off"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "BOTTOM"
                                                      }
                                                    },
                                                    "kind": "init"
                                                  },
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Identifier",
                                                      "name": "left"
                                                    },
                                                    "value": {
                                                      "type": "MemberExpression",
                                                      "computed": true,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "off"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "LEFT"
                                                      }
                                                    },
                                                    "kind": "init"
                                                  },
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Identifier",
                                                      "name": "area"
                                                    },
                                                    "value": {
                                                      "type": "BinaryExpression",
                                                      "operator": "*",
                                                      "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "-",
                                                        "left": {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "off"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "BOTTOM"
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "off"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "TOP"
                                                          }
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "BinaryExpression",
                                                        "operator": "-",
                                                        "left": {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "off"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "RIGHT"
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "off"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "LEFT"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "kind": "init"
                                                  },
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Identifier",
                                                      "name": "yoff"
                                                    },
                                                    "value": {
                                                      "type": "BinaryExpression",
                                                      "operator": "-",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "off"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "BOTTOM"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "off"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "TOP"
                                                        }
                                                      }
                                                    },
                                                    "kind": "init"
                                                  },
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Identifier",
                                                      "name": "xoff"
                                                    },
                                                    "value": {
                                                      "type": "BinaryExpression",
                                                      "operator": "-",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "off"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "RIGHT"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "off"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "LEFT"
                                                        }
                                                      }
                                                    },
                                                    "kind": "init"
                                                  },
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Identifier",
                                                      "name": "inRegion"
                                                    },
                                                    "value": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "DOM"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "inRegion"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "node"
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "name": "node2"
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": false
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "name": "altRegion"
                                                        }
                                                      ]
                                                    },
                                                    "kind": "init"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "inRegion"
                                      },
                                      "value": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "node"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "node2"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "all"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "altRegion"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "VariableDeclaration",
                                              "declarations": [
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "region"
                                                  },
                                                  "init": {
                                                    "type": "ObjectExpression",
                                                    "properties": []
                                                  }
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "r"
                                                  },
                                                  "init": {
                                                    "type": "LogicalExpression",
                                                    "operator": "||",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "altRegion"
                                                    },
                                                    "right": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "DOM"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "region"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "node"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "n"
                                                  },
                                                  "init": {
                                                    "type": "Identifier",
                                                    "name": "node2"
                                                  }
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "off"
                                                  },
                                                  "init": null
                                                }
                                              ],
                                              "kind": "var"
                                            },
                                            {
                                              "type": "IfStatement",
                                              "test": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "n"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "tagName"
                                                }
                                              },
                                              "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "region"
                                                      },
                                                      "right": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "DOM"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "region"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "n"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              "alternate": {
                                                "type": "IfStatement",
                                                "test": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "Y"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "Lang"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "isObject"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "node2"
                                                    }
                                                  ]
                                                },
                                                "consequent": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "region"
                                                        },
                                                        "right": {
                                                          "type": "Identifier",
                                                          "name": "node2"
                                                        }
                                                      }
                                                    }
                                                  ]
                                                },
                                                "alternate": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "ReturnStatement",
                                                      "argument": {
                                                        "type": "Literal",
                                                        "value": false
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            {
                                              "type": "IfStatement",
                                              "test": {
                                                "type": "Identifier",
                                                "name": "all"
                                              },
                                              "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "LogicalExpression",
                                                      "operator": "&&",
                                                      "left": {
                                                        "type": "LogicalExpression",
                                                        "operator": "&&",
                                                        "left": {
                                                          "type": "LogicalExpression",
                                                          "operator": "&&",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": ">=",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": true,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "r"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "LEFT"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "MemberExpression",
                                                              "computed": true,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "region"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "LEFT"
                                                              }
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "BinaryExpression",
                                                            "operator": "<=",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": true,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "r"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "RIGHT"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "MemberExpression",
                                                              "computed": true,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "region"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "RIGHT"
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "BinaryExpression",
                                                          "operator": ">=",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "r"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "TOP"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "region"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "TOP"
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "BinaryExpression",
                                                        "operator": "<=",
                                                        "left": {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "r"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "BOTTOM"
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "region"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "BOTTOM"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              "alternate": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "off"
                                                      },
                                                      "right": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "Identifier",
                                                          "name": "getOffsets"
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "region"
                                                          },
                                                          {
                                                            "type": "Identifier",
                                                            "name": "r"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "LogicalExpression",
                                                      "operator": "&&",
                                                      "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": ">=",
                                                        "left": {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "off"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "BOTTOM"
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "off"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "TOP"
                                                          }
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "BinaryExpression",
                                                        "operator": ">=",
                                                        "left": {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "off"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "RIGHT"
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "off"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "LEFT"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ReturnStatement",
                                                          "argument": {
                                                            "type": "Literal",
                                                            "value": true
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ReturnStatement",
                                                          "argument": {
                                                            "type": "Literal",
                                                            "value": false
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "inViewportRegion"
                                      },
                                      "value": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "node"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "all"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "altRegion"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "DOM"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "inRegion"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "node"
                                                  },
                                                  {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "DOM"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "viewportRegion"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Identifier",
                                                        "name": "node"
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "type": "Identifier",
                                                    "name": "all"
                                                  },
                                                  {
                                                    "type": "Identifier",
                                                    "name": "altRegion"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "_getRegion"
                                      },
                                      "value": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "t"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "r"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "b"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "l"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "VariableDeclaration",
                                              "declarations": [
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "region"
                                                  },
                                                  "init": {
                                                    "type": "ObjectExpression",
                                                    "properties": []
                                                  }
                                                }
                                              ],
                                              "kind": "var"
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": true,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "region"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "TOP"
                                                  }
                                                },
                                                "right": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "region"
                                                    },
                                                    "property": {
                                                      "type": "Literal",
                                                      "value": 1
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "Identifier",
                                                    "name": "t"
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": true,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "region"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "LEFT"
                                                  }
                                                },
                                                "right": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "region"
                                                    },
                                                    "property": {
                                                      "type": "Literal",
                                                      "value": 0
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "Identifier",
                                                    "name": "l"
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": true,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "region"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "BOTTOM"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "b"
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": true,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "region"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "RIGHT"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "r"
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "region"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "width"
                                                  }
                                                },
                                                "right": {
                                                  "type": "BinaryExpression",
                                                  "operator": "-",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "region"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "RIGHT"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "region"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "LEFT"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "region"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "height"
                                                  }
                                                },
                                                "right": {
                                                  "type": "BinaryExpression",
                                                  "operator": "-",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "region"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "BOTTOM"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "region"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "TOP"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "Identifier",
                                                "name": "region"
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Identifier",
                                        "name": "viewportRegion"
                                      },
                                      "value": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "node"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "node"
                                                },
                                                "right": {
                                                  "type": "LogicalExpression",
                                                  "operator": "||",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "node"
                                                  },
                                                  "right": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "Y"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "config"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "doc"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "documentElement"
                                                    }
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "type": "VariableDeclaration",
                                              "declarations": [
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "ret"
                                                  },
                                                  "init": {
                                                    "type": "Literal",
                                                    "value": false
                                                  }
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "scrollX"
                                                  },
                                                  "init": null
                                                },
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "scrollY"
                                                  },
                                                  "init": null
                                                }
                                              ],
                                              "kind": "var"
                                            },
                                            {
                                              "type": "IfStatement",
                                              "test": {
                                                "type": "Identifier",
                                                "name": "node"
                                              },
                                              "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "scrollX"
                                                      },
                                                      "right": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "DOM"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "docScrollX"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "node"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "scrollY"
                                                      },
                                                      "right": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "DOM"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "docScrollY"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "node"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "ret"
                                                      },
                                                      "right": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "DOM"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "_getRegion"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "scrollY"
                                                          },
                                                          {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "DOM"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "winWidth"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "node"
                                                                }
                                                              ]
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "scrollX"
                                                            }
                                                          },
                                                          {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "scrollY"
                                                            },
                                                            "right": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "DOM"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "winHeight"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "node"
                                                                }
                                                              ]
                                                            }
                                                          },
                                                          {
                                                            "type": "Identifier",
                                                            "name": "scrollX"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              "alternate": null
                                            },
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "Identifier",
                                                "name": "ret"
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      },
                                      "kind": "init"
                                    }
                                  ]
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "Y"
                      }
                    ]
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          },
          {
            "type": "Literal",
            "value": "@VERSION@"
          },
          {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Literal",
                  "value": "requires"
                },
                "value": {
                  "type": "ArrayExpression",
                  "elements": [
                    {
                      "type": "Literal",
                      "value": "dom-base"
                    },
                    {
                      "type": "Literal",
                      "value": "dom-style"
                    }
                  ]
                },
                "kind": "init"
              }
            ]
          }
        ]
      }
    }
  ]
}
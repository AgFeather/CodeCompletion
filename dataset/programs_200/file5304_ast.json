{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "FunctionExpression",
          "id": null,
          "params": [
            {
              "type": "Identifier",
              "name": "ionic"
            }
          ],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "Literal",
                  "value": "use strict"
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "ionic"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "views"
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "Slider"
                    }
                  },
                  "right": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "ionic"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "views"
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "View"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "inherit"
                      }
                    },
                    "arguments": [
                      {
                        "type": "ObjectExpression",
                        "properties": [
                          {
                            "type": "Property",
                            "key": {
                              "type": "Identifier",
                              "name": "initialize"
                            },
                            "value": {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [
                                {
                                  "type": "Identifier",
                                  "name": "options"
                                }
                              ],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "slider"
                                        },
                                        "init": {
                                          "type": "ThisExpression"
                                        }
                                      }
                                    ],
                                    "kind": "var"
                                  },
                                  {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "noop"
                                        },
                                        "init": {
                                          "type": "FunctionExpression",
                                          "id": null,
                                          "params": [],
                                          "defaults": [],
                                          "body": {
                                            "type": "BlockStatement",
                                            "body": []
                                          },
                                          "rest": null,
                                          "generator": false,
                                          "expression": false
                                        }
                                      }
                                    ],
                                    "kind": "var"
                                  },
                                  {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "offloadFn"
                                        },
                                        "init": {
                                          "type": "FunctionExpression",
                                          "id": null,
                                          "params": [
                                            {
                                              "type": "Identifier",
                                              "name": "fn"
                                            }
                                          ],
                                          "defaults": [],
                                          "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "setTimeout"
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "LogicalExpression",
                                                      "operator": "||",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "fn"
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "noop"
                                                      }
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 0
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          },
                                          "rest": null,
                                          "generator": false,
                                          "expression": false
                                        }
                                      }
                                    ],
                                    "kind": "var"
                                  },
                                  {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "browser"
                                        },
                                        "init": {
                                          "type": "ObjectExpression",
                                          "properties": [
                                            {
                                              "type": "Property",
                                              "key": {
                                                "type": "Identifier",
                                                "name": "addEventListener"
                                              },
                                              "value": {
                                                "type": "UnaryExpression",
                                                "operator": "!",
                                                "argument": {
                                                  "type": "UnaryExpression",
                                                  "operator": "!",
                                                  "argument": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "window"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "addEventListener"
                                                    }
                                                  },
                                                  "prefix": true
                                                },
                                                "prefix": true
                                              },
                                              "kind": "init"
                                            },
                                            {
                                              "type": "Property",
                                              "key": {
                                                "type": "Identifier",
                                                "name": "touch"
                                              },
                                              "value": {
                                                "type": "LogicalExpression",
                                                "operator": "||",
                                                "left": {
                                                  "type": "BinaryExpression",
                                                  "operator": "in",
                                                  "left": {
                                                    "type": "Literal",
                                                    "value": "ontouchstart"
                                                  },
                                                  "right": {
                                                    "type": "Identifier",
                                                    "name": "window"
                                                  }
                                                },
                                                "right": {
                                                  "type": "LogicalExpression",
                                                  "operator": "&&",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "window"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "DocumentTouch"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "instanceof",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "document"
                                                    },
                                                    "right": {
                                                      "type": "Identifier",
                                                      "name": "DocumentTouch"
                                                    }
                                                  }
                                                }
                                              },
                                              "kind": "init"
                                            },
                                            {
                                              "type": "Property",
                                              "key": {
                                                "type": "Identifier",
                                                "name": "transitions"
                                              },
                                              "value": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "temp"
                                                    }
                                                  ],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                          {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                              "type": "Identifier",
                                                              "name": "props"
                                                            },
                                                            "init": {
                                                              "type": "ArrayExpression",
                                                              "elements": [
                                                                {
                                                                  "type": "Literal",
                                                                  "value": "transitionProperty"
                                                                },
                                                                {
                                                                  "type": "Literal",
                                                                  "value": "WebkitTransition"
                                                                },
                                                                {
                                                                  "type": "Literal",
                                                                  "value": "MozTransition"
                                                                },
                                                                {
                                                                  "type": "Literal",
                                                                  "value": "OTransition"
                                                                },
                                                                {
                                                                  "type": "Literal",
                                                                  "value": "msTransition"
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ],
                                                        "kind": "var"
                                                      },
                                                      {
                                                        "type": "ForInStatement",
                                                        "left": {
                                                          "type": "VariableDeclaration",
                                                          "declarations": [
                                                            {
                                                              "type": "VariableDeclarator",
                                                              "id": {
                                                                "type": "Identifier",
                                                                "name": "i"
                                                              },
                                                              "init": null
                                                            }
                                                          ],
                                                          "kind": "var"
                                                        },
                                                        "right": {
                                                          "type": "Identifier",
                                                          "name": "props"
                                                        },
                                                        "body": {
                                                          "type": "IfStatement",
                                                          "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": "!==",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": true,
                                                              "object": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "temp"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "style"
                                                                }
                                                              },
                                                              "property": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "props"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "i"
                                                                }
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "undefined"
                                                            }
                                                          },
                                                          "consequent": {
                                                            "type": "ReturnStatement",
                                                            "argument": {
                                                              "type": "Literal",
                                                              "value": true
                                                            }
                                                          },
                                                          "alternate": null
                                                        },
                                                        "each": false
                                                      },
                                                      {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                          "type": "Literal",
                                                          "value": false
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "document"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "createElement"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Literal",
                                                        "value": "swipe"
                                                      }
                                                    ]
                                                  }
                                                ]
                                              },
                                              "kind": "init"
                                            }
                                          ]
                                        }
                                      }
                                    ],
                                    "kind": "var"
                                  },
                                  {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "container"
                                        },
                                        "init": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "options"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "el"
                                          }
                                        }
                                      }
                                    ],
                                    "kind": "var"
                                  },
                                  {
                                    "type": "IfStatement",
                                    "test": {
                                      "type": "UnaryExpression",
                                      "operator": "!",
                                      "argument": {
                                        "type": "Identifier",
                                        "name": "container"
                                      },
                                      "prefix": true
                                    },
                                    "consequent": {
                                      "type": "ReturnStatement",
                                      "argument": null
                                    },
                                    "alternate": null
                                  },
                                  {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "element"
                                        },
                                        "init": {
                                          "type": "MemberExpression",
                                          "computed": true,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "container"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "children"
                                            }
                                          },
                                          "property": {
                                            "type": "Literal",
                                            "value": 0
                                          }
                                        }
                                      }
                                    ],
                                    "kind": "var"
                                  },
                                  {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "slides"
                                        },
                                        "init": null
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "slidePos"
                                        },
                                        "init": null
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "width"
                                        },
                                        "init": null
                                      },
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "length"
                                        },
                                        "init": null
                                      }
                                    ],
                                    "kind": "var"
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "options"
                                      },
                                      "right": {
                                        "type": "LogicalExpression",
                                        "operator": "||",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "options"
                                        },
                                        "right": {
                                          "type": "ObjectExpression",
                                          "properties": []
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "index"
                                        },
                                        "init": {
                                          "type": "LogicalExpression",
                                          "operator": "||",
                                          "left": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "parseInt"
                                            },
                                            "arguments": [
                                              {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "options"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "startSlide"
                                                }
                                              },
                                              {
                                                "type": "Literal",
                                                "value": 10
                                              }
                                            ]
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": 0
                                          }
                                        }
                                      }
                                    ],
                                    "kind": "var"
                                  },
                                  {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "speed"
                                        },
                                        "init": {
                                          "type": "LogicalExpression",
                                          "operator": "||",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "options"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "speed"
                                            }
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": 300
                                          }
                                        }
                                      }
                                    ],
                                    "kind": "var"
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "options"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "continuous"
                                        }
                                      },
                                      "right": {
                                        "type": "ConditionalExpression",
                                        "test": {
                                          "type": "BinaryExpression",
                                          "operator": "!==",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "options"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "continuous"
                                            }
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "undefined"
                                          }
                                        },
                                        "consequent": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "options"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "continuous"
                                          }
                                        },
                                        "alternate": {
                                          "type": "Literal",
                                          "value": true
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "FunctionDeclaration",
                                    "id": {
                                      "type": "Identifier",
                                      "name": "setup"
                                    },
                                    "params": [],
                                    "defaults": [],
                                    "body": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "slides"
                                            },
                                            "right": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "element"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "children"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "length"
                                            },
                                            "right": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "slides"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "length"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "IfStatement",
                                          "test": {
                                            "type": "BinaryExpression",
                                            "operator": "<",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "slides"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "length"
                                              }
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": 2
                                            }
                                          },
                                          "consequent": {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "options"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "continuous"
                                                }
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": false
                                              }
                                            }
                                          },
                                          "alternate": null
                                        },
                                        {
                                          "type": "IfStatement",
                                          "test": {
                                            "type": "LogicalExpression",
                                            "operator": "&&",
                                            "left": {
                                              "type": "LogicalExpression",
                                              "operator": "&&",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "browser"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "transitions"
                                                }
                                              },
                                              "right": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "options"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "continuous"
                                                }
                                              }
                                            },
                                            "right": {
                                              "type": "BinaryExpression",
                                              "operator": "<",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "slides"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "length"
                                                }
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": 3
                                              }
                                            }
                                          },
                                          "consequent": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "element"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "appendChild"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "slides"
                                                          },
                                                          "property": {
                                                            "type": "Literal",
                                                            "value": 0
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "cloneNode"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Literal",
                                                          "value": true
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "element"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "appendChild"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "element"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "children"
                                                            }
                                                          },
                                                          "property": {
                                                            "type": "Literal",
                                                            "value": 1
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "cloneNode"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Literal",
                                                          "value": true
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "slides"
                                                  },
                                                  "right": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "element"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "children"
                                                    }
                                                  }
                                                }
                                              }
                                            ]
                                          },
                                          "alternate": null
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "slidePos"
                                            },
                                            "right": {
                                              "type": "NewExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "Array"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "slides"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "length"
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "width"
                                            },
                                            "right": {
                                              "type": "LogicalExpression",
                                              "operator": "||",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "container"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "offsetWidth"
                                                }
                                              },
                                              "right": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "container"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "getBoundingClientRect"
                                                    }
                                                  },
                                                  "arguments": []
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "width"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "element"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "style"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "width"
                                              }
                                            },
                                            "right": {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "BinaryExpression",
                                                "operator": "*",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "slides"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "length"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "width"
                                                }
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": "px"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "VariableDeclaration",
                                          "declarations": [
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "pos"
                                              },
                                              "init": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "slides"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "length"
                                                }
                                              }
                                            }
                                          ],
                                          "kind": "var"
                                        },
                                        {
                                          "type": "WhileStatement",
                                          "test": {
                                            "type": "UpdateExpression",
                                            "operator": "--",
                                            "argument": {
                                              "type": "Identifier",
                                              "name": "pos"
                                            },
                                            "prefix": false
                                          },
                                          "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                  {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "slide"
                                                    },
                                                    "init": {
                                                      "type": "MemberExpression",
                                                      "computed": true,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "slides"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "pos"
                                                      }
                                                    }
                                                  }
                                                ],
                                                "kind": "var"
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "slide"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "style"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "width"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "width"
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": "px"
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "slide"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "setAttribute"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "data-index"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "pos"
                                                    }
                                                  ]
                                                }
                                              },
                                              {
                                                "type": "IfStatement",
                                                "test": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "browser"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "transitions"
                                                  }
                                                },
                                                "consequent": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "slide"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "style"
                                                            }
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "left"
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "*",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "pos"
                                                            },
                                                            "right": {
                                                              "type": "UnaryExpression",
                                                              "operator": "-",
                                                              "argument": {
                                                                "type": "Identifier",
                                                                "name": "width"
                                                              },
                                                              "prefix": true
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "px"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "Identifier",
                                                          "name": "move"
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "pos"
                                                          },
                                                          {
                                                            "type": "ConditionalExpression",
                                                            "test": {
                                                              "type": "BinaryExpression",
                                                              "operator": ">",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "index"
                                                              },
                                                              "right": {
                                                                "type": "Identifier",
                                                                "name": "pos"
                                                              }
                                                            },
                                                            "consequent": {
                                                              "type": "UnaryExpression",
                                                              "operator": "-",
                                                              "argument": {
                                                                "type": "Identifier",
                                                                "name": "width"
                                                              },
                                                              "prefix": true
                                                            },
                                                            "alternate": {
                                                              "type": "ConditionalExpression",
                                                              "test": {
                                                                "type": "BinaryExpression",
                                                                "operator": "<",
                                                                "left": {
                                                                  "type": "Identifier",
                                                                  "name": "index"
                                                                },
                                                                "right": {
                                                                  "type": "Identifier",
                                                                  "name": "pos"
                                                                }
                                                              },
                                                              "consequent": {
                                                                "type": "Identifier",
                                                                "name": "width"
                                                              },
                                                              "alternate": {
                                                                "type": "Literal",
                                                                "value": 0
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "type": "Literal",
                                                            "value": 0
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ]
                                                },
                                                "alternate": null
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "IfStatement",
                                          "test": {
                                            "type": "LogicalExpression",
                                            "operator": "&&",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "options"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "continuous"
                                              }
                                            },
                                            "right": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "browser"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "transitions"
                                              }
                                            }
                                          },
                                          "consequent": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "move"
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "Identifier",
                                                        "name": "circle"
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "-",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "index"
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": 1
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "UnaryExpression",
                                                      "operator": "-",
                                                      "argument": {
                                                        "type": "Identifier",
                                                        "name": "width"
                                                      },
                                                      "prefix": true
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 0
                                                    }
                                                  ]
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "move"
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "Identifier",
                                                        "name": "circle"
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "index"
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": 1
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "width"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 0
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          },
                                          "alternate": null
                                        },
                                        {
                                          "type": "IfStatement",
                                          "test": {
                                            "type": "UnaryExpression",
                                            "operator": "!",
                                            "argument": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "browser"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "transitions"
                                              }
                                            },
                                            "prefix": true
                                          },
                                          "consequent": {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "element"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "style"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "left"
                                                }
                                              },
                                              "right": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                  "type": "BinaryExpression",
                                                  "operator": "*",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "index"
                                                  },
                                                  "right": {
                                                    "type": "UnaryExpression",
                                                    "operator": "-",
                                                    "argument": {
                                                      "type": "Identifier",
                                                      "name": "width"
                                                    },
                                                    "prefix": true
                                                  }
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": "px"
                                                }
                                              }
                                            }
                                          },
                                          "alternate": null
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "container"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "style"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "visibility"
                                              }
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": "visible"
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "LogicalExpression",
                                            "operator": "&&",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "options"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "slidesChanged"
                                              }
                                            },
                                            "right": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "options"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "slidesChanged"
                                                }
                                              },
                                              "arguments": []
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "rest": null,
                                    "generator": false,
                                    "expression": false
                                  },
                                  {
                                    "type": "FunctionDeclaration",
                                    "id": {
                                      "type": "Identifier",
                                      "name": "prev"
                                    },
                                    "params": [],
                                    "defaults": [],
                                    "body": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "IfStatement",
                                          "test": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "options"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "continuous"
                                            }
                                          },
                                          "consequent": {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "slide"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "BinaryExpression",
                                                  "operator": "-",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "index"
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": 1
                                                  }
                                                }
                                              ]
                                            }
                                          },
                                          "alternate": {
                                            "type": "IfStatement",
                                            "test": {
                                              "type": "Identifier",
                                              "name": "index"
                                            },
                                            "consequent": {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "slide"
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "BinaryExpression",
                                                    "operator": "-",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "index"
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": 1
                                                    }
                                                  }
                                                ]
                                              }
                                            },
                                            "alternate": null
                                          }
                                        }
                                      ]
                                    },
                                    "rest": null,
                                    "generator": false,
                                    "expression": false
                                  },
                                  {
                                    "type": "FunctionDeclaration",
                                    "id": {
                                      "type": "Identifier",
                                      "name": "next"
                                    },
                                    "params": [],
                                    "defaults": [],
                                    "body": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "IfStatement",
                                          "test": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "options"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "continuous"
                                            }
                                          },
                                          "consequent": {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "slide"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "BinaryExpression",
                                                  "operator": "+",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "index"
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": 1
                                                  }
                                                }
                                              ]
                                            }
                                          },
                                          "alternate": {
                                            "type": "IfStatement",
                                            "test": {
                                              "type": "BinaryExpression",
                                              "operator": "<",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "index"
                                              },
                                              "right": {
                                                "type": "BinaryExpression",
                                                "operator": "-",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "slides"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "length"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": 1
                                                }
                                              }
                                            },
                                            "consequent": {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "slide"
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "index"
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": 1
                                                    }
                                                  }
                                                ]
                                              }
                                            },
                                            "alternate": null
                                          }
                                        }
                                      ]
                                    },
                                    "rest": null,
                                    "generator": false,
                                    "expression": false
                                  },
                                  {
                                    "type": "FunctionDeclaration",
                                    "id": {
                                      "type": "Identifier",
                                      "name": "circle"
                                    },
                                    "params": [
                                      {
                                        "type": "Identifier",
                                        "name": "index"
                                      }
                                    ],
                                    "defaults": [],
                                    "body": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ReturnStatement",
                                          "argument": {
                                            "type": "BinaryExpression",
                                            "operator": "%",
                                            "left": {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "slides"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "length"
                                                }
                                              },
                                              "right": {
                                                "type": "BinaryExpression",
                                                "operator": "%",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "index"
                                                },
                                                "right": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "slides"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "length"
                                                  }
                                                }
                                              }
                                            },
                                            "right": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "slides"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "length"
                                              }
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "rest": null,
                                    "generator": false,
                                    "expression": false
                                  },
                                  {
                                    "type": "FunctionDeclaration",
                                    "id": {
                                      "type": "Identifier",
                                      "name": "slide"
                                    },
                                    "params": [
                                      {
                                        "type": "Identifier",
                                        "name": "to"
                                      },
                                      {
                                        "type": "Identifier",
                                        "name": "slideSpeed"
                                      }
                                    ],
                                    "defaults": [],
                                    "body": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "IfStatement",
                                          "test": {
                                            "type": "BinaryExpression",
                                            "operator": "==",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "index"
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "to"
                                            }
                                          },
                                          "consequent": {
                                            "type": "ReturnStatement",
                                            "argument": null
                                          },
                                          "alternate": null
                                        },
                                        {
                                          "type": "IfStatement",
                                          "test": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "browser"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "transitions"
                                            }
                                          },
                                          "consequent": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                  {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "direction"
                                                    },
                                                    "init": {
                                                      "type": "BinaryExpression",
                                                      "operator": "/",
                                                      "left": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "Math"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "abs"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "BinaryExpression",
                                                            "operator": "-",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "index"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "to"
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "right": {
                                                        "type": "BinaryExpression",
                                                        "operator": "-",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "index"
                                                        },
                                                        "right": {
                                                          "type": "Identifier",
                                                          "name": "to"
                                                        }
                                                      }
                                                    }
                                                  }
                                                ],
                                                "kind": "var"
                                              },
                                              {
                                                "type": "IfStatement",
                                                "test": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "options"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "continuous"
                                                  }
                                                },
                                                "consequent": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "VariableDeclaration",
                                                      "declarations": [
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "natural_direction"
                                                          },
                                                          "init": {
                                                            "type": "Identifier",
                                                            "name": "direction"
                                                          }
                                                        }
                                                      ],
                                                      "kind": "var"
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "direction"
                                                        },
                                                        "right": {
                                                          "type": "BinaryExpression",
                                                          "operator": "/",
                                                          "left": {
                                                            "type": "UnaryExpression",
                                                            "operator": "-",
                                                            "argument": {
                                                              "type": "MemberExpression",
                                                              "computed": true,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "slidePos"
                                                              },
                                                              "property": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "Identifier",
                                                                  "name": "circle"
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "to"
                                                                  }
                                                                ]
                                                              }
                                                            },
                                                            "prefix": true
                                                          },
                                                          "right": {
                                                            "type": "Identifier",
                                                            "name": "width"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "IfStatement",
                                                      "test": {
                                                        "type": "BinaryExpression",
                                                        "operator": "!==",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "direction"
                                                        },
                                                        "right": {
                                                          "type": "Identifier",
                                                          "name": "natural_direction"
                                                        }
                                                      },
                                                      "consequent": {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "to"
                                                          },
                                                          "right": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "BinaryExpression",
                                                              "operator": "*",
                                                              "left": {
                                                                "type": "UnaryExpression",
                                                                "operator": "-",
                                                                "argument": {
                                                                  "type": "Identifier",
                                                                  "name": "direction"
                                                                },
                                                                "prefix": true
                                                              },
                                                              "right": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "slides"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "length"
                                                                }
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "to"
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "alternate": null
                                                    }
                                                  ]
                                                },
                                                "alternate": null
                                              },
                                              {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                  {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "diff"
                                                    },
                                                    "init": {
                                                      "type": "BinaryExpression",
                                                      "operator": "-",
                                                      "left": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "Math"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "abs"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "BinaryExpression",
                                                            "operator": "-",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "index"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "to"
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": 1
                                                      }
                                                    }
                                                  }
                                                ],
                                                "kind": "var"
                                              },
                                              {
                                                "type": "WhileStatement",
                                                "test": {
                                                  "type": "UpdateExpression",
                                                  "operator": "--",
                                                  "argument": {
                                                    "type": "Identifier",
                                                    "name": "diff"
                                                  },
                                                  "prefix": false
                                                },
                                                "body": {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "Identifier",
                                                      "name": "move"
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "Identifier",
                                                          "name": "circle"
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "BinaryExpression",
                                                            "operator": "-",
                                                            "left": {
                                                              "type": "BinaryExpression",
                                                              "operator": "-",
                                                              "left": {
                                                                "type": "ConditionalExpression",
                                                                "test": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": ">",
                                                                  "left": {
                                                                    "type": "Identifier",
                                                                    "name": "to"
                                                                  },
                                                                  "right": {
                                                                    "type": "Identifier",
                                                                    "name": "index"
                                                                  }
                                                                },
                                                                "consequent": {
                                                                  "type": "Identifier",
                                                                  "name": "to"
                                                                },
                                                                "alternate": {
                                                                  "type": "Identifier",
                                                                  "name": "index"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "Identifier",
                                                                "name": "diff"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": 1
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      {
                                                        "type": "BinaryExpression",
                                                        "operator": "*",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "width"
                                                        },
                                                        "right": {
                                                          "type": "Identifier",
                                                          "name": "direction"
                                                        }
                                                      },
                                                      {
                                                        "type": "Literal",
                                                        "value": 0
                                                      }
                                                    ]
                                                  }
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "to"
                                                  },
                                                  "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "Identifier",
                                                      "name": "circle"
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Identifier",
                                                        "name": "to"
                                                      }
                                                    ]
                                                  }
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "move"
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "index"
                                                    },
                                                    {
                                                      "type": "BinaryExpression",
                                                      "operator": "*",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "width"
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "direction"
                                                      }
                                                    },
                                                    {
                                                      "type": "LogicalExpression",
                                                      "operator": "||",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "slideSpeed"
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "speed"
                                                      }
                                                    }
                                                  ]
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "move"
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "to"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 0
                                                    },
                                                    {
                                                      "type": "LogicalExpression",
                                                      "operator": "||",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "slideSpeed"
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "speed"
                                                      }
                                                    }
                                                  ]
                                                }
                                              },
                                              {
                                                "type": "IfStatement",
                                                "test": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "options"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "continuous"
                                                  }
                                                },
                                                "consequent": {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "Identifier",
                                                      "name": "move"
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "Identifier",
                                                          "name": "circle"
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "BinaryExpression",
                                                            "operator": "-",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "to"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "direction"
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      {
                                                        "type": "UnaryExpression",
                                                        "operator": "-",
                                                        "argument": {
                                                          "type": "BinaryExpression",
                                                          "operator": "*",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "width"
                                                          },
                                                          "right": {
                                                            "type": "Identifier",
                                                            "name": "direction"
                                                          }
                                                        },
                                                        "prefix": true
                                                      },
                                                      {
                                                        "type": "Literal",
                                                        "value": 0
                                                      }
                                                    ]
                                                  }
                                                },
                                                "alternate": null
                                              }
                                            ]
                                          },
                                          "alternate": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "to"
                                                  },
                                                  "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "Identifier",
                                                      "name": "circle"
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Identifier",
                                                        "name": "to"
                                                      }
                                                    ]
                                                  }
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "animate"
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "BinaryExpression",
                                                      "operator": "*",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "index"
                                                      },
                                                      "right": {
                                                        "type": "UnaryExpression",
                                                        "operator": "-",
                                                        "argument": {
                                                          "type": "Identifier",
                                                          "name": "width"
                                                        },
                                                        "prefix": true
                                                      }
                                                    },
                                                    {
                                                      "type": "BinaryExpression",
                                                      "operator": "*",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "to"
                                                      },
                                                      "right": {
                                                        "type": "UnaryExpression",
                                                        "operator": "-",
                                                        "argument": {
                                                          "type": "Identifier",
                                                          "name": "width"
                                                        },
                                                        "prefix": true
                                                      }
                                                    },
                                                    {
                                                      "type": "LogicalExpression",
                                                      "operator": "||",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "slideSpeed"
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "speed"
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "index"
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "to"
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "offloadFn"
                                            },
                                            "arguments": [
                                              {
                                                "type": "LogicalExpression",
                                                "operator": "&&",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "options"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "callback"
                                                  }
                                                },
                                                "right": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "options"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "callback"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "index"
                                                    },
                                                    {
                                                      "type": "MemberExpression",
                                                      "computed": true,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "slides"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "index"
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    },
                                    "rest": null,
                                    "generator": false,
                                    "expression": false
                                  },
                                  {
                                    "type": "FunctionDeclaration",
                                    "id": {
                                      "type": "Identifier",
                                      "name": "move"
                                    },
                                    "params": [
                                      {
                                        "type": "Identifier",
                                        "name": "index"
                                      },
                                      {
                                        "type": "Identifier",
                                        "name": "dist"
                                      },
                                      {
                                        "type": "Identifier",
                                        "name": "speed"
                                      }
                                    ],
                                    "defaults": [],
                                    "body": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "translate"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "index"
                                              },
                                              {
                                                "type": "Identifier",
                                                "name": "dist"
                                              },
                                              {
                                                "type": "Identifier",
                                                "name": "speed"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": true,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "slidePos"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "index"
                                              }
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "dist"
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "rest": null,
                                    "generator": false,
                                    "expression": false
                                  },
                                  {
                                    "type": "FunctionDeclaration",
                                    "id": {
                                      "type": "Identifier",
                                      "name": "translate"
                                    },
                                    "params": [
                                      {
                                        "type": "Identifier",
                                        "name": "index"
                                      },
                                      {
                                        "type": "Identifier",
                                        "name": "dist"
                                      },
                                      {
                                        "type": "Identifier",
                                        "name": "speed"
                                      }
                                    ],
                                    "defaults": [],
                                    "body": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "VariableDeclaration",
                                          "declarations": [
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "slide"
                                              },
                                              "init": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "slides"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "index"
                                                }
                                              }
                                            }
                                          ],
                                          "kind": "var"
                                        },
                                        {
                                          "type": "VariableDeclaration",
                                          "declarations": [
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "style"
                                              },
                                              "init": {
                                                "type": "LogicalExpression",
                                                "operator": "&&",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "slide"
                                                },
                                                "right": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "slide"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "style"
                                                  }
                                                }
                                              }
                                            }
                                          ],
                                          "kind": "var"
                                        },
                                        {
                                          "type": "IfStatement",
                                          "test": {
                                            "type": "UnaryExpression",
                                            "operator": "!",
                                            "argument": {
                                              "type": "Identifier",
                                              "name": "style"
                                            },
                                            "prefix": true
                                          },
                                          "consequent": {
                                            "type": "ReturnStatement",
                                            "argument": null
                                          },
                                          "alternate": null
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "style"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "webkitTransitionDuration"
                                              }
                                            },
                                            "right": {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "style"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "MozTransitionDuration"
                                                }
                                              },
                                              "right": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "style"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "msTransitionDuration"
                                                  }
                                                },
                                                "right": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "style"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "OTransitionDuration"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "style"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "transitionDuration"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "BinaryExpression",
                                                      "operator": "+",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "speed"
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": "ms"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "style"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "webkitTransform"
                                              }
                                            },
                                            "right": {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                  "type": "BinaryExpression",
                                                  "operator": "+",
                                                  "left": {
                                                    "type": "Literal",
                                                    "value": "translate("
                                                  },
                                                  "right": {
                                                    "type": "Identifier",
                                                    "name": "dist"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": "px,0)"
                                                }
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": "translateZ(0)"
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "style"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "msTransform"
                                              }
                                            },
                                            "right": {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "style"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "MozTransform"
                                                }
                                              },
                                              "right": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "style"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "OTransform"
                                                  }
                                                },
                                                "right": {
                                                  "type": "BinaryExpression",
                                                  "operator": "+",
                                                  "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "Literal",
                                                      "value": "translateX("
                                                    },
                                                    "right": {
                                                      "type": "Identifier",
                                                      "name": "dist"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": "px)"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "rest": null,
                                    "generator": false,
                                    "expression": false
                                  },
                                  {
                                    "type": "FunctionDeclaration",
                                    "id": {
                                      "type": "Identifier",
                                      "name": "animate"
                                    },
                                    "params": [
                                      {
                                        "type": "Identifier",
                                        "name": "from"
                                      },
                                      {
                                        "type": "Identifier",
                                        "name": "to"
                                      },
                                      {
                                        "type": "Identifier",
                                        "name": "speed"
                                      }
                                    ],
                                    "defaults": [],
                                    "body": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "IfStatement",
                                          "test": {
                                            "type": "UnaryExpression",
                                            "operator": "!",
                                            "argument": {
                                              "type": "Identifier",
                                              "name": "speed"
                                            },
                                            "prefix": true
                                          },
                                          "consequent": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "element"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "style"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "left"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "to"
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": "px"
                                                    }
                                                  }
                                                }
                                              },
                                              {
                                                "type": "ReturnStatement",
                                                "argument": null
                                              }
                                            ]
                                          },
                                          "alternate": null
                                        },
                                        {
                                          "type": "VariableDeclaration",
                                          "declarations": [
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "start"
                                              },
                                              "init": {
                                                "type": "UnaryExpression",
                                                "operator": "+",
                                                "argument": {
                                                  "type": "NewExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "Date"
                                                  },
                                                  "arguments": []
                                                },
                                                "prefix": true
                                              }
                                            }
                                          ],
                                          "kind": "var"
                                        },
                                        {
                                          "type": "VariableDeclaration",
                                          "declarations": [
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "timer"
                                              },
                                              "init": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "setInterval"
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "FunctionExpression",
                                                    "id": null,
                                                    "params": [],
                                                    "defaults": [],
                                                    "body": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "VariableDeclaration",
                                                          "declarations": [
                                                            {
                                                              "type": "VariableDeclarator",
                                                              "id": {
                                                                "type": "Identifier",
                                                                "name": "timeElap"
                                                              },
                                                              "init": {
                                                                "type": "BinaryExpression",
                                                                "operator": "-",
                                                                "left": {
                                                                  "type": "UnaryExpression",
                                                                  "operator": "+",
                                                                  "argument": {
                                                                    "type": "NewExpression",
                                                                    "callee": {
                                                                      "type": "Identifier",
                                                                      "name": "Date"
                                                                    },
                                                                    "arguments": []
                                                                  },
                                                                  "prefix": true
                                                                },
                                                                "right": {
                                                                  "type": "Identifier",
                                                                  "name": "start"
                                                                }
                                                              }
                                                            }
                                                          ],
                                                          "kind": "var"
                                                        },
                                                        {
                                                          "type": "IfStatement",
                                                          "test": {
                                                            "type": "BinaryExpression",
                                                            "operator": ">",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "timeElap"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "speed"
                                                            }
                                                          },
                                                          "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "AssignmentExpression",
                                                                  "operator": "=",
                                                                  "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "element"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "style"
                                                                      }
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "left"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                      "type": "Identifier",
                                                                      "name": "to"
                                                                    },
                                                                    "right": {
                                                                      "type": "Literal",
                                                                      "value": "px"
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              {
                                                                "type": "IfStatement",
                                                                "test": {
                                                                  "type": "Identifier",
                                                                  "name": "delay"
                                                                },
                                                                "consequent": {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "Identifier",
                                                                      "name": "begin"
                                                                    },
                                                                    "arguments": []
                                                                  }
                                                                },
                                                                "alternate": null
                                                              },
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "LogicalExpression",
                                                                  "operator": "&&",
                                                                  "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "options"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "transitionEnd"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "options"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "transitionEnd"
                                                                        }
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "call"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "event"
                                                                      },
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "index"
                                                                      },
                                                                      {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "slides"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "index"
                                                                        }
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              },
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "clearInterval"
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "timer"
                                                                    }
                                                                  ]
                                                                }
                                                              },
                                                              {
                                                                "type": "ReturnStatement",
                                                                "argument": null
                                                              }
                                                            ]
                                                          },
                                                          "alternate": null
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "element"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "style"
                                                                }
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "left"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "BinaryExpression",
                                                              "operator": "+",
                                                              "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "*",
                                                                  "left": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "-",
                                                                    "left": {
                                                                      "type": "Identifier",
                                                                      "name": "to"
                                                                    },
                                                                    "right": {
                                                                      "type": "Identifier",
                                                                      "name": "from"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "/",
                                                                    "left": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "Math"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "floor"
                                                                        }
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "BinaryExpression",
                                                                          "operator": "*",
                                                                          "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "/",
                                                                            "left": {
                                                                              "type": "Identifier",
                                                                              "name": "timeElap"
                                                                            },
                                                                            "right": {
                                                                              "type": "Identifier",
                                                                              "name": "speed"
                                                                            }
                                                                          },
                                                                          "right": {
                                                                            "type": "Literal",
                                                                            "value": 100
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "right": {
                                                                      "type": "Literal",
                                                                      "value": 100
                                                                    }
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "Identifier",
                                                                  "name": "from"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": "px"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "rest": null,
                                                    "generator": false,
                                                    "expression": false
                                                  },
                                                  {
                                                    "type": "Literal",
                                                    "value": 4
                                                  }
                                                ]
                                              }
                                            }
                                          ],
                                          "kind": "var"
                                        }
                                      ]
                                    },
                                    "rest": null,
                                    "generator": false,
                                    "expression": false
                                  },
                                  {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "delay"
                                        },
                                        "init": {
                                          "type": "LogicalExpression",
                                          "operator": "||",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "options"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "auto"
                                            }
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": 0
                                          }
                                        }
                                      }
                                    ],
                                    "kind": "var"
                                  },
                                  {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "interval"
                                        },
                                        "init": null
                                      }
                                    ],
                                    "kind": "var"
                                  },
                                  {
                                    "type": "FunctionDeclaration",
                                    "id": {
                                      "type": "Identifier",
                                      "name": "begin"
                                    },
                                    "params": [],
                                    "defaults": [],
                                    "body": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "interval"
                                            },
                                            "right": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "setTimeout"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "delay"
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "rest": null,
                                    "generator": false,
                                    "expression": false
                                  },
                                  {
                                    "type": "FunctionDeclaration",
                                    "id": {
                                      "type": "Identifier",
                                      "name": "stop"
                                    },
                                    "params": [],
                                    "defaults": [],
                                    "body": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "delay"
                                            },
                                            "right": {
                                              "type": "LogicalExpression",
                                              "operator": "||",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "options"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "auto"
                                                }
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": 0
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "clearTimeout"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "interval"
                                              }
                                            ]
                                          }
                                        }
                                      ]
                                    },
                                    "rest": null,
                                    "generator": false,
                                    "expression": false
                                  },
                                  {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "start"
                                        },
                                        "init": {
                                          "type": "ObjectExpression",
                                          "properties": []
                                        }
                                      }
                                    ],
                                    "kind": "var"
                                  },
                                  {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "delta"
                                        },
                                        "init": {
                                          "type": "ObjectExpression",
                                          "properties": []
                                        }
                                      }
                                    ],
                                    "kind": "var"
                                  },
                                  {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "isScrolling"
                                        },
                                        "init": null
                                      }
                                    ],
                                    "kind": "var"
                                  },
                                  {
                                    "type": "VariableDeclaration",
                                    "declarations": [
                                      {
                                        "type": "VariableDeclarator",
                                        "id": {
                                          "type": "Identifier",
                                          "name": "events"
                                        },
                                        "init": {
                                          "type": "ObjectExpression",
                                          "properties": [
                                            {
                                              "type": "Property",
                                              "key": {
                                                "type": "Identifier",
                                                "name": "handleEvent"
                                              },
                                              "value": {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "event"
                                                  }
                                                ],
                                                "defaults": [],
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "IfStatement",
                                                      "test": {
                                                        "type": "LogicalExpression",
                                                        "operator": "||",
                                                        "left": {
                                                          "type": "LogicalExpression",
                                                          "operator": "||",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "==",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "event"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "type"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": "mousedown"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "BinaryExpression",
                                                            "operator": "==",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "event"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "type"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": "mouseup"
                                                            }
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "BinaryExpression",
                                                          "operator": "==",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "event"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "type"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "mousemove"
                                                          }
                                                        }
                                                      },
                                                      "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "AssignmentExpression",
                                                              "operator": "=",
                                                              "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "event"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "touches"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "ArrayExpression",
                                                                "elements": [
                                                                  {
                                                                    "type": "ObjectExpression",
                                                                    "properties": [
                                                                      {
                                                                        "type": "Property",
                                                                        "key": {
                                                                          "type": "Identifier",
                                                                          "name": "pageX"
                                                                        },
                                                                        "value": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "event"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "pageX"
                                                                          }
                                                                        },
                                                                        "kind": "init"
                                                                      },
                                                                      {
                                                                        "type": "Property",
                                                                        "key": {
                                                                          "type": "Identifier",
                                                                          "name": "pageY"
                                                                        },
                                                                        "value": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "event"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "pageY"
                                                                          }
                                                                        },
                                                                        "kind": "init"
                                                                      }
                                                                    ]
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "alternate": null
                                                    },
                                                    {
                                                      "type": "SwitchStatement",
                                                      "discriminant": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "event"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "type"
                                                        }
                                                      },
                                                      "cases": [
                                                        {
                                                          "type": "SwitchCase",
                                                          "test": {
                                                            "type": "Literal",
                                                            "value": "mousedown"
                                                          },
                                                          "consequent": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "ThisExpression"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "start"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "event"
                                                                  }
                                                                ]
                                                              }
                                                            },
                                                            {
                                                              "type": "BreakStatement",
                                                              "label": null
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "SwitchCase",
                                                          "test": {
                                                            "type": "Literal",
                                                            "value": "touchstart"
                                                          },
                                                          "consequent": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "ThisExpression"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "start"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "event"
                                                                  }
                                                                ]
                                                              }
                                                            },
                                                            {
                                                              "type": "BreakStatement",
                                                              "label": null
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "SwitchCase",
                                                          "test": {
                                                            "type": "Literal",
                                                            "value": "touchmove"
                                                          },
                                                          "consequent": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "ThisExpression"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "touchmove"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "event"
                                                                  }
                                                                ]
                                                              }
                                                            },
                                                            {
                                                              "type": "BreakStatement",
                                                              "label": null
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "SwitchCase",
                                                          "test": {
                                                            "type": "Literal",
                                                            "value": "mousemove"
                                                          },
                                                          "consequent": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "ThisExpression"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "touchmove"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "event"
                                                                  }
                                                                ]
                                                              }
                                                            },
                                                            {
                                                              "type": "BreakStatement",
                                                              "label": null
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "SwitchCase",
                                                          "test": {
                                                            "type": "Literal",
                                                            "value": "touchend"
                                                          },
                                                          "consequent": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "Identifier",
                                                                  "name": "offloadFn"
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "ThisExpression"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "end"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "event"
                                                                      }
                                                                    ]
                                                                  }
                                                                ]
                                                              }
                                                            },
                                                            {
                                                              "type": "BreakStatement",
                                                              "label": null
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "SwitchCase",
                                                          "test": {
                                                            "type": "Literal",
                                                            "value": "mouseup"
                                                          },
                                                          "consequent": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "Identifier",
                                                                  "name": "offloadFn"
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "ThisExpression"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "end"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "event"
                                                                      }
                                                                    ]
                                                                  }
                                                                ]
                                                              }
                                                            },
                                                            {
                                                              "type": "BreakStatement",
                                                              "label": null
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "SwitchCase",
                                                          "test": {
                                                            "type": "Literal",
                                                            "value": "webkitTransitionEnd"
                                                          },
                                                          "consequent": []
                                                        },
                                                        {
                                                          "type": "SwitchCase",
                                                          "test": {
                                                            "type": "Literal",
                                                            "value": "msTransitionEnd"
                                                          },
                                                          "consequent": []
                                                        },
                                                        {
                                                          "type": "SwitchCase",
                                                          "test": {
                                                            "type": "Literal",
                                                            "value": "oTransitionEnd"
                                                          },
                                                          "consequent": []
                                                        },
                                                        {
                                                          "type": "SwitchCase",
                                                          "test": {
                                                            "type": "Literal",
                                                            "value": "otransitionend"
                                                          },
                                                          "consequent": []
                                                        },
                                                        {
                                                          "type": "SwitchCase",
                                                          "test": {
                                                            "type": "Literal",
                                                            "value": "transitionend"
                                                          },
                                                          "consequent": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "Identifier",
                                                                  "name": "offloadFn"
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "ThisExpression"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "transitionEnd"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "event"
                                                                      }
                                                                    ]
                                                                  }
                                                                ]
                                                              }
                                                            },
                                                            {
                                                              "type": "BreakStatement",
                                                              "label": null
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "SwitchCase",
                                                          "test": {
                                                            "type": "Literal",
                                                            "value": "resize"
                                                          },
                                                          "consequent": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "Identifier",
                                                                  "name": "offloadFn"
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "setup"
                                                                  }
                                                                ]
                                                              }
                                                            },
                                                            {
                                                              "type": "BreakStatement",
                                                              "label": null
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "IfStatement",
                                                      "test": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "options"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "stopPropagation"
                                                        }
                                                      },
                                                      "consequent": {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "event"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "stopPropagation"
                                                            }
                                                          },
                                                          "arguments": []
                                                        }
                                                      },
                                                      "alternate": null
                                                    }
                                                  ]
                                                },
                                                "rest": null,
                                                "generator": false,
                                                "expression": false
                                              },
                                              "kind": "init"
                                            },
                                            {
                                              "type": "Property",
                                              "key": {
                                                "type": "Identifier",
                                                "name": "start"
                                              },
                                              "value": {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "event"
                                                  }
                                                ],
                                                "defaults": [],
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "VariableDeclaration",
                                                      "declarations": [
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "touches"
                                                          },
                                                          "init": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "event"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "touches"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Literal",
                                                              "value": 0
                                                            }
                                                          }
                                                        }
                                                      ],
                                                      "kind": "var"
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "start"
                                                        },
                                                        "right": {
                                                          "type": "ObjectExpression",
                                                          "properties": [
                                                            {
                                                              "type": "Property",
                                                              "key": {
                                                                "type": "Identifier",
                                                                "name": "x"
                                                              },
                                                              "value": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "touches"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "pageX"
                                                                }
                                                              },
                                                              "kind": "init"
                                                            },
                                                            {
                                                              "type": "Property",
                                                              "key": {
                                                                "type": "Identifier",
                                                                "name": "y"
                                                              },
                                                              "value": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "touches"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "pageY"
                                                                }
                                                              },
                                                              "kind": "init"
                                                            },
                                                            {
                                                              "type": "Property",
                                                              "key": {
                                                                "type": "Identifier",
                                                                "name": "time"
                                                              },
                                                              "value": {
                                                                "type": "UnaryExpression",
                                                                "operator": "+",
                                                                "argument": {
                                                                  "type": "NewExpression",
                                                                  "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "Date"
                                                                  },
                                                                  "arguments": []
                                                                },
                                                                "prefix": true
                                                              },
                                                              "kind": "init"
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "isScrolling"
                                                        },
                                                        "right": {
                                                          "type": "Identifier",
                                                          "name": "undefined"
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "delta"
                                                        },
                                                        "right": {
                                                          "type": "ObjectExpression",
                                                          "properties": []
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "IfStatement",
                                                      "test": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "browser"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "touch"
                                                        }
                                                      },
                                                      "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "element"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "addEventListener"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Literal",
                                                                  "value": "touchmove"
                                                                },
                                                                {
                                                                  "type": "ThisExpression"
                                                                },
                                                                {
                                                                  "type": "Literal",
                                                                  "value": false
                                                                }
                                                              ]
                                                            }
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "element"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "addEventListener"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Literal",
                                                                  "value": "touchend"
                                                                },
                                                                {
                                                                  "type": "ThisExpression"
                                                                },
                                                                {
                                                                  "type": "Literal",
                                                                  "value": false
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "alternate": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "element"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "addEventListener"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Literal",
                                                                  "value": "mousemove"
                                                                },
                                                                {
                                                                  "type": "ThisExpression"
                                                                },
                                                                {
                                                                  "type": "Literal",
                                                                  "value": false
                                                                }
                                                              ]
                                                            }
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "element"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "addEventListener"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Literal",
                                                                  "value": "mouseup"
                                                                },
                                                                {
                                                                  "type": "ThisExpression"
                                                                },
                                                                {
                                                                  "type": "Literal",
                                                                  "value": false
                                                                }
                                                              ]
                                                            }
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "document"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "addEventListener"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Literal",
                                                                  "value": "mouseup"
                                                                },
                                                                {
                                                                  "type": "ThisExpression"
                                                                },
                                                                {
                                                                  "type": "Literal",
                                                                  "value": false
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ]
                                                },
                                                "rest": null,
                                                "generator": false,
                                                "expression": false
                                              },
                                              "kind": "init"
                                            },
                                            {
                                              "type": "Property",
                                              "key": {
                                                "type": "Identifier",
                                                "name": "touchmove"
                                              },
                                              "value": {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "event"
                                                  }
                                                ],
                                                "defaults": [],
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "IfStatement",
                                                      "test": {
                                                        "type": "LogicalExpression",
                                                        "operator": "||",
                                                        "left": {
                                                          "type": "LogicalExpression",
                                                          "operator": "||",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": ">",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "event"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "touches"
                                                                }
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "length"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": 1
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "LogicalExpression",
                                                            "operator": "&&",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "event"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "scale"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "BinaryExpression",
                                                              "operator": "!==",
                                                              "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "event"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "scale"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": 1
                                                              }
                                                            }
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "slider"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "slideIsDisabled"
                                                          }
                                                        }
                                                      },
                                                      "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ReturnStatement",
                                                            "argument": null
                                                          }
                                                        ]
                                                      },
                                                      "alternate": null
                                                    },
                                                    {
                                                      "type": "IfStatement",
                                                      "test": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "options"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "disableScroll"
                                                        }
                                                      },
                                                      "consequent": {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "event"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "preventDefault"
                                                            }
                                                          },
                                                          "arguments": []
                                                        }
                                                      },
                                                      "alternate": null
                                                    },
                                                    {
                                                      "type": "VariableDeclaration",
                                                      "declarations": [
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "touches"
                                                          },
                                                          "init": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "event"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "touches"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Literal",
                                                              "value": 0
                                                            }
                                                          }
                                                        }
                                                      ],
                                                      "kind": "var"
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "delta"
                                                        },
                                                        "right": {
                                                          "type": "ObjectExpression",
                                                          "properties": [
                                                            {
                                                              "type": "Property",
                                                              "key": {
                                                                "type": "Identifier",
                                                                "name": "x"
                                                              },
                                                              "value": {
                                                                "type": "BinaryExpression",
                                                                "operator": "-",
                                                                "left": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "touches"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "pageX"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "start"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "x"
                                                                  }
                                                                }
                                                              },
                                                              "kind": "init"
                                                            },
                                                            {
                                                              "type": "Property",
                                                              "key": {
                                                                "type": "Identifier",
                                                                "name": "y"
                                                              },
                                                              "value": {
                                                                "type": "BinaryExpression",
                                                                "operator": "-",
                                                                "left": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "touches"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "pageY"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "start"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "y"
                                                                  }
                                                                }
                                                              },
                                                              "kind": "init"
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "IfStatement",
                                                      "test": {
                                                        "type": "BinaryExpression",
                                                        "operator": "==",
                                                        "left": {
                                                          "type": "UnaryExpression",
                                                          "operator": "typeof",
                                                          "argument": {
                                                            "type": "Identifier",
                                                            "name": "isScrolling"
                                                          },
                                                          "prefix": true
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": "undefined"
                                                        }
                                                      },
                                                      "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "AssignmentExpression",
                                                              "operator": "=",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "isScrolling"
                                                              },
                                                              "right": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                  "type": "UnaryExpression",
                                                                  "operator": "!",
                                                                  "argument": {
                                                                    "type": "LogicalExpression",
                                                                    "operator": "||",
                                                                    "left": {
                                                                      "type": "Identifier",
                                                                      "name": "isScrolling"
                                                                    },
                                                                    "right": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "<",
                                                                      "left": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "Math"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "abs"
                                                                          }
                                                                        },
                                                                        "arguments": [
                                                                          {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "Identifier",
                                                                              "name": "delta"
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "x"
                                                                            }
                                                                          }
                                                                        ]
                                                                      },
                                                                      "right": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "Math"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "abs"
                                                                          }
                                                                        },
                                                                        "arguments": [
                                                                          {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "Identifier",
                                                                              "name": "delta"
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "y"
                                                                            }
                                                                          }
                                                                        ]
                                                                      }
                                                                    }
                                                                  },
                                                                  "prefix": true
                                                                },
                                                                "prefix": true
                                                              }
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "alternate": null
                                                    },
                                                    {
                                                      "type": "IfStatement",
                                                      "test": {
                                                        "type": "UnaryExpression",
                                                        "operator": "!",
                                                        "argument": {
                                                          "type": "Identifier",
                                                          "name": "isScrolling"
                                                        },
                                                        "prefix": true
                                                      },
                                                      "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "event"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "preventDefault"
                                                                }
                                                              },
                                                              "arguments": []
                                                            }
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "Identifier",
                                                                "name": "stop"
                                                              },
                                                              "arguments": []
                                                            }
                                                          },
                                                          {
                                                            "type": "IfStatement",
                                                            "test": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "options"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "continuous"
                                                              }
                                                            },
                                                            "consequent": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "Identifier",
                                                                      "name": "translate"
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "Identifier",
                                                                          "name": "circle"
                                                                        },
                                                                        "arguments": [
                                                                          {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "-",
                                                                            "left": {
                                                                              "type": "Identifier",
                                                                              "name": "index"
                                                                            },
                                                                            "right": {
                                                                              "type": "Literal",
                                                                              "value": 1
                                                                            }
                                                                          }
                                                                        ]
                                                                      },
                                                                      {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "delta"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "x"
                                                                          }
                                                                        },
                                                                        "right": {
                                                                          "type": "MemberExpression",
                                                                          "computed": true,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "slidePos"
                                                                          },
                                                                          "property": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                              "type": "Identifier",
                                                                              "name": "circle"
                                                                            },
                                                                            "arguments": [
                                                                              {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "-",
                                                                                "left": {
                                                                                  "type": "Identifier",
                                                                                  "name": "index"
                                                                                },
                                                                                "right": {
                                                                                  "type": "Literal",
                                                                                  "value": 1
                                                                                }
                                                                              }
                                                                            ]
                                                                          }
                                                                        }
                                                                      },
                                                                      {
                                                                        "type": "Literal",
                                                                        "value": 0
                                                                      }
                                                                    ]
                                                                  }
                                                                },
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "Identifier",
                                                                      "name": "translate"
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "index"
                                                                      },
                                                                      {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "delta"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "x"
                                                                          }
                                                                        },
                                                                        "right": {
                                                                          "type": "MemberExpression",
                                                                          "computed": true,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "slidePos"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "index"
                                                                          }
                                                                        }
                                                                      },
                                                                      {
                                                                        "type": "Literal",
                                                                        "value": 0
                                                                      }
                                                                    ]
                                                                  }
                                                                },
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "Identifier",
                                                                      "name": "translate"
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "Identifier",
                                                                          "name": "circle"
                                                                        },
                                                                        "arguments": [
                                                                          {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                              "type": "Identifier",
                                                                              "name": "index"
                                                                            },
                                                                            "right": {
                                                                              "type": "Literal",
                                                                              "value": 1
                                                                            }
                                                                          }
                                                                        ]
                                                                      },
                                                                      {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "delta"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "x"
                                                                          }
                                                                        },
                                                                        "right": {
                                                                          "type": "MemberExpression",
                                                                          "computed": true,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "slidePos"
                                                                          },
                                                                          "property": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                              "type": "Identifier",
                                                                              "name": "circle"
                                                                            },
                                                                            "arguments": [
                                                                              {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                  "type": "Identifier",
                                                                                  "name": "index"
                                                                                },
                                                                                "right": {
                                                                                  "type": "Literal",
                                                                                  "value": 1
                                                                                }
                                                                              }
                                                                            ]
                                                                          }
                                                                        }
                                                                      },
                                                                      {
                                                                        "type": "Literal",
                                                                        "value": 0
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "alternate": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "AssignmentExpression",
                                                                    "operator": "=",
                                                                    "left": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "delta"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "x"
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "/",
                                                                      "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "delta"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "x"
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "ConditionalExpression",
                                                                        "test": {
                                                                          "type": "LogicalExpression",
                                                                          "operator": "||",
                                                                          "left": {
                                                                            "type": "LogicalExpression",
                                                                            "operator": "&&",
                                                                            "left": {
                                                                              "type": "UnaryExpression",
                                                                              "operator": "!",
                                                                              "argument": {
                                                                                "type": "Identifier",
                                                                                "name": "index"
                                                                              },
                                                                              "prefix": true
                                                                            },
                                                                            "right": {
                                                                              "type": "BinaryExpression",
                                                                              "operator": ">",
                                                                              "left": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "delta"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "x"
                                                                                }
                                                                              },
                                                                              "right": {
                                                                                "type": "Literal",
                                                                                "value": 0
                                                                              }
                                                                            }
                                                                          },
                                                                          "right": {
                                                                            "type": "LogicalExpression",
                                                                            "operator": "&&",
                                                                            "left": {
                                                                              "type": "BinaryExpression",
                                                                              "operator": "==",
                                                                              "left": {
                                                                                "type": "Identifier",
                                                                                "name": "index"
                                                                              },
                                                                              "right": {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "-",
                                                                                "left": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "slides"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "length"
                                                                                  }
                                                                                },
                                                                                "right": {
                                                                                  "type": "Literal",
                                                                                  "value": 1
                                                                                }
                                                                              }
                                                                            },
                                                                            "right": {
                                                                              "type": "BinaryExpression",
                                                                              "operator": "<",
                                                                              "left": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "delta"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "x"
                                                                                }
                                                                              },
                                                                              "right": {
                                                                                "type": "Literal",
                                                                                "value": 0
                                                                              }
                                                                            }
                                                                          }
                                                                        },
                                                                        "consequent": {
                                                                          "type": "BinaryExpression",
                                                                          "operator": "+",
                                                                          "left": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "/",
                                                                            "left": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "Math"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "abs"
                                                                                }
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "delta"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "x"
                                                                                  }
                                                                                }
                                                                              ]
                                                                            },
                                                                            "right": {
                                                                              "type": "Identifier",
                                                                              "name": "width"
                                                                            }
                                                                          },
                                                                          "right": {
                                                                            "type": "Literal",
                                                                            "value": 1
                                                                          }
                                                                        },
                                                                        "alternate": {
                                                                          "type": "Literal",
                                                                          "value": 1
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                },
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "Identifier",
                                                                      "name": "translate"
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "-",
                                                                        "left": {
                                                                          "type": "Identifier",
                                                                          "name": "index"
                                                                        },
                                                                        "right": {
                                                                          "type": "Literal",
                                                                          "value": 1
                                                                        }
                                                                      },
                                                                      {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "delta"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "x"
                                                                          }
                                                                        },
                                                                        "right": {
                                                                          "type": "MemberExpression",
                                                                          "computed": true,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "slidePos"
                                                                          },
                                                                          "property": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "-",
                                                                            "left": {
                                                                              "type": "Identifier",
                                                                              "name": "index"
                                                                            },
                                                                            "right": {
                                                                              "type": "Literal",
                                                                              "value": 1
                                                                            }
                                                                          }
                                                                        }
                                                                      },
                                                                      {
                                                                        "type": "Literal",
                                                                        "value": 0
                                                                      }
                                                                    ]
                                                                  }
                                                                },
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "Identifier",
                                                                      "name": "translate"
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "index"
                                                                      },
                                                                      {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "delta"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "x"
                                                                          }
                                                                        },
                                                                        "right": {
                                                                          "type": "MemberExpression",
                                                                          "computed": true,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "slidePos"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "index"
                                                                          }
                                                                        }
                                                                      },
                                                                      {
                                                                        "type": "Literal",
                                                                        "value": 0
                                                                      }
                                                                    ]
                                                                  }
                                                                },
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "Identifier",
                                                                      "name": "translate"
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                          "type": "Identifier",
                                                                          "name": "index"
                                                                        },
                                                                        "right": {
                                                                          "type": "Literal",
                                                                          "value": 1
                                                                        }
                                                                      },
                                                                      {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "delta"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "x"
                                                                          }
                                                                        },
                                                                        "right": {
                                                                          "type": "MemberExpression",
                                                                          "computed": true,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "slidePos"
                                                                          },
                                                                          "property": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                              "type": "Identifier",
                                                                              "name": "index"
                                                                            },
                                                                            "right": {
                                                                              "type": "Literal",
                                                                              "value": 1
                                                                            }
                                                                          }
                                                                        }
                                                                      },
                                                                      {
                                                                        "type": "Literal",
                                                                        "value": 0
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "alternate": null
                                                    }
                                                  ]
                                                },
                                                "rest": null,
                                                "generator": false,
                                                "expression": false
                                              },
                                              "kind": "init"
                                            },
                                            {
                                              "type": "Property",
                                              "key": {
                                                "type": "Identifier",
                                                "name": "end"
                                              },
                                              "value": {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "event"
                                                  }
                                                ],
                                                "defaults": [],
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "VariableDeclaration",
                                                      "declarations": [
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "duration"
                                                          },
                                                          "init": {
                                                            "type": "BinaryExpression",
                                                            "operator": "-",
                                                            "left": {
                                                              "type": "UnaryExpression",
                                                              "operator": "+",
                                                              "argument": {
                                                                "type": "NewExpression",
                                                                "callee": {
                                                                  "type": "Identifier",
                                                                  "name": "Date"
                                                                },
                                                                "arguments": []
                                                              },
                                                              "prefix": true
                                                            },
                                                            "right": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "start"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "time"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      ],
                                                      "kind": "var"
                                                    },
                                                    {
                                                      "type": "VariableDeclaration",
                                                      "declarations": [
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "isValidSlide"
                                                          },
                                                          "init": {
                                                            "type": "LogicalExpression",
                                                            "operator": "||",
                                                            "left": {
                                                              "type": "LogicalExpression",
                                                              "operator": "&&",
                                                              "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "<",
                                                                "left": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "Number"
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "duration"
                                                                    }
                                                                  ]
                                                                },
                                                                "right": {
                                                                  "type": "Literal",
                                                                  "value": 250
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": ">",
                                                                "left": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "Math"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "abs"
                                                                    }
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "delta"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "x"
                                                                      }
                                                                    }
                                                                  ]
                                                                },
                                                                "right": {
                                                                  "type": "Literal",
                                                                  "value": 20
                                                                }
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "BinaryExpression",
                                                              "operator": ">",
                                                              "left": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "Math"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "abs"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "delta"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "x"
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "/",
                                                                "left": {
                                                                  "type": "Identifier",
                                                                  "name": "width"
                                                                },
                                                                "right": {
                                                                  "type": "Literal",
                                                                  "value": 2
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      ],
                                                      "kind": "var"
                                                    },
                                                    {
                                                      "type": "VariableDeclaration",
                                                      "declarations": [
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "isPastBounds"
                                                          },
                                                          "init": {
                                                            "type": "LogicalExpression",
                                                            "operator": "||",
                                                            "left": {
                                                              "type": "LogicalExpression",
                                                              "operator": "&&",
                                                              "left": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                  "type": "Identifier",
                                                                  "name": "index"
                                                                },
                                                                "prefix": true
                                                              },
                                                              "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": ">",
                                                                "left": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "delta"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "x"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "Literal",
                                                                  "value": 0
                                                                }
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "LogicalExpression",
                                                              "operator": "&&",
                                                              "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "==",
                                                                "left": {
                                                                  "type": "Identifier",
                                                                  "name": "index"
                                                                },
                                                                "right": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "-",
                                                                  "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "slides"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "length"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "Literal",
                                                                    "value": 1
                                                                  }
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "<",
                                                                "left": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "delta"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "x"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "Literal",
                                                                  "value": 0
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      ],
                                                      "kind": "var"
                                                    },
                                                    {
                                                      "type": "IfStatement",
                                                      "test": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "options"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "continuous"
                                                        }
                                                      },
                                                      "consequent": {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "isPastBounds"
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": false
                                                          }
                                                        }
                                                      },
                                                      "alternate": null
                                                    },
                                                    {
                                                      "type": "VariableDeclaration",
                                                      "declarations": [
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "direction"
                                                          },
                                                          "init": {
                                                            "type": "BinaryExpression",
                                                            "operator": "<",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "delta"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "x"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": 0
                                                            }
                                                          }
                                                        }
                                                      ],
                                                      "kind": "var"
                                                    },
                                                    {
                                                      "type": "IfStatement",
                                                      "test": {
                                                        "type": "UnaryExpression",
                                                        "operator": "!",
                                                        "argument": {
                                                          "type": "Identifier",
                                                          "name": "isScrolling"
                                                        },
                                                        "prefix": true
                                                      },
                                                      "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "IfStatement",
                                                            "test": {
                                                              "type": "LogicalExpression",
                                                              "operator": "&&",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "isValidSlide"
                                                              },
                                                              "right": {
                                                                "type": "UnaryExpression",
                                                                "operator": "!",
                                                                "argument": {
                                                                  "type": "Identifier",
                                                                  "name": "isPastBounds"
                                                                },
                                                                "prefix": true
                                                              }
                                                            },
                                                            "consequent": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "IfStatement",
                                                                  "test": {
                                                                    "type": "Identifier",
                                                                    "name": "direction"
                                                                  },
                                                                  "consequent": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                      {
                                                                        "type": "IfStatement",
                                                                        "test": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "options"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "continuous"
                                                                          }
                                                                        },
                                                                        "consequent": {
                                                                          "type": "BlockStatement",
                                                                          "body": [
                                                                            {
                                                                              "type": "ExpressionStatement",
                                                                              "expression": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                  "type": "Identifier",
                                                                                  "name": "move"
                                                                                },
                                                                                "arguments": [
                                                                                  {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                      "type": "Identifier",
                                                                                      "name": "circle"
                                                                                    },
                                                                                    "arguments": [
                                                                                      {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "-",
                                                                                        "left": {
                                                                                          "type": "Identifier",
                                                                                          "name": "index"
                                                                                        },
                                                                                        "right": {
                                                                                          "type": "Literal",
                                                                                          "value": 1
                                                                                        }
                                                                                      }
                                                                                    ]
                                                                                  },
                                                                                  {
                                                                                    "type": "UnaryExpression",
                                                                                    "operator": "-",
                                                                                    "argument": {
                                                                                      "type": "Identifier",
                                                                                      "name": "width"
                                                                                    },
                                                                                    "prefix": true
                                                                                  },
                                                                                  {
                                                                                    "type": "Literal",
                                                                                    "value": 0
                                                                                  }
                                                                                ]
                                                                              }
                                                                            },
                                                                            {
                                                                              "type": "ExpressionStatement",
                                                                              "expression": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                  "type": "Identifier",
                                                                                  "name": "move"
                                                                                },
                                                                                "arguments": [
                                                                                  {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                      "type": "Identifier",
                                                                                      "name": "circle"
                                                                                    },
                                                                                    "arguments": [
                                                                                      {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                          "type": "Identifier",
                                                                                          "name": "index"
                                                                                        },
                                                                                        "right": {
                                                                                          "type": "Literal",
                                                                                          "value": 2
                                                                                        }
                                                                                      }
                                                                                    ]
                                                                                  },
                                                                                  {
                                                                                    "type": "Identifier",
                                                                                    "name": "width"
                                                                                  },
                                                                                  {
                                                                                    "type": "Literal",
                                                                                    "value": 0
                                                                                  }
                                                                                ]
                                                                              }
                                                                            }
                                                                          ]
                                                                        },
                                                                        "alternate": {
                                                                          "type": "BlockStatement",
                                                                          "body": [
                                                                            {
                                                                              "type": "ExpressionStatement",
                                                                              "expression": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                  "type": "Identifier",
                                                                                  "name": "move"
                                                                                },
                                                                                "arguments": [
                                                                                  {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "-",
                                                                                    "left": {
                                                                                      "type": "Identifier",
                                                                                      "name": "index"
                                                                                    },
                                                                                    "right": {
                                                                                      "type": "Literal",
                                                                                      "value": 1
                                                                                    }
                                                                                  },
                                                                                  {
                                                                                    "type": "UnaryExpression",
                                                                                    "operator": "-",
                                                                                    "argument": {
                                                                                      "type": "Identifier",
                                                                                      "name": "width"
                                                                                    },
                                                                                    "prefix": true
                                                                                  },
                                                                                  {
                                                                                    "type": "Literal",
                                                                                    "value": 0
                                                                                  }
                                                                                ]
                                                                              }
                                                                            }
                                                                          ]
                                                                        }
                                                                      },
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "move"
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "index"
                                                                            },
                                                                            {
                                                                              "type": "BinaryExpression",
                                                                              "operator": "-",
                                                                              "left": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "slidePos"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "index"
                                                                                }
                                                                              },
                                                                              "right": {
                                                                                "type": "Identifier",
                                                                                "name": "width"
                                                                              }
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "speed"
                                                                            }
                                                                          ]
                                                                        }
                                                                      },
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "move"
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "circle"
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "BinaryExpression",
                                                                                  "operator": "+",
                                                                                  "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "index"
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 1
                                                                                  }
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "BinaryExpression",
                                                                              "operator": "-",
                                                                              "left": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "slidePos"
                                                                                },
                                                                                "property": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "Identifier",
                                                                                    "name": "circle"
                                                                                  },
                                                                                  "arguments": [
                                                                                    {
                                                                                      "type": "BinaryExpression",
                                                                                      "operator": "+",
                                                                                      "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "index"
                                                                                      },
                                                                                      "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 1
                                                                                      }
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              },
                                                                              "right": {
                                                                                "type": "Identifier",
                                                                                "name": "width"
                                                                              }
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "speed"
                                                                            }
                                                                          ]
                                                                        }
                                                                      },
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "AssignmentExpression",
                                                                          "operator": "=",
                                                                          "left": {
                                                                            "type": "Identifier",
                                                                            "name": "index"
                                                                          },
                                                                          "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                              "type": "Identifier",
                                                                              "name": "circle"
                                                                            },
                                                                            "arguments": [
                                                                              {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "+",
                                                                                "left": {
                                                                                  "type": "Identifier",
                                                                                  "name": "index"
                                                                                },
                                                                                "right": {
                                                                                  "type": "Literal",
                                                                                  "value": 1
                                                                                }
                                                                              }
                                                                            ]
                                                                          }
                                                                        }
                                                                      }
                                                                    ]
                                                                  },
                                                                  "alternate": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                      {
                                                                        "type": "IfStatement",
                                                                        "test": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "options"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "continuous"
                                                                          }
                                                                        },
                                                                        "consequent": {
                                                                          "type": "BlockStatement",
                                                                          "body": [
                                                                            {
                                                                              "type": "ExpressionStatement",
                                                                              "expression": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                  "type": "Identifier",
                                                                                  "name": "move"
                                                                                },
                                                                                "arguments": [
                                                                                  {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                      "type": "Identifier",
                                                                                      "name": "circle"
                                                                                    },
                                                                                    "arguments": [
                                                                                      {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "+",
                                                                                        "left": {
                                                                                          "type": "Identifier",
                                                                                          "name": "index"
                                                                                        },
                                                                                        "right": {
                                                                                          "type": "Literal",
                                                                                          "value": 1
                                                                                        }
                                                                                      }
                                                                                    ]
                                                                                  },
                                                                                  {
                                                                                    "type": "Identifier",
                                                                                    "name": "width"
                                                                                  },
                                                                                  {
                                                                                    "type": "Literal",
                                                                                    "value": 0
                                                                                  }
                                                                                ]
                                                                              }
                                                                            },
                                                                            {
                                                                              "type": "ExpressionStatement",
                                                                              "expression": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                  "type": "Identifier",
                                                                                  "name": "move"
                                                                                },
                                                                                "arguments": [
                                                                                  {
                                                                                    "type": "CallExpression",
                                                                                    "callee": {
                                                                                      "type": "Identifier",
                                                                                      "name": "circle"
                                                                                    },
                                                                                    "arguments": [
                                                                                      {
                                                                                        "type": "BinaryExpression",
                                                                                        "operator": "-",
                                                                                        "left": {
                                                                                          "type": "Identifier",
                                                                                          "name": "index"
                                                                                        },
                                                                                        "right": {
                                                                                          "type": "Literal",
                                                                                          "value": 2
                                                                                        }
                                                                                      }
                                                                                    ]
                                                                                  },
                                                                                  {
                                                                                    "type": "UnaryExpression",
                                                                                    "operator": "-",
                                                                                    "argument": {
                                                                                      "type": "Identifier",
                                                                                      "name": "width"
                                                                                    },
                                                                                    "prefix": true
                                                                                  },
                                                                                  {
                                                                                    "type": "Literal",
                                                                                    "value": 0
                                                                                  }
                                                                                ]
                                                                              }
                                                                            }
                                                                          ]
                                                                        },
                                                                        "alternate": {
                                                                          "type": "BlockStatement",
                                                                          "body": [
                                                                            {
                                                                              "type": "ExpressionStatement",
                                                                              "expression": {
                                                                                "type": "CallExpression",
                                                                                "callee": {
                                                                                  "type": "Identifier",
                                                                                  "name": "move"
                                                                                },
                                                                                "arguments": [
                                                                                  {
                                                                                    "type": "BinaryExpression",
                                                                                    "operator": "+",
                                                                                    "left": {
                                                                                      "type": "Identifier",
                                                                                      "name": "index"
                                                                                    },
                                                                                    "right": {
                                                                                      "type": "Literal",
                                                                                      "value": 1
                                                                                    }
                                                                                  },
                                                                                  {
                                                                                    "type": "Identifier",
                                                                                    "name": "width"
                                                                                  },
                                                                                  {
                                                                                    "type": "Literal",
                                                                                    "value": 0
                                                                                  }
                                                                                ]
                                                                              }
                                                                            }
                                                                          ]
                                                                        }
                                                                      },
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "move"
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "index"
                                                                            },
                                                                            {
                                                                              "type": "BinaryExpression",
                                                                              "operator": "+",
                                                                              "left": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "slidePos"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "index"
                                                                                }
                                                                              },
                                                                              "right": {
                                                                                "type": "Identifier",
                                                                                "name": "width"
                                                                              }
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "speed"
                                                                            }
                                                                          ]
                                                                        }
                                                                      },
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "move"
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "circle"
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "BinaryExpression",
                                                                                  "operator": "-",
                                                                                  "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "index"
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 1
                                                                                  }
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "BinaryExpression",
                                                                              "operator": "+",
                                                                              "left": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "slidePos"
                                                                                },
                                                                                "property": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "Identifier",
                                                                                    "name": "circle"
                                                                                  },
                                                                                  "arguments": [
                                                                                    {
                                                                                      "type": "BinaryExpression",
                                                                                      "operator": "-",
                                                                                      "left": {
                                                                                        "type": "Identifier",
                                                                                        "name": "index"
                                                                                      },
                                                                                      "right": {
                                                                                        "type": "Literal",
                                                                                        "value": 1
                                                                                      }
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              },
                                                                              "right": {
                                                                                "type": "Identifier",
                                                                                "name": "width"
                                                                              }
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "speed"
                                                                            }
                                                                          ]
                                                                        }
                                                                      },
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "AssignmentExpression",
                                                                          "operator": "=",
                                                                          "left": {
                                                                            "type": "Identifier",
                                                                            "name": "index"
                                                                          },
                                                                          "right": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                              "type": "Identifier",
                                                                              "name": "circle"
                                                                            },
                                                                            "arguments": [
                                                                              {
                                                                                "type": "BinaryExpression",
                                                                                "operator": "-",
                                                                                "left": {
                                                                                  "type": "Identifier",
                                                                                  "name": "index"
                                                                                },
                                                                                "right": {
                                                                                  "type": "Literal",
                                                                                  "value": 1
                                                                                }
                                                                              }
                                                                            ]
                                                                          }
                                                                        }
                                                                      }
                                                                    ]
                                                                  }
                                                                },
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "LogicalExpression",
                                                                    "operator": "&&",
                                                                    "left": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "options"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "callback"
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "options"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "callback"
                                                                        }
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "Identifier",
                                                                          "name": "index"
                                                                        },
                                                                        {
                                                                          "type": "MemberExpression",
                                                                          "computed": true,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "slides"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "index"
                                                                          }
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "alternate": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "IfStatement",
                                                                  "test": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "options"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "continuous"
                                                                    }
                                                                  },
                                                                  "consequent": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "move"
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "circle"
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "BinaryExpression",
                                                                                  "operator": "-",
                                                                                  "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "index"
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 1
                                                                                  }
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "UnaryExpression",
                                                                              "operator": "-",
                                                                              "argument": {
                                                                                "type": "Identifier",
                                                                                "name": "width"
                                                                              },
                                                                              "prefix": true
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "speed"
                                                                            }
                                                                          ]
                                                                        }
                                                                      },
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "move"
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "index"
                                                                            },
                                                                            {
                                                                              "type": "Literal",
                                                                              "value": 0
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "speed"
                                                                            }
                                                                          ]
                                                                        }
                                                                      },
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "move"
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "circle"
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "BinaryExpression",
                                                                                  "operator": "+",
                                                                                  "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "index"
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 1
                                                                                  }
                                                                                }
                                                                              ]
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "width"
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "speed"
                                                                            }
                                                                          ]
                                                                        }
                                                                      }
                                                                    ]
                                                                  },
                                                                  "alternate": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "move"
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "BinaryExpression",
                                                                              "operator": "-",
                                                                              "left": {
                                                                                "type": "Identifier",
                                                                                "name": "index"
                                                                              },
                                                                              "right": {
                                                                                "type": "Literal",
                                                                                "value": 1
                                                                              }
                                                                            },
                                                                            {
                                                                              "type": "UnaryExpression",
                                                                              "operator": "-",
                                                                              "argument": {
                                                                                "type": "Identifier",
                                                                                "name": "width"
                                                                              },
                                                                              "prefix": true
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "speed"
                                                                            }
                                                                          ]
                                                                        }
                                                                      },
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "move"
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "index"
                                                                            },
                                                                            {
                                                                              "type": "Literal",
                                                                              "value": 0
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "speed"
                                                                            }
                                                                          ]
                                                                        }
                                                                      },
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "move"
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "BinaryExpression",
                                                                              "operator": "+",
                                                                              "left": {
                                                                                "type": "Identifier",
                                                                                "name": "index"
                                                                              },
                                                                              "right": {
                                                                                "type": "Literal",
                                                                                "value": 1
                                                                              }
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "width"
                                                                            },
                                                                            {
                                                                              "type": "Identifier",
                                                                              "name": "speed"
                                                                            }
                                                                          ]
                                                                        }
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "alternate": null
                                                    },
                                                    {
                                                      "type": "IfStatement",
                                                      "test": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "browser"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "touch"
                                                        }
                                                      },
                                                      "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "element"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "removeEventListener"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Literal",
                                                                  "value": "touchmove"
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "events"
                                                                },
                                                                {
                                                                  "type": "Literal",
                                                                  "value": false
                                                                }
                                                              ]
                                                            }
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "element"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "removeEventListener"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Literal",
                                                                  "value": "touchend"
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "events"
                                                                },
                                                                {
                                                                  "type": "Literal",
                                                                  "value": false
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "alternate": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "element"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "removeEventListener"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Literal",
                                                                  "value": "mousemove"
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "events"
                                                                },
                                                                {
                                                                  "type": "Literal",
                                                                  "value": false
                                                                }
                                                              ]
                                                            }
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "element"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "removeEventListener"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Literal",
                                                                  "value": "mouseup"
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "events"
                                                                },
                                                                {
                                                                  "type": "Literal",
                                                                  "value": false
                                                                }
                                                              ]
                                                            }
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "document"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "removeEventListener"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Literal",
                                                                  "value": "mouseup"
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "events"
                                                                },
                                                                {
                                                                  "type": "Literal",
                                                                  "value": false
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ]
                                                },
                                                "rest": null,
                                                "generator": false,
                                                "expression": false
                                              },
                                              "kind": "init"
                                            },
                                            {
                                              "type": "Property",
                                              "key": {
                                                "type": "Identifier",
                                                "name": "transitionEnd"
                                              },
                                              "value": {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "event"
                                                  }
                                                ],
                                                "defaults": [],
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "IfStatement",
                                                      "test": {
                                                        "type": "BinaryExpression",
                                                        "operator": "==",
                                                        "left": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "Identifier",
                                                            "name": "parseInt"
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "event"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "target"
                                                                  }
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "getAttribute"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Literal",
                                                                  "value": "data-index"
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "type": "Literal",
                                                              "value": 10
                                                            }
                                                          ]
                                                        },
                                                        "right": {
                                                          "type": "Identifier",
                                                          "name": "index"
                                                        }
                                                      },
                                                      "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "IfStatement",
                                                            "test": {
                                                              "type": "Identifier",
                                                              "name": "delay"
                                                            },
                                                            "consequent": {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "Identifier",
                                                                  "name": "begin"
                                                                },
                                                                "arguments": []
                                                              }
                                                            },
                                                            "alternate": null
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "LogicalExpression",
                                                              "operator": "&&",
                                                              "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "options"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "transitionEnd"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "options"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "transitionEnd"
                                                                    }
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "call"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "event"
                                                                  },
                                                                  {
                                                                    "type": "Identifier",
                                                                    "name": "index"
                                                                  },
                                                                  {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "slides"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "index"
                                                                    }
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "alternate": null
                                                    }
                                                  ]
                                                },
                                                "rest": null,
                                                "generator": false,
                                                "expression": false
                                              },
                                              "kind": "init"
                                            }
                                          ]
                                        }
                                      }
                                    ],
                                    "kind": "var"
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "update"
                                        }
                                      },
                                      "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "setTimeout"
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "setup"
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "setup"
                                        }
                                      },
                                      "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "setup"
                                                },
                                                "arguments": []
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "loop"
                                        }
                                      },
                                      "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "value"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "IfStatement",
                                              "test": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "arguments"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "length"
                                                }
                                              },
                                              "consequent": {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "options"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "continuous"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "UnaryExpression",
                                                    "operator": "!",
                                                    "argument": {
                                                      "type": "UnaryExpression",
                                                      "operator": "!",
                                                      "argument": {
                                                        "type": "Identifier",
                                                        "name": "value"
                                                      },
                                                      "prefix": true
                                                    },
                                                    "prefix": true
                                                  }
                                                }
                                              },
                                              "alternate": null
                                            },
                                            {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "options"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "continuous"
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "SequenceExpression",
                                      "expressions": [
                                        {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "enableSlide"
                                            }
                                          },
                                          "right": {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                              {
                                                "type": "Identifier",
                                                "name": "shouldEnable"
                                              }
                                            ],
                                            "defaults": [],
                                            "body": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "IfStatement",
                                                  "test": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "arguments"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "length"
                                                    }
                                                  },
                                                  "consequent": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "ThisExpression"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "slideIsDisabled"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "UnaryExpression",
                                                            "operator": "!",
                                                            "argument": {
                                                              "type": "Identifier",
                                                              "name": "shouldEnable"
                                                            },
                                                            "prefix": true
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "alternate": null
                                                },
                                                {
                                                  "type": "ReturnStatement",
                                                  "argument": {
                                                    "type": "UnaryExpression",
                                                    "operator": "!",
                                                    "argument": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "ThisExpression"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "slideIsDisabled"
                                                      }
                                                    },
                                                    "prefix": true
                                                  }
                                                }
                                              ]
                                            },
                                            "rest": null,
                                            "generator": false,
                                            "expression": false
                                          }
                                        },
                                        {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "ThisExpression"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "slide"
                                            }
                                          },
                                          "right": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ThisExpression"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "select"
                                              }
                                            },
                                            "right": {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "to"
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "speed"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "Identifier",
                                                        "name": "stop"
                                                      },
                                                      "arguments": []
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "Identifier",
                                                        "name": "slide"
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "to"
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "name": "speed"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "prev"
                                        }
                                      },
                                      "right": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "ThisExpression"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "previous"
                                          }
                                        },
                                        "right": {
                                          "type": "FunctionExpression",
                                          "id": null,
                                          "params": [],
                                          "defaults": [],
                                          "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "stop"
                                                  },
                                                  "arguments": []
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "prev"
                                                  },
                                                  "arguments": []
                                                }
                                              }
                                            ]
                                          },
                                          "rest": null,
                                          "generator": false,
                                          "expression": false
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "next"
                                        }
                                      },
                                      "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "stop"
                                                },
                                                "arguments": []
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "next"
                                                },
                                                "arguments": []
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "stop"
                                        }
                                      },
                                      "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "stop"
                                                },
                                                "arguments": []
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "start"
                                        }
                                      },
                                      "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "begin"
                                                },
                                                "arguments": []
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "autoPlay"
                                        }
                                      },
                                      "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [
                                          {
                                            "type": "Identifier",
                                            "name": "newDelay"
                                          }
                                        ],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "IfStatement",
                                              "test": {
                                                "type": "LogicalExpression",
                                                "operator": "||",
                                                "left": {
                                                  "type": "UnaryExpression",
                                                  "operator": "!",
                                                  "argument": {
                                                    "type": "Identifier",
                                                    "name": "delay"
                                                  },
                                                  "prefix": true
                                                },
                                                "right": {
                                                  "type": "BinaryExpression",
                                                  "operator": "<",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "delay"
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": 0
                                                  }
                                                }
                                              },
                                              "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "Identifier",
                                                        "name": "stop"
                                                      },
                                                      "arguments": []
                                                    }
                                                  }
                                                ]
                                              },
                                              "alternate": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "delay"
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "newDelay"
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "Identifier",
                                                        "name": "begin"
                                                      },
                                                      "arguments": []
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "currentIndex"
                                        }
                                      },
                                      "right": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "ThisExpression"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "selected"
                                          }
                                        },
                                        "right": {
                                          "type": "FunctionExpression",
                                          "id": null,
                                          "params": [],
                                          "defaults": [],
                                          "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ReturnStatement",
                                                "argument": {
                                                  "type": "Identifier",
                                                  "name": "index"
                                                }
                                              }
                                            ]
                                          },
                                          "rest": null,
                                          "generator": false,
                                          "expression": false
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "slidesCount"
                                        }
                                      },
                                      "right": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "ThisExpression"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "count"
                                          }
                                        },
                                        "right": {
                                          "type": "FunctionExpression",
                                          "id": null,
                                          "params": [],
                                          "defaults": [],
                                          "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ReturnStatement",
                                                "argument": {
                                                  "type": "Identifier",
                                                  "name": "length"
                                                }
                                              }
                                            ]
                                          },
                                          "rest": null,
                                          "generator": false,
                                          "expression": false
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "kill"
                                        }
                                      },
                                      "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "stop"
                                                },
                                                "arguments": []
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "element"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "style"
                                                    }
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "width"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": ""
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "element"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "style"
                                                    }
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "left"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": ""
                                                }
                                              }
                                            },
                                            {
                                              "type": "VariableDeclaration",
                                              "declarations": [
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "pos"
                                                  },
                                                  "init": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "slides"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "length"
                                                    }
                                                  }
                                                }
                                              ],
                                              "kind": "var"
                                            },
                                            {
                                              "type": "WhileStatement",
                                              "test": {
                                                "type": "UpdateExpression",
                                                "operator": "--",
                                                "argument": {
                                                  "type": "Identifier",
                                                  "name": "pos"
                                                },
                                                "prefix": false
                                              },
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "slide"
                                                        },
                                                        "init": {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "slides"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "pos"
                                                          }
                                                        }
                                                      }
                                                    ],
                                                    "kind": "var"
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "slide"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "style"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "width"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": ""
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "slide"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "style"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "left"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": ""
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "browser"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "transitions"
                                                      }
                                                    },
                                                    "consequent": {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "Identifier",
                                                          "name": "translate"
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "pos"
                                                          },
                                                          {
                                                            "type": "Literal",
                                                            "value": 0
                                                          },
                                                          {
                                                            "type": "Literal",
                                                            "value": 0
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    "alternate": null
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "IfStatement",
                                              "test": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "browser"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "addEventListener"
                                                }
                                              },
                                              "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "element"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "removeEventListener"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Literal",
                                                          "value": "touchstart"
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "name": "events"
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": false
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "element"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "removeEventListener"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Literal",
                                                          "value": "webkitTransitionEnd"
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "name": "events"
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": false
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "element"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "removeEventListener"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Literal",
                                                          "value": "msTransitionEnd"
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "name": "events"
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": false
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "element"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "removeEventListener"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Literal",
                                                          "value": "oTransitionEnd"
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "name": "events"
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": false
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "element"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "removeEventListener"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Literal",
                                                          "value": "otransitionend"
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "name": "events"
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": false
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "element"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "removeEventListener"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Literal",
                                                          "value": "transitionend"
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "name": "events"
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": false
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "window"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "removeEventListener"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Literal",
                                                          "value": "resize"
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "name": "events"
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": false
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "alternate": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "window"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "onresize"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": null
                                                      }
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "ThisExpression"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "load"
                                        }
                                      },
                                      "right": {
                                        "type": "FunctionExpression",
                                        "id": null,
                                        "params": [],
                                        "defaults": [],
                                        "body": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "setup"
                                                },
                                                "arguments": []
                                              }
                                            },
                                            {
                                              "type": "IfStatement",
                                              "test": {
                                                "type": "Identifier",
                                                "name": "delay"
                                              },
                                              "consequent": {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "begin"
                                                  },
                                                  "arguments": []
                                                }
                                              },
                                              "alternate": null
                                            },
                                            {
                                              "type": "IfStatement",
                                              "test": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "browser"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "addEventListener"
                                                }
                                              },
                                              "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "browser"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "touch"
                                                      }
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "element"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "addEventListener"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Literal",
                                                                "value": "touchstart"
                                                              },
                                                              {
                                                                "type": "Identifier",
                                                                "name": "events"
                                                              },
                                                              {
                                                                "type": "Literal",
                                                                "value": false
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "element"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "addEventListener"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Literal",
                                                                "value": "mousedown"
                                                              },
                                                              {
                                                                "type": "Identifier",
                                                                "name": "events"
                                                              },
                                                              {
                                                                "type": "Literal",
                                                                "value": false
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "browser"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "transitions"
                                                      }
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "element"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "addEventListener"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Literal",
                                                                "value": "webkitTransitionEnd"
                                                              },
                                                              {
                                                                "type": "Identifier",
                                                                "name": "events"
                                                              },
                                                              {
                                                                "type": "Literal",
                                                                "value": false
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "element"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "addEventListener"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Literal",
                                                                "value": "msTransitionEnd"
                                                              },
                                                              {
                                                                "type": "Identifier",
                                                                "name": "events"
                                                              },
                                                              {
                                                                "type": "Literal",
                                                                "value": false
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "element"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "addEventListener"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Literal",
                                                                "value": "oTransitionEnd"
                                                              },
                                                              {
                                                                "type": "Identifier",
                                                                "name": "events"
                                                              },
                                                              {
                                                                "type": "Literal",
                                                                "value": false
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "element"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "addEventListener"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Literal",
                                                                "value": "otransitionend"
                                                              },
                                                              {
                                                                "type": "Identifier",
                                                                "name": "events"
                                                              },
                                                              {
                                                                "type": "Literal",
                                                                "value": false
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "element"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "addEventListener"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Literal",
                                                                "value": "transitionend"
                                                              },
                                                              {
                                                                "type": "Identifier",
                                                                "name": "events"
                                                              },
                                                              {
                                                                "type": "Literal",
                                                                "value": false
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": null
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "window"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "addEventListener"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Literal",
                                                          "value": "resize"
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "name": "events"
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": false
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "alternate": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "window"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "onresize"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "FunctionExpression",
                                                        "id": null,
                                                        "params": [],
                                                        "defaults": [],
                                                        "body": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "Identifier",
                                                                  "name": "setup"
                                                                },
                                                                "arguments": []
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "rest": null,
                                                        "generator": false,
                                                        "expression": false
                                                      }
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "rest": null,
                                        "generator": false,
                                        "expression": false
                                      }
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            },
                            "kind": "init"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "ionic"
          }
        ]
      }
    }
  ]
}
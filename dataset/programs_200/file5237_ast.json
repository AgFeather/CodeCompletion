{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "name"
          },
          "init": {
            "type": "Literal",
            "value": "Gas Guzzler"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "collection_type"
          },
          "init": {
            "type": "Literal",
            "value": 0
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "is_secret"
          },
          "init": {
            "type": "Literal",
            "value": 0
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "desc"
          },
          "init": {
            "type": "Literal",
            "value": "Refueled 23 machines"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "status_text"
          },
          "init": {
            "type": "Literal",
            "value": "You're so in tune with machines, you're ready to refuel before they even splutter to a stop. 23 machines owe you their life. Hats off to you, Gas Guzzler."
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "last_published"
          },
          "init": {
            "type": "Literal",
            "value": 1340307752
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "is_shareworthy"
          },
          "init": {
            "type": "Literal",
            "value": 0
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "url"
          },
          "init": {
            "type": "Literal",
            "value": "gas-guzzler"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "category"
          },
          "init": {
            "type": "Literal",
            "value": "industrial"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "url_swf"
          },
          "init": {
            "type": "Literal",
            "value": "http://c2.glitch.bz/achievements/2012-06-14/gas_guzzler_1339698250.swf"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "url_img_180"
          },
          "init": {
            "type": "Literal",
            "value": "http://c2.glitch.bz/achievements/2012-06-14/gas_guzzler_1339698250_180.png"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "url_img_60"
          },
          "init": {
            "type": "Literal",
            "value": "http://c2.glitch.bz/achievements/2012-06-14/gas_guzzler_1339698250_60.png"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "url_img_40"
          },
          "init": {
            "type": "Literal",
            "value": "http://c2.glitch.bz/achievements/2012-06-14/gas_guzzler_1339698250_40.png"
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "on_apply"
      },
      "params": [
        {
          "type": "Identifier",
          "name": "pc"
        }
      ],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": []
      },
      "rest": null,
      "generator": false,
      "expression": false
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "conditions"
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Literal",
                  "value": 699
                },
                "value": {
                  "type": "ObjectExpression",
                  "properties": [
                    {
                      "type": "Property",
                      "key": {
                        "type": "Identifier",
                        "name": "type"
                      },
                      "value": {
                        "type": "Literal",
                        "value": "counter"
                      },
                      "kind": "init"
                    },
                    {
                      "type": "Property",
                      "key": {
                        "type": "Identifier",
                        "name": "group"
                      },
                      "value": {
                        "type": "Literal",
                        "value": "machines"
                      },
                      "kind": "init"
                    },
                    {
                      "type": "Property",
                      "key": {
                        "type": "Identifier",
                        "name": "label"
                      },
                      "value": {
                        "type": "Literal",
                        "value": "refueled"
                      },
                      "kind": "init"
                    },
                    {
                      "type": "Property",
                      "key": {
                        "type": "Identifier",
                        "name": "value"
                      },
                      "value": {
                        "type": "Literal",
                        "value": "23"
                      },
                      "kind": "init"
                    }
                  ]
                },
                "kind": "init"
              }
            ]
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "FunctionDeclaration",
      "id": {
        "type": "Identifier",
        "name": "onComplete"
      },
      "params": [
        {
          "type": "Identifier",
          "name": "pc"
        }
      ],
      "defaults": [],
      "body": {
        "type": "BlockStatement",
        "body": [
          {
            "type": "VariableDeclaration",
            "declarations": [
              {
                "type": "VariableDeclarator",
                "id": {
                  "type": "Identifier",
                  "name": "multiplier"
                },
                "init": {
                  "type": "ConditionalExpression",
                  "test": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "pc"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "buffs_has"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "gift_of_gab"
                      }
                    ]
                  },
                  "consequent": {
                    "type": "Literal",
                    "value": 1.2
                  },
                  "alternate": {
                    "type": "ConditionalExpression",
                    "test": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "pc"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "buffs_has"
                        }
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "silvertongue"
                        }
                      ]
                    },
                    "consequent": {
                      "type": "Literal",
                      "value": 1.05
                    },
                    "alternate": {
                      "type": "Literal",
                      "value": 1
                    }
                  }
                }
              }
            ],
            "kind": "var"
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "AssignmentExpression",
              "operator": "+=",
              "left": {
                "type": "Identifier",
                "name": "multiplier"
              },
              "right": {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "Identifier",
                    "name": "pc"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "imagination_get_achievement_modifier"
                  }
                },
                "arguments": []
              }
            }
          },
          {
            "type": "IfStatement",
            "test": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Literal",
                  "value": {}
                },
                "property": {
                  "type": "Identifier",
                  "name": "exec"
                }
              },
              "arguments": [
                {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "ThisExpression"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "name"
                  }
                }
              ]
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "level"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "pc"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "stats_get_level"
                          }
                        },
                        "arguments": []
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "IfStatement",
                  "test": {
                    "type": "BinaryExpression",
                    "operator": ">",
                    "left": {
                      "type": "Identifier",
                      "name": "level"
                    },
                    "right": {
                      "type": "Literal",
                      "value": 4
                    }
                  },
                  "consequent": {
                    "type": "BlockStatement",
                    "body": [
                      {
                        "type": "ExpressionStatement",
                        "expression": {
                          "type": "AssignmentExpression",
                          "operator": "*=",
                          "left": {
                            "type": "Identifier",
                            "name": "multiplier"
                          },
                          "right": {
                            "type": "BinaryExpression",
                            "operator": "/",
                            "left": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "pc"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "stats_get_level"
                                }
                              },
                              "arguments": []
                            },
                            "right": {
                              "type": "Literal",
                              "value": 4
                            }
                          }
                        }
                      }
                    ]
                  },
                  "alternate": null
                }
              ]
            },
            "alternate": null
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "pc"
                },
                "property": {
                  "type": "Identifier",
                  "name": "stats_add_xp"
                }
              },
              "arguments": [
                {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "round_to_5"
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "operator": "*",
                      "left": {
                        "type": "Literal",
                        "value": 500
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "multiplier"
                      }
                    }
                  ]
                },
                {
                  "type": "Literal",
                  "value": true
                }
              ]
            }
          },
          {
            "type": "ExpressionStatement",
            "expression": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "pc"
                },
                "property": {
                  "type": "Identifier",
                  "name": "stats_add_favor_points"
                }
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "alph"
                },
                {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "round_to_5"
                  },
                  "arguments": [
                    {
                      "type": "BinaryExpression",
                      "operator": "*",
                      "left": {
                        "type": "Literal",
                        "value": 75
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "multiplier"
                      }
                    }
                  ]
                }
              ]
            }
          },
          {
            "type": "IfStatement",
            "test": {
              "type": "CallExpression",
              "callee": {
                "type": "MemberExpression",
                "computed": false,
                "object": {
                  "type": "Identifier",
                  "name": "pc"
                },
                "property": {
                  "type": "Identifier",
                  "name": "buffs_has"
                }
              },
              "arguments": [
                {
                  "type": "Literal",
                  "value": "gift_of_gab"
                }
              ]
            },
            "consequent": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "pc"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "buffs_remove"
                      }
                    },
                    "arguments": [
                      {
                        "type": "Literal",
                        "value": "gift_of_gab"
                      }
                    ]
                  }
                }
              ]
            },
            "alternate": {
              "type": "IfStatement",
              "test": {
                "type": "CallExpression",
                "callee": {
                  "type": "MemberExpression",
                  "computed": false,
                  "object": {
                    "type": "Identifier",
                    "name": "pc"
                  },
                  "property": {
                    "type": "Identifier",
                    "name": "buffs_has"
                  }
                },
                "arguments": [
                  {
                    "type": "Literal",
                    "value": "silvertongue"
                  }
                ]
              },
              "consequent": {
                "type": "BlockStatement",
                "body": [
                  {
                    "type": "ExpressionStatement",
                    "expression": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "pc"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "buffs_remove"
                        }
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "silvertongue"
                        }
                      ]
                    }
                  }
                ]
              },
              "alternate": null
            }
          }
        ]
      },
      "rest": null,
      "generator": false,
      "expression": false
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "rewards"
          },
          "init": {
            "type": "ObjectExpression",
            "properties": [
              {
                "type": "Property",
                "key": {
                  "type": "Literal",
                  "value": "xp"
                },
                "value": {
                  "type": "Literal",
                  "value": 500
                },
                "kind": "init"
              },
              {
                "type": "Property",
                "key": {
                  "type": "Literal",
                  "value": "favor"
                },
                "value": {
                  "type": "ObjectExpression",
                  "properties": [
                    {
                      "type": "Property",
                      "key": {
                        "type": "Literal",
                        "value": "giant"
                      },
                      "value": {
                        "type": "Literal",
                        "value": "alph"
                      },
                      "kind": "init"
                    },
                    {
                      "type": "Property",
                      "key": {
                        "type": "Literal",
                        "value": "points"
                      },
                      "value": {
                        "type": "Literal",
                        "value": 75
                      },
                      "kind": "init"
                    }
                  ]
                },
                "kind": "init"
              }
            ]
          }
        }
      ],
      "kind": "var"
    }
  ]
}
{
  "type": "Program",
  "body": [
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "m"
          },
          "init": {
            "type": "LogicalExpression",
            "operator": "||",
            "left": {
              "type": "MemberExpression",
              "computed": false,
              "object": {
                "type": "Identifier",
                "name": "window"
              },
              "property": {
                "type": "Identifier",
                "name": "mljs"
              }
            },
            "right": {
              "type": "ObjectExpression",
              "properties": []
            }
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "VariableDeclaration",
      "declarations": [
        {
          "type": "VariableDeclarator",
          "id": {
            "type": "Identifier",
            "name": "b"
          },
          "init": {
            "type": "LogicalExpression",
            "operator": "||",
            "left": {
              "type": "MemberExpression",
              "computed": false,
              "object": {
                "type": "Identifier",
                "name": "m"
              },
              "property": {
                "type": "Identifier",
                "name": "bindings"
              }
            },
            "right": {
              "type": "ObjectExpression",
              "properties": []
            }
          }
        }
      ],
      "kind": "var"
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "m"
          },
          "property": {
            "type": "Identifier",
            "name": "bindings"
          }
        },
        "right": {
          "type": "Identifier",
          "name": "b"
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "Identifier",
            "name": "b"
          },
          "property": {
            "type": "Identifier",
            "name": "jquery"
          }
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "params": [],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "$"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "ajaxSetup"
                    }
                  },
                  "arguments": [
                    {
                      "type": "ObjectExpression",
                      "properties": [
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "contentType"
                          },
                          "value": {
                            "type": "Literal",
                            "value": "application/json"
                          },
                          "kind": "init"
                        },
                        {
                          "type": "Property",
                          "key": {
                            "type": "Identifier",
                            "name": "processData"
                          },
                          "value": {
                            "type": "Literal",
                            "value": false
                          },
                          "kind": "init"
                        }
                      ]
                    }
                  ]
                }
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "MemberExpression",
              "computed": false,
              "object": {
                "type": "Identifier",
                "name": "b"
              },
              "property": {
                "type": "Identifier",
                "name": "jquery"
              }
            },
            "property": {
              "type": "Identifier",
              "name": "prototype"
            }
          },
          "property": {
            "type": "Identifier",
            "name": "supportsAdmin"
          }
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "params": [],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ReturnStatement",
                "argument": {
                  "type": "Literal",
                  "value": false
                }
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "MemberExpression",
              "computed": false,
              "object": {
                "type": "Identifier",
                "name": "b"
              },
              "property": {
                "type": "Identifier",
                "name": "jquery"
              }
            },
            "property": {
              "type": "Identifier",
              "name": "prototype"
            }
          },
          "property": {
            "type": "Identifier",
            "name": "configure"
          }
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "params": [
            {
              "type": "Identifier",
              "name": "username"
            },
            {
              "type": "Identifier",
              "name": "password"
            },
            {
              "type": "Identifier",
              "name": "logger"
            }
          ],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "ThisExpression"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "logger"
                    }
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "logger"
                  }
                }
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "AssignmentExpression",
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "MemberExpression",
              "computed": false,
              "object": {
                "type": "Identifier",
                "name": "b"
              },
              "property": {
                "type": "Identifier",
                "name": "jquery"
              }
            },
            "property": {
              "type": "Identifier",
              "name": "prototype"
            }
          },
          "property": {
            "type": "Identifier",
            "name": "request"
          }
        },
        "right": {
          "type": "FunctionExpression",
          "id": null,
          "params": [
            {
              "type": "Identifier",
              "name": "reqname"
            },
            {
              "type": "Identifier",
              "name": "options"
            },
            {
              "type": "Identifier",
              "name": "content"
            },
            {
              "type": "Identifier",
              "name": "callback"
            }
          ],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "self"
                    },
                    "init": {
                      "type": "ThisExpression"
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "data"
                    },
                    "init": {
                      "type": "Literal",
                      "value": null
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "IfStatement",
                "test": {
                  "type": "LogicalExpression",
                  "operator": "&&",
                  "left": {
                    "type": "BinaryExpression",
                    "operator": "!=",
                    "left": {
                      "type": "Identifier",
                      "name": "undefined"
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "content"
                    }
                  },
                  "right": {
                    "type": "BinaryExpression",
                    "operator": "!=",
                    "left": {
                      "type": "Literal",
                      "value": null
                    },
                    "right": {
                      "type": "Identifier",
                      "name": "content"
                    }
                  }
                },
                "consequent": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "console"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "log"
                          }
                        },
                        "arguments": [
                          {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                              "type": "Literal",
                              "value": "content typeof: "
                            },
                            "right": {
                              "type": "UnaryExpression",
                              "operator": "typeof",
                              "argument": {
                                "type": "Identifier",
                                "name": "content"
                              },
                              "prefix": true
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "BinaryExpression",
                        "operator": "==",
                        "left": {
                          "type": "Literal",
                          "value": "ArrayBuffer"
                        },
                        "right": {
                          "type": "UnaryExpression",
                          "operator": "typeof",
                          "argument": {
                            "type": "Identifier",
                            "name": "content"
                          },
                          "prefix": true
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "data"
                              },
                              "right": {
                                "type": "Identifier",
                                "name": "content"
                              }
                            }
                          }
                        ]
                      },
                      "alternate": {
                        "type": "IfStatement",
                        "test": {
                          "type": "BinaryExpression",
                          "operator": "==",
                          "left": {
                            "type": "Literal",
                            "value": "object"
                          },
                          "right": {
                            "type": "UnaryExpression",
                            "operator": "typeof",
                            "argument": {
                              "type": "Identifier",
                              "name": "content"
                            },
                            "prefix": true
                          }
                        },
                        "consequent": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "data"
                                },
                                "right": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "JSON"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "stringify"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "content"
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        "alternate": {
                          "type": "IfStatement",
                          "test": {
                            "type": "BinaryExpression",
                            "operator": "==",
                            "left": {
                              "type": "Literal",
                              "value": "string"
                            },
                            "right": {
                              "type": "UnaryExpression",
                              "operator": "typeof",
                              "argument": {
                                "type": "Identifier",
                                "name": "content"
                              },
                              "prefix": true
                            }
                          },
                          "consequent": {
                            "type": "BlockStatement",
                            "body": [
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "Identifier",
                                    "name": "data"
                                  },
                                  "right": {
                                    "type": "Identifier",
                                    "name": "content"
                                  }
                                }
                              }
                            ]
                          },
                          "alternate": null
                        }
                      }
                    }
                  ]
                },
                "alternate": null
              },
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "ct"
                    },
                    "init": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "options"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "contentType"
                      }
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "IfStatement",
                "test": {
                  "type": "BinaryExpression",
                  "operator": "==",
                  "left": {
                    "type": "Identifier",
                    "name": "undefined"
                  },
                  "right": {
                    "type": "Identifier",
                    "name": "ct"
                  }
                },
                "consequent": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "Identifier",
                          "name": "ct"
                        },
                        "right": {
                          "type": "Literal",
                          "value": "application/json"
                        }
                      }
                    }
                  ]
                },
                "alternate": null
              },
              {
                "type": "IfStatement",
                "test": {
                  "type": "LogicalExpression",
                  "operator": "&&",
                  "left": {
                    "type": "LogicalExpression",
                    "operator": "&&",
                    "left": {
                      "type": "BinaryExpression",
                      "operator": "!=",
                      "left": {
                        "type": "Literal",
                        "value": null
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "content"
                      }
                    },
                    "right": {
                      "type": "BinaryExpression",
                      "operator": "!=",
                      "left": {
                        "type": "Identifier",
                        "name": "undefined"
                      },
                      "right": {
                        "type": "Identifier",
                        "name": "content"
                      }
                    }
                  },
                  "right": {
                    "type": "BinaryExpression",
                    "operator": "!=",
                    "left": {
                      "type": "UnaryExpression",
                      "operator": "-",
                      "argument": {
                        "type": "Literal",
                        "value": 1
                      },
                      "prefix": true
                    },
                    "right": {
                      "type": "CallExpression",
                      "callee": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "options"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "path"
                          }
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "indexOf"
                        }
                      },
                      "arguments": [
                        {
                          "type": "Literal",
                          "value": "&format=binary"
                        }
                      ]
                    }
                  }
                },
                "consequent": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "VariableDeclaration",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "Identifier",
                            "name": "xhr"
                          },
                          "init": {
                            "type": "NewExpression",
                            "callee": {
                              "type": "Identifier",
                              "name": "XMLHttpRequest"
                            },
                            "arguments": []
                          }
                        }
                      ],
                      "kind": "var"
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "xhr"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "open"
                          }
                        },
                        "arguments": [
                          {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "options"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "method"
                            }
                          },
                          {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "options"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "path"
                            }
                          },
                          {
                            "type": "Literal",
                            "value": true
                          }
                        ]
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "xhr"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "onload"
                          }
                        },
                        "right": {
                          "type": "FunctionExpression",
                          "id": null,
                          "params": [
                            {
                              "type": "Identifier",
                              "name": "e"
                            }
                          ],
                          "defaults": [],
                          "body": {
                            "type": "BlockStatement",
                            "body": [
                              {
                                "type": "VariableDeclaration",
                                "declarations": [
                                  {
                                    "type": "VariableDeclarator",
                                    "id": {
                                      "type": "Identifier",
                                      "name": "res"
                                    },
                                    "init": {
                                      "type": "ObjectExpression",
                                      "properties": []
                                    }
                                  }
                                ],
                                "kind": "var"
                              },
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "res"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "inError"
                                    }
                                  },
                                  "right": {
                                    "type": "Literal",
                                    "value": false
                                  }
                                }
                              },
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "res"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "statusCode"
                                    }
                                  },
                                  "right": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "xhr"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "status"
                                    }
                                  }
                                }
                              },
                              {
                                "type": "VariableDeclaration",
                                "declarations": [
                                  {
                                    "type": "VariableDeclarator",
                                    "id": {
                                      "type": "Identifier",
                                      "name": "wibble"
                                    },
                                    "init": null
                                  }
                                ],
                                "kind": "var"
                              },
                              {
                                "type": "IfStatement",
                                "test": {
                                  "type": "LogicalExpression",
                                  "operator": "&&",
                                  "left": {
                                    "type": "BinaryExpression",
                                    "operator": "!=",
                                    "left": {
                                      "type": "Identifier",
                                      "name": "undefined"
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "data"
                                    }
                                  },
                                  "right": {
                                    "type": "BinaryExpression",
                                    "operator": "!=",
                                    "left": {
                                      "type": "Literal",
                                      "value": null
                                    },
                                    "right": {
                                      "type": "Identifier",
                                      "name": "data"
                                    }
                                  }
                                },
                                "consequent": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "self"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "logger"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "debug"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "Literal",
                                              "value": "Data type: "
                                            },
                                            "right": {
                                              "type": "UnaryExpression",
                                              "operator": "typeof",
                                              "argument": {
                                                "type": "Identifier",
                                                "name": "data"
                                              },
                                              "prefix": true
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "self"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "logger"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "debug"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "Literal",
                                              "value": "Data value: "
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "data"
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "VariableDeclaration",
                                      "declarations": [
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "xml"
                                          },
                                          "init": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "xhr"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "responseXML"
                                            }
                                          }
                                        }
                                      ],
                                      "kind": "var"
                                    },
                                    {
                                      "type": "IfStatement",
                                      "test": {
                                        "type": "BinaryExpression",
                                        "operator": "!=",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "undefined"
                                        },
                                        "right": {
                                          "type": "Identifier",
                                          "name": "xml"
                                        }
                                      },
                                      "consequent": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "res"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "format"
                                                }
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": "xml"
                                              }
                                            }
                                          },
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "res"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "doc"
                                                }
                                              },
                                              "right": {
                                                "type": "Identifier",
                                                "name": "xml"
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      "alternate": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "self"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "logger"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "debug"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "BinaryExpression",
                                                  "operator": "+",
                                                  "left": {
                                                    "type": "Literal",
                                                    "value": "response text: "
                                                  },
                                                  "right": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "xhr"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "responseText"
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "TryStatement",
                                            "block": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "self"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "logger"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "debug"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Literal",
                                                        "value": "parsing xhr.responseText"
                                                      }
                                                    ]
                                                  }
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "wibble"
                                                    },
                                                    "right": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "$"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "parseJSON"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "xhr"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "responseText"
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "res"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "format"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": "json"
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "self"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "logger"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "debug"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                          "type": "Literal",
                                                          "value": "js raw: "
                                                        },
                                                        "right": {
                                                          "type": "Identifier",
                                                          "name": "wibble"
                                                        }
                                                      }
                                                    ]
                                                  }
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "self"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "logger"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "debug"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                          "type": "Literal",
                                                          "value": "json str: "
                                                        },
                                                        "right": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "JSON"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "stringify"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "wibble"
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ]
                                                  }
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "self"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "logger"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "debug"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Literal",
                                                        "value": "Parsed JSON successfully"
                                                      }
                                                    ]
                                                  }
                                                }
                                              ]
                                            },
                                            "guardedHandlers": [],
                                            "handlers": [
                                              {
                                                "type": "CatchClause",
                                                "param": {
                                                  "type": "Identifier",
                                                  "name": "ex"
                                                },
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "self"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "logger"
                                                            }
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "debug"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Literal",
                                                            "value": "JSON parsing failed. Trying XML parsing."
                                                          }
                                                        ]
                                                      }
                                                    },
                                                    {
                                                      "type": "TryStatement",
                                                      "block": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "AssignmentExpression",
                                                              "operator": "=",
                                                              "left": {
                                                                "type": "Identifier",
                                                                "name": "wibble"
                                                              },
                                                              "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "Identifier",
                                                                  "name": "textToXML"
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "xhr"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "responseText"
                                                                    }
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          },
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "AssignmentExpression",
                                                              "operator": "=",
                                                              "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "res"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "format"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": "xml"
                                                              }
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "guardedHandlers": [],
                                                      "handlers": [
                                                        {
                                                          "type": "CatchClause",
                                                          "param": {
                                                            "type": "Identifier",
                                                            "name": "ex2"
                                                          },
                                                          "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "self"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "logger"
                                                                      }
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "debug"
                                                                    }
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "+",
                                                                      "left": {
                                                                        "type": "Literal",
                                                                        "value": "Not JSON or XML. Exception: "
                                                                      },
                                                                      "right": {
                                                                        "type": "Identifier",
                                                                        "name": "ex2"
                                                                      }
                                                                    }
                                                                  ]
                                                                }
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      ],
                                                      "finalizer": null
                                                    }
                                                  ]
                                                }
                                              }
                                            ],
                                            "finalizer": null
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                "alternate": null
                              },
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "AssignmentExpression",
                                  "operator": "=",
                                  "left": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "res"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "doc"
                                    }
                                  },
                                  "right": {
                                    "type": "Identifier",
                                    "name": "wibble"
                                  }
                                }
                              },
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "Identifier",
                                    "name": "callback"
                                  },
                                  "arguments": [
                                    {
                                      "type": "Identifier",
                                      "name": "res"
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "rest": null,
                          "generator": false,
                          "expression": false
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "xhr"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "send"
                          }
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "content"
                          }
                        ]
                      }
                    }
                  ]
                },
                "alternate": {
                  "type": "BlockStatement",
                  "body": [
                    {
                      "type": "VariableDeclaration",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "Identifier",
                            "name": "dataType"
                          },
                          "init": {
                            "type": "Literal",
                            "value": "json"
                          }
                        }
                      ],
                      "kind": "var"
                    },
                    {
                      "type": "IfStatement",
                      "test": {
                        "type": "BinaryExpression",
                        "operator": "==",
                        "left": {
                          "type": "Literal",
                          "value": "application/xml"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "ct"
                        }
                      },
                      "consequent": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "AssignmentExpression",
                              "operator": "=",
                              "left": {
                                "type": "Identifier",
                                "name": "dataType"
                              },
                              "right": {
                                "type": "Literal",
                                "value": "xml"
                              }
                            }
                          }
                        ]
                      },
                      "alternate": {
                        "type": "IfStatement",
                        "test": {
                          "type": "BinaryExpression",
                          "operator": "==",
                          "left": {
                            "type": "Literal",
                            "value": "text/plan"
                          },
                          "right": {
                            "type": "Identifier",
                            "name": "ct"
                          }
                        },
                        "consequent": {
                          "type": "BlockStatement",
                          "body": [
                            {
                              "type": "ExpressionStatement",
                              "expression": {
                                "type": "AssignmentExpression",
                                "operator": "=",
                                "left": {
                                  "type": "Identifier",
                                  "name": "dataType"
                                },
                                "right": {
                                  "type": "Literal",
                                  "value": "text"
                                }
                              }
                            }
                          ]
                        },
                        "alternate": null
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "$"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "ajax"
                          }
                        },
                        "arguments": [
                          {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "Identifier",
                              "name": "options"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "path"
                            }
                          },
                          {
                            "type": "ObjectExpression",
                            "properties": [
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "contentType"
                                },
                                "value": {
                                  "type": "Identifier",
                                  "name": "ct"
                                },
                                "kind": "init"
                              },
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "type"
                                },
                                "value": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "Identifier",
                                        "name": "options"
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "method"
                                      }
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "toLowerCase"
                                    }
                                  },
                                  "arguments": []
                                },
                                "kind": "init"
                              },
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "data"
                                },
                                "value": {
                                  "type": "Identifier",
                                  "name": "data"
                                },
                                "kind": "init"
                              },
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "processData"
                                },
                                "value": {
                                  "type": "Literal",
                                  "value": false
                                },
                                "kind": "init"
                              },
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "dataType"
                                },
                                "value": {
                                  "type": "Identifier",
                                  "name": "dataType"
                                },
                                "kind": "init"
                              },
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "converters"
                                },
                                "value": {
                                  "type": "ObjectExpression",
                                  "properties": [
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Literal",
                                        "value": "* text"
                                      },
                                      "value": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "window"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "String"
                                        }
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Literal",
                                        "value": "text html"
                                      },
                                      "value": {
                                        "type": "Literal",
                                        "value": true
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Literal",
                                        "value": "text json"
                                      },
                                      "value": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "window"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "String"
                                        }
                                      },
                                      "kind": "init"
                                    },
                                    {
                                      "type": "Property",
                                      "key": {
                                        "type": "Literal",
                                        "value": "text xml"
                                      },
                                      "value": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "jQuery"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "parseXML"
                                        }
                                      },
                                      "kind": "init"
                                    }
                                  ]
                                },
                                "kind": "init"
                              },
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "success"
                                },
                                "value": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "data"
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "textStatus"
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "xhr"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "console"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "log"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": "jquery success"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "res"
                                            },
                                            "init": {
                                              "type": "ObjectExpression",
                                              "properties": []
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "res"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "inError"
                                            }
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": false
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "res"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "statusCode"
                                            }
                                          },
                                          "right": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "xhr"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "status"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "wibble"
                                            },
                                            "init": null
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "LogicalExpression",
                                          "operator": "&&",
                                          "left": {
                                            "type": "BinaryExpression",
                                            "operator": "!=",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "undefined"
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "data"
                                            }
                                          },
                                          "right": {
                                            "type": "BinaryExpression",
                                            "operator": "!=",
                                            "left": {
                                              "type": "Literal",
                                              "value": null
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "data"
                                            }
                                          }
                                        },
                                        "consequent": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "self"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "logger"
                                                    }
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "debug"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "Literal",
                                                      "value": "Data type: "
                                                    },
                                                    "right": {
                                                      "type": "UnaryExpression",
                                                      "operator": "typeof",
                                                      "argument": {
                                                        "type": "Identifier",
                                                        "name": "data"
                                                      },
                                                      "prefix": true
                                                    }
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "self"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "logger"
                                                    }
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "debug"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "Literal",
                                                      "value": "Data value: "
                                                    },
                                                    "right": {
                                                      "type": "Identifier",
                                                      "name": "data"
                                                    }
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "VariableDeclaration",
                                              "declarations": [
                                                {
                                                  "type": "VariableDeclarator",
                                                  "id": {
                                                    "type": "Identifier",
                                                    "name": "xml"
                                                  },
                                                  "init": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "xhr"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "responseXML"
                                                    }
                                                  }
                                                }
                                              ],
                                              "kind": "var"
                                            },
                                            {
                                              "type": "IfStatement",
                                              "test": {
                                                "type": "BinaryExpression",
                                                "operator": "!=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "undefined"
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "xml"
                                                }
                                              },
                                              "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "res"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "format"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": "xml"
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "res"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "doc"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "xml"
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              "alternate": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "self"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "logger"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "debug"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "Literal",
                                                            "value": "response text: "
                                                          },
                                                          "right": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "xhr"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "responseText"
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "type": "TryStatement",
                                                    "block": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "self"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "logger"
                                                                }
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "debug"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Literal",
                                                                "value": "parsing xhr.responseText"
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "Identifier",
                                                              "name": "wibble"
                                                            },
                                                            "right": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "$"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "parseJSON"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "xhr"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "responseText"
                                                                  }
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "res"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "format"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": "json"
                                                            }
                                                          }
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "self"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "logger"
                                                                }
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "debug"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                  "type": "Literal",
                                                                  "value": "js raw: "
                                                                },
                                                                "right": {
                                                                  "type": "Identifier",
                                                                  "name": "wibble"
                                                                }
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "self"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "logger"
                                                                }
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "debug"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                  "type": "Literal",
                                                                  "value": "json str: "
                                                                },
                                                                "right": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "JSON"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "stringify"
                                                                    }
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "wibble"
                                                                    }
                                                                  ]
                                                                }
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "self"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "logger"
                                                                }
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "debug"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Literal",
                                                                "value": "Parsed JSON successfully"
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "guardedHandlers": [],
                                                    "handlers": [
                                                      {
                                                        "type": "CatchClause",
                                                        "param": {
                                                          "type": "Identifier",
                                                          "name": "ex"
                                                        },
                                                        "body": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "self"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "logger"
                                                                    }
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "debug"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Literal",
                                                                    "value": "JSON parsing failed. Trying XML parsing."
                                                                  }
                                                                ]
                                                              }
                                                            },
                                                            {
                                                              "type": "TryStatement",
                                                              "block": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "AssignmentExpression",
                                                                      "operator": "=",
                                                                      "left": {
                                                                        "type": "Identifier",
                                                                        "name": "wibble"
                                                                      },
                                                                      "right": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "Identifier",
                                                                          "name": "textToXML"
                                                                        },
                                                                        "arguments": [
                                                                          {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "Identifier",
                                                                              "name": "xhr"
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "responseText"
                                                                            }
                                                                          }
                                                                        ]
                                                                      }
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "AssignmentExpression",
                                                                      "operator": "=",
                                                                      "left": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "res"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "format"
                                                                        }
                                                                      },
                                                                      "right": {
                                                                        "type": "Literal",
                                                                        "value": "xml"
                                                                      }
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "guardedHandlers": [],
                                                              "handlers": [
                                                                {
                                                                  "type": "CatchClause",
                                                                  "param": {
                                                                    "type": "Identifier",
                                                                    "name": "ex2"
                                                                  },
                                                                  "body": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "self"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "logger"
                                                                              }
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "debug"
                                                                            }
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "BinaryExpression",
                                                                              "operator": "+",
                                                                              "left": {
                                                                                "type": "Literal",
                                                                                "value": "Not JSON or XML. Exception: "
                                                                              },
                                                                              "right": {
                                                                                "type": "Identifier",
                                                                                "name": "ex2"
                                                                              }
                                                                            }
                                                                          ]
                                                                        }
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              ],
                                                              "finalizer": null
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ],
                                                    "finalizer": null
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "alternate": null
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "res"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "doc"
                                            }
                                          },
                                          "right": {
                                            "type": "Identifier",
                                            "name": "wibble"
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "callback"
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "res"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                },
                                "kind": "init"
                              },
                              {
                                "type": "Property",
                                "key": {
                                  "type": "Identifier",
                                  "name": "error"
                                },
                                "value": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "xhr"
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "textStatus"
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "errorThrown"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "console"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "log"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": "jquery error"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "res"
                                            },
                                            "init": {
                                              "type": "ObjectExpression",
                                              "properties": []
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "BinaryExpression",
                                          "operator": "==",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "xhr"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "status"
                                            }
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": 303
                                          }
                                        },
                                        "consequent": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "res"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "location"
                                                  }
                                                },
                                                "right": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "xhr"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "getResponseHeader"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "location"
                                                    }
                                                  ]
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "alternate": null
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "res"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "inError"
                                            }
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": true
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "res"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "statusCode"
                                            }
                                          },
                                          "right": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "xhr"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "status"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "res"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "doc"
                                            }
                                          },
                                          "right": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "xhr"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "responseXML"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "BinaryExpression",
                                          "operator": "==",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "undefined"
                                          },
                                          "right": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "res"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "doc"
                                            }
                                          }
                                        },
                                        "consequent": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "res"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "doc"
                                                  }
                                                },
                                                "right": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "xhr"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "responseText"
                                                  }
                                                }
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "res"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "format"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": "text"
                                                }
                                              }
                                            },
                                            {
                                              "type": "TryStatement",
                                              "block": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "self"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "logger"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "debug"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Literal",
                                                          "value": "parsing xhr.responseText"
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "wibble"
                                                        },
                                                        "init": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "$"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "parseJSON"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "xhr"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "responseText"
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ],
                                                    "kind": "var"
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "res"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "format"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": "json"
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "self"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "logger"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "debug"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "Literal",
                                                            "value": "js raw: "
                                                          },
                                                          "right": {
                                                            "type": "Identifier",
                                                            "name": "wibble"
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "self"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "logger"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "debug"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "Literal",
                                                            "value": "json str: "
                                                          },
                                                          "right": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "JSON"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "stringify"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Identifier",
                                                                "name": "wibble"
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "self"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "logger"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "debug"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Literal",
                                                          "value": "Parsed JSON successfully"
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "res"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "doc"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "wibble"
                                                      }
                                                    }
                                                  }
                                                ]
                                              },
                                              "guardedHandlers": [],
                                              "handlers": [
                                                {
                                                  "type": "CatchClause",
                                                  "param": {
                                                    "type": "Identifier",
                                                    "name": "ex"
                                                  },
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "self"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "logger"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "debug"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "BinaryExpression",
                                                              "operator": "+",
                                                              "left": {
                                                                "type": "Literal",
                                                                "value": "Exception: "
                                                              },
                                                              "right": {
                                                                "type": "Identifier",
                                                                "name": "ex"
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ]
                                                  }
                                                }
                                              ],
                                              "finalizer": null
                                            }
                                          ]
                                        },
                                        "alternate": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "res"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "format"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": "xml"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "res"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "details"
                                            }
                                          },
                                          "right": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "res"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "doc"
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "BinaryExpression",
                                          "operator": "==",
                                          "left": {
                                            "type": "Literal",
                                            "value": "string"
                                          },
                                          "right": {
                                            "type": "UnaryExpression",
                                            "operator": "typeof",
                                            "argument": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "res"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "details"
                                              }
                                            },
                                            "prefix": true
                                          }
                                        },
                                        "consequent": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "res"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "details"
                                                  }
                                                },
                                                "right": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "textToXML"
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "res"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "details"
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "alternate": null
                                      },
                                      {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "BinaryExpression",
                                          "operator": "!=",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "undefined"
                                          },
                                          "right": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "res"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "details"
                                              }
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "nodeType"
                                            }
                                          }
                                        },
                                        "consequent": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "res"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "details"
                                                  }
                                                },
                                                "right": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "xmlToJson"
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "res"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "details"
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "alternate": null
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "callback"
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "res"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                },
                                "kind": "init"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        }
      }
    }
  ]
}
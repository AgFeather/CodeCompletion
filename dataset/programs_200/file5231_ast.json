{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "FunctionExpression",
          "id": null,
          "params": [
            {
              "type": "Identifier",
              "name": "$"
            },
            {
              "type": "Identifier",
              "name": "document"
            }
          ],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "Identifier",
                      "name": "$"
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "glisse"
                    }
                  },
                  "right": {
                    "type": "FunctionExpression",
                    "id": null,
                    "params": [
                      {
                        "type": "Identifier",
                        "name": "element"
                      },
                      {
                        "type": "Identifier",
                        "name": "options"
                      }
                    ],
                    "defaults": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "VariableDeclaration",
                          "declarations": [
                            {
                              "type": "VariableDeclarator",
                              "id": {
                                "type": "Identifier",
                                "name": "plugin"
                              },
                              "init": {
                                "type": "ThisExpression"
                              }
                            },
                            {
                              "type": "VariableDeclarator",
                              "id": {
                                "type": "Identifier",
                                "name": "$element"
                              },
                              "init": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "Identifier",
                                  "name": "$"
                                },
                                "arguments": [
                                  {
                                    "type": "Identifier",
                                    "name": "element"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "VariableDeclarator",
                              "id": {
                                "type": "Identifier",
                                "name": "defaults"
                              },
                              "init": {
                                "type": "ObjectExpression",
                                "properties": [
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Identifier",
                                      "name": "dataName"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": "data-glisse-big"
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Identifier",
                                      "name": "speed"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": 300
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Identifier",
                                      "name": "changeSpeed"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": 1000
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Identifier",
                                      "name": "effect"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": "bounce"
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Identifier",
                                      "name": "mobile"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": false
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Identifier",
                                      "name": "fullscreen"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": false
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Identifier",
                                      "name": "disablindRightClick"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": false
                                    },
                                    "kind": "init"
                                  },
                                  {
                                    "type": "Property",
                                    "key": {
                                      "type": "Identifier",
                                      "name": "parent"
                                    },
                                    "value": {
                                      "type": "Literal",
                                      "value": null
                                    },
                                    "kind": "init"
                                  }
                                ]
                              }
                            },
                            {
                              "type": "VariableDeclarator",
                              "id": {
                                "type": "Identifier",
                                "name": "pictureUrl"
                              },
                              "init": null
                            },
                            {
                              "type": "VariableDeclarator",
                              "id": {
                                "type": "Identifier",
                                "name": "group"
                              },
                              "init": null
                            },
                            {
                              "type": "VariableDeclarator",
                              "id": {
                                "type": "Identifier",
                                "name": "isChange"
                              },
                              "init": {
                                "type": "Literal",
                                "value": false
                              }
                            },
                            {
                              "type": "VariableDeclarator",
                              "id": {
                                "type": "Identifier",
                                "name": "mobile"
                              },
                              "init": {
                                "type": "ObjectExpression",
                                "properties": []
                              }
                            },
                            {
                              "type": "VariableDeclarator",
                              "id": {
                                "type": "Identifier",
                                "name": "touch"
                              },
                              "init": {
                                "type": "ObjectExpression",
                                "properties": []
                              }
                            },
                            {
                              "type": "VariableDeclarator",
                              "id": {
                                "type": "Identifier",
                                "name": "cache"
                              },
                              "init": {
                                "type": "ArrayExpression",
                                "elements": []
                              }
                            },
                            {
                              "type": "VariableDeclarator",
                              "id": {
                                "type": "Identifier",
                                "name": "getFullUrl"
                              },
                              "init": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [
                                  {
                                    "type": "Identifier",
                                    "name": "$el"
                                  }
                                ],
                                "defaults": [],
                                "body": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "ReturnStatement",
                                      "argument": {
                                        "type": "LogicalExpression",
                                        "operator": "||",
                                        "left": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "$el"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "attr"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "plugin"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "settings"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "dataName"
                                              }
                                            }
                                          ]
                                        },
                                        "right": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "$el"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "attr"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": "src"
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                              }
                            }
                          ],
                          "kind": "var"
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "plugin"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "settings"
                              }
                            },
                            "right": {
                              "type": "ObjectExpression",
                              "properties": []
                            }
                          }
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "plugin"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "els"
                              }
                            },
                            "right": {
                              "type": "ObjectExpression",
                              "properties": []
                            }
                          }
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "plugin"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "init"
                              }
                            },
                            "right": {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "plugin"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "settings"
                                        }
                                      },
                                      "right": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "$"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "extend"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "ObjectExpression",
                                            "properties": []
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "defaults"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "options"
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "group"
                                      },
                                      "right": {
                                        "type": "LogicalExpression",
                                        "operator": "||",
                                        "left": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "$element"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "attr"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": "rel"
                                            }
                                          ]
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": null
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "plugin"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "settings"
                                          }
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "mobile"
                                        }
                                      },
                                      "right": {
                                        "type": "UnaryExpression",
                                        "operator": "!",
                                        "argument": {
                                          "type": "UnaryExpression",
                                          "operator": "!",
                                          "argument": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "navigator"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "userAgent"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "match"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": {}
                                              }
                                            ]
                                          },
                                          "prefix": true
                                        },
                                        "prefix": true
                                      }
                                    }
                                  },
                                  {
                                    "type": "ExpressionStatement",
                                    "expression": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "$element"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "on"
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "type": "Literal",
                                          "value": "click"
                                        },
                                        {
                                          "type": "FunctionExpression",
                                          "id": null,
                                          "params": [],
                                          "defaults": [],
                                          "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "pictureUrl"
                                                  },
                                                  "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "Identifier",
                                                      "name": "getFullUrl"
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Identifier",
                                                        "name": "$element"
                                                      }
                                                    ]
                                                  }
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "createElements"
                                                  },
                                                  "arguments": []
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "setChangeStyle"
                                                  },
                                                  "arguments": []
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "addImage"
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "pictureUrl"
                                                    }
                                                  ]
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "setChangeStatus"
                                                  },
                                                  "arguments": []
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "setTitle"
                                                  },
                                                  "arguments": []
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "preloadImgs"
                                                  },
                                                  "arguments": []
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "Identifier",
                                                        "name": "$"
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "document"
                                                        }
                                                      ]
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "keydown"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "FunctionExpression",
                                                      "id": null,
                                                      "params": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "event"
                                                        }
                                                      ],
                                                      "defaults": [],
                                                      "body": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "IfStatement",
                                                            "test": {
                                                              "type": "BinaryExpression",
                                                              "operator": "===",
                                                              "left": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "event"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "keyCode"
                                                                    }
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "toString"
                                                                  }
                                                                },
                                                                "arguments": []
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": "27"
                                                              }
                                                            },
                                                            "consequent": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "Identifier",
                                                                      "name": "closeLightbox"
                                                                    },
                                                                    "arguments": []
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "alternate": null
                                                          },
                                                          {
                                                            "type": "IfStatement",
                                                            "test": {
                                                              "type": "BinaryExpression",
                                                              "operator": "===",
                                                              "left": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "event"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "keyCode"
                                                                    }
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "toString"
                                                                  }
                                                                },
                                                                "arguments": []
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": "39"
                                                              }
                                                            },
                                                            "consequent": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "Identifier",
                                                                      "name": "changePicture"
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "Literal",
                                                                        "value": "next"
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "alternate": null
                                                          },
                                                          {
                                                            "type": "IfStatement",
                                                            "test": {
                                                              "type": "BinaryExpression",
                                                              "operator": "===",
                                                              "left": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "event"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "keyCode"
                                                                    }
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "toString"
                                                                  }
                                                                },
                                                                "arguments": []
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": "37"
                                                              }
                                                            },
                                                            "consequent": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "ExpressionStatement",
                                                                  "expression": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "Identifier",
                                                                      "name": "changePicture"
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "Literal",
                                                                        "value": "prev"
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "alternate": null
                                                          }
                                                        ]
                                                      },
                                                      "rest": null,
                                                      "generator": false,
                                                      "expression": false
                                                    }
                                                  ]
                                                }
                                              },
                                              {
                                                "type": "IfStatement",
                                                "test": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "plugin"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "settings"
                                                    }
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "disablindRightClick"
                                                  }
                                                },
                                                "consequent": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "plugin"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "els"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Literal",
                                                              "value": "content"
                                                            }
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "on"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Literal",
                                                            "value": "contextmenu"
                                                          },
                                                          {
                                                            "type": "FunctionExpression",
                                                            "id": null,
                                                            "params": [
                                                              {
                                                                "type": "Identifier",
                                                                "name": "e"
                                                              }
                                                            ],
                                                            "defaults": [],
                                                            "body": {
                                                              "type": "BlockStatement",
                                                              "body": [
                                                                {
                                                                  "type": "ReturnStatement",
                                                                  "argument": {
                                                                    "type": "Literal",
                                                                    "value": false
                                                                  }
                                                                }
                                                              ]
                                                            },
                                                            "rest": null,
                                                            "generator": false,
                                                            "expression": false
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ]
                                                },
                                                "alternate": null
                                              },
                                              {
                                                "type": "IfStatement",
                                                "test": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "plugin"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "settings"
                                                    }
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "mobile"
                                                  }
                                                },
                                                "consequent": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "mobile"
                                                        },
                                                        "right": {
                                                          "type": "ObjectExpression",
                                                          "properties": [
                                                            {
                                                              "type": "Property",
                                                              "key": {
                                                                "type": "Identifier",
                                                                "name": "touching"
                                                              },
                                                              "value": {
                                                                "type": "Literal",
                                                                "value": false
                                                              },
                                                              "kind": "init"
                                                            },
                                                            {
                                                              "type": "Property",
                                                              "key": {
                                                                "type": "Identifier",
                                                                "name": "nx"
                                                              },
                                                              "value": {
                                                                "type": "Literal",
                                                                "value": 0
                                                              },
                                                              "kind": "init"
                                                            },
                                                            {
                                                              "type": "Property",
                                                              "key": {
                                                                "type": "Identifier",
                                                                "name": "oX"
                                                              },
                                                              "value": {
                                                                "type": "Literal",
                                                                "value": 0
                                                              },
                                                              "kind": "init"
                                                            },
                                                            {
                                                              "type": "Property",
                                                              "key": {
                                                                "type": "Identifier",
                                                                "name": "scrollX"
                                                              },
                                                              "value": {
                                                                "type": "Literal",
                                                                "value": null
                                                              },
                                                              "kind": "init"
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "AssignmentExpression",
                                                        "operator": "=",
                                                        "left": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "document"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "ontouchmove"
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "AssignmentExpression",
                                                          "operator": "=",
                                                          "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "document"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "ontouchstart"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "document"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "ontouchend"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "touchHandler"
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  ]
                                                },
                                                "alternate": null
                                              }
                                            ]
                                          },
                                          "rest": null,
                                          "generator": false,
                                          "expression": false
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            }
                          }
                        },
                        {
                          "type": "VariableDeclaration",
                          "declarations": [
                            {
                              "type": "VariableDeclarator",
                              "id": {
                                "type": "Identifier",
                                "name": "preloadImgs"
                              },
                              "init": {
                                "type": "FunctionExpression",
                                "id": {
                                  "type": "Identifier",
                                  "name": "preloadImgs"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "VariableDeclaration",
                                      "declarations": [
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "current"
                                          },
                                          "init": null
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "image_urls"
                                          },
                                          "init": {
                                            "type": "ArrayExpression",
                                            "elements": []
                                          }
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "i"
                                          },
                                          "init": null
                                        }
                                      ],
                                      "kind": "var"
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "$"
                                            },
                                            "arguments": [
                                              {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                  "type": "BinaryExpression",
                                                  "operator": "+",
                                                  "left": {
                                                    "type": "Literal",
                                                    "value": "img[rel=\""
                                                  },
                                                  "right": {
                                                    "type": "Identifier",
                                                    "name": "group"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": "\"]"
                                                }
                                              }
                                            ]
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "each"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                              {
                                                "type": "Identifier",
                                                "name": "i"
                                              },
                                              {
                                                "type": "Identifier",
                                                "name": "el"
                                              }
                                            ],
                                            "defaults": [],
                                            "body": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "image_urls"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "push"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "Identifier",
                                                          "name": "getFullUrl"
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "Identifier",
                                                              "name": "$"
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "ThisExpression"
                                                              }
                                                            ]
                                                          }
                                                        ]
                                                      }
                                                    ]
                                                  }
                                                }
                                              ]
                                            },
                                            "rest": null,
                                            "generator": false,
                                            "expression": false
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "FunctionDeclaration",
                                      "id": {
                                        "type": "Identifier",
                                        "name": "loaded"
                                      },
                                      "params": [
                                        {
                                          "type": "Identifier",
                                          "name": "current"
                                        }
                                      ],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "cache"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "push"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "current"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    },
                                    {
                                      "type": "ForStatement",
                                      "init": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "i"
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": 0
                                        }
                                      },
                                      "test": {
                                        "type": "BinaryExpression",
                                        "operator": "<",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "i"
                                        },
                                        "right": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "image_urls"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "length"
                                          }
                                        }
                                      },
                                      "update": {
                                        "type": "AssignmentExpression",
                                        "operator": "+=",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "i"
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": 1
                                        }
                                      },
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "current"
                                              },
                                              "right": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "Identifier",
                                                      "name": "jQuery"
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Literal",
                                                        "value": "<img>"
                                                      }
                                                    ]
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "attr"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Literal",
                                                    "value": "src"
                                                  },
                                                  {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "image_urls"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "i"
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          },
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "current"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "load"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "loaded"
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "MemberExpression",
                                                      "computed": true,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "image_urls"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "i"
                                                      }
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                              }
                            }
                          ],
                          "kind": "var"
                        },
                        {
                          "type": "VariableDeclaration",
                          "declarations": [
                            {
                              "type": "VariableDeclarator",
                              "id": {
                                "type": "Identifier",
                                "name": "createElements"
                              },
                              "init": {
                                "type": "FunctionExpression",
                                "id": {
                                  "type": "Identifier",
                                  "name": "createElements"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "$element"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "addClass"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Literal",
                                            "value": "active"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "VariableDeclaration",
                                      "declarations": [
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "cssProp"
                                          },
                                          "init": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "getPrefix"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": "transition"
                                                }
                                              ]
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": "transition"
                                            }
                                          }
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "cssVal"
                                          },
                                          "init": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                  "type": "BinaryExpression",
                                                  "operator": "+",
                                                  "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "BinaryExpression",
                                                      "operator": "+",
                                                      "left": {
                                                        "type": "Literal",
                                                        "value": "opacity "
                                                      },
                                                      "right": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "plugin"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "settings"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "speed"
                                                        }
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": "ms ease, "
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "Identifier",
                                                      "name": "getPrefix"
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Literal",
                                                        "value": "transform"
                                                      }
                                                    ]
                                                  }
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": "transform "
                                                }
                                              },
                                              "right": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "plugin"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "settings"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "speed"
                                                }
                                              }
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": "ms ease"
                                            }
                                          }
                                        }
                                      ],
                                      "kind": "var"
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "MemberExpression",
                                          "computed": true,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "plugin"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "els"
                                            }
                                          },
                                          "property": {
                                            "type": "Literal",
                                            "value": "wrapper"
                                          }
                                        },
                                        "right": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "$"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "document"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "createElement"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "div"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "attr"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": "id"
                                            },
                                            {
                                              "type": "Literal",
                                              "value": "glisse-wrapper"
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "MemberExpression",
                                          "computed": true,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "plugin"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "els"
                                            }
                                          },
                                          "property": {
                                            "type": "Literal",
                                            "value": "overlay"
                                          }
                                        },
                                        "right": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "$"
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "document"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "createElement"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Literal",
                                                          "value": "div"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "attr"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": "id"
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": "glisse-overlay"
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "css"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "cssProp"
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "cssVal"
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "MemberExpression",
                                          "computed": true,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "plugin"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "els"
                                            }
                                          },
                                          "property": {
                                            "type": "Literal",
                                            "value": "spinner"
                                          }
                                        },
                                        "right": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "$"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "document"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "createElement"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "div"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "attr"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": "id"
                                            },
                                            {
                                              "type": "Literal",
                                              "value": "glisse-spinner"
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "MemberExpression",
                                          "computed": true,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "plugin"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "els"
                                            }
                                          },
                                          "property": {
                                            "type": "Literal",
                                            "value": "close"
                                          }
                                        },
                                        "right": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "$"
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "document"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "createElement"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Literal",
                                                          "value": "span"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "attr"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": "id"
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": "glisse-close"
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "css"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "cssProp"
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "cssVal"
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "MemberExpression",
                                          "computed": true,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "plugin"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "els"
                                            }
                                          },
                                          "property": {
                                            "type": "Literal",
                                            "value": "content"
                                          }
                                        },
                                        "right": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "Identifier",
                                                        "name": "$"
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "document"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "createElement"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Literal",
                                                              "value": "div"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "attr"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "id"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "glisse-overlay-content"
                                                    }
                                                  ]
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "css"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "cssProp"
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "cssVal"
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "css"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "getPrefix"
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Literal",
                                                    "value": "transform"
                                                  }
                                                ]
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": "transform"
                                              }
                                            },
                                            {
                                              "type": "Literal",
                                              "value": "scale(0)"
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "MemberExpression",
                                          "computed": true,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "plugin"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "els"
                                            }
                                          },
                                          "property": {
                                            "type": "Literal",
                                            "value": "controls"
                                          }
                                        },
                                        "right": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "$"
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "document"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "createElement"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Literal",
                                                          "value": "div"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "attr"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": "id"
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": "glisse-controls"
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "css"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "cssProp"
                                            },
                                            {
                                              "type": "Identifier",
                                              "name": "cssVal"
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "MemberExpression",
                                          "computed": true,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "plugin"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "els"
                                            }
                                          },
                                          "property": {
                                            "type": "Literal",
                                            "value": "controlNext"
                                          }
                                        },
                                        "right": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "$"
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "document"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "createElement"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Literal",
                                                          "value": "span"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "attr"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": "class"
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": "glisse-next"
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "append"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "Identifier",
                                                        "name": "$"
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "document"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "createElement"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Literal",
                                                              "value": "a"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "html"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "&#62;"
                                                    }
                                                  ]
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "attr"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": "href"
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": "#"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "MemberExpression",
                                          "computed": true,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "plugin"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "els"
                                            }
                                          },
                                          "property": {
                                            "type": "Literal",
                                            "value": "controlLegend"
                                          }
                                        },
                                        "right": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "$"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "document"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "createElement"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "span"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "attr"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": "class"
                                            },
                                            {
                                              "type": "Literal",
                                              "value": "glisse-legend"
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "MemberExpression",
                                          "computed": true,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "plugin"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "els"
                                            }
                                          },
                                          "property": {
                                            "type": "Literal",
                                            "value": "controlPrev"
                                          }
                                        },
                                        "right": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "$"
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "document"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "createElement"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Literal",
                                                          "value": "span"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "attr"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": "class"
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": "glisse-prev"
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "append"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "Identifier",
                                                        "name": "$"
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "document"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "createElement"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Literal",
                                                              "value": "a"
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "html"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "&#60;"
                                                    }
                                                  ]
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "attr"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": "href"
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": "#"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "plugin"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "els"
                                              }
                                            },
                                            "property": {
                                              "type": "Literal",
                                              "value": "overlay"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "append"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "plugin"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "els"
                                              }
                                            },
                                            "property": {
                                              "type": "Literal",
                                              "value": "spinner"
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "plugin"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "els"
                                              }
                                            },
                                            "property": {
                                              "type": "Literal",
                                              "value": "controls"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "append"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "plugin"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "els"
                                              }
                                            },
                                            "property": {
                                              "type": "Literal",
                                              "value": "controlNext"
                                            }
                                          },
                                          {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "plugin"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "els"
                                              }
                                            },
                                            "property": {
                                              "type": "Literal",
                                              "value": "controlLegend"
                                            }
                                          },
                                          {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "plugin"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "els"
                                              }
                                            },
                                            "property": {
                                              "type": "Literal",
                                              "value": "controlPrev"
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "plugin"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "els"
                                              }
                                            },
                                            "property": {
                                              "type": "Literal",
                                              "value": "wrapper"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "append"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "plugin"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "els"
                                              }
                                            },
                                            "property": {
                                              "type": "Literal",
                                              "value": "overlay"
                                            }
                                          },
                                          {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "plugin"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "els"
                                              }
                                            },
                                            "property": {
                                              "type": "Literal",
                                              "value": "close"
                                            }
                                          },
                                          {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "plugin"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "els"
                                              }
                                            },
                                            "property": {
                                              "type": "Literal",
                                              "value": "content"
                                            }
                                          },
                                          {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "plugin"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "els"
                                              }
                                            },
                                            "property": {
                                              "type": "Literal",
                                              "value": "controls"
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "$"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "body"
                                              }
                                            ]
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "append"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "plugin"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "els"
                                              }
                                            },
                                            "property": {
                                              "type": "Literal",
                                              "value": "wrapper"
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "readyElement"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "observe"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Literal",
                                            "value": "glisse-overlay"
                                          },
                                          {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [],
                                            "defaults": [],
                                            "body": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "plugin"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "els"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Literal",
                                                          "value": "overlay"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "css"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Literal",
                                                        "value": "opacity"
                                                      },
                                                      {
                                                        "type": "Literal",
                                                        "value": 1
                                                      }
                                                    ]
                                                  }
                                                }
                                              ]
                                            },
                                            "rest": null,
                                            "generator": false,
                                            "expression": false
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "readyElement"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "observe"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Literal",
                                            "value": "glisse-close"
                                          },
                                          {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [],
                                            "defaults": [],
                                            "body": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "plugin"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "els"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Literal",
                                                          "value": "close"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "css"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Literal",
                                                        "value": "opacity"
                                                      },
                                                      {
                                                        "type": "Literal",
                                                        "value": 1
                                                      }
                                                    ]
                                                  }
                                                }
                                              ]
                                            },
                                            "rest": null,
                                            "generator": false,
                                            "expression": false
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "readyElement"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "observe"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Literal",
                                            "value": "glisse-controls"
                                          },
                                          {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [],
                                            "defaults": [],
                                            "body": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "plugin"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "els"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Literal",
                                                          "value": "controls"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "css"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Literal",
                                                        "value": "opacity"
                                                      },
                                                      {
                                                        "type": "Literal",
                                                        "value": 1
                                                      }
                                                    ]
                                                  }
                                                }
                                              ]
                                            },
                                            "rest": null,
                                            "generator": false,
                                            "expression": false
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "plugin"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "els"
                                              }
                                            },
                                            "property": {
                                              "type": "Literal",
                                              "value": "controls"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "delegate"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Literal",
                                            "value": "a"
                                          },
                                          {
                                            "type": "Literal",
                                            "value": "click"
                                          },
                                          {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [
                                              {
                                                "type": "Identifier",
                                                "name": "e"
                                              }
                                            ],
                                            "defaults": [],
                                            "body": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "e"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "preventDefault"
                                                      }
                                                    },
                                                    "arguments": []
                                                  }
                                                },
                                                {
                                                  "type": "VariableDeclaration",
                                                  "declarations": [
                                                    {
                                                      "type": "VariableDeclarator",
                                                      "id": {
                                                        "type": "Identifier",
                                                        "name": "changeTo"
                                                      },
                                                      "init": {
                                                        "type": "ConditionalExpression",
                                                        "test": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "$"
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "ThisExpression"
                                                                    }
                                                                  ]
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "parent"
                                                                }
                                                              },
                                                              "arguments": []
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "hasClass"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Literal",
                                                              "value": "glisse-next"
                                                            }
                                                          ]
                                                        },
                                                        "consequent": {
                                                          "type": "Literal",
                                                          "value": "next"
                                                        },
                                                        "alternate": {
                                                          "type": "Literal",
                                                          "value": "prev"
                                                        }
                                                      }
                                                    }
                                                  ],
                                                  "kind": "var"
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "Identifier",
                                                      "name": "changePicture"
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Identifier",
                                                        "name": "changeTo"
                                                      }
                                                    ]
                                                  }
                                                }
                                              ]
                                            },
                                            "rest": null,
                                            "generator": false,
                                            "expression": false
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "plugin"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "els"
                                              }
                                            },
                                            "property": {
                                              "type": "Literal",
                                              "value": "overlay"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "on"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Literal",
                                            "value": "click"
                                          },
                                          {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [],
                                            "defaults": [],
                                            "body": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "Identifier",
                                                      "name": "closeLightbox"
                                                    },
                                                    "arguments": []
                                                  }
                                                }
                                              ]
                                            },
                                            "rest": null,
                                            "generator": false,
                                            "expression": false
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "plugin"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "els"
                                              }
                                            },
                                            "property": {
                                              "type": "Literal",
                                              "value": "content"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "on"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Literal",
                                            "value": "click"
                                          },
                                          {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [],
                                            "defaults": [],
                                            "body": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "Identifier",
                                                      "name": "closeLightbox"
                                                    },
                                                    "arguments": []
                                                  }
                                                }
                                              ]
                                            },
                                            "rest": null,
                                            "generator": false,
                                            "expression": false
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "plugin"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "els"
                                              }
                                            },
                                            "property": {
                                              "type": "Literal",
                                              "value": "close"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "on"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Literal",
                                            "value": "click"
                                          },
                                          {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [],
                                            "defaults": [],
                                            "body": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "Identifier",
                                                      "name": "closeLightbox"
                                                    },
                                                    "arguments": []
                                                  }
                                                }
                                              ]
                                            },
                                            "rest": null,
                                            "generator": false,
                                            "expression": false
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "IfStatement",
                                      "test": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "plugin"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "settings"
                                          }
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "fullscreen"
                                        }
                                      },
                                      "consequent": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "docElm"
                                                },
                                                "init": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "document"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "documentElement"
                                                  }
                                                }
                                              }
                                            ],
                                            "kind": "var"
                                          },
                                          {
                                            "type": "IfStatement",
                                            "test": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "docElm"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "requestFullscreen"
                                              }
                                            },
                                            "consequent": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "docElm"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "requestFullscreen"
                                                      }
                                                    },
                                                    "arguments": []
                                                  }
                                                }
                                              ]
                                            },
                                            "alternate": {
                                              "type": "IfStatement",
                                              "test": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "docElm"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "mozRequestFullScreen"
                                                }
                                              },
                                              "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "docElm"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "mozRequestFullScreen"
                                                        }
                                                      },
                                                      "arguments": []
                                                    }
                                                  }
                                                ]
                                              },
                                              "alternate": {
                                                "type": "IfStatement",
                                                "test": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "docElm"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "webkitRequestFullScreen"
                                                  }
                                                },
                                                "consequent": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "docElm"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "webkitRequestFullScreen"
                                                          }
                                                        },
                                                        "arguments": []
                                                      }
                                                    }
                                                  ]
                                                },
                                                "alternate": null
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      "alternate": null
                                    }
                                  ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                              }
                            }
                          ],
                          "kind": "var"
                        },
                        {
                          "type": "VariableDeclaration",
                          "declarations": [
                            {
                              "type": "VariableDeclarator",
                              "id": {
                                "type": "Identifier",
                                "name": "closeLightbox"
                              },
                              "init": {
                                "type": "FunctionExpression",
                                "id": {
                                  "type": "Identifier",
                                  "name": "closeLightbox"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "plugin"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "els"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Literal",
                                                  "value": "content"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "css"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "ObjectExpression",
                                                "properties": [
                                                  {
                                                    "type": "Property",
                                                    "key": {
                                                      "type": "Identifier",
                                                      "name": "opacity"
                                                    },
                                                    "value": {
                                                      "type": "Literal",
                                                      "value": 0
                                                    },
                                                    "kind": "init"
                                                  }
                                                ]
                                              }
                                            ]
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "css"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "getPrefix"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": "transform"
                                                }
                                              ]
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": "transform"
                                            }
                                          },
                                          {
                                            "type": "Literal",
                                            "value": "scale(1.2)"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "plugin"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "els"
                                              }
                                            },
                                            "property": {
                                              "type": "Literal",
                                              "value": "overlay"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "css"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "opacity"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": 0
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "plugin"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "els"
                                              }
                                            },
                                            "property": {
                                              "type": "Literal",
                                              "value": "close"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "css"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "opacity"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": 0
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "plugin"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "els"
                                              }
                                            },
                                            "property": {
                                              "type": "Literal",
                                              "value": "controls"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "css"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "opacity"
                                                },
                                                "value": {
                                                  "type": "Literal",
                                                  "value": 0
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "Identifier",
                                          "name": "setTimeout"
                                        },
                                        "arguments": [
                                          {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [],
                                            "defaults": [],
                                            "body": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "plugin"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "els"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Literal",
                                                          "value": "content"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "remove"
                                                      }
                                                    },
                                                    "arguments": []
                                                  }
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "plugin"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "els"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Literal",
                                                          "value": "overlay"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "remove"
                                                      }
                                                    },
                                                    "arguments": []
                                                  }
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "plugin"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "els"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Literal",
                                                          "value": "close"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "remove"
                                                      }
                                                    },
                                                    "arguments": []
                                                  }
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "plugin"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "els"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Literal",
                                                          "value": "controls"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "remove"
                                                      }
                                                    },
                                                    "arguments": []
                                                  }
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "plugin"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "els"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Literal",
                                                          "value": "wrapper"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "remove"
                                                      }
                                                    },
                                                    "arguments": []
                                                  }
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "Identifier",
                                                          "name": "$"
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Literal",
                                                            "value": "#glisse-transition-css"
                                                          }
                                                        ]
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "remove"
                                                      }
                                                    },
                                                    "arguments": []
                                                  }
                                                }
                                              ]
                                            },
                                            "rest": null,
                                            "generator": false,
                                            "expression": false
                                          },
                                          {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "plugin"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "settings"
                                              }
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "speed"
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "$element"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "removeClass"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Literal",
                                            "value": "active"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "document"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "ontouchmove"
                                          }
                                        },
                                        "right": {
                                          "type": "FunctionExpression",
                                          "id": null,
                                          "params": [
                                            {
                                              "type": "Identifier",
                                              "name": "e"
                                            }
                                          ],
                                          "defaults": [],
                                          "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ReturnStatement",
                                                "argument": {
                                                  "type": "Literal",
                                                  "value": true
                                                }
                                              }
                                            ]
                                          },
                                          "rest": null,
                                          "generator": false,
                                          "expression": false
                                        }
                                      }
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "document"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "ontouchstart"
                                          }
                                        },
                                        "right": {
                                          "type": "FunctionExpression",
                                          "id": null,
                                          "params": [
                                            {
                                              "type": "Identifier",
                                              "name": "e"
                                            }
                                          ],
                                          "defaults": [],
                                          "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ReturnStatement",
                                                "argument": {
                                                  "type": "Literal",
                                                  "value": true
                                                }
                                              }
                                            ]
                                          },
                                          "rest": null,
                                          "generator": false,
                                          "expression": false
                                        }
                                      }
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "document"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "ontouchend"
                                          }
                                        },
                                        "right": {
                                          "type": "FunctionExpression",
                                          "id": null,
                                          "params": [
                                            {
                                              "type": "Identifier",
                                              "name": "e"
                                            }
                                          ],
                                          "defaults": [],
                                          "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ReturnStatement",
                                                "argument": {
                                                  "type": "Literal",
                                                  "value": true
                                                }
                                              }
                                            ]
                                          },
                                          "rest": null,
                                          "generator": false,
                                          "expression": false
                                        }
                                      }
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "$"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "document"
                                              }
                                            ]
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "unbind"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Literal",
                                            "value": "keydown"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "IfStatement",
                                      "test": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "plugin"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "settings"
                                          }
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "fullscreen"
                                        }
                                      },
                                      "consequent": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "IfStatement",
                                            "test": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "document"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "exitFullscreen"
                                              }
                                            },
                                            "consequent": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "document"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "exitFullscreen"
                                                      }
                                                    },
                                                    "arguments": []
                                                  }
                                                }
                                              ]
                                            },
                                            "alternate": {
                                              "type": "IfStatement",
                                              "test": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "document"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "mozCancelFullScreen"
                                                }
                                              },
                                              "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "document"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "mozCancelFullScreen"
                                                        }
                                                      },
                                                      "arguments": []
                                                    }
                                                  }
                                                ]
                                              },
                                              "alternate": {
                                                "type": "IfStatement",
                                                "test": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "document"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "webkitCancelFullScreen"
                                                  }
                                                },
                                                "consequent": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "document"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "webkitCancelFullScreen"
                                                          }
                                                        },
                                                        "arguments": []
                                                      }
                                                    }
                                                  ]
                                                },
                                                "alternate": null
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      "alternate": null
                                    }
                                  ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                              }
                            }
                          ],
                          "kind": "var"
                        },
                        {
                          "type": "VariableDeclaration",
                          "declarations": [
                            {
                              "type": "VariableDeclarator",
                              "id": {
                                "type": "Identifier",
                                "name": "addImage"
                              },
                              "init": {
                                "type": "FunctionExpression",
                                "id": {
                                  "type": "Identifier",
                                  "name": "addImage"
                                },
                                "params": [
                                  {
                                    "type": "Identifier",
                                    "name": "pic"
                                  }
                                ],
                                "defaults": [],
                                "body": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "Identifier",
                                          "name": "spinner"
                                        },
                                        "arguments": [
                                          {
                                            "type": "Literal",
                                            "value": true
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "VariableDeclaration",
                                      "declarations": [
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "img"
                                          },
                                          "init": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "$"
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Literal",
                                                    "value": "<img/>"
                                                  },
                                                  {
                                                    "type": "ObjectExpression",
                                                    "properties": [
                                                      {
                                                        "type": "Property",
                                                        "key": {
                                                          "type": "Identifier",
                                                          "name": "src"
                                                        },
                                                        "value": {
                                                          "type": "Identifier",
                                                          "name": "pic"
                                                        },
                                                        "kind": "init"
                                                      }
                                                    ]
                                                  }
                                                ]
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "appendTo"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "plugin"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "els"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Literal",
                                                  "value": "content"
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      ],
                                      "kind": "var"
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "plugin"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "els"
                                              }
                                            },
                                            "property": {
                                              "type": "Literal",
                                              "value": "content"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "css"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "ObjectExpression",
                                            "properties": [
                                              {
                                                "type": "Property",
                                                "key": {
                                                  "type": "Identifier",
                                                  "name": "backgroundImage"
                                                },
                                                "value": {
                                                  "type": "BinaryExpression",
                                                  "operator": "+",
                                                  "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "Literal",
                                                      "value": "url(\""
                                                    },
                                                    "right": {
                                                      "type": "Identifier",
                                                      "name": "pic"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": "\")"
                                                  }
                                                },
                                                "kind": "init"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "img"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "load"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "FunctionExpression",
                                            "id": null,
                                            "params": [],
                                            "defaults": [],
                                            "body": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "img"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "remove"
                                                      }
                                                    },
                                                    "arguments": []
                                                  }
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "Identifier",
                                                      "name": "spinner"
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Literal",
                                                        "value": false
                                                      }
                                                    ]
                                                  }
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "MemberExpression",
                                                            "computed": true,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "plugin"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "els"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Literal",
                                                              "value": "content"
                                                            }
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "css"
                                                          }
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "ObjectExpression",
                                                            "properties": [
                                                              {
                                                                "type": "Property",
                                                                "key": {
                                                                  "type": "Identifier",
                                                                  "name": "visibility"
                                                                },
                                                                "value": {
                                                                  "type": "Literal",
                                                                  "value": "visible"
                                                                },
                                                                "kind": "init"
                                                              },
                                                              {
                                                                "type": "Property",
                                                                "key": {
                                                                  "type": "Identifier",
                                                                  "name": "opacity"
                                                                },
                                                                "value": {
                                                                  "type": "Literal",
                                                                  "value": 1
                                                                },
                                                                "kind": "init"
                                                              }
                                                            ]
                                                          }
                                                        ]
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "css"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "Identifier",
                                                            "name": "getPrefix"
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Literal",
                                                              "value": "transform"
                                                            }
                                                          ]
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": "transform"
                                                        }
                                                      },
                                                      {
                                                        "type": "Literal",
                                                        "value": "scale(1)"
                                                      }
                                                    ]
                                                  }
                                                }
                                              ]
                                            },
                                            "rest": null,
                                            "generator": false,
                                            "expression": false
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                              }
                            }
                          ],
                          "kind": "var"
                        },
                        {
                          "type": "VariableDeclaration",
                          "declarations": [
                            {
                              "type": "VariableDeclarator",
                              "id": {
                                "type": "Identifier",
                                "name": "changePicture"
                              },
                              "init": {
                                "type": "FunctionExpression",
                                "id": {
                                  "type": "Identifier",
                                  "name": "changePicture"
                                },
                                "params": [
                                  {
                                    "type": "Identifier",
                                    "name": "direction"
                                  }
                                ],
                                "defaults": [],
                                "body": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "VariableDeclaration",
                                      "declarations": [
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "$currentEl"
                                          },
                                          "init": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "$"
                                            },
                                            "arguments": [
                                              {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                  "type": "BinaryExpression",
                                                  "operator": "+",
                                                  "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "BinaryExpression",
                                                      "operator": "+",
                                                      "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "Literal",
                                                            "value": "img["
                                                          },
                                                          "right": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "plugin"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "settings"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "dataName"
                                                            }
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": "=\""
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "pictureUrl"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": "\"][rel="
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "Identifier",
                                                    "name": "group"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": "]"
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "currentId"
                                          },
                                          "init": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "$"
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "BinaryExpression",
                                                      "operator": "+",
                                                      "left": {
                                                        "type": "Literal",
                                                        "value": "img[rel="
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "group"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": "]"
                                                    }
                                                  }
                                                ]
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "index"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Identifier",
                                                "name": "$currentEl"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "totGroup"
                                          },
                                          "init": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "$"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "BinaryExpression",
                                                  "operator": "+",
                                                  "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "Literal",
                                                      "value": "img[rel="
                                                    },
                                                    "right": {
                                                      "type": "Identifier",
                                                      "name": "group"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": "]"
                                                  }
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "length"
                                            }
                                          }
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "change"
                                          },
                                          "init": {
                                            "type": "Literal",
                                            "value": true
                                          }
                                        }
                                      ],
                                      "kind": "var"
                                    },
                                    {
                                      "type": "IfStatement",
                                      "test": {
                                        "type": "LogicalExpression",
                                        "operator": "||",
                                        "left": {
                                          "type": "LogicalExpression",
                                          "operator": "&&",
                                          "left": {
                                            "type": "BinaryExpression",
                                            "operator": "===",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "currentId"
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": 0
                                            }
                                          },
                                          "right": {
                                            "type": "BinaryExpression",
                                            "operator": "===",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "direction"
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": "prev"
                                            }
                                          }
                                        },
                                        "right": {
                                          "type": "LogicalExpression",
                                          "operator": "&&",
                                          "left": {
                                            "type": "BinaryExpression",
                                            "operator": "===",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "currentId"
                                            },
                                            "right": {
                                              "type": "BinaryExpression",
                                              "operator": "-",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "totGroup"
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": 1
                                              }
                                            }
                                          },
                                          "right": {
                                            "type": "BinaryExpression",
                                            "operator": "===",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "direction"
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": "next"
                                            }
                                          }
                                        }
                                      },
                                      "consequent": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "change"
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": false
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      "alternate": null
                                    },
                                    {
                                      "type": "IfStatement",
                                      "test": {
                                        "type": "LogicalExpression",
                                        "operator": "&&",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "change"
                                        },
                                        "right": {
                                          "type": "BinaryExpression",
                                          "operator": "===",
                                          "left": {
                                            "type": "Identifier",
                                            "name": "isChange"
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": false
                                          }
                                        }
                                      },
                                      "consequent": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "isChange"
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": true
                                              }
                                            }
                                          },
                                          {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "$next"
                                                },
                                                "init": {
                                                  "type": "ConditionalExpression",
                                                  "test": {
                                                    "type": "BinaryExpression",
                                                    "operator": "===",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "direction"
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": "next"
                                                    }
                                                  },
                                                  "consequent": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "Identifier",
                                                          "name": "$"
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "BinaryExpression",
                                                              "operator": "+",
                                                              "left": {
                                                                "type": "Literal",
                                                                "value": "img[rel="
                                                              },
                                                              "right": {
                                                                "type": "Identifier",
                                                                "name": "group"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": "]"
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "eq"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "currentId"
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": 1
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "alternate": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "Identifier",
                                                          "name": "$"
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "BinaryExpression",
                                                              "operator": "+",
                                                              "left": {
                                                                "type": "Literal",
                                                                "value": "img[rel="
                                                              },
                                                              "right": {
                                                                "type": "Identifier",
                                                                "name": "group"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": "]"
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "eq"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "BinaryExpression",
                                                        "operator": "-",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "currentId"
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": 1
                                                        }
                                                      }
                                                    ]
                                                  }
                                                }
                                              }
                                            ],
                                            "kind": "var"
                                          },
                                          {
                                            "type": "IfStatement",
                                            "test": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "plugin"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "settings"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "mobile"
                                              }
                                            },
                                            "consequent": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "IfStatement",
                                                  "test": {
                                                    "type": "BinaryExpression",
                                                    "operator": "!==",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "direction"
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": "next"
                                                    }
                                                  },
                                                  "consequent": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": true,
                                                              "object": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "plugin"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "els"
                                                                }
                                                              },
                                                              "property": {
                                                                "type": "Literal",
                                                                "value": "content"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "css"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "BinaryExpression",
                                                              "operator": "+",
                                                              "left": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "Identifier",
                                                                  "name": "getPrefix"
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Literal",
                                                                    "value": "transform"
                                                                  }
                                                                ]
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": "transform"
                                                              }
                                                            },
                                                            {
                                                              "type": "Literal",
                                                              "value": "translateX(2000px)"
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "alternate": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": true,
                                                              "object": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "plugin"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "els"
                                                                }
                                                              },
                                                              "property": {
                                                                "type": "Literal",
                                                                "value": "content"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "css"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "BinaryExpression",
                                                              "operator": "+",
                                                              "left": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "Identifier",
                                                                  "name": "getPrefix"
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Literal",
                                                                    "value": "transform"
                                                                  }
                                                                ]
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": "transform"
                                                              }
                                                            },
                                                            {
                                                              "type": "Literal",
                                                              "value": "translateX(-2000px)"
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ]
                                                  }
                                                }
                                              ]
                                            },
                                            "alternate": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "plugin"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "els"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Literal",
                                                          "value": "content"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "addClass"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                          "type": "Literal",
                                                          "value": "glisse-transitionOut-"
                                                        },
                                                        "right": {
                                                          "type": "Identifier",
                                                          "name": "direction"
                                                        }
                                                      }
                                                    ]
                                                  }
                                                },
                                                {
                                                  "type": "VariableDeclaration",
                                                  "declarations": [
                                                    {
                                                      "type": "VariableDeclarator",
                                                      "id": {
                                                        "type": "Identifier",
                                                        "name": "cssProp"
                                                      },
                                                      "init": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "Identifier",
                                                            "name": "getPrefix"
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Literal",
                                                              "value": "transition"
                                                            }
                                                          ]
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": "transition"
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "VariableDeclarator",
                                                      "id": {
                                                        "type": "Identifier",
                                                        "name": "cssVal"
                                                      },
                                                      "init": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "BinaryExpression",
                                                              "operator": "+",
                                                              "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                  "type": "BinaryExpression",
                                                                  "operator": "+",
                                                                  "left": {
                                                                    "type": "Literal",
                                                                    "value": "opacity "
                                                                  },
                                                                  "right": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "plugin"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "settings"
                                                                      }
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "speed"
                                                                    }
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "Literal",
                                                                  "value": "ms ease, "
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "Identifier",
                                                                  "name": "getPrefix"
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Literal",
                                                                    "value": "transform"
                                                                  }
                                                                ]
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": "transform "
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "plugin"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "settings"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "speed"
                                                            }
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": "ms ease"
                                                        }
                                                      }
                                                    }
                                                  ],
                                                  "kind": "var"
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "plugin"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "els"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Literal",
                                                          "value": "content"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "css"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Identifier",
                                                        "name": "cssProp"
                                                      },
                                                      {
                                                        "type": "Literal",
                                                        "value": ""
                                                      }
                                                    ]
                                                  }
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "Identifier",
                                                "name": "pictureUrl"
                                              },
                                              "right": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "getFullUrl"
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "$next"
                                                  }
                                                ]
                                              }
                                            }
                                          },
                                          {
                                            "type": "IfStatement",
                                            "test": {
                                              "type": "BinaryExpression",
                                              "operator": "===",
                                              "left": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "$"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "inArray"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "pictureUrl"
                                                  },
                                                  {
                                                    "type": "Identifier",
                                                    "name": "cache"
                                                  }
                                                ]
                                              },
                                              "right": {
                                                "type": "UnaryExpression",
                                                "operator": "-",
                                                "argument": {
                                                  "type": "Literal",
                                                  "value": 1
                                                },
                                                "prefix": true
                                              }
                                            },
                                            "consequent": {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "spinner"
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Literal",
                                                    "value": true
                                                  }
                                                ]
                                              }
                                            },
                                            "alternate": null
                                          },
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "$currentEl"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "removeClass"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": "active"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "$next"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "addClass"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": "active"
                                                }
                                              ]
                                            }
                                          },
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "setChangeStatus"
                                              },
                                              "arguments": []
                                            }
                                          },
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "setTitle"
                                              },
                                              "arguments": []
                                            }
                                          },
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "setTimeout"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "IfStatement",
                                                        "test": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "plugin"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "settings"
                                                            }
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "mobile"
                                                          }
                                                        },
                                                        "consequent": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": true,
                                                                        "object": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "plugin"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "els"
                                                                          }
                                                                        },
                                                                        "property": {
                                                                          "type": "Literal",
                                                                          "value": "content"
                                                                        }
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "css"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "BinaryExpression",
                                                                        "operator": "+",
                                                                        "left": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "Identifier",
                                                                            "name": "getPrefix"
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "Literal",
                                                                              "value": "transform"
                                                                            }
                                                                          ]
                                                                        },
                                                                        "right": {
                                                                          "type": "Literal",
                                                                          "value": "transform"
                                                                        }
                                                                      },
                                                                      {
                                                                        "type": "Literal",
                                                                        "value": "translateX(0px)"
                                                                      }
                                                                    ]
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "css"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Literal",
                                                                    "value": "display"
                                                                  },
                                                                  {
                                                                    "type": "Literal",
                                                                    "value": "none"
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "alternate": null
                                                      },
                                                      {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                          {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                              "type": "Identifier",
                                                              "name": "img"
                                                            },
                                                            "init": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "Identifier",
                                                                    "name": "$"
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "Literal",
                                                                      "value": "<img/>"
                                                                    },
                                                                    {
                                                                      "type": "ObjectExpression",
                                                                      "properties": [
                                                                        {
                                                                          "type": "Property",
                                                                          "key": {
                                                                            "type": "Identifier",
                                                                            "name": "src"
                                                                          },
                                                                          "value": {
                                                                            "type": "Identifier",
                                                                            "name": "pictureUrl"
                                                                          },
                                                                          "kind": "init"
                                                                        }
                                                                      ]
                                                                    }
                                                                  ]
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "appendTo"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "MemberExpression",
                                                                  "computed": true,
                                                                  "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "plugin"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "els"
                                                                    }
                                                                  },
                                                                  "property": {
                                                                    "type": "Literal",
                                                                    "value": "content"
                                                                  }
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ],
                                                        "kind": "var"
                                                      },
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": true,
                                                              "object": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "plugin"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "els"
                                                                }
                                                              },
                                                              "property": {
                                                                "type": "Literal",
                                                                "value": "content"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "css"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "ObjectExpression",
                                                              "properties": [
                                                                {
                                                                  "type": "Property",
                                                                  "key": {
                                                                    "type": "Identifier",
                                                                    "name": "backgroundImage"
                                                                  },
                                                                  "value": {
                                                                    "type": "BinaryExpression",
                                                                    "operator": "+",
                                                                    "left": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "+",
                                                                      "left": {
                                                                        "type": "Literal",
                                                                        "value": "url(\""
                                                                      },
                                                                      "right": {
                                                                        "type": "Identifier",
                                                                        "name": "pictureUrl"
                                                                      }
                                                                    },
                                                                    "right": {
                                                                      "type": "Literal",
                                                                      "value": "\")"
                                                                    }
                                                                  },
                                                                  "kind": "init"
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      },
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "img"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "load"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "FunctionExpression",
                                                              "id": null,
                                                              "params": [],
                                                              "defaults": [],
                                                              "body": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "img"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "remove"
                                                                        }
                                                                      },
                                                                      "arguments": []
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "===",
                                                                      "left": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "$"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "inArray"
                                                                          }
                                                                        },
                                                                        "arguments": [
                                                                          {
                                                                            "type": "Identifier",
                                                                            "name": "pictureUrl"
                                                                          },
                                                                          {
                                                                            "type": "Identifier",
                                                                            "name": "cache"
                                                                          }
                                                                        ]
                                                                      },
                                                                      "right": {
                                                                        "type": "UnaryExpression",
                                                                        "operator": "-",
                                                                        "argument": {
                                                                          "type": "Literal",
                                                                          "value": 1
                                                                        },
                                                                        "prefix": true
                                                                      }
                                                                    },
                                                                    "consequent": {
                                                                      "type": "ExpressionStatement",
                                                                      "expression": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "Identifier",
                                                                          "name": "spinner"
                                                                        },
                                                                        "arguments": [
                                                                          {
                                                                            "type": "Literal",
                                                                            "value": false
                                                                          }
                                                                        ]
                                                                      }
                                                                    },
                                                                    "alternate": null
                                                                  },
                                                                  {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "Identifier",
                                                                          "name": "plugin"
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "settings"
                                                                        }
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "mobile"
                                                                      }
                                                                    },
                                                                    "consequent": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                              "type": "MemberExpression",
                                                                              "computed": false,
                                                                              "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": true,
                                                                                "object": {
                                                                                  "type": "MemberExpression",
                                                                                  "computed": false,
                                                                                  "object": {
                                                                                    "type": "Identifier",
                                                                                    "name": "plugin"
                                                                                  },
                                                                                  "property": {
                                                                                    "type": "Identifier",
                                                                                    "name": "els"
                                                                                  }
                                                                                },
                                                                                "property": {
                                                                                  "type": "Literal",
                                                                                  "value": "content"
                                                                                }
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "css"
                                                                              }
                                                                            },
                                                                            "arguments": [
                                                                              {
                                                                                "type": "Literal",
                                                                                "value": "display"
                                                                              },
                                                                              {
                                                                                "type": "Literal",
                                                                                "value": "block"
                                                                              }
                                                                            ]
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "alternate": null
                                                                  },
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "MemberExpression",
                                                                        "computed": false,
                                                                        "object": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "MemberExpression",
                                                                              "computed": true,
                                                                              "object": {
                                                                                "type": "MemberExpression",
                                                                                "computed": false,
                                                                                "object": {
                                                                                  "type": "Identifier",
                                                                                  "name": "plugin"
                                                                                },
                                                                                "property": {
                                                                                  "type": "Identifier",
                                                                                  "name": "els"
                                                                                }
                                                                              },
                                                                              "property": {
                                                                                "type": "Literal",
                                                                                "value": "content"
                                                                              }
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "removeClass"
                                                                            }
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "BinaryExpression",
                                                                              "operator": "+",
                                                                              "left": {
                                                                                "type": "Literal",
                                                                                "value": "glisse-transitionOut-"
                                                                              },
                                                                              "right": {
                                                                                "type": "Identifier",
                                                                                "name": "direction"
                                                                              }
                                                                            }
                                                                          ]
                                                                        },
                                                                        "property": {
                                                                          "type": "Identifier",
                                                                          "name": "addClass"
                                                                        }
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "BinaryExpression",
                                                                          "operator": "+",
                                                                          "left": {
                                                                            "type": "Literal",
                                                                            "value": "glisse-transitionIn-"
                                                                          },
                                                                          "right": {
                                                                            "type": "Identifier",
                                                                            "name": "direction"
                                                                          }
                                                                        }
                                                                      ]
                                                                    }
                                                                  },
                                                                  {
                                                                    "type": "ExpressionStatement",
                                                                    "expression": {
                                                                      "type": "CallExpression",
                                                                      "callee": {
                                                                        "type": "Identifier",
                                                                        "name": "setTimeout"
                                                                      },
                                                                      "arguments": [
                                                                        {
                                                                          "type": "FunctionExpression",
                                                                          "id": null,
                                                                          "params": [],
                                                                          "defaults": [],
                                                                          "body": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "CallExpression",
                                                                                      "callee": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": false,
                                                                                        "object": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": true,
                                                                                          "object": {
                                                                                            "type": "MemberExpression",
                                                                                            "computed": false,
                                                                                            "object": {
                                                                                              "type": "Identifier",
                                                                                              "name": "plugin"
                                                                                            },
                                                                                            "property": {
                                                                                              "type": "Identifier",
                                                                                              "name": "els"
                                                                                            }
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Literal",
                                                                                            "value": "content"
                                                                                          }
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "removeClass"
                                                                                        }
                                                                                      },
                                                                                      "arguments": [
                                                                                        {
                                                                                          "type": "BinaryExpression",
                                                                                          "operator": "+",
                                                                                          "left": {
                                                                                            "type": "Literal",
                                                                                            "value": "glisse-transitionIn-"
                                                                                          },
                                                                                          "right": {
                                                                                            "type": "Identifier",
                                                                                            "name": "direction"
                                                                                          }
                                                                                        }
                                                                                      ]
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "css"
                                                                                    }
                                                                                  },
                                                                                  "arguments": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "name": "cssProp"
                                                                                    },
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "name": "cssVal"
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              },
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "AssignmentExpression",
                                                                                  "operator": "=",
                                                                                  "left": {
                                                                                    "type": "Identifier",
                                                                                    "name": "isChange"
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "Literal",
                                                                                    "value": false
                                                                                  }
                                                                                }
                                                                              }
                                                                            ]
                                                                          },
                                                                          "rest": null,
                                                                          "generator": false,
                                                                          "expression": false
                                                                        },
                                                                        {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "Identifier",
                                                                              "name": "plugin"
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "settings"
                                                                            }
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "changeSpeed"
                                                                          }
                                                                        }
                                                                      ]
                                                                    }
                                                                  }
                                                                ]
                                                              },
                                                              "rest": null,
                                                              "generator": false,
                                                              "expression": false
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                },
                                                {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "plugin"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "settings"
                                                    }
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "changeSpeed"
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      },
                                      "alternate": {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "LogicalExpression",
                                          "operator": "&&",
                                          "left": {
                                            "type": "BinaryExpression",
                                            "operator": "===",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "change"
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": false
                                            }
                                          },
                                          "right": {
                                            "type": "BinaryExpression",
                                            "operator": "===",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "isChange"
                                            },
                                            "right": {
                                              "type": "Literal",
                                              "value": false
                                            }
                                          }
                                        },
                                        "consequent": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "IfStatement",
                                              "test": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "plugin"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "settings"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "mobile"
                                                }
                                              },
                                              "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "plugin"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "els"
                                                            }
                                                          },
                                                          "property": {
                                                            "type": "Literal",
                                                            "value": "content"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "css"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "Identifier",
                                                              "name": "getPrefix"
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Literal",
                                                                "value": "transform"
                                                              }
                                                            ]
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform"
                                                          }
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": "translateX(0px)"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "alternate": null
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "MemberExpression",
                                                    "computed": true,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "plugin"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "els"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Literal",
                                                      "value": "content"
                                                    }
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "addClass"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Literal",
                                                    "value": "shake"
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "Identifier",
                                                  "name": "setTimeout"
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "FunctionExpression",
                                                    "id": null,
                                                    "params": [],
                                                    "defaults": [],
                                                    "body": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "MemberExpression",
                                                                "computed": true,
                                                                "object": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "plugin"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "els"
                                                                  }
                                                                },
                                                                "property": {
                                                                  "type": "Literal",
                                                                  "value": "content"
                                                                }
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "removeClass"
                                                              }
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Literal",
                                                                "value": "shake"
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "rest": null,
                                                    "generator": false,
                                                    "expression": false
                                                  },
                                                  {
                                                    "type": "Literal",
                                                    "value": 600
                                                  }
                                                ]
                                              }
                                            }
                                          ]
                                        },
                                        "alternate": null
                                      }
                                    }
                                  ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                              }
                            }
                          ],
                          "kind": "var"
                        },
                        {
                          "type": "VariableDeclaration",
                          "declarations": [
                            {
                              "type": "VariableDeclarator",
                              "id": {
                                "type": "Identifier",
                                "name": "setChangeStyle"
                              },
                              "init": {
                                "type": "FunctionExpression",
                                "id": {
                                  "type": "Identifier",
                                  "name": "setChangeStyle"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "VariableDeclaration",
                                      "declarations": [
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "prefix"
                                          },
                                          "init": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "getPrefix"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "transform"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "prefixAnimation"
                                          },
                                          "init": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "getPrefix"
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "animation"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "effect"
                                          },
                                          "init": {
                                            "type": "ArrayExpression",
                                            "elements": []
                                          }
                                        }
                                      ],
                                      "kind": "var"
                                    },
                                    {
                                      "type": "IfStatement",
                                      "test": {
                                        "type": "UnaryExpression",
                                        "operator": "!",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "isValidEffect"
                                          },
                                          "arguments": [
                                            {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "plugin"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "settings"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "effect"
                                              }
                                            }
                                          ]
                                        },
                                        "prefix": true
                                      },
                                      "consequent": {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "AssignmentExpression",
                                          "operator": "=",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "plugin"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "settings"
                                              }
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "effect"
                                            }
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": "bounce"
                                          }
                                        }
                                      },
                                      "alternate": null
                                    },
                                    {
                                      "type": "SwitchStatement",
                                      "discriminant": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "plugin"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "settings"
                                          }
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "effect"
                                        }
                                      },
                                      "cases": [
                                        {
                                          "type": "SwitchCase",
                                          "test": {
                                            "type": "Literal",
                                            "value": "bounce"
                                          },
                                          "consequent": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "effect"
                                                },
                                                "right": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ArrayExpression",
                                                      "elements": [
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "@"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefixAnimation"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "keyframes outLeft {"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "0% { "
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: translateX(0);}"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "20% { opacity: 1;"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: translateX(20px);}"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "100% { opacity: 0;"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: translateX(-2000px);}"
                                                          }
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": "}"
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "@"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefixAnimation"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "keyframes inLeft {"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "0% {opacity: 0;"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: translateX(-2000px);}"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "60% {opacity: 1;"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: translateX(30px);}"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "80% {"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: translateX(-10px);}"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "100% {"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: translateX(0);}"
                                                          }
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": "}"
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "@"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefixAnimation"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "keyframes outRight {"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "0% {"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: translateX(0);}"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "20% {opacity: 1;"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: translateX(-20px);}"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "100% {opacity: 0;"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: translateX(2000px);}"
                                                          }
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": "}"
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "@"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefixAnimation"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "keyframes inRight {"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "0% {opacity: 0;"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: translateX(2000px);}"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "60% {opacity: 1;"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: translateX(-30px);}"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "80% {"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: translateX(10px);}"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "100% {"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: translateX(0);}"
                                                          }
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": "}"
                                                        }
                                                      ]
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "join"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": ""
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            {
                                              "type": "BreakStatement",
                                              "label": null
                                            }
                                          ]
                                        },
                                        {
                                          "type": "SwitchCase",
                                          "test": {
                                            "type": "Literal",
                                            "value": "fadeBig"
                                          },
                                          "consequent": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "effect"
                                                },
                                                "right": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ArrayExpression",
                                                      "elements": [
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "@"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefixAnimation"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "keyframes outLeft {"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "0% { opacity: 1;"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: translateX(0);}"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "100% {opacity: 0;"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: translateX(-2000px);}"
                                                          }
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": "}"
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "@"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefixAnimation"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "keyframes inLeft {"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "0% { opacity: 0;"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: translateX(-2000px);}"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "100% {opacity: 1;"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: translateX(0);}"
                                                          }
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": "}"
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "@"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefixAnimation"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "keyframes outRight {"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "0% { opacity: 1;"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: translateX(0);}"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "100% {opacity: 0;"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: translateX(2000px);}"
                                                          }
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": "}"
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "@"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefixAnimation"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "keyframes inRight {"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "0% { opacity: 0;"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: translateX(2000px);}"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "100% {opacity: 1;"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: translateX(0);}"
                                                          }
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": "}"
                                                        }
                                                      ]
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "join"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": ""
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            {
                                              "type": "BreakStatement",
                                              "label": null
                                            }
                                          ]
                                        },
                                        {
                                          "type": "SwitchCase",
                                          "test": {
                                            "type": "Literal",
                                            "value": "fade"
                                          },
                                          "consequent": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "effect"
                                                },
                                                "right": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ArrayExpression",
                                                      "elements": [
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "@"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefixAnimation"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "keyframes outLeft {"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "0% { opacity: 1;"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: translateX(0);}"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "100% {opacity: 0;"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: translateX(-200px);}"
                                                          }
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": "}"
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "@"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefixAnimation"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "keyframes inLeft {"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "0% { opacity: 0;"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: translateX(-200px);}"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "100% {opacity: 1;"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: translateX(0);}"
                                                          }
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": "}"
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "@"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefixAnimation"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "keyframes outRight {"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "0% { opacity: 1;"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: translateX(0);}"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "100% {opacity: 0;"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: translateX(200px);}"
                                                          }
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": "}"
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "@"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefixAnimation"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "keyframes inRight {"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "0% { opacity: 0;"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: translateX(200px);}"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "100% {opacity: 1;"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: translateX(0);}"
                                                          }
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": "}"
                                                        }
                                                      ]
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "join"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": ""
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            {
                                              "type": "BreakStatement",
                                              "label": null
                                            }
                                          ]
                                        },
                                        {
                                          "type": "SwitchCase",
                                          "test": {
                                            "type": "Literal",
                                            "value": "roll"
                                          },
                                          "consequent": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "effect"
                                                },
                                                "right": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ArrayExpression",
                                                      "elements": [
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "@"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefixAnimation"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "keyframes outLeft {"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "0% { opacity: 1;"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: translateX(0px) rotate(0deg);}"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "100% {opacity: 0;"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: translateX(-100%) rotate(-120deg);}"
                                                          }
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": "}"
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "@"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefixAnimation"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "keyframes inLeft {"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "0% { opacity: 0;"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: translateX(-100%) rotate(-120deg);}"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "100% {opacity: 1;"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform:  translateX(0px) rotate(0deg);}"
                                                          }
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": "}"
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "@"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefixAnimation"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "keyframes outRight {"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "0% { opacity: 1;"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform:translateX(0px) rotate(0deg);}"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "100% {opacity: 0;"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform:translateX(100%) rotate(120deg);}"
                                                          }
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": "}"
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "@"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefixAnimation"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "keyframes inRight {"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "0% { opacity: 0;"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: translateX(100%) rotate(120deg);}"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "100% {opacity: 1;"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform:  translateX(0px) rotate(0deg);}"
                                                          }
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": "}"
                                                        }
                                                      ]
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "join"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": ""
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            {
                                              "type": "BreakStatement",
                                              "label": null
                                            }
                                          ]
                                        },
                                        {
                                          "type": "SwitchCase",
                                          "test": {
                                            "type": "Literal",
                                            "value": "rotate"
                                          },
                                          "consequent": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "effect"
                                                },
                                                "right": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ArrayExpression",
                                                      "elements": [
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "@"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefixAnimation"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "keyframes outRight {"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "BinaryExpression",
                                                              "operator": "+",
                                                              "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                  "type": "Literal",
                                                                  "value": "0% { opacity: 1;"
                                                                },
                                                                "right": {
                                                                  "type": "Identifier",
                                                                  "name": "prefix"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": "transform: rotate(0deg);"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform-origin:left bottom;}"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "BinaryExpression",
                                                              "operator": "+",
                                                              "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                  "type": "Literal",
                                                                  "value": "100% {opacity: 0;"
                                                                },
                                                                "right": {
                                                                  "type": "Identifier",
                                                                  "name": "prefix"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": "transform: rotate(-90deg);"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform-origin:left bottom;}"
                                                          }
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": "}"
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "@"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefixAnimation"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "keyframes inLeft {"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "BinaryExpression",
                                                              "operator": "+",
                                                              "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                  "type": "Literal",
                                                                  "value": "0% { opacity: 0;"
                                                                },
                                                                "right": {
                                                                  "type": "Identifier",
                                                                  "name": "prefix"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": "transform: rotate(90deg);"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform-origin:left bottom;}"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "BinaryExpression",
                                                              "operator": "+",
                                                              "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                  "type": "Literal",
                                                                  "value": "100% {opacity: 1;"
                                                                },
                                                                "right": {
                                                                  "type": "Identifier",
                                                                  "name": "prefix"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": "transform: rotate(0deg);"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform-origin:left bottom;}"
                                                          }
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": "}"
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "@"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefixAnimation"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "keyframes outLeft {"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "BinaryExpression",
                                                              "operator": "+",
                                                              "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                  "type": "Literal",
                                                                  "value": "0% { opacity: 1;"
                                                                },
                                                                "right": {
                                                                  "type": "Identifier",
                                                                  "name": "prefix"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": "transform: rotate(0deg);"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform-origin:right bottom;}"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "BinaryExpression",
                                                              "operator": "+",
                                                              "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                  "type": "Literal",
                                                                  "value": "100% {opacity: 0;"
                                                                },
                                                                "right": {
                                                                  "type": "Identifier",
                                                                  "name": "prefix"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": "transform: rotate(90deg);"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform-origin:right bottom;}"
                                                          }
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": "}"
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "@"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefixAnimation"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "keyframes inRight {"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "BinaryExpression",
                                                              "operator": "+",
                                                              "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                  "type": "Literal",
                                                                  "value": "0% { opacity: 0;"
                                                                },
                                                                "right": {
                                                                  "type": "Identifier",
                                                                  "name": "prefix"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": "transform: rotate(-90deg);"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform-origin:right bottom;}"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "BinaryExpression",
                                                              "operator": "+",
                                                              "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                  "type": "Literal",
                                                                  "value": "100% {opacity: 1;"
                                                                },
                                                                "right": {
                                                                  "type": "Identifier",
                                                                  "name": "prefix"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": "transform: rotate(0deg);"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform-origin:right bottom;}"
                                                          }
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": "}"
                                                        }
                                                      ]
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "join"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": ""
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            {
                                              "type": "BreakStatement",
                                              "label": null
                                            }
                                          ]
                                        },
                                        {
                                          "type": "SwitchCase",
                                          "test": {
                                            "type": "Literal",
                                            "value": "flipX"
                                          },
                                          "consequent": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "effect"
                                                },
                                                "right": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ArrayExpression",
                                                      "elements": [
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "@"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefixAnimation"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "keyframes outLeft {"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "0% {"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: perspective(400px) rotateX(0deg);opacity: 1;}"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "100% {"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: perspective(400px) rotateX(90deg);opacity: 0;}"
                                                          }
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": "}"
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "@"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefixAnimation"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "keyframes inLeft {"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "0% {"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: perspective(400px) rotateX(90deg);opacity: 0;}"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "40% {"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: perspective(400px) rotateX(-10deg);}"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "70% {"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: perspective(400px) rotateX(10deg);}"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "100% {"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: perspective(400px) rotateX(0deg);opacity: 1;}"
                                                          }
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": "}"
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "@"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefixAnimation"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "keyframes outRight {"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "0% {"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: perspective(400px) rotateX(0deg);opacity: 1;}"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "100% {"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: perspective(400px) rotateX(90deg);opacity: 0;}"
                                                          }
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": "}"
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "@"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefixAnimation"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "keyframes inRight {"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "0% {"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: perspective(400px) rotateX(90deg);opacity: 0;}"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "40% {"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: perspective(400px) rotateX(-10deg);}"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "70% {"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: perspective(400px) rotateX(10deg);}"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "100% {"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: perspective(400px) rotateX(0deg);opacity: 1;}"
                                                          }
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": "}"
                                                        }
                                                      ]
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "join"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": ""
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            {
                                              "type": "BreakStatement",
                                              "label": null
                                            }
                                          ]
                                        },
                                        {
                                          "type": "SwitchCase",
                                          "test": {
                                            "type": "Literal",
                                            "value": "flipY"
                                          },
                                          "consequent": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "Identifier",
                                                  "name": "effect"
                                                },
                                                "right": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ArrayExpression",
                                                      "elements": [
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "@"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefixAnimation"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "keyframes outLeft {"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "0% {"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: perspective(400px) rotateY(0deg);opacity: 1;}"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "100% {"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: perspective(400px) rotateY(90deg);opacity: 0;}"
                                                          }
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": "}"
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "@"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefixAnimation"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "keyframes inLeft {"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "0% {"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: perspective(400px) rotateY(90deg);opacity: 0;}"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "40% {"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: perspective(400px) rotateY(-10deg);}"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "70% {"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: perspective(400px) rotateY(10deg);}"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "100% {"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: perspective(400px) rotateY(0deg);opacity: 1;}"
                                                          }
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": "}"
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "@"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefixAnimation"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "keyframes outRight {"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "0% {"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: perspective(400px) rotateY(0deg);opacity: 1;}"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "100% {"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: perspective(400px) rotateY(-90deg);opacity: 0;}"
                                                          }
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": "}"
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "@"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefixAnimation"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "keyframes inRight {"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "0% {"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: perspective(400px) rotateY(90deg);opacity: 0;}"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "40% {"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: perspective(400px) rotateY(-10deg);}"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "70% {"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: perspective(400px) rotateY(10deg);}"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "100% {"
                                                            },
                                                            "right": {
                                                              "type": "Identifier",
                                                              "name": "prefix"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform: perspective(400px) rotateY(0deg);opacity: 1;}"
                                                          }
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": "}"
                                                        }
                                                      ]
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "join"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": ""
                                                    }
                                                  ]
                                                }
                                              }
                                            },
                                            {
                                              "type": "BreakStatement",
                                              "label": null
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "VariableDeclaration",
                                      "declarations": [
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "changeClass"
                                          },
                                          "init": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "ArrayExpression",
                                                "elements": [
                                                  {
                                                    "type": "Literal",
                                                    "value": ".glisse-transitionOut-next {"
                                                  },
                                                  {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "BinaryExpression",
                                                      "operator": "+",
                                                      "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "prefixAnimation"
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": "animation: "
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "plugin"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "settings"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "changeSpeed"
                                                        }
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": "ms ease;"
                                                    }
                                                  },
                                                  {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "prefixAnimation"
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": "animation-name: outLeft;"
                                                    }
                                                  },
                                                  {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "prefixAnimation"
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": "animation-fill-mode: both;"
                                                    }
                                                  },
                                                  {
                                                    "type": "Literal",
                                                    "value": "}"
                                                  },
                                                  {
                                                    "type": "Literal",
                                                    "value": ".glisse-transitionIn-prev {"
                                                  },
                                                  {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "BinaryExpression",
                                                      "operator": "+",
                                                      "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "prefixAnimation"
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": "animation: "
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "plugin"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "settings"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "changeSpeed"
                                                        }
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": "ms ease;"
                                                    }
                                                  },
                                                  {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "prefixAnimation"
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": "animation-name: inLeft;"
                                                    }
                                                  },
                                                  {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "prefixAnimation"
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": "animation-fill-mode: both;"
                                                    }
                                                  },
                                                  {
                                                    "type": "Literal",
                                                    "value": "}"
                                                  },
                                                  {
                                                    "type": "Literal",
                                                    "value": ".glisse-transitionOut-prev {"
                                                  },
                                                  {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "BinaryExpression",
                                                      "operator": "+",
                                                      "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "prefixAnimation"
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": "animation: "
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "plugin"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "settings"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "changeSpeed"
                                                        }
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": "ms ease;"
                                                    }
                                                  },
                                                  {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "prefixAnimation"
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": "animation-name: outRight;"
                                                    }
                                                  },
                                                  {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "prefixAnimation"
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": "animation-fill-mode: both;"
                                                    }
                                                  },
                                                  {
                                                    "type": "Literal",
                                                    "value": "}"
                                                  },
                                                  {
                                                    "type": "Literal",
                                                    "value": ".glisse-transitionIn-next {"
                                                  },
                                                  {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "BinaryExpression",
                                                      "operator": "+",
                                                      "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                          "type": "Identifier",
                                                          "name": "prefixAnimation"
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": "animation: "
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "plugin"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "settings"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "changeSpeed"
                                                        }
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": "ms ease;"
                                                    }
                                                  },
                                                  {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "prefixAnimation"
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": "animation-name: inRight;"
                                                    }
                                                  },
                                                  {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "Identifier",
                                                      "name": "prefixAnimation"
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": "animation-fill-mode: both;"
                                                    }
                                                  },
                                                  {
                                                    "type": "Literal",
                                                    "value": "}"
                                                  }
                                                ]
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "join"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": ""
                                              }
                                            ]
                                          }
                                        }
                                      ],
                                      "kind": "var"
                                    },
                                    {
                                      "type": "IfStatement",
                                      "test": {
                                        "type": "UnaryExpression",
                                        "operator": "!",
                                        "argument": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "document"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "getElementById"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": "glisse-css"
                                            }
                                          ]
                                        },
                                        "prefix": true
                                      },
                                      "consequent": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "$"
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "BinaryExpression",
                                                      "operator": "+",
                                                      "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "Literal",
                                                            "value": "<style type=\"text/css\" id=\"glisse-css\">"
                                                          },
                                                          "right": {
                                                            "type": "Identifier",
                                                            "name": "effect"
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "Identifier",
                                                          "name": "changeClass"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": "</style>"
                                                      }
                                                    }
                                                  ]
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "appendTo"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": "head"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      },
                                      "alternate": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "$"
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "#glisse-css"
                                                    }
                                                  ]
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "html"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "BinaryExpression",
                                                  "operator": "+",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "effect"
                                                  },
                                                  "right": {
                                                    "type": "Identifier",
                                                    "name": "changeClass"
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                              }
                            }
                          ],
                          "kind": "var"
                        },
                        {
                          "type": "VariableDeclaration",
                          "declarations": [
                            {
                              "type": "VariableDeclarator",
                              "id": {
                                "type": "Identifier",
                                "name": "setChangeStatus"
                              },
                              "init": {
                                "type": "FunctionExpression",
                                "id": {
                                  "type": "Identifier",
                                  "name": "setChangeStatus"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "VariableDeclaration",
                                      "declarations": [
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "$currentEl"
                                          },
                                          "init": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "$"
                                            },
                                            "arguments": [
                                              {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                  "type": "BinaryExpression",
                                                  "operator": "+",
                                                  "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "BinaryExpression",
                                                      "operator": "+",
                                                      "left": {
                                                        "type": "Literal",
                                                        "value": "img["
                                                      },
                                                      "right": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "plugin"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "settings"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "dataName"
                                                        }
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": "=\""
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "Identifier",
                                                    "name": "pictureUrl"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": "\"]"
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "parent"
                                          },
                                          "init": {
                                            "type": "ConditionalExpression",
                                            "test": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "plugin"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "settings"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "parent"
                                              }
                                            },
                                            "consequent": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "$currentEl"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "closest"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "plugin"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "settings"
                                                    }
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "parent"
                                                  }
                                                }
                                              ]
                                            },
                                            "alternate": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "$currentEl"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "parent"
                                                }
                                              },
                                              "arguments": []
                                            }
                                          }
                                        }
                                      ],
                                      "kind": "var"
                                    },
                                    {
                                      "type": "IfStatement",
                                      "test": {
                                        "type": "UnaryExpression",
                                        "operator": "!",
                                        "argument": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "parent"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "next"
                                                  }
                                                },
                                                "arguments": []
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "find"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                  "type": "BinaryExpression",
                                                  "operator": "+",
                                                  "left": {
                                                    "type": "Literal",
                                                    "value": "img[rel="
                                                  },
                                                  "right": {
                                                    "type": "Identifier",
                                                    "name": "group"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": "]"
                                                }
                                              }
                                            ]
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "length"
                                          }
                                        },
                                        "prefix": true
                                      },
                                      "consequent": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": true,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "plugin"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "els"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Literal",
                                                        "value": "controls"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "find"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": ".glisse-next"
                                                    }
                                                  ]
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "addClass"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": "ended"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      },
                                      "alternate": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": true,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "plugin"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "els"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Literal",
                                                        "value": "controls"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "find"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": ".glisse-next"
                                                    }
                                                  ]
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "removeClass"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": "ended"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "IfStatement",
                                      "test": {
                                        "type": "UnaryExpression",
                                        "operator": "!",
                                        "argument": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "parent"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "prev"
                                                  }
                                                },
                                                "arguments": []
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "find"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                  "type": "BinaryExpression",
                                                  "operator": "+",
                                                  "left": {
                                                    "type": "Literal",
                                                    "value": "img[rel="
                                                  },
                                                  "right": {
                                                    "type": "Identifier",
                                                    "name": "group"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": "]"
                                                }
                                              }
                                            ]
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "length"
                                          }
                                        },
                                        "prefix": true
                                      },
                                      "consequent": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": true,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "plugin"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "els"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Literal",
                                                        "value": "controls"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "find"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": ".glisse-prev"
                                                    }
                                                  ]
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "addClass"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": "ended"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      },
                                      "alternate": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": true,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "plugin"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "els"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Literal",
                                                        "value": "controls"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "find"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": ".glisse-prev"
                                                    }
                                                  ]
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "removeClass"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": "ended"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                              }
                            }
                          ],
                          "kind": "var"
                        },
                        {
                          "type": "VariableDeclaration",
                          "declarations": [
                            {
                              "type": "VariableDeclarator",
                              "id": {
                                "type": "Identifier",
                                "name": "setTitle"
                              },
                              "init": {
                                "type": "FunctionExpression",
                                "id": {
                                  "type": "Identifier",
                                  "name": "setTitle"
                                },
                                "params": [],
                                "defaults": [],
                                "body": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "VariableDeclaration",
                                      "declarations": [
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "$legend"
                                          },
                                          "init": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": true,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "plugin"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "els"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Literal",
                                                  "value": "controls"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "find"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": ".glisse-legend"
                                              }
                                            ]
                                          }
                                        }
                                      ],
                                      "kind": "var"
                                    },
                                    {
                                      "type": "VariableDeclaration",
                                      "declarations": [
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "$currentEl"
                                          },
                                          "init": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "$"
                                            },
                                            "arguments": [
                                              {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                  "type": "BinaryExpression",
                                                  "operator": "+",
                                                  "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "BinaryExpression",
                                                      "operator": "+",
                                                      "left": {
                                                        "type": "Literal",
                                                        "value": "img["
                                                      },
                                                      "right": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "plugin"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "settings"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "dataName"
                                                        }
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": "=\""
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "Identifier",
                                                    "name": "pictureUrl"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": "\"]"
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      ],
                                      "kind": "var"
                                    },
                                    {
                                      "type": "VariableDeclaration",
                                      "declarations": [
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "title"
                                          },
                                          "init": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "$currentEl"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "attr"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "title"
                                              }
                                            ]
                                          }
                                        }
                                      ],
                                      "kind": "var"
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "$legend"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "html"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "ConditionalExpression",
                                            "test": {
                                              "type": "Identifier",
                                              "name": "title"
                                            },
                                            "consequent": {
                                              "type": "Identifier",
                                              "name": "title"
                                            },
                                            "alternate": {
                                              "type": "Literal",
                                              "value": ""
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                              }
                            }
                          ],
                          "kind": "var"
                        },
                        {
                          "type": "VariableDeclaration",
                          "declarations": [
                            {
                              "type": "VariableDeclarator",
                              "id": {
                                "type": "Identifier",
                                "name": "spinner"
                              },
                              "init": {
                                "type": "FunctionExpression",
                                "id": {
                                  "type": "Identifier",
                                  "name": "spinner"
                                },
                                "params": [
                                  {
                                    "type": "Identifier",
                                    "name": "action"
                                  }
                                ],
                                "defaults": [],
                                "body": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "plugin"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "els"
                                              }
                                            },
                                            "property": {
                                              "type": "Literal",
                                              "value": "overlay"
                                            }
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "toggleClass"
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "type": "Literal",
                                            "value": "loading"
                                          },
                                          {
                                            "type": "Identifier",
                                            "name": "action"
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                              }
                            }
                          ],
                          "kind": "var"
                        },
                        {
                          "type": "VariableDeclaration",
                          "declarations": [
                            {
                              "type": "VariableDeclarator",
                              "id": {
                                "type": "Identifier",
                                "name": "getPrefix"
                              },
                              "init": {
                                "type": "FunctionExpression",
                                "id": {
                                  "type": "Identifier",
                                  "name": "getPrefix"
                                },
                                "params": [
                                  {
                                    "type": "Identifier",
                                    "name": "prop"
                                  }
                                ],
                                "defaults": [],
                                "body": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "VariableDeclaration",
                                      "declarations": [
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "prefixes"
                                          },
                                          "init": {
                                            "type": "ArrayExpression",
                                            "elements": [
                                              {
                                                "type": "Literal",
                                                "value": "Moz"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": "Khtml"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": "Webkit"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": "O"
                                              },
                                              {
                                                "type": "Literal",
                                                "value": "ms"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "elem"
                                          },
                                          "init": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "document"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "createElement"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "div"
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "upper"
                                          },
                                          "init": {
                                            "type": "BinaryExpression",
                                            "operator": "+",
                                            "left": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "prop"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "charAt"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": 0
                                                    }
                                                  ]
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "toUpperCase"
                                                }
                                              },
                                              "arguments": []
                                            },
                                            "right": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "prop"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "slice"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": 1
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      ],
                                      "kind": "var"
                                    },
                                    {
                                      "type": "ForStatement",
                                      "init": {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "len"
                                            },
                                            "init": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "Identifier",
                                                "name": "prefixes"
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "length"
                                              }
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      "test": {
                                        "type": "UpdateExpression",
                                        "operator": "--",
                                        "argument": {
                                          "type": "Identifier",
                                          "name": "len"
                                        },
                                        "prefix": false
                                      },
                                      "update": null,
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "IfStatement",
                                            "test": {
                                              "type": "BinaryExpression",
                                              "operator": "in",
                                              "left": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": true,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "prefixes"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "len"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Identifier",
                                                  "name": "upper"
                                                }
                                              },
                                              "right": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "elem"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "style"
                                                }
                                              }
                                            },
                                            "consequent": {
                                              "type": "ReturnStatement",
                                              "argument": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                  "type": "BinaryExpression",
                                                  "operator": "+",
                                                  "left": {
                                                    "type": "Literal",
                                                    "value": "-"
                                                  },
                                                  "right": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "prefixes"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "len"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "toLowerCase"
                                                      }
                                                    },
                                                    "arguments": []
                                                  }
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": "-"
                                                }
                                              }
                                            },
                                            "alternate": null
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "ReturnStatement",
                                      "argument": {
                                        "type": "Literal",
                                        "value": false
                                      }
                                    }
                                  ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                              }
                            }
                          ],
                          "kind": "var"
                        },
                        {
                          "type": "VariableDeclaration",
                          "declarations": [
                            {
                              "type": "VariableDeclarator",
                              "id": {
                                "type": "Identifier",
                                "name": "readyElement"
                              },
                              "init": {
                                "type": "CallExpression",
                                "callee": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "ObjectExpression",
                                          "properties": [
                                            {
                                              "type": "Property",
                                              "key": {
                                                "type": "Identifier",
                                                "name": "observe"
                                              },
                                              "value": {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [
                                                  {
                                                    "type": "Identifier",
                                                    "name": "id"
                                                  },
                                                  {
                                                    "type": "Identifier",
                                                    "name": "callback"
                                                  }
                                                ],
                                                "defaults": [],
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "VariableDeclaration",
                                                      "declarations": [
                                                        {
                                                          "type": "VariableDeclarator",
                                                          "id": {
                                                            "type": "Identifier",
                                                            "name": "interval"
                                                          },
                                                          "init": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "Identifier",
                                                              "name": "setInterval"
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "FunctionExpression",
                                                                "id": null,
                                                                "params": [],
                                                                "defaults": [],
                                                                "body": {
                                                                  "type": "BlockStatement",
                                                                  "body": [
                                                                    {
                                                                      "type": "IfStatement",
                                                                      "test": {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "document"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "getElementById"
                                                                          }
                                                                        },
                                                                        "arguments": [
                                                                          {
                                                                            "type": "Identifier",
                                                                            "name": "id"
                                                                          }
                                                                        ]
                                                                      },
                                                                      "consequent": {
                                                                        "type": "BlockStatement",
                                                                        "body": [
                                                                          {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "callback"
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": false,
                                                                                    "object": {
                                                                                      "type": "Identifier",
                                                                                      "name": "document"
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Identifier",
                                                                                      "name": "getElementById"
                                                                                    }
                                                                                  },
                                                                                  "arguments": [
                                                                                    {
                                                                                      "type": "Identifier",
                                                                                      "name": "id"
                                                                                    }
                                                                                  ]
                                                                                }
                                                                              ]
                                                                            }
                                                                          },
                                                                          {
                                                                            "type": "ExpressionStatement",
                                                                            "expression": {
                                                                              "type": "CallExpression",
                                                                              "callee": {
                                                                                "type": "Identifier",
                                                                                "name": "clearInterval"
                                                                              },
                                                                              "arguments": [
                                                                                {
                                                                                  "type": "Identifier",
                                                                                  "name": "interval"
                                                                                }
                                                                              ]
                                                                            }
                                                                          }
                                                                        ]
                                                                      },
                                                                      "alternate": null
                                                                    }
                                                                  ]
                                                                },
                                                                "rest": null,
                                                                "generator": false,
                                                                "expression": false
                                                              },
                                                              {
                                                                "type": "Literal",
                                                                "value": 60
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      ],
                                                      "kind": "var"
                                                    }
                                                  ]
                                                },
                                                "rest": null,
                                                "generator": false,
                                                "expression": false
                                              },
                                              "kind": "init"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                },
                                "arguments": []
                              }
                            }
                          ],
                          "kind": "var"
                        },
                        {
                          "type": "VariableDeclaration",
                          "declarations": [
                            {
                              "type": "VariableDeclarator",
                              "id": {
                                "type": "Identifier",
                                "name": "isValidEffect"
                              },
                              "init": {
                                "type": "FunctionExpression",
                                "id": {
                                  "type": "Identifier",
                                  "name": "isValidEffect"
                                },
                                "params": [
                                  {
                                    "type": "Identifier",
                                    "name": "effect"
                                  }
                                ],
                                "defaults": [],
                                "body": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "ReturnStatement",
                                      "argument": {
                                        "type": "UnaryExpression",
                                        "operator": "!",
                                        "argument": {
                                          "type": "UnaryExpression",
                                          "operator": "!",
                                          "argument": {
                                            "type": "UnaryExpression",
                                            "operator": "~",
                                            "argument": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "$"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "inArray"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "effect"
                                                },
                                                {
                                                  "type": "ArrayExpression",
                                                  "elements": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "bounce"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "fadeBig"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "fade"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "roll"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "rotate"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "flipX"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "flipY"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            "prefix": true
                                          },
                                          "prefix": true
                                        },
                                        "prefix": true
                                      }
                                    }
                                  ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                              }
                            }
                          ],
                          "kind": "var"
                        },
                        {
                          "type": "VariableDeclaration",
                          "declarations": [
                            {
                              "type": "VariableDeclarator",
                              "id": {
                                "type": "Identifier",
                                "name": "touchHandler"
                              },
                              "init": {
                                "type": "FunctionExpression",
                                "id": {
                                  "type": "Identifier",
                                  "name": "touchHandler"
                                },
                                "params": [
                                  {
                                    "type": "Identifier",
                                    "name": "e"
                                  }
                                ],
                                "defaults": [],
                                "body": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "IfStatement",
                                      "test": {
                                        "type": "BinaryExpression",
                                        "operator": "==",
                                        "left": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "e"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "type"
                                          }
                                        },
                                        "right": {
                                          "type": "Literal",
                                          "value": "touchstart"
                                        }
                                      },
                                      "consequent": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "AssignmentExpression",
                                              "operator": "=",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "mobile"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "touching"
                                                }
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": true
                                              }
                                            }
                                          },
                                          {
                                            "type": "IfStatement",
                                            "test": {
                                              "type": "BinaryExpression",
                                              "operator": "==",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "e"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "touches"
                                                  }
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "length"
                                                }
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": 1
                                              }
                                            },
                                            "consequent": {
                                              "type": "BlockStatement",
                                              "body": [
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "plugin"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "els"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Literal",
                                                          "value": "content"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "css"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "Identifier",
                                                            "name": "getPrefix"
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Literal",
                                                              "value": "transition"
                                                            }
                                                          ]
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": "transition"
                                                        }
                                                      },
                                                      {
                                                        "type": "Literal",
                                                        "value": ""
                                                      }
                                                    ]
                                                  }
                                                },
                                                {
                                                  "type": "VariableDeclaration",
                                                  "declarations": [
                                                    {
                                                      "type": "VariableDeclarator",
                                                      "id": {
                                                        "type": "Identifier",
                                                        "name": "touch"
                                                      },
                                                      "init": {
                                                        "type": "MemberExpression",
                                                        "computed": true,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "e"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "touches"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Literal",
                                                          "value": 0
                                                        }
                                                      }
                                                    }
                                                  ],
                                                  "kind": "var"
                                                },
                                                {
                                                  "type": "IfStatement",
                                                  "test": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "touch"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "target"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "onclick"
                                                    }
                                                  },
                                                  "consequent": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "touch"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "target"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "onclick"
                                                            }
                                                          },
                                                          "arguments": []
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "alternate": null
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "mobile"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "oX"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "touch"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "pageX"
                                                      }
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "mobile"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "nX"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": 0
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "ExpressionStatement",
                                                  "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "mobile"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "scrollX"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "Literal",
                                                      "value": 0
                                                    }
                                                  }
                                                }
                                              ]
                                            },
                                            "alternate": null
                                          }
                                        ]
                                      },
                                      "alternate": {
                                        "type": "IfStatement",
                                        "test": {
                                          "type": "BinaryExpression",
                                          "operator": "==",
                                          "left": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "e"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "type"
                                            }
                                          },
                                          "right": {
                                            "type": "Literal",
                                            "value": "touchmove"
                                          }
                                        },
                                        "consequent": {
                                          "type": "BlockStatement",
                                          "body": [
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "e"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "preventDefault"
                                                  }
                                                },
                                                "arguments": []
                                              }
                                            },
                                            {
                                              "type": "ExpressionStatement",
                                              "expression": {
                                                "type": "AssignmentExpression",
                                                "operator": "=",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "mobile"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "scrollX"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": null
                                                }
                                              }
                                            },
                                            {
                                              "type": "IfStatement",
                                              "test": {
                                                "type": "BinaryExpression",
                                                "operator": "==",
                                                "left": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "e"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "touches"
                                                    }
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "length"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": 1
                                                }
                                              },
                                              "consequent": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "touch"
                                                        },
                                                        "init": {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "e"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "touches"
                                                            }
                                                          },
                                                          "property": {
                                                            "type": "Literal",
                                                            "value": 0
                                                          }
                                                        }
                                                      }
                                                    ],
                                                    "kind": "var"
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "mobile"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "nX"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "touch"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "pageX"
                                                        }
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "IfStatement",
                                                    "test": {
                                                      "type": "BinaryExpression",
                                                      "operator": ">",
                                                      "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "mobile"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "oX"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "mobile"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "nX"
                                                        }
                                                      }
                                                    },
                                                    "consequent": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ExpressionStatement",
                                                          "expression": {
                                                            "type": "AssignmentExpression",
                                                            "operator": "=",
                                                            "left": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "mobile"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "scrollX"
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "UnaryExpression",
                                                              "operator": "-",
                                                              "argument": {
                                                                "type": "BinaryExpression",
                                                                "operator": "-",
                                                                "left": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "mobile"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "oX"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "mobile"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "nX"
                                                                  }
                                                                }
                                                              },
                                                              "prefix": true
                                                            }
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "alternate": {
                                                      "type": "IfStatement",
                                                      "test": {
                                                        "type": "BinaryExpression",
                                                        "operator": ">",
                                                        "left": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "mobile"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "nX"
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "Identifier",
                                                            "name": "mobile"
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "oX"
                                                          }
                                                        }
                                                      },
                                                      "consequent": {
                                                        "type": "BlockStatement",
                                                        "body": [
                                                          {
                                                            "type": "ExpressionStatement",
                                                            "expression": {
                                                              "type": "AssignmentExpression",
                                                              "operator": "=",
                                                              "left": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "mobile"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "scrollX"
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "BinaryExpression",
                                                                "operator": "-",
                                                                "left": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "mobile"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "nX"
                                                                  }
                                                                },
                                                                "right": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "Identifier",
                                                                    "name": "mobile"
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "oX"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        ]
                                                      },
                                                      "alternate": null
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "MemberExpression",
                                                          "computed": true,
                                                          "object": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "plugin"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "els"
                                                            }
                                                          },
                                                          "property": {
                                                            "type": "Literal",
                                                            "value": "content"
                                                          }
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "css"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                              "type": "Identifier",
                                                              "name": "getPrefix"
                                                            },
                                                            "arguments": [
                                                              {
                                                                "type": "Literal",
                                                                "value": "transform"
                                                              }
                                                            ]
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform"
                                                          }
                                                        },
                                                        {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "translateX("
                                                            },
                                                            "right": {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "mobile"
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "scrollX"
                                                              }
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "px)"
                                                          }
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "alternate": null
                                            }
                                          ]
                                        },
                                        "alternate": {
                                          "type": "IfStatement",
                                          "test": {
                                            "type": "LogicalExpression",
                                            "operator": "||",
                                            "left": {
                                              "type": "BinaryExpression",
                                              "operator": "==",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "e"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "type"
                                                }
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": "touchend"
                                              }
                                            },
                                            "right": {
                                              "type": "BinaryExpression",
                                              "operator": "==",
                                              "left": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "e"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "type"
                                                }
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": "touchcancel"
                                              }
                                            }
                                          },
                                          "consequent": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "mobile"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "touching"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": false
                                                  }
                                                }
                                              },
                                              {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                  {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "cssProp"
                                                    },
                                                    "init": {
                                                      "type": "BinaryExpression",
                                                      "operator": "+",
                                                      "left": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "Identifier",
                                                          "name": "getPrefix"
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Literal",
                                                            "value": "transition"
                                                          }
                                                        ]
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": "transition"
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "cssVal"
                                                    },
                                                    "init": {
                                                      "type": "BinaryExpression",
                                                      "operator": "+",
                                                      "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "BinaryExpression",
                                                              "operator": "+",
                                                              "left": {
                                                                "type": "BinaryExpression",
                                                                "operator": "+",
                                                                "left": {
                                                                  "type": "Literal",
                                                                  "value": "opacity "
                                                                },
                                                                "right": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "plugin"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "settings"
                                                                    }
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "speed"
                                                                  }
                                                                }
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": "ms ease, "
                                                              }
                                                            },
                                                            "right": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "Identifier",
                                                                "name": "getPrefix"
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Literal",
                                                                  "value": "transform"
                                                                }
                                                              ]
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": "transform "
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "MemberExpression",
                                                          "computed": false,
                                                          "object": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "plugin"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "settings"
                                                            }
                                                          },
                                                          "property": {
                                                            "type": "Identifier",
                                                            "name": "speed"
                                                          }
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": "ms ease"
                                                      }
                                                    }
                                                  }
                                                ],
                                                "kind": "var"
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": true,
                                                      "object": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "plugin"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "els"
                                                        }
                                                      },
                                                      "property": {
                                                        "type": "Literal",
                                                        "value": "content"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "css"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "cssProp"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "cssVal"
                                                    }
                                                  ]
                                                }
                                              },
                                              {
                                                "type": "IfStatement",
                                                "test": {
                                                  "type": "BinaryExpression",
                                                  "operator": ">",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "mobile"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "scrollX"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": 140
                                                  }
                                                },
                                                "consequent": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "Identifier",
                                                          "name": "changePicture"
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Literal",
                                                            "value": "prev"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ]
                                                },
                                                "alternate": {
                                                  "type": "IfStatement",
                                                  "test": {
                                                    "type": "BinaryExpression",
                                                    "operator": "<",
                                                    "left": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "mobile"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "scrollX"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "UnaryExpression",
                                                      "operator": "-",
                                                      "argument": {
                                                        "type": "Literal",
                                                        "value": 140
                                                      },
                                                      "prefix": true
                                                    }
                                                  },
                                                  "consequent": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "Identifier",
                                                            "name": "changePicture"
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Literal",
                                                              "value": "next"
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "alternate": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ExpressionStatement",
                                                        "expression": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "MemberExpression",
                                                              "computed": true,
                                                              "object": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "Identifier",
                                                                  "name": "plugin"
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "els"
                                                                }
                                                              },
                                                              "property": {
                                                                "type": "Literal",
                                                                "value": "content"
                                                              }
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "css"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "BinaryExpression",
                                                              "operator": "+",
                                                              "left": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "Identifier",
                                                                  "name": "getPrefix"
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "Literal",
                                                                    "value": "transform"
                                                                  }
                                                                ]
                                                              },
                                                              "right": {
                                                                "type": "Literal",
                                                                "value": "transform"
                                                              }
                                                            },
                                                            {
                                                              "type": "Literal",
                                                              "value": "translateX(0px)"
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ]
                                                  }
                                                }
                                              }
                                            ]
                                          },
                                          "alternate": {
                                            "type": "BlockStatement",
                                            "body": []
                                          }
                                        }
                                      }
                                    }
                                  ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                              }
                            }
                          ],
                          "kind": "var"
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "AssignmentExpression",
                            "operator": "=",
                            "left": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "plugin"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "changeEffect"
                              }
                            },
                            "right": {
                              "type": "FunctionExpression",
                              "id": null,
                              "params": [
                                {
                                  "type": "Identifier",
                                  "name": "effect"
                                }
                              ],
                              "defaults": [],
                              "body": {
                                "type": "BlockStatement",
                                "body": [
                                  {
                                    "type": "IfStatement",
                                    "test": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "Identifier",
                                        "name": "isValidEffect"
                                      },
                                      "arguments": [
                                        {
                                          "type": "Identifier",
                                          "name": "effect"
                                        }
                                      ]
                                    },
                                    "consequent": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "AssignmentExpression",
                                            "operator": "=",
                                            "left": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "plugin"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "settings"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "effect"
                                              }
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "effect"
                                            }
                                          }
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "setChangeStyle"
                                            },
                                            "arguments": []
                                          }
                                        }
                                      ]
                                    },
                                    "alternate": null
                                  }
                                ]
                              },
                              "rest": null,
                              "generator": false,
                              "expression": false
                            }
                          }
                        },
                        {
                          "type": "ExpressionStatement",
                          "expression": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "plugin"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "init"
                              }
                            },
                            "arguments": []
                          }
                        }
                      ]
                    },
                    "rest": null,
                    "generator": false,
                    "expression": false
                  }
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "Identifier",
                        "name": "$"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "fn"
                      }
                    },
                    "property": {
                      "type": "Identifier",
                      "name": "glisse"
                    }
                  },
                  "right": {
                    "type": "FunctionExpression",
                    "id": null,
                    "params": [
                      {
                        "type": "Identifier",
                        "name": "options"
                      }
                    ],
                    "defaults": [],
                    "body": {
                      "type": "BlockStatement",
                      "body": [
                        {
                          "type": "ReturnStatement",
                          "argument": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "ThisExpression"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "each"
                              }
                            },
                            "arguments": [
                              {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [],
                                "defaults": [],
                                "body": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "IfStatement",
                                      "test": {
                                        "type": "BinaryExpression",
                                        "operator": "===",
                                        "left": {
                                          "type": "Identifier",
                                          "name": "undefined"
                                        },
                                        "right": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "$"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "ThisExpression"
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "data"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": "glisse"
                                            }
                                          ]
                                        }
                                      },
                                      "consequent": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "VariableDeclaration",
                                            "declarations": [
                                              {
                                                "type": "VariableDeclarator",
                                                "id": {
                                                  "type": "Identifier",
                                                  "name": "plugin"
                                                },
                                                "init": {
                                                  "type": "NewExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "$"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "glisse"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "ThisExpression"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "options"
                                                    }
                                                  ]
                                                }
                                              }
                                            ],
                                            "kind": "var"
                                          },
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "$"
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "ThisExpression"
                                                    }
                                                  ]
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "data"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": "glisse"
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "plugin"
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      },
                                      "alternate": null
                                    }
                                  ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "rest": null,
                    "generator": false,
                    "expression": false
                  }
                }
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        },
        "arguments": [
          {
            "type": "Identifier",
            "name": "jQuery"
          },
          {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "window"
            },
            "property": {
              "type": "Identifier",
              "name": "document"
            }
          }
        ]
      }
    }
  ]
}
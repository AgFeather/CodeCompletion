{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "FunctionExpression",
          "id": null,
          "params": [
            {
              "type": "Identifier",
              "name": "s"
            }
          ],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "AssignmentExpression",
                  "operator": "=",
                  "left": {
                    "type": "MemberExpression",
                    "computed": true,
                    "object": {
                      "type": "Identifier",
                      "name": "s"
                    },
                    "property": {
                      "type": "Literal",
                      "value": "Cursors - Parallel Read"
                    }
                  },
                  "right": {
                    "type": "ObjectExpression",
                    "properties": [
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "category"
                        },
                        "value": {
                          "type": "Literal",
                          "value": "Cursors"
                        },
                        "kind": "init"
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "desc"
                        },
                        "value": {
                          "type": "Literal",
                          "value": "Is it faster to read all data in one cursor, or segment the data and open multiple cursors in parallel to read them"
                        },
                        "kind": "init"
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "_bTestKey"
                        },
                        "value": {
                          "type": "Literal",
                          "value": "agt1YS1wcm9maWxlcnINCxIEVGVzdBjXtKgUDA"
                        },
                        "kind": "init"
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "onStart"
                        },
                        "value": {
                          "type": "FunctionExpression",
                          "id": null,
                          "params": [
                            {
                              "type": "Identifier",
                              "name": "cb"
                            },
                            {
                              "type": "Identifier",
                              "name": "status"
                            }
                          ],
                          "defaults": [],
                          "body": {
                            "type": "BlockStatement",
                            "body": [
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "$"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "indexedDB"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": "IndexedDBPerf"
                                            }
                                          ]
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "deleteDatabase"
                                        }
                                      },
                                      "arguments": []
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "done"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "FunctionExpression",
                                      "id": null,
                                      "params": [],
                                      "defaults": [],
                                      "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                          {
                                            "type": "ExpressionStatement",
                                            "expression": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "$"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "indexedDB"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "IndexedDBPerf"
                                                    },
                                                    {
                                                      "type": "ObjectExpression",
                                                      "properties": [
                                                        {
                                                          "type": "Property",
                                                          "key": {
                                                            "type": "Literal",
                                                            "value": "schema"
                                                          },
                                                          "value": {
                                                            "type": "ObjectExpression",
                                                            "properties": [
                                                              {
                                                                "type": "Property",
                                                                "key": {
                                                                  "type": "Literal",
                                                                  "value": "1"
                                                                },
                                                                "value": {
                                                                  "type": "FunctionExpression",
                                                                  "id": null,
                                                                  "params": [
                                                                    {
                                                                      "type": "Identifier",
                                                                      "name": "trans"
                                                                    }
                                                                  ],
                                                                  "defaults": [],
                                                                  "body": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                      {
                                                                        "type": "ExpressionStatement",
                                                                        "expression": {
                                                                          "type": "CallExpression",
                                                                          "callee": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "Identifier",
                                                                              "name": "trans"
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "createObjectStore"
                                                                            }
                                                                          },
                                                                          "arguments": [
                                                                            {
                                                                              "type": "Literal",
                                                                              "value": "Table1"
                                                                            },
                                                                            {
                                                                              "type": "ObjectExpression",
                                                                              "properties": [
                                                                                {
                                                                                  "type": "Property",
                                                                                  "key": {
                                                                                    "type": "Literal",
                                                                                    "value": "autoIncrement"
                                                                                  },
                                                                                  "value": {
                                                                                    "type": "Literal",
                                                                                    "value": true
                                                                                  },
                                                                                  "kind": "init"
                                                                                }
                                                                              ]
                                                                            }
                                                                          ]
                                                                        }
                                                                      }
                                                                    ]
                                                                  },
                                                                  "rest": null,
                                                                  "generator": false,
                                                                  "expression": false
                                                                },
                                                                "kind": "init"
                                                              }
                                                            ]
                                                          },
                                                          "kind": "init"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "done"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                          {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                              "type": "Identifier",
                                                              "name": "objStore"
                                                            },
                                                            "init": {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "$"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "indexedDB"
                                                                    }
                                                                  },
                                                                  "arguments": [
                                                                    {
                                                                      "type": "Literal",
                                                                      "value": "IndexedDBPerf"
                                                                    }
                                                                  ]
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "objectStore"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "Literal",
                                                                  "value": "Table1"
                                                                }
                                                              ]
                                                            }
                                                          }
                                                        ],
                                                        "kind": "var"
                                                      },
                                                      {
                                                        "type": "VariableDeclaration",
                                                        "declarations": [
                                                          {
                                                            "type": "VariableDeclarator",
                                                            "id": {
                                                              "type": "Identifier",
                                                              "name": "added"
                                                            },
                                                            "init": {
                                                              "type": "Literal",
                                                              "value": 0
                                                            }
                                                          }
                                                        ],
                                                        "kind": "var"
                                                      },
                                                      {
                                                        "type": "ForStatement",
                                                        "init": {
                                                          "type": "VariableDeclaration",
                                                          "declarations": [
                                                            {
                                                              "type": "VariableDeclarator",
                                                              "id": {
                                                                "type": "Identifier",
                                                                "name": "i"
                                                              },
                                                              "init": {
                                                                "type": "Literal",
                                                                "value": 0
                                                              }
                                                            }
                                                          ],
                                                          "kind": "var"
                                                        },
                                                        "test": {
                                                          "type": "BinaryExpression",
                                                          "operator": "<",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "i"
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": 1000
                                                          }
                                                        },
                                                        "update": {
                                                          "type": "UpdateExpression",
                                                          "operator": "++",
                                                          "argument": {
                                                            "type": "Identifier",
                                                            "name": "i"
                                                          },
                                                          "prefix": false
                                                        },
                                                        "body": {
                                                          "type": "BlockStatement",
                                                          "body": [
                                                            {
                                                              "type": "ExpressionStatement",
                                                              "expression": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "objStore"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "add"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "Identifier",
                                                                              "name": "Faker"
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "Helpers"
                                                                            }
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "createCard"
                                                                          }
                                                                        },
                                                                        "arguments": []
                                                                      }
                                                                    ]
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "always"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "FunctionExpression",
                                                                    "id": null,
                                                                    "params": [],
                                                                    "defaults": [],
                                                                    "body": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "IfStatement",
                                                                          "test": {
                                                                            "type": "BinaryExpression",
                                                                            "operator": ">=",
                                                                            "left": {
                                                                              "type": "UpdateExpression",
                                                                              "operator": "++",
                                                                              "argument": {
                                                                                "type": "Identifier",
                                                                                "name": "added"
                                                                              },
                                                                              "prefix": true
                                                                            },
                                                                            "right": {
                                                                              "type": "Literal",
                                                                              "value": 999
                                                                            }
                                                                          },
                                                                          "consequent": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "Identifier",
                                                                                    "name": "cb"
                                                                                  },
                                                                                  "arguments": []
                                                                                }
                                                                              }
                                                                            ]
                                                                          },
                                                                          "alternate": null
                                                                        },
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "CallExpression",
                                                                            "callee": {
                                                                              "type": "Identifier",
                                                                              "name": "status"
                                                                            },
                                                                            "arguments": []
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "rest": null,
                                                                    "generator": false,
                                                                    "expression": false
                                                                  }
                                                                ]
                                                              }
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      },
                                      "rest": null,
                                      "generator": false,
                                      "expression": false
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "rest": null,
                          "generator": false,
                          "expression": false
                        },
                        "kind": "init"
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "setup"
                        },
                        "value": {
                          "type": "FunctionExpression",
                          "id": null,
                          "params": [],
                          "defaults": [],
                          "body": {
                            "type": "BlockStatement",
                            "body": [
                              {
                                "type": "VariableDeclaration",
                                "declarations": [
                                  {
                                    "type": "VariableDeclarator",
                                    "id": {
                                      "type": "Identifier",
                                      "name": "data"
                                    },
                                    "init": {
                                      "type": "CallExpression",
                                      "callee": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "Faker"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "Helpers"
                                          }
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "createCard"
                                        }
                                      },
                                      "arguments": []
                                    }
                                  }
                                ],
                                "kind": "var"
                              }
                            ]
                          },
                          "rest": null,
                          "generator": false,
                          "expression": false
                        },
                        "kind": "init"
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "teardown"
                        },
                        "value": {
                          "type": "FunctionExpression",
                          "id": null,
                          "params": [],
                          "defaults": [],
                          "body": {
                            "type": "BlockStatement",
                            "body": []
                          },
                          "rest": null,
                          "generator": false,
                          "expression": false
                        },
                        "kind": "init"
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "tests"
                        },
                        "value": {
                          "type": "ObjectExpression",
                          "properties": [
                            {
                              "type": "Property",
                              "key": {
                                "type": "Literal",
                                "value": "All Read in One cursor"
                              },
                              "value": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [
                                  {
                                    "type": "Identifier",
                                    "name": "deferred"
                                  }
                                ],
                                "defaults": [],
                                "body": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "VariableDeclaration",
                                      "declarations": [
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "req"
                                          },
                                          "init": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "window"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "indexedDB"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "open"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "IndexedDBPerf"
                                              }
                                            ]
                                          }
                                        }
                                      ],
                                      "kind": "var"
                                    },
                                    {
                                      "type": "VariableDeclaration",
                                      "declarations": [
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "readCount"
                                          },
                                          "init": {
                                            "type": "Literal",
                                            "value": 0
                                          }
                                        }
                                      ],
                                      "kind": "var"
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "req"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "onsuccess"
                                          }
                                        },
                                        "right": {
                                          "type": "FunctionExpression",
                                          "id": null,
                                          "params": [],
                                          "defaults": [],
                                          "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                  {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "db"
                                                    },
                                                    "init": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "req"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "result"
                                                      }
                                                    }
                                                  }
                                                ],
                                                "kind": "var"
                                              },
                                              {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                  {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "transaction"
                                                    },
                                                    "init": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "db"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "transaction"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "ArrayExpression",
                                                          "elements": [
                                                            {
                                                              "type": "Literal",
                                                              "value": "Table1"
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": "readonly"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ],
                                                "kind": "var"
                                              },
                                              {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                  {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "objStore"
                                                    },
                                                    "init": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "transaction"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "objectStore"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Literal",
                                                          "value": "Table1"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ],
                                                "kind": "var"
                                              },
                                              {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                  {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "cursorReq"
                                                    },
                                                    "init": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "objStore"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "openCursor"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "IDBKeyRange"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "bound"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "Literal",
                                                              "value": 0
                                                            },
                                                            {
                                                              "type": "Literal",
                                                              "value": 1000
                                                            },
                                                            {
                                                              "type": "Literal",
                                                              "value": true
                                                            },
                                                            {
                                                              "type": "Literal",
                                                              "value": true
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": "next"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ],
                                                "kind": "var"
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "cursorReq"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "onsuccess"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "FunctionExpression",
                                                    "id": null,
                                                    "params": [],
                                                    "defaults": [],
                                                    "body": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "IfStatement",
                                                          "test": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "cursorReq"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "result"
                                                            }
                                                          },
                                                          "consequent": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "cursorReq"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "result"
                                                                      }
                                                                    },
                                                                    "property": {
                                                                      "type": "Literal",
                                                                      "value": "continue"
                                                                    }
                                                                  },
                                                                  "arguments": []
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "alternate": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "db"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "close"
                                                                    }
                                                                  },
                                                                  "arguments": []
                                                                }
                                                              },
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "CallExpression",
                                                                  "callee": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "deferred"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "resolve"
                                                                    }
                                                                  },
                                                                  "arguments": []
                                                                }
                                                              }
                                                            ]
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "rest": null,
                                                    "generator": false,
                                                    "expression": false
                                                  }
                                                }
                                              },
                                              {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                  "type": "AssignmentExpression",
                                                  "operator": "=",
                                                  "left": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "cursorReq"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "onerror"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "FunctionExpression",
                                                    "id": null,
                                                    "params": [],
                                                    "defaults": [],
                                                    "body": {
                                                      "type": "BlockStatement",
                                                      "body": [
                                                        {
                                                          "type": "ThrowStatement",
                                                          "argument": {
                                                            "type": "Literal",
                                                            "value": "Could not create Cursor request"
                                                          }
                                                        }
                                                      ]
                                                    },
                                                    "rest": null,
                                                    "generator": false,
                                                    "expression": false
                                                  }
                                                }
                                              }
                                            ]
                                          },
                                          "rest": null,
                                          "generator": false,
                                          "expression": false
                                        }
                                      }
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "req"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "onerror"
                                          }
                                        },
                                        "right": {
                                          "type": "FunctionExpression",
                                          "id": null,
                                          "params": [],
                                          "defaults": [],
                                          "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ThrowStatement",
                                                "argument": {
                                                  "type": "Literal",
                                                  "value": "Could not open database"
                                                }
                                              }
                                            ]
                                          },
                                          "rest": null,
                                          "generator": false,
                                          "expression": false
                                        }
                                      }
                                    }
                                  ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                              },
                              "kind": "init"
                            },
                            {
                              "type": "Property",
                              "key": {
                                "type": "Literal",
                                "value": "10 cursors, 100 reads per cursor"
                              },
                              "value": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [
                                  {
                                    "type": "Identifier",
                                    "name": "deferred"
                                  }
                                ],
                                "defaults": [],
                                "body": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "VariableDeclaration",
                                      "declarations": [
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "req"
                                          },
                                          "init": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "window"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "indexedDB"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "open"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "IndexedDBPerf"
                                              }
                                            ]
                                          }
                                        }
                                      ],
                                      "kind": "var"
                                    },
                                    {
                                      "type": "VariableDeclaration",
                                      "declarations": [
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "readCount"
                                          },
                                          "init": {
                                            "type": "Literal",
                                            "value": 0
                                          }
                                        }
                                      ],
                                      "kind": "var"
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "req"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "onsuccess"
                                          }
                                        },
                                        "right": {
                                          "type": "FunctionExpression",
                                          "id": null,
                                          "params": [],
                                          "defaults": [],
                                          "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                  {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "db"
                                                    },
                                                    "init": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "req"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "result"
                                                      }
                                                    }
                                                  }
                                                ],
                                                "kind": "var"
                                              },
                                              {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                  {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "transaction"
                                                    },
                                                    "init": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "db"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "transaction"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "ArrayExpression",
                                                          "elements": [
                                                            {
                                                              "type": "Literal",
                                                              "value": "Table1"
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": "readonly"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ],
                                                "kind": "var"
                                              },
                                              {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                  {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "objStore"
                                                    },
                                                    "init": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "transaction"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "objectStore"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Literal",
                                                          "value": "Table1"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ],
                                                "kind": "var"
                                              },
                                              {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                  {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "cursorReqs"
                                                    },
                                                    "init": {
                                                      "type": "ArrayExpression",
                                                      "elements": []
                                                    }
                                                  },
                                                  {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "cursorDoneCount"
                                                    },
                                                    "init": {
                                                      "type": "Literal",
                                                      "value": 0
                                                    }
                                                  }
                                                ],
                                                "kind": "var"
                                              },
                                              {
                                                "type": "ForStatement",
                                                "init": {
                                                  "type": "VariableDeclaration",
                                                  "declarations": [
                                                    {
                                                      "type": "VariableDeclarator",
                                                      "id": {
                                                        "type": "Identifier",
                                                        "name": "i"
                                                      },
                                                      "init": {
                                                        "type": "Literal",
                                                        "value": 0
                                                      }
                                                    }
                                                  ],
                                                  "kind": "var"
                                                },
                                                "test": {
                                                  "type": "BinaryExpression",
                                                  "operator": "<",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "i"
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": 10
                                                  }
                                                },
                                                "update": {
                                                  "type": "UpdateExpression",
                                                  "operator": "++",
                                                  "argument": {
                                                    "type": "Identifier",
                                                    "name": "i"
                                                  },
                                                  "prefix": false
                                                },
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "FunctionExpression",
                                                          "id": null,
                                                          "params": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "i"
                                                            }
                                                          ],
                                                          "defaults": [],
                                                          "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "AssignmentExpression",
                                                                  "operator": "=",
                                                                  "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "cursorReqs"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "i"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "objStore"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "openCursor"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "IDBKeyRange"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "bound"
                                                                          }
                                                                        },
                                                                        "arguments": [
                                                                          {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                              "type": "BinaryExpression",
                                                                              "operator": "*",
                                                                              "left": {
                                                                                "type": "Identifier",
                                                                                "name": "i"
                                                                              },
                                                                              "right": {
                                                                                "type": "Literal",
                                                                                "value": 100
                                                                              }
                                                                            },
                                                                            "right": {
                                                                              "type": "Literal",
                                                                              "value": 1
                                                                            }
                                                                          },
                                                                          {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                              "type": "BinaryExpression",
                                                                              "operator": "*",
                                                                              "left": {
                                                                                "type": "Identifier",
                                                                                "name": "i"
                                                                              },
                                                                              "right": {
                                                                                "type": "Literal",
                                                                                "value": 100
                                                                              }
                                                                            },
                                                                            "right": {
                                                                              "type": "Literal",
                                                                              "value": 100
                                                                            }
                                                                          },
                                                                          {
                                                                            "type": "Literal",
                                                                            "value": true
                                                                          },
                                                                          {
                                                                            "type": "Literal",
                                                                            "value": true
                                                                          }
                                                                        ]
                                                                      },
                                                                      {
                                                                        "type": "Literal",
                                                                        "value": "next"
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              },
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "AssignmentExpression",
                                                                  "operator": "=",
                                                                  "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "MemberExpression",
                                                                      "computed": true,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "cursorReqs"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "i"
                                                                      }
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "onsuccess"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "FunctionExpression",
                                                                    "id": null,
                                                                    "params": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "e"
                                                                      }
                                                                    ],
                                                                    "defaults": [],
                                                                    "body": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "IfStatement",
                                                                          "test": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "MemberExpression",
                                                                              "computed": true,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "cursorReqs"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "i"
                                                                              }
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "result"
                                                                            }
                                                                          },
                                                                          "consequent": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "cursorReqs"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "i"
                                                                                        }
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "result"
                                                                                      }
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Literal",
                                                                                      "value": "continue"
                                                                                    }
                                                                                  },
                                                                                  "arguments": []
                                                                                }
                                                                              }
                                                                            ]
                                                                          },
                                                                          "alternate": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                  "type": "BinaryExpression",
                                                                                  "operator": ">=",
                                                                                  "left": {
                                                                                    "type": "UpdateExpression",
                                                                                    "operator": "++",
                                                                                    "argument": {
                                                                                      "type": "Identifier",
                                                                                      "name": "cursorDoneCount"
                                                                                    },
                                                                                    "prefix": true
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 10
                                                                                  }
                                                                                },
                                                                                "consequent": {
                                                                                  "type": "BlockStatement",
                                                                                  "body": [
                                                                                    {
                                                                                      "type": "ExpressionStatement",
                                                                                      "expression": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "db"
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "close"
                                                                                          }
                                                                                        },
                                                                                        "arguments": []
                                                                                      }
                                                                                    },
                                                                                    {
                                                                                      "type": "ExpressionStatement",
                                                                                      "expression": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "deferred"
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "resolve"
                                                                                          }
                                                                                        },
                                                                                        "arguments": []
                                                                                      }
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                "alternate": null
                                                                              }
                                                                            ]
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "rest": null,
                                                                    "generator": false,
                                                                    "expression": false
                                                                  }
                                                                }
                                                              },
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "AssignmentExpression",
                                                                  "operator": "=",
                                                                  "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "MemberExpression",
                                                                      "computed": true,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "cursorReqs"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "i"
                                                                      }
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "onerror"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "FunctionExpression",
                                                                    "id": null,
                                                                    "params": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "e"
                                                                      }
                                                                    ],
                                                                    "defaults": [],
                                                                    "body": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "ThrowStatement",
                                                                          "argument": {
                                                                            "type": "Literal",
                                                                            "value": "Could not open Cursor"
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "rest": null,
                                                                    "generator": false,
                                                                    "expression": false
                                                                  }
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "rest": null,
                                                          "generator": false,
                                                          "expression": false
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "i"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          },
                                          "rest": null,
                                          "generator": false,
                                          "expression": false
                                        }
                                      }
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "req"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "onerror"
                                          }
                                        },
                                        "right": {
                                          "type": "FunctionExpression",
                                          "id": null,
                                          "params": [],
                                          "defaults": [],
                                          "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ThrowStatement",
                                                "argument": {
                                                  "type": "Literal",
                                                  "value": "Could not open database"
                                                }
                                              }
                                            ]
                                          },
                                          "rest": null,
                                          "generator": false,
                                          "expression": false
                                        }
                                      }
                                    }
                                  ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                              },
                              "kind": "init"
                            },
                            {
                              "type": "Property",
                              "key": {
                                "type": "Literal",
                                "value": "100 cursors, 10 reads per cursor"
                              },
                              "value": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [],
                                "defaults": [],
                                "body": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "VariableDeclaration",
                                      "declarations": [
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "req"
                                          },
                                          "init": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "window"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "indexedDB"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "open"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "IndexedDBPerf"
                                              }
                                            ]
                                          }
                                        }
                                      ],
                                      "kind": "var"
                                    },
                                    {
                                      "type": "VariableDeclaration",
                                      "declarations": [
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "readCount"
                                          },
                                          "init": {
                                            "type": "Literal",
                                            "value": 0
                                          }
                                        }
                                      ],
                                      "kind": "var"
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "req"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "onsuccess"
                                          }
                                        },
                                        "right": {
                                          "type": "FunctionExpression",
                                          "id": null,
                                          "params": [],
                                          "defaults": [],
                                          "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                  {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "db"
                                                    },
                                                    "init": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "req"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "result"
                                                      }
                                                    }
                                                  }
                                                ],
                                                "kind": "var"
                                              },
                                              {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                  {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "transaction"
                                                    },
                                                    "init": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "db"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "transaction"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "ArrayExpression",
                                                          "elements": [
                                                            {
                                                              "type": "Literal",
                                                              "value": "Table1"
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": "readonly"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ],
                                                "kind": "var"
                                              },
                                              {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                  {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "objStore"
                                                    },
                                                    "init": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "transaction"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "objectStore"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Literal",
                                                          "value": "Table1"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ],
                                                "kind": "var"
                                              },
                                              {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                  {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "cursorReqs"
                                                    },
                                                    "init": {
                                                      "type": "ArrayExpression",
                                                      "elements": []
                                                    }
                                                  },
                                                  {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "cursorDoneCount"
                                                    },
                                                    "init": {
                                                      "type": "Literal",
                                                      "value": 0
                                                    }
                                                  }
                                                ],
                                                "kind": "var"
                                              },
                                              {
                                                "type": "ForStatement",
                                                "init": {
                                                  "type": "VariableDeclaration",
                                                  "declarations": [
                                                    {
                                                      "type": "VariableDeclarator",
                                                      "id": {
                                                        "type": "Identifier",
                                                        "name": "i"
                                                      },
                                                      "init": {
                                                        "type": "Literal",
                                                        "value": 0
                                                      }
                                                    }
                                                  ],
                                                  "kind": "var"
                                                },
                                                "test": {
                                                  "type": "BinaryExpression",
                                                  "operator": "<",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "i"
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": 100
                                                  }
                                                },
                                                "update": {
                                                  "type": "UpdateExpression",
                                                  "operator": "++",
                                                  "argument": {
                                                    "type": "Identifier",
                                                    "name": "i"
                                                  },
                                                  "prefix": false
                                                },
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "FunctionExpression",
                                                          "id": null,
                                                          "params": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "i"
                                                            }
                                                          ],
                                                          "defaults": [],
                                                          "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "AssignmentExpression",
                                                                  "operator": "=",
                                                                  "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "cursorReqs"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "i"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "objStore"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "openCursor"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "IDBKeyRange"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "bound"
                                                                          }
                                                                        },
                                                                        "arguments": [
                                                                          {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                              "type": "BinaryExpression",
                                                                              "operator": "*",
                                                                              "left": {
                                                                                "type": "Identifier",
                                                                                "name": "i"
                                                                              },
                                                                              "right": {
                                                                                "type": "Literal",
                                                                                "value": 10
                                                                              }
                                                                            },
                                                                            "right": {
                                                                              "type": "Literal",
                                                                              "value": 1
                                                                            }
                                                                          },
                                                                          {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                              "type": "BinaryExpression",
                                                                              "operator": "*",
                                                                              "left": {
                                                                                "type": "Identifier",
                                                                                "name": "i"
                                                                              },
                                                                              "right": {
                                                                                "type": "Literal",
                                                                                "value": 10
                                                                              }
                                                                            },
                                                                            "right": {
                                                                              "type": "Literal",
                                                                              "value": 10
                                                                            }
                                                                          },
                                                                          {
                                                                            "type": "Literal",
                                                                            "value": true
                                                                          },
                                                                          {
                                                                            "type": "Literal",
                                                                            "value": true
                                                                          }
                                                                        ]
                                                                      },
                                                                      {
                                                                        "type": "Literal",
                                                                        "value": "next"
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              },
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "AssignmentExpression",
                                                                  "operator": "=",
                                                                  "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "MemberExpression",
                                                                      "computed": true,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "cursorReqs"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "i"
                                                                      }
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "onsuccess"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "FunctionExpression",
                                                                    "id": null,
                                                                    "params": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "e"
                                                                      }
                                                                    ],
                                                                    "defaults": [],
                                                                    "body": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "IfStatement",
                                                                          "test": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "MemberExpression",
                                                                              "computed": true,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "cursorReqs"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "i"
                                                                              }
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "result"
                                                                            }
                                                                          },
                                                                          "consequent": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "cursorReqs"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "i"
                                                                                        }
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "result"
                                                                                      }
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Literal",
                                                                                      "value": "continue"
                                                                                    }
                                                                                  },
                                                                                  "arguments": []
                                                                                }
                                                                              }
                                                                            ]
                                                                          },
                                                                          "alternate": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                  "type": "BinaryExpression",
                                                                                  "operator": ">=",
                                                                                  "left": {
                                                                                    "type": "UpdateExpression",
                                                                                    "operator": "++",
                                                                                    "argument": {
                                                                                      "type": "Identifier",
                                                                                      "name": "cursorDoneCount"
                                                                                    },
                                                                                    "prefix": true
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 100
                                                                                  }
                                                                                },
                                                                                "consequent": {
                                                                                  "type": "BlockStatement",
                                                                                  "body": [
                                                                                    {
                                                                                      "type": "ExpressionStatement",
                                                                                      "expression": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "db"
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "close"
                                                                                          }
                                                                                        },
                                                                                        "arguments": []
                                                                                      }
                                                                                    },
                                                                                    {
                                                                                      "type": "ExpressionStatement",
                                                                                      "expression": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "deferred"
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "resolve"
                                                                                          }
                                                                                        },
                                                                                        "arguments": []
                                                                                      }
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                "alternate": null
                                                                              }
                                                                            ]
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "rest": null,
                                                                    "generator": false,
                                                                    "expression": false
                                                                  }
                                                                }
                                                              },
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "AssignmentExpression",
                                                                  "operator": "=",
                                                                  "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "MemberExpression",
                                                                      "computed": true,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "cursorReqs"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "i"
                                                                      }
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "onerror"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "FunctionExpression",
                                                                    "id": null,
                                                                    "params": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "e"
                                                                      }
                                                                    ],
                                                                    "defaults": [],
                                                                    "body": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "ThrowStatement",
                                                                          "argument": {
                                                                            "type": "Literal",
                                                                            "value": "Could not open Cursor"
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "rest": null,
                                                                    "generator": false,
                                                                    "expression": false
                                                                  }
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "rest": null,
                                                          "generator": false,
                                                          "expression": false
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "i"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          },
                                          "rest": null,
                                          "generator": false,
                                          "expression": false
                                        }
                                      }
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "req"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "onerror"
                                          }
                                        },
                                        "right": {
                                          "type": "FunctionExpression",
                                          "id": null,
                                          "params": [],
                                          "defaults": [],
                                          "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ThrowStatement",
                                                "argument": {
                                                  "type": "Literal",
                                                  "value": "Could not open database"
                                                }
                                              }
                                            ]
                                          },
                                          "rest": null,
                                          "generator": false,
                                          "expression": false
                                        }
                                      }
                                    }
                                  ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                              },
                              "kind": "init"
                            },
                            {
                              "type": "Property",
                              "key": {
                                "type": "Literal",
                                "value": "500 cursors, 2 reads per cursor"
                              },
                              "value": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [],
                                "defaults": [],
                                "body": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "VariableDeclaration",
                                      "declarations": [
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "req"
                                          },
                                          "init": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "window"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "indexedDB"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "open"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "IndexedDBPerf"
                                              }
                                            ]
                                          }
                                        }
                                      ],
                                      "kind": "var"
                                    },
                                    {
                                      "type": "VariableDeclaration",
                                      "declarations": [
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "readCount"
                                          },
                                          "init": {
                                            "type": "Literal",
                                            "value": 0
                                          }
                                        }
                                      ],
                                      "kind": "var"
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "req"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "onsuccess"
                                          }
                                        },
                                        "right": {
                                          "type": "FunctionExpression",
                                          "id": null,
                                          "params": [],
                                          "defaults": [],
                                          "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                  {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "db"
                                                    },
                                                    "init": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "req"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "result"
                                                      }
                                                    }
                                                  }
                                                ],
                                                "kind": "var"
                                              },
                                              {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                  {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "transaction"
                                                    },
                                                    "init": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "db"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "transaction"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "ArrayExpression",
                                                          "elements": [
                                                            {
                                                              "type": "Literal",
                                                              "value": "Table1"
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": "readonly"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ],
                                                "kind": "var"
                                              },
                                              {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                  {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "objStore"
                                                    },
                                                    "init": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "transaction"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "objectStore"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Literal",
                                                          "value": "Table1"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ],
                                                "kind": "var"
                                              },
                                              {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                  {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "cursorReqs"
                                                    },
                                                    "init": {
                                                      "type": "ArrayExpression",
                                                      "elements": []
                                                    }
                                                  },
                                                  {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "cursorDoneCount"
                                                    },
                                                    "init": {
                                                      "type": "Literal",
                                                      "value": 0
                                                    }
                                                  }
                                                ],
                                                "kind": "var"
                                              },
                                              {
                                                "type": "ForStatement",
                                                "init": {
                                                  "type": "VariableDeclaration",
                                                  "declarations": [
                                                    {
                                                      "type": "VariableDeclarator",
                                                      "id": {
                                                        "type": "Identifier",
                                                        "name": "i"
                                                      },
                                                      "init": {
                                                        "type": "Literal",
                                                        "value": 0
                                                      }
                                                    }
                                                  ],
                                                  "kind": "var"
                                                },
                                                "test": {
                                                  "type": "BinaryExpression",
                                                  "operator": "<",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "i"
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": 500
                                                  }
                                                },
                                                "update": {
                                                  "type": "UpdateExpression",
                                                  "operator": "++",
                                                  "argument": {
                                                    "type": "Identifier",
                                                    "name": "i"
                                                  },
                                                  "prefix": false
                                                },
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "FunctionExpression",
                                                          "id": null,
                                                          "params": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "i"
                                                            }
                                                          ],
                                                          "defaults": [],
                                                          "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "AssignmentExpression",
                                                                  "operator": "=",
                                                                  "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "cursorReqs"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "i"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "objStore"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "openCursor"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "IDBKeyRange"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "bound"
                                                                          }
                                                                        },
                                                                        "arguments": [
                                                                          {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "*",
                                                                            "left": {
                                                                              "type": "Identifier",
                                                                              "name": "i"
                                                                            },
                                                                            "right": {
                                                                              "type": "Literal",
                                                                              "value": 2
                                                                            }
                                                                          },
                                                                          {
                                                                            "type": "BinaryExpression",
                                                                            "operator": "+",
                                                                            "left": {
                                                                              "type": "BinaryExpression",
                                                                              "operator": "*",
                                                                              "left": {
                                                                                "type": "Identifier",
                                                                                "name": "i"
                                                                              },
                                                                              "right": {
                                                                                "type": "Literal",
                                                                                "value": 2
                                                                              }
                                                                            },
                                                                            "right": {
                                                                              "type": "Literal",
                                                                              "value": 1
                                                                            }
                                                                          },
                                                                          {
                                                                            "type": "Literal",
                                                                            "value": true
                                                                          },
                                                                          {
                                                                            "type": "Literal",
                                                                            "value": true
                                                                          }
                                                                        ]
                                                                      },
                                                                      {
                                                                        "type": "Literal",
                                                                        "value": "next"
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              },
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "AssignmentExpression",
                                                                  "operator": "=",
                                                                  "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "MemberExpression",
                                                                      "computed": true,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "cursorReqs"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "i"
                                                                      }
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "onsuccess"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "FunctionExpression",
                                                                    "id": null,
                                                                    "params": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "e"
                                                                      }
                                                                    ],
                                                                    "defaults": [],
                                                                    "body": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "IfStatement",
                                                                          "test": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "MemberExpression",
                                                                              "computed": true,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "cursorReqs"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "i"
                                                                              }
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "result"
                                                                            }
                                                                          },
                                                                          "consequent": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "cursorReqs"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "i"
                                                                                        }
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "result"
                                                                                      }
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Literal",
                                                                                      "value": "continue"
                                                                                    }
                                                                                  },
                                                                                  "arguments": []
                                                                                }
                                                                              }
                                                                            ]
                                                                          },
                                                                          "alternate": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                  "type": "BinaryExpression",
                                                                                  "operator": ">=",
                                                                                  "left": {
                                                                                    "type": "UpdateExpression",
                                                                                    "operator": "++",
                                                                                    "argument": {
                                                                                      "type": "Identifier",
                                                                                      "name": "cursorDoneCount"
                                                                                    },
                                                                                    "prefix": true
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 500
                                                                                  }
                                                                                },
                                                                                "consequent": {
                                                                                  "type": "BlockStatement",
                                                                                  "body": [
                                                                                    {
                                                                                      "type": "ExpressionStatement",
                                                                                      "expression": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "db"
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "close"
                                                                                          }
                                                                                        },
                                                                                        "arguments": []
                                                                                      }
                                                                                    },
                                                                                    {
                                                                                      "type": "ExpressionStatement",
                                                                                      "expression": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "deferred"
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "resolve"
                                                                                          }
                                                                                        },
                                                                                        "arguments": []
                                                                                      }
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                "alternate": null
                                                                              }
                                                                            ]
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "rest": null,
                                                                    "generator": false,
                                                                    "expression": false
                                                                  }
                                                                }
                                                              },
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "AssignmentExpression",
                                                                  "operator": "=",
                                                                  "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "MemberExpression",
                                                                      "computed": true,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "cursorReqs"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "i"
                                                                      }
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "onerror"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "FunctionExpression",
                                                                    "id": null,
                                                                    "params": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "e"
                                                                      }
                                                                    ],
                                                                    "defaults": [],
                                                                    "body": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "ThrowStatement",
                                                                          "argument": {
                                                                            "type": "Literal",
                                                                            "value": "Could not open Cursor"
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "rest": null,
                                                                    "generator": false,
                                                                    "expression": false
                                                                  }
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "rest": null,
                                                          "generator": false,
                                                          "expression": false
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "i"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          },
                                          "rest": null,
                                          "generator": false,
                                          "expression": false
                                        }
                                      }
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "req"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "onerror"
                                          }
                                        },
                                        "right": {
                                          "type": "FunctionExpression",
                                          "id": null,
                                          "params": [],
                                          "defaults": [],
                                          "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ThrowStatement",
                                                "argument": {
                                                  "type": "Literal",
                                                  "value": "Could not open database"
                                                }
                                              }
                                            ]
                                          },
                                          "rest": null,
                                          "generator": false,
                                          "expression": false
                                        }
                                      }
                                    }
                                  ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                              },
                              "kind": "init"
                            },
                            {
                              "type": "Property",
                              "key": {
                                "type": "Literal",
                                "value": "1000 cursors, 1 read per cursor"
                              },
                              "value": {
                                "type": "FunctionExpression",
                                "id": null,
                                "params": [],
                                "defaults": [],
                                "body": {
                                  "type": "BlockStatement",
                                  "body": [
                                    {
                                      "type": "VariableDeclaration",
                                      "declarations": [
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "req"
                                          },
                                          "init": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "MemberExpression",
                                              "computed": false,
                                              "object": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "window"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "indexedDB"
                                                }
                                              },
                                              "property": {
                                                "type": "Identifier",
                                                "name": "open"
                                              }
                                            },
                                            "arguments": [
                                              {
                                                "type": "Literal",
                                                "value": "IndexedDBPerf"
                                              }
                                            ]
                                          }
                                        }
                                      ],
                                      "kind": "var"
                                    },
                                    {
                                      "type": "VariableDeclaration",
                                      "declarations": [
                                        {
                                          "type": "VariableDeclarator",
                                          "id": {
                                            "type": "Identifier",
                                            "name": "readCount"
                                          },
                                          "init": {
                                            "type": "Literal",
                                            "value": 0
                                          }
                                        }
                                      ],
                                      "kind": "var"
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "req"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "onsuccess"
                                          }
                                        },
                                        "right": {
                                          "type": "FunctionExpression",
                                          "id": null,
                                          "params": [],
                                          "defaults": [],
                                          "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                  {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "db"
                                                    },
                                                    "init": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "req"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "result"
                                                      }
                                                    }
                                                  }
                                                ],
                                                "kind": "var"
                                              },
                                              {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                  {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "transaction"
                                                    },
                                                    "init": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "db"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "transaction"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "ArrayExpression",
                                                          "elements": [
                                                            {
                                                              "type": "Literal",
                                                              "value": "Table1"
                                                            }
                                                          ]
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": "readonly"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ],
                                                "kind": "var"
                                              },
                                              {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                  {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "objStore"
                                                    },
                                                    "init": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "transaction"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "objectStore"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Literal",
                                                          "value": "Table1"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ],
                                                "kind": "var"
                                              },
                                              {
                                                "type": "VariableDeclaration",
                                                "declarations": [
                                                  {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "cursorReqs"
                                                    },
                                                    "init": {
                                                      "type": "ArrayExpression",
                                                      "elements": []
                                                    }
                                                  },
                                                  {
                                                    "type": "VariableDeclarator",
                                                    "id": {
                                                      "type": "Identifier",
                                                      "name": "cursorDoneCount"
                                                    },
                                                    "init": {
                                                      "type": "Literal",
                                                      "value": 0
                                                    }
                                                  }
                                                ],
                                                "kind": "var"
                                              },
                                              {
                                                "type": "ForStatement",
                                                "init": {
                                                  "type": "VariableDeclaration",
                                                  "declarations": [
                                                    {
                                                      "type": "VariableDeclarator",
                                                      "id": {
                                                        "type": "Identifier",
                                                        "name": "i"
                                                      },
                                                      "init": {
                                                        "type": "Literal",
                                                        "value": 0
                                                      }
                                                    }
                                                  ],
                                                  "kind": "var"
                                                },
                                                "test": {
                                                  "type": "BinaryExpression",
                                                  "operator": "<",
                                                  "left": {
                                                    "type": "Identifier",
                                                    "name": "i"
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": 1000
                                                  }
                                                },
                                                "update": {
                                                  "type": "UpdateExpression",
                                                  "operator": "++",
                                                  "argument": {
                                                    "type": "Identifier",
                                                    "name": "i"
                                                  },
                                                  "prefix": false
                                                },
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "FunctionExpression",
                                                          "id": null,
                                                          "params": [
                                                            {
                                                              "type": "Identifier",
                                                              "name": "i"
                                                            }
                                                          ],
                                                          "defaults": [],
                                                          "body": {
                                                            "type": "BlockStatement",
                                                            "body": [
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "AssignmentExpression",
                                                                  "operator": "=",
                                                                  "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": true,
                                                                    "object": {
                                                                      "type": "Identifier",
                                                                      "name": "cursorReqs"
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "i"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "CallExpression",
                                                                    "callee": {
                                                                      "type": "MemberExpression",
                                                                      "computed": false,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "objStore"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "openCursor"
                                                                      }
                                                                    },
                                                                    "arguments": [
                                                                      {
                                                                        "type": "CallExpression",
                                                                        "callee": {
                                                                          "type": "MemberExpression",
                                                                          "computed": false,
                                                                          "object": {
                                                                            "type": "Identifier",
                                                                            "name": "IDBKeyRange"
                                                                          },
                                                                          "property": {
                                                                            "type": "Identifier",
                                                                            "name": "bound"
                                                                          }
                                                                        },
                                                                        "arguments": [
                                                                          {
                                                                            "type": "Identifier",
                                                                            "name": "i"
                                                                          },
                                                                          {
                                                                            "type": "Identifier",
                                                                            "name": "i"
                                                                          }
                                                                        ]
                                                                      },
                                                                      {
                                                                        "type": "Literal",
                                                                        "value": "next"
                                                                      }
                                                                    ]
                                                                  }
                                                                }
                                                              },
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "AssignmentExpression",
                                                                  "operator": "=",
                                                                  "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "MemberExpression",
                                                                      "computed": true,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "cursorReqs"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "i"
                                                                      }
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "onsuccess"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "FunctionExpression",
                                                                    "id": null,
                                                                    "params": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "e"
                                                                      }
                                                                    ],
                                                                    "defaults": [],
                                                                    "body": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "IfStatement",
                                                                          "test": {
                                                                            "type": "MemberExpression",
                                                                            "computed": false,
                                                                            "object": {
                                                                              "type": "MemberExpression",
                                                                              "computed": true,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "cursorReqs"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "i"
                                                                              }
                                                                            },
                                                                            "property": {
                                                                              "type": "Identifier",
                                                                              "name": "result"
                                                                            }
                                                                          },
                                                                          "consequent": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "ExpressionStatement",
                                                                                "expression": {
                                                                                  "type": "CallExpression",
                                                                                  "callee": {
                                                                                    "type": "MemberExpression",
                                                                                    "computed": true,
                                                                                    "object": {
                                                                                      "type": "MemberExpression",
                                                                                      "computed": false,
                                                                                      "object": {
                                                                                        "type": "MemberExpression",
                                                                                        "computed": true,
                                                                                        "object": {
                                                                                          "type": "Identifier",
                                                                                          "name": "cursorReqs"
                                                                                        },
                                                                                        "property": {
                                                                                          "type": "Identifier",
                                                                                          "name": "i"
                                                                                        }
                                                                                      },
                                                                                      "property": {
                                                                                        "type": "Identifier",
                                                                                        "name": "result"
                                                                                      }
                                                                                    },
                                                                                    "property": {
                                                                                      "type": "Literal",
                                                                                      "value": "continue"
                                                                                    }
                                                                                  },
                                                                                  "arguments": []
                                                                                }
                                                                              }
                                                                            ]
                                                                          },
                                                                          "alternate": {
                                                                            "type": "BlockStatement",
                                                                            "body": [
                                                                              {
                                                                                "type": "IfStatement",
                                                                                "test": {
                                                                                  "type": "BinaryExpression",
                                                                                  "operator": ">=",
                                                                                  "left": {
                                                                                    "type": "UpdateExpression",
                                                                                    "operator": "++",
                                                                                    "argument": {
                                                                                      "type": "Identifier",
                                                                                      "name": "cursorDoneCount"
                                                                                    },
                                                                                    "prefix": true
                                                                                  },
                                                                                  "right": {
                                                                                    "type": "Literal",
                                                                                    "value": 1000
                                                                                  }
                                                                                },
                                                                                "consequent": {
                                                                                  "type": "BlockStatement",
                                                                                  "body": [
                                                                                    {
                                                                                      "type": "ExpressionStatement",
                                                                                      "expression": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "db"
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "close"
                                                                                          }
                                                                                        },
                                                                                        "arguments": []
                                                                                      }
                                                                                    },
                                                                                    {
                                                                                      "type": "ExpressionStatement",
                                                                                      "expression": {
                                                                                        "type": "CallExpression",
                                                                                        "callee": {
                                                                                          "type": "MemberExpression",
                                                                                          "computed": false,
                                                                                          "object": {
                                                                                            "type": "Identifier",
                                                                                            "name": "deferred"
                                                                                          },
                                                                                          "property": {
                                                                                            "type": "Identifier",
                                                                                            "name": "resolve"
                                                                                          }
                                                                                        },
                                                                                        "arguments": []
                                                                                      }
                                                                                    }
                                                                                  ]
                                                                                },
                                                                                "alternate": null
                                                                              }
                                                                            ]
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "rest": null,
                                                                    "generator": false,
                                                                    "expression": false
                                                                  }
                                                                }
                                                              },
                                                              {
                                                                "type": "ExpressionStatement",
                                                                "expression": {
                                                                  "type": "AssignmentExpression",
                                                                  "operator": "=",
                                                                  "left": {
                                                                    "type": "MemberExpression",
                                                                    "computed": false,
                                                                    "object": {
                                                                      "type": "MemberExpression",
                                                                      "computed": true,
                                                                      "object": {
                                                                        "type": "Identifier",
                                                                        "name": "cursorReqs"
                                                                      },
                                                                      "property": {
                                                                        "type": "Identifier",
                                                                        "name": "i"
                                                                      }
                                                                    },
                                                                    "property": {
                                                                      "type": "Identifier",
                                                                      "name": "onerror"
                                                                    }
                                                                  },
                                                                  "right": {
                                                                    "type": "FunctionExpression",
                                                                    "id": null,
                                                                    "params": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "e"
                                                                      }
                                                                    ],
                                                                    "defaults": [],
                                                                    "body": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "ThrowStatement",
                                                                          "argument": {
                                                                            "type": "Literal",
                                                                            "value": "Could not open Cursor"
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "rest": null,
                                                                    "generator": false,
                                                                    "expression": false
                                                                  }
                                                                }
                                                              }
                                                            ]
                                                          },
                                                          "rest": null,
                                                          "generator": false,
                                                          "expression": false
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "i"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            ]
                                          },
                                          "rest": null,
                                          "generator": false,
                                          "expression": false
                                        }
                                      }
                                    },
                                    {
                                      "type": "ExpressionStatement",
                                      "expression": {
                                        "type": "AssignmentExpression",
                                        "operator": "=",
                                        "left": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "req"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "onerror"
                                          }
                                        },
                                        "right": {
                                          "type": "FunctionExpression",
                                          "id": null,
                                          "params": [],
                                          "defaults": [],
                                          "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ThrowStatement",
                                                "argument": {
                                                  "type": "Literal",
                                                  "value": "Could not open database"
                                                }
                                              }
                                            ]
                                          },
                                          "rest": null,
                                          "generator": false,
                                          "expression": false
                                        }
                                      }
                                    }
                                  ]
                                },
                                "rest": null,
                                "generator": false,
                                "expression": false
                              },
                              "kind": "init"
                            }
                          ]
                        },
                        "kind": "init"
                      }
                    ]
                  }
                }
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        },
        "arguments": [
          {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "MemberExpression",
              "computed": false,
              "object": {
                "type": "Identifier",
                "name": "window"
              },
              "property": {
                "type": "Identifier",
                "name": "IndexedDBPerf"
              }
            },
            "property": {
              "type": "Identifier",
              "name": "suites"
            }
          }
        ]
      }
    }
  ]
}
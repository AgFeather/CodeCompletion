{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "FunctionExpression",
          "id": null,
          "params": [],
          "defaults": [],
          "body": {
            "type": "BlockStatement",
            "body": [
              {
                "type": "VariableDeclaration",
                "declarations": [
                  {
                    "type": "VariableDeclarator",
                    "id": {
                      "type": "Identifier",
                      "name": "getTestArray"
                    },
                    "init": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "a"
                                },
                                "init": {
                                  "type": "ArrayExpression",
                                  "elements": [
                                    {
                                      "type": "Literal",
                                      "value": 0
                                    },
                                    {
                                      "type": "Literal",
                                      "value": 1
                                    },
                                    {
                                      "type": "Literal",
                                      "value": 2
                                    },
                                    {
                                      "type": "Literal",
                                      "value": 3
                                    }
                                  ]
                                }
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "UnaryExpression",
                              "operator": "delete",
                              "argument": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                  "type": "Identifier",
                                  "name": "a"
                                },
                                "property": {
                                  "type": "Literal",
                                  "value": 1
                                }
                              },
                              "prefix": true
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "UnaryExpression",
                              "operator": "delete",
                              "argument": {
                                "type": "MemberExpression",
                                "computed": true,
                                "object": {
                                  "type": "Identifier",
                                  "name": "a"
                                },
                                "property": {
                                  "type": "Literal",
                                  "value": 2
                                }
                              },
                              "prefix": true
                            }
                          },
                          {
                            "type": "ReturnStatement",
                            "argument": {
                              "type": "Identifier",
                              "name": "a"
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                ],
                "kind": "var"
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "describe"
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "Array"
                    },
                    {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "it"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "should flatten a multidimensional array"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "arr"
                                            },
                                            "init": {
                                              "type": "ArrayExpression",
                                              "elements": [
                                                {
                                                  "type": "Literal",
                                                  "value": 1
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 2
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 3
                                                },
                                                {
                                                  "type": "ArrayExpression",
                                                  "elements": [
                                                    {
                                                      "type": "Literal",
                                                      "value": 4
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 5
                                                    },
                                                    {
                                                      "type": "ArrayExpression",
                                                      "elements": [
                                                        {
                                                          "type": "Literal",
                                                          "value": 6
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 7
                                                        },
                                                        {
                                                          "type": "ArrayExpression",
                                                          "elements": [
                                                            {
                                                              "type": "Literal",
                                                              "value": 8
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "ArrayExpression",
                                                  "elements": [
                                                    {
                                                      "type": "ArrayExpression",
                                                      "elements": [
                                                        {
                                                          "type": "ArrayExpression",
                                                          "elements": [
                                                            {
                                                              "type": "ArrayExpression",
                                                              "elements": [
                                                                {
                                                                  "type": "ArrayExpression",
                                                                  "elements": [
                                                                    {
                                                                      "type": "Literal",
                                                                      "value": 9
                                                                    }
                                                                  ]
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "arr"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "flatten"
                                                    }
                                                  },
                                                  "arguments": []
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toEqual"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "ArrayExpression",
                                              "elements": [
                                                {
                                                  "type": "Literal",
                                                  "value": 1
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 2
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 3
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 4
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 5
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 6
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 7
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 8
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 9
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "it"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "should flatten arguments"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "test"
                                            },
                                            "init": {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "Array"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "flatten"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "arguments"
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "test"
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": 1
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 2
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 3
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toEqual"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "ArrayExpression",
                                              "elements": [
                                                {
                                                  "type": "Literal",
                                                  "value": 1
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 2
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 3
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "test"
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "ArrayExpression",
                                                      "elements": [
                                                        {
                                                          "type": "Literal",
                                                          "value": 1
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 2
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 3
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toEqual"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "ArrayExpression",
                                              "elements": [
                                                {
                                                  "type": "Literal",
                                                  "value": 1
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 2
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 3
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "Identifier",
                                                    "name": "test"
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": 1
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 2
                                                    },
                                                    {
                                                      "type": "ArrayExpression",
                                                      "elements": [
                                                        {
                                                          "type": "Literal",
                                                          "value": 3
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toEqual"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "ArrayExpression",
                                              "elements": [
                                                {
                                                  "type": "Literal",
                                                  "value": 1
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 2
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 3
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "it"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "should filter an array"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "array"
                                            },
                                            "init": {
                                              "type": "ArrayExpression",
                                              "elements": [
                                                {
                                                  "type": "Literal",
                                                  "value": 1
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 2
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 3
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 0
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 0
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 0
                                                }
                                              ]
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "arr"
                                            },
                                            "init": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "array"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "concat"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "ArrayExpression",
                                                      "elements": [
                                                        {
                                                          "type": "Literal",
                                                          "value": false
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": null
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 4
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "filter"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "Identifier",
                                                    "name": "Type"
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "isNumber"
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "arr"
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toEqual"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "array"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "concat"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": 4
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "it"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "filter should skip deleted elements"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "i"
                                            },
                                            "init": {
                                              "type": "Literal",
                                              "value": 0
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "getTestArray"
                                              },
                                              "arguments": []
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "filter"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "UpdateExpression",
                                                      "operator": "++",
                                                      "argument": {
                                                        "type": "Identifier",
                                                        "name": "i"
                                                      },
                                                      "prefix": false
                                                    }
                                                  },
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "Literal",
                                                      "value": true
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "i"
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toEqual"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": 2
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "it"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "should clean an array from undefined and null values"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "array"
                                            },
                                            "init": {
                                              "type": "ArrayExpression",
                                              "elements": [
                                                {
                                                  "type": "Literal",
                                                  "value": null
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 1
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 0
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": false
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": "foo"
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "undefined"
                                                }
                                              ]
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "arr"
                                            },
                                            "init": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "array"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "clean"
                                                }
                                              },
                                              "arguments": []
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "arr"
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toEqual"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "ArrayExpression",
                                              "elements": [
                                                {
                                                  "type": "Literal",
                                                  "value": 1
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 0
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": true
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": false
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": "foo"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "it"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "should return a mapping of an array"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "arr"
                                            },
                                            "init": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ArrayExpression",
                                                  "elements": [
                                                    {
                                                      "type": "Literal",
                                                      "value": 1
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 2
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 3
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 0
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 0
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 0
                                                    }
                                                  ]
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "map"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "FunctionExpression",
                                                  "id": null,
                                                  "params": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "item"
                                                    }
                                                  ],
                                                  "defaults": [],
                                                  "body": {
                                                    "type": "BlockStatement",
                                                    "body": [
                                                      {
                                                        "type": "ReturnStatement",
                                                        "argument": {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "Identifier",
                                                            "name": "item"
                                                          },
                                                          "right": {
                                                            "type": "Literal",
                                                            "value": 1
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  },
                                                  "rest": null,
                                                  "generator": false,
                                                  "expression": false
                                                }
                                              ]
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "arr"
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toEqual"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "ArrayExpression",
                                              "elements": [
                                                {
                                                  "type": "Literal",
                                                  "value": 2
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 3
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 4
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 1
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 1
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 1
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "it"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "map should skip deleted elements"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "i"
                                            },
                                            "init": {
                                              "type": "Literal",
                                              "value": 0
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "getTestArray"
                                              },
                                              "arguments": []
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "map"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "UpdateExpression",
                                                      "operator": "++",
                                                      "argument": {
                                                        "type": "Identifier",
                                                        "name": "i"
                                                      },
                                                      "prefix": false
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "i"
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toEqual"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": 2
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "it"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "should return true if every item matches the comparator, otherwise false"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ArrayExpression",
                                                      "elements": [
                                                        {
                                                          "type": "Literal",
                                                          "value": 1
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 2
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 3
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 0
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 0
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 0
                                                        }
                                                      ]
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "every"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "Type"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "isNumber"
                                                      }
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toBeTruthy"
                                            }
                                          },
                                          "arguments": []
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ArrayExpression",
                                                      "elements": [
                                                        {
                                                          "type": "Literal",
                                                          "value": "1"
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 2
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 3
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 0
                                                        }
                                                      ]
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "every"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "Type"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "isNumber"
                                                      }
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toBeFalsy"
                                            }
                                          },
                                          "arguments": []
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "it"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "every should skip deleted elements"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "i"
                                            },
                                            "init": {
                                              "type": "Literal",
                                              "value": 0
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "getTestArray"
                                              },
                                              "arguments": []
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "every"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "UpdateExpression",
                                                      "operator": "++",
                                                      "argument": {
                                                        "type": "Identifier",
                                                        "name": "i"
                                                      },
                                                      "prefix": false
                                                    }
                                                  },
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "Literal",
                                                      "value": true
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "i"
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toEqual"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": 2
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "it"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "should return true if some of the items in the array match the comparator, otherwise false"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ArrayExpression",
                                                      "elements": [
                                                        {
                                                          "type": "Literal",
                                                          "value": "1"
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 2
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 3
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 0
                                                        }
                                                      ]
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "some"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "Type"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "isNumber"
                                                      }
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toBeTruthy"
                                            }
                                          },
                                          "arguments": []
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "ArrayExpression",
                                                          "elements": [
                                                            {
                                                              "type": "Literal",
                                                              "value": 1
                                                            },
                                                            {
                                                              "type": "Literal",
                                                              "value": 2
                                                            },
                                                            {
                                                              "type": "Literal",
                                                              "value": 3
                                                            },
                                                            {
                                                              "type": "Literal",
                                                              "value": 0
                                                            },
                                                            {
                                                              "type": "Literal",
                                                              "value": 0
                                                            },
                                                            {
                                                              "type": "Literal",
                                                              "value": 0
                                                            }
                                                          ]
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "map"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Identifier",
                                                          "name": "String"
                                                        }
                                                      ]
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "some"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "Identifier",
                                                        "name": "Type"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "isNumber"
                                                      }
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toBeFalsy"
                                            }
                                          },
                                          "arguments": []
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "it"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "some should skip deleted elements"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "i"
                                            },
                                            "init": {
                                              "type": "Literal",
                                              "value": 0
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "a"
                                            },
                                            "init": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "getTestArray"
                                              },
                                              "arguments": []
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "UnaryExpression",
                                          "operator": "delete",
                                          "argument": {
                                            "type": "MemberExpression",
                                            "computed": true,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "a"
                                            },
                                            "property": {
                                              "type": "Literal",
                                              "value": 0
                                            }
                                          },
                                          "prefix": true
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "a"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "some"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "value"
                                                },
                                                {
                                                  "type": "Identifier",
                                                  "name": "index"
                                                }
                                              ],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "AssignmentExpression",
                                                      "operator": "=",
                                                      "left": {
                                                        "type": "Identifier",
                                                        "name": "i"
                                                      },
                                                      "right": {
                                                        "type": "Identifier",
                                                        "name": "index"
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "ReturnStatement",
                                                    "argument": {
                                                      "type": "Literal",
                                                      "value": true
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "i"
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toEqual"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": 3
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "it"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "should return the index of the item"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ArrayExpression",
                                                      "elements": [
                                                        {
                                                          "type": "Literal",
                                                          "value": 1
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 2
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 3
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 0
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 0
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 0
                                                        }
                                                      ]
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "indexOf"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": 0
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toEqual"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": 3
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "it"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "should return -1 if the item is not found in the array"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ArrayExpression",
                                                      "elements": [
                                                        {
                                                          "type": "Literal",
                                                          "value": 1
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 2
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 3
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 0
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 0
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 0
                                                        }
                                                      ]
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "indexOf"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "not found"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toEqual"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "UnaryExpression",
                                              "operator": "-",
                                              "argument": {
                                                "type": "Literal",
                                                "value": 1
                                              },
                                              "prefix": true
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "it"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "should remove all items in the array that match the specified item"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "arr"
                                            },
                                            "init": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ArrayExpression",
                                                  "elements": [
                                                    {
                                                      "type": "Literal",
                                                      "value": 1
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 2
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 3
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 0
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 0
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 0
                                                    }
                                                  ]
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "erase"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": 0
                                                }
                                              ]
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "arr"
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toEqual"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "ArrayExpression",
                                              "elements": [
                                                {
                                                  "type": "Literal",
                                                  "value": 1
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 2
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 3
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "it"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "should return true if the array contains the specified item"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ArrayExpression",
                                                      "elements": [
                                                        {
                                                          "type": "Literal",
                                                          "value": 1
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 2
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 3
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 0
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 0
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 0
                                                        }
                                                      ]
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "contains"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": 0
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toBeTruthy"
                                            }
                                          },
                                          "arguments": []
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "it"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "should return false if the array does not contain the specified item"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ArrayExpression",
                                                      "elements": [
                                                        {
                                                          "type": "Literal",
                                                          "value": 0
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 1
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 2
                                                        }
                                                      ]
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "contains"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "not found"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toBeFalsy"
                                            }
                                          },
                                          "arguments": []
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "it"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "should associate an array with a specified array"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "obj"
                                            },
                                            "init": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ArrayExpression",
                                                  "elements": [
                                                    {
                                                      "type": "Literal",
                                                      "value": 1
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 2
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 3
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 0
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 0
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 0
                                                    }
                                                  ]
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "associate"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "ArrayExpression",
                                                  "elements": [
                                                    {
                                                      "type": "Literal",
                                                      "value": "a"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "b"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "c"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "d"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "obj"
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toEqual"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "ObjectExpression",
                                              "properties": [
                                                {
                                                  "type": "Property",
                                                  "key": {
                                                    "type": "Identifier",
                                                    "name": "a"
                                                  },
                                                  "value": {
                                                    "type": "Literal",
                                                    "value": 1
                                                  },
                                                  "kind": "init"
                                                },
                                                {
                                                  "type": "Property",
                                                  "key": {
                                                    "type": "Identifier",
                                                    "name": "b"
                                                  },
                                                  "value": {
                                                    "type": "Literal",
                                                    "value": 2
                                                  },
                                                  "kind": "init"
                                                },
                                                {
                                                  "type": "Property",
                                                  "key": {
                                                    "type": "Identifier",
                                                    "name": "c"
                                                  },
                                                  "value": {
                                                    "type": "Literal",
                                                    "value": 3
                                                  },
                                                  "kind": "init"
                                                },
                                                {
                                                  "type": "Property",
                                                  "key": {
                                                    "type": "Identifier",
                                                    "name": "d"
                                                  },
                                                  "value": {
                                                    "type": "Literal",
                                                    "value": 0
                                                  },
                                                  "kind": "init"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "it"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "should append to an array"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "a"
                                            },
                                            "init": {
                                              "type": "ArrayExpression",
                                              "elements": [
                                                {
                                                  "type": "Literal",
                                                  "value": 1
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 2
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 4
                                                }
                                              ]
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "b"
                                            },
                                            "init": {
                                              "type": "ArrayExpression",
                                              "elements": [
                                                {
                                                  "type": "Literal",
                                                  "value": 2
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 3
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 4
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 5
                                                }
                                              ]
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "a"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "append"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "b"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "a"
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toEqual"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "ArrayExpression",
                                              "elements": [
                                                {
                                                  "type": "Literal",
                                                  "value": 1
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 2
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 4
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 2
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 3
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 4
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 5
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "b"
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toEqual"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "ArrayExpression",
                                              "elements": [
                                                {
                                                  "type": "Literal",
                                                  "value": 2
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 3
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 4
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 5
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          },
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "isType"
                                },
                                "init": {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "type"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ReturnStatement",
                                        "argument": {
                                          "type": "FunctionExpression",
                                          "id": null,
                                          "params": [
                                            {
                                              "type": "Identifier",
                                              "name": "obj"
                                            }
                                          ],
                                          "defaults": [],
                                          "body": {
                                            "type": "BlockStatement",
                                            "body": [
                                              {
                                                "type": "ReturnStatement",
                                                "argument": {
                                                  "type": "BinaryExpression",
                                                  "operator": "==",
                                                  "left": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "Identifier",
                                                      "name": "typeOf"
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Identifier",
                                                        "name": "obj"
                                                      }
                                                    ]
                                                  },
                                                  "right": {
                                                    "type": "Identifier",
                                                    "name": "type"
                                                  }
                                                }
                                              }
                                            ]
                                          },
                                          "rest": null,
                                          "generator": false,
                                          "expression": false
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "it"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "should link an array items to a new object according to the specified matchers"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "el"
                                            },
                                            "init": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "document"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "createElement"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": "div"
                                                }
                                              ]
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "assoc2"
                                            },
                                            "init": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ArrayExpression",
                                                  "elements": [
                                                    {
                                                      "type": "Literal",
                                                      "value": 100
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": "Hello"
                                                    },
                                                    {
                                                      "type": "ObjectExpression",
                                                      "properties": [
                                                        {
                                                          "type": "Property",
                                                          "key": {
                                                            "type": "Identifier",
                                                            "name": "foo"
                                                          },
                                                          "value": {
                                                            "type": "Literal",
                                                            "value": "bar"
                                                          },
                                                          "kind": "init"
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "el"
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": false
                                                    }
                                                  ]
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "link"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "ObjectExpression",
                                                  "properties": [
                                                    {
                                                      "type": "Property",
                                                      "key": {
                                                        "type": "Identifier",
                                                        "name": "myNumber"
                                                      },
                                                      "value": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "Identifier",
                                                          "name": "isType"
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Literal",
                                                            "value": "number"
                                                          }
                                                        ]
                                                      },
                                                      "kind": "init"
                                                    },
                                                    {
                                                      "type": "Property",
                                                      "key": {
                                                        "type": "Identifier",
                                                        "name": "myElement"
                                                      },
                                                      "value": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "Identifier",
                                                          "name": "isType"
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Literal",
                                                            "value": "element"
                                                          }
                                                        ]
                                                      },
                                                      "kind": "init"
                                                    },
                                                    {
                                                      "type": "Property",
                                                      "key": {
                                                        "type": "Identifier",
                                                        "name": "myObject"
                                                      },
                                                      "value": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "Identifier",
                                                          "name": "isType"
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Literal",
                                                            "value": "object"
                                                          }
                                                        ]
                                                      },
                                                      "kind": "init"
                                                    },
                                                    {
                                                      "type": "Property",
                                                      "key": {
                                                        "type": "Identifier",
                                                        "name": "myString"
                                                      },
                                                      "value": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "Identifier",
                                                          "name": "isType"
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Literal",
                                                            "value": "string"
                                                          }
                                                        ]
                                                      },
                                                      "kind": "init"
                                                    },
                                                    {
                                                      "type": "Property",
                                                      "key": {
                                                        "type": "Identifier",
                                                        "name": "myBoolean"
                                                      },
                                                      "value": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "Identifier",
                                                          "name": "isType"
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Literal",
                                                            "value": "boolean"
                                                          }
                                                        ]
                                                      },
                                                      "kind": "init"
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "assoc2"
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toEqual"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "ObjectExpression",
                                              "properties": [
                                                {
                                                  "type": "Property",
                                                  "key": {
                                                    "type": "Identifier",
                                                    "name": "myNumber"
                                                  },
                                                  "value": {
                                                    "type": "Literal",
                                                    "value": 100
                                                  },
                                                  "kind": "init"
                                                },
                                                {
                                                  "type": "Property",
                                                  "key": {
                                                    "type": "Identifier",
                                                    "name": "myElement"
                                                  },
                                                  "value": {
                                                    "type": "Identifier",
                                                    "name": "el"
                                                  },
                                                  "kind": "init"
                                                },
                                                {
                                                  "type": "Property",
                                                  "key": {
                                                    "type": "Identifier",
                                                    "name": "myObject"
                                                  },
                                                  "value": {
                                                    "type": "ObjectExpression",
                                                    "properties": [
                                                      {
                                                        "type": "Property",
                                                        "key": {
                                                          "type": "Identifier",
                                                          "name": "foo"
                                                        },
                                                        "value": {
                                                          "type": "Literal",
                                                          "value": "bar"
                                                        },
                                                        "kind": "init"
                                                      }
                                                    ]
                                                  },
                                                  "kind": "init"
                                                },
                                                {
                                                  "type": "Property",
                                                  "key": {
                                                    "type": "Identifier",
                                                    "name": "myString"
                                                  },
                                                  "value": {
                                                    "type": "Literal",
                                                    "value": "Hello"
                                                  },
                                                  "kind": "init"
                                                },
                                                {
                                                  "type": "Property",
                                                  "key": {
                                                    "type": "Identifier",
                                                    "name": "myBoolean"
                                                  },
                                                  "value": {
                                                    "type": "Literal",
                                                    "value": false
                                                  },
                                                  "kind": "init"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "it"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "should extend an array"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "a"
                                            },
                                            "init": {
                                              "type": "ArrayExpression",
                                              "elements": [
                                                {
                                                  "type": "Literal",
                                                  "value": 1
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 2
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 4
                                                }
                                              ]
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "b"
                                            },
                                            "init": {
                                              "type": "ArrayExpression",
                                              "elements": [
                                                {
                                                  "type": "Literal",
                                                  "value": 2
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 3
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 4
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 5
                                                }
                                              ]
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "a"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "extend"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "b"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "a"
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toEqual"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "ArrayExpression",
                                              "elements": [
                                                {
                                                  "type": "Literal",
                                                  "value": 1
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 2
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 4
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 2
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 3
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 4
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 5
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "b"
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toEqual"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "ArrayExpression",
                                              "elements": [
                                                {
                                                  "type": "Literal",
                                                  "value": 2
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 3
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 4
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 5
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "it"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "should append an array"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "a"
                                            },
                                            "init": {
                                              "type": "ArrayExpression",
                                              "elements": [
                                                {
                                                  "type": "Literal",
                                                  "value": 1
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 2
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 4
                                                }
                                              ]
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "b"
                                            },
                                            "init": {
                                              "type": "ArrayExpression",
                                              "elements": [
                                                {
                                                  "type": "Literal",
                                                  "value": 2
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 3
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 4
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 5
                                                }
                                              ]
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "a"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "append"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "b"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "a"
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toEqual"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "ArrayExpression",
                                              "elements": [
                                                {
                                                  "type": "Literal",
                                                  "value": 1
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 2
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 4
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 2
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 3
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 4
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 5
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "b"
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toEqual"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "ArrayExpression",
                                              "elements": [
                                                {
                                                  "type": "Literal",
                                                  "value": 2
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 3
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 4
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 5
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "it"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "should combine an array"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "arr"
                                            },
                                            "init": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ArrayExpression",
                                                  "elements": [
                                                    {
                                                      "type": "Literal",
                                                      "value": 1
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 2
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 3
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 4
                                                    }
                                                  ]
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "combine"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "ArrayExpression",
                                                  "elements": [
                                                    {
                                                      "type": "Literal",
                                                      "value": 3
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 1
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 4
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 5
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 6
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 7
                                                    }
                                                  ]
                                                }
                                              ]
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "arr"
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toEqual"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "ArrayExpression",
                                              "elements": [
                                                {
                                                  "type": "Literal",
                                                  "value": 1
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 2
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 3
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 4
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 5
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 6
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 7
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "it"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "should include only new items"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "arr"
                                            },
                                            "init": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ArrayExpression",
                                                      "elements": [
                                                        {
                                                          "type": "Literal",
                                                          "value": 1
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 2
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 3
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 4
                                                        }
                                                      ]
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "include"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": 1
                                                    }
                                                  ]
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "include"
                                                }
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Literal",
                                                  "value": 5
                                                }
                                              ]
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "arr"
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toEqual"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "ArrayExpression",
                                              "elements": [
                                                {
                                                  "type": "Literal",
                                                  "value": 1
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 2
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 3
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 4
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 5
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "it"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "should return the last item in the array"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ArrayExpression",
                                                      "elements": [
                                                        {
                                                          "type": "Literal",
                                                          "value": 1
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 2
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 3
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 0
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 0
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 0
                                                        }
                                                      ]
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "getLast"
                                                    }
                                                  },
                                                  "arguments": []
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toEqual"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": 0
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ArrayExpression",
                                                      "elements": [
                                                        {
                                                          "type": "Literal",
                                                          "value": 3
                                                        }
                                                      ]
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "getLast"
                                                    }
                                                  },
                                                  "arguments": []
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toEqual"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": 3
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "it"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "should return null if there are no items"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ArrayExpression",
                                                      "elements": []
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "getLast"
                                                    }
                                                  },
                                                  "arguments": []
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toEqual"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": null
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "it"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "should empty the array"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "arr"
                                            },
                                            "init": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "ArrayExpression",
                                                  "elements": [
                                                    {
                                                      "type": "Literal",
                                                      "value": 1
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 2
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 3
                                                    },
                                                    {
                                                      "type": "Literal",
                                                      "value": 4
                                                    }
                                                  ]
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "empty"
                                                }
                                              },
                                              "arguments": []
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "arr"
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toEqual"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "ArrayExpression",
                                              "elements": []
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "describe"
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "Array Color Methods"
                    },
                    {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "it"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "should return null if the length of the array is not 3"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ArrayExpression",
                                                      "elements": []
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "hexToRgb"
                                                    }
                                                  },
                                                  "arguments": []
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toBeNull"
                                            }
                                          },
                                          "arguments": []
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "it"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "should return a CSS rgb string"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ArrayExpression",
                                                      "elements": [
                                                        {
                                                          "type": "Literal",
                                                          "value": "0"
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": "0"
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": "0"
                                                        }
                                                      ]
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "hexToRgb"
                                                    }
                                                  },
                                                  "arguments": []
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toEqual"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": "rgb(0,0,0)"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "it"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "should support shorthand hex"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ArrayExpression",
                                                      "elements": [
                                                        {
                                                          "type": "Literal",
                                                          "value": "c"
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": "c"
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": "c"
                                                        }
                                                      ]
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "hexToRgb"
                                                    }
                                                  },
                                                  "arguments": []
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toEqual"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": "rgb(204,204,204)"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "it"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "should return an array with 16-based numbers when passed true"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ArrayExpression",
                                                      "elements": [
                                                        {
                                                          "type": "Literal",
                                                          "value": "ff"
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": "ff"
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": "ff"
                                                        }
                                                      ]
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "hexToRgb"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": true
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toEqual"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "ArrayExpression",
                                              "elements": [
                                                {
                                                  "type": "Literal",
                                                  "value": 255
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 255
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": 255
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "it"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "should return null if the array does not have at least 3 times"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ArrayExpression",
                                                      "elements": [
                                                        {
                                                          "type": "Literal",
                                                          "value": 0
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 1
                                                        }
                                                      ]
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "rgbToHex"
                                                    }
                                                  },
                                                  "arguments": []
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toBeNull"
                                            }
                                          },
                                          "arguments": []
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "it"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "should return a css hexadecimal string"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ArrayExpression",
                                                      "elements": [
                                                        {
                                                          "type": "Literal",
                                                          "value": "255"
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": "0"
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": "0"
                                                        }
                                                      ]
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "rgbToHex"
                                                    }
                                                  },
                                                  "arguments": []
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toEqual"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": "#ff0000"
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ArrayExpression",
                                                      "elements": [
                                                        {
                                                          "type": "Literal",
                                                          "value": 0
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 0
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 255
                                                        }
                                                      ]
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "rgbToHex"
                                                    }
                                                  },
                                                  "arguments": []
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toEqual"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": "#0000ff"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "it"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "should return an array with hexadecimal string items"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ArrayExpression",
                                                      "elements": [
                                                        {
                                                          "type": "Literal",
                                                          "value": 0
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 255
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 0
                                                        }
                                                      ]
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "rgbToHex"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Literal",
                                                      "value": true
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toEqual"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "ArrayExpression",
                                              "elements": [
                                                {
                                                  "type": "Literal",
                                                  "value": "00"
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": "ff"
                                                },
                                                {
                                                  "type": "Literal",
                                                  "value": "00"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "it"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "should return `transparent` if the fourth item is 0 and first param is not true"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ArrayExpression",
                                                      "elements": [
                                                        {
                                                          "type": "Literal",
                                                          "value": 0
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 0
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 0
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 0
                                                        }
                                                      ]
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "rgbToHex"
                                                    }
                                                  },
                                                  "arguments": []
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toEqual"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": "transparent"
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "describe"
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "Array.getRandom"
                    },
                    {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "it"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "should get a random element from an array"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "a"
                                            },
                                            "init": {
                                              "type": "ArrayExpression",
                                              "elements": [
                                                {
                                                  "type": "Literal",
                                                  "value": 1
                                                }
                                              ]
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "Identifier",
                                                      "name": "a"
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "getRandom"
                                                    }
                                                  },
                                                  "arguments": []
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toEqual"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": 1
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "a"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "push"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": 2
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "a"
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toContain"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "a"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "getRandom"
                                                }
                                              },
                                              "arguments": []
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "a"
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toContain"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "a"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "getRandom"
                                                }
                                              },
                                              "arguments": []
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "a"
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toContain"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "a"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "getRandom"
                                                }
                                              },
                                              "arguments": []
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "Identifier",
                                                  "name": "a"
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toContain"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "MemberExpression",
                                                "computed": false,
                                                "object": {
                                                  "type": "Identifier",
                                                  "name": "a"
                                                },
                                                "property": {
                                                  "type": "Identifier",
                                                  "name": "getRandom"
                                                }
                                              },
                                              "arguments": []
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "describe"
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "Array.pick"
                    },
                    {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "it"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "should pick a value that is not null from the array"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ArrayExpression",
                                                      "elements": [
                                                        {
                                                          "type": "Literal",
                                                          "value": null
                                                        },
                                                        {
                                                          "type": "Identifier",
                                                          "name": "undefined"
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": true
                                                        },
                                                        {
                                                          "type": "Literal",
                                                          "value": 1
                                                        }
                                                      ]
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "pick"
                                                    }
                                                  },
                                                  "arguments": []
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toEqual"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": true
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "it"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "should return null"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "ArrayExpression",
                                                      "elements": []
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "pick"
                                                    }
                                                  },
                                                  "arguments": []
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toBeNull"
                                            }
                                          },
                                          "arguments": []
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  ]
                }
              },
              {
                "type": "ExpressionStatement",
                "expression": {
                  "type": "CallExpression",
                  "callee": {
                    "type": "Identifier",
                    "name": "describe"
                  },
                  "arguments": [
                    {
                      "type": "Literal",
                      "value": "Array"
                    },
                    {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "describe"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "Array.map"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "it"
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": "should return an array with the same length"
                                            },
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "Identifier",
                                                            "name": "expect"
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "MemberExpression",
                                                              "computed": false,
                                                              "object": {
                                                                "type": "CallExpression",
                                                                "callee": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "ArrayExpression",
                                                                    "elements": [
                                                                      {
                                                                        "type": "Literal",
                                                                        "value": 1
                                                                      },
                                                                      {
                                                                        "type": "Literal",
                                                                        "value": 2
                                                                      },
                                                                      {
                                                                        "type": "Literal",
                                                                        "value": 3
                                                                      },
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "undefined"
                                                                      }
                                                                    ]
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "map"
                                                                  }
                                                                },
                                                                "arguments": [
                                                                  {
                                                                    "type": "FunctionExpression",
                                                                    "id": null,
                                                                    "params": [
                                                                      {
                                                                        "type": "Identifier",
                                                                        "name": "v"
                                                                      }
                                                                    ],
                                                                    "defaults": [],
                                                                    "body": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "ReturnStatement",
                                                                          "argument": {
                                                                            "type": "Identifier",
                                                                            "name": "v"
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "rest": null,
                                                                    "generator": false,
                                                                    "expression": false
                                                                  }
                                                                ]
                                                              },
                                                              "property": {
                                                                "type": "Identifier",
                                                                "name": "length"
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "toEqual"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Literal",
                                                          "value": 4
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "it"
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": "shoud return an empty array when the thisArg does not has a length property"
                                            },
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "Identifier",
                                                            "name": "expect"
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "CallExpression",
                                                              "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                  "type": "MemberExpression",
                                                                  "computed": false,
                                                                  "object": {
                                                                    "type": "ArrayExpression",
                                                                    "elements": []
                                                                  },
                                                                  "property": {
                                                                    "type": "Identifier",
                                                                    "name": "map"
                                                                  }
                                                                },
                                                                "property": {
                                                                  "type": "Identifier",
                                                                  "name": "call"
                                                                }
                                                              },
                                                              "arguments": [
                                                                {
                                                                  "type": "ObjectExpression",
                                                                  "properties": []
                                                                },
                                                                {
                                                                  "type": "FunctionExpression",
                                                                  "id": null,
                                                                  "params": [],
                                                                  "defaults": [],
                                                                  "body": {
                                                                    "type": "BlockStatement",
                                                                    "body": [
                                                                      {
                                                                        "type": "ReturnStatement",
                                                                        "argument": {
                                                                          "type": "Literal",
                                                                          "value": 1
                                                                        }
                                                                      }
                                                                    ]
                                                                  },
                                                                  "rest": null,
                                                                  "generator": false,
                                                                  "expression": false
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "toEqual"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "ArrayExpression",
                                                          "elements": []
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "it"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "should accept thisArgs without length property"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "VariableDeclaration",
                                        "declarations": [
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "object"
                                            },
                                            "init": {
                                              "type": "ObjectExpression",
                                              "properties": []
                                            }
                                          },
                                          {
                                            "type": "VariableDeclarator",
                                            "id": {
                                              "type": "Identifier",
                                              "name": "fn"
                                            },
                                            "init": {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": []
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          }
                                        ],
                                        "kind": "var"
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "ArrayExpression",
                                                        "elements": []
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "every"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "call"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "object"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "fn"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toBe"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": true
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "ArrayExpression",
                                                        "elements": []
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "filter"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "call"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "object"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "fn"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toEqual"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "ArrayExpression",
                                              "elements": []
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "ArrayExpression",
                                                        "elements": []
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "indexOf"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "call"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "object"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toEqual"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "UnaryExpression",
                                              "operator": "-",
                                              "argument": {
                                                "type": "Literal",
                                                "value": 1
                                              },
                                              "prefix": true
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "ArrayExpression",
                                                        "elements": []
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "map"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "call"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "object"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "fn"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toEqual"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "ArrayExpression",
                                              "elements": []
                                            }
                                          ]
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "CallExpression",
                                              "callee": {
                                                "type": "Identifier",
                                                "name": "expect"
                                              },
                                              "arguments": [
                                                {
                                                  "type": "CallExpression",
                                                  "callee": {
                                                    "type": "MemberExpression",
                                                    "computed": false,
                                                    "object": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "ArrayExpression",
                                                        "elements": []
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "some"
                                                      }
                                                    },
                                                    "property": {
                                                      "type": "Identifier",
                                                      "name": "call"
                                                    }
                                                  },
                                                  "arguments": [
                                                    {
                                                      "type": "Identifier",
                                                      "name": "object"
                                                    },
                                                    {
                                                      "type": "Identifier",
                                                      "name": "fn"
                                                    }
                                                  ]
                                                }
                                              ]
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "toBe"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": false
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "Identifier",
                                "name": "describe"
                              },
                              "arguments": [
                                {
                                  "type": "Literal",
                                  "value": "Array.filter"
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "Identifier",
                                            "name": "it"
                                          },
                                          "arguments": [
                                            {
                                              "type": "Literal",
                                              "value": "should return the original item, and not any mutations."
                                            },
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "result"
                                                        },
                                                        "init": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "ArrayExpression",
                                                              "elements": [
                                                                {
                                                                  "type": "Literal",
                                                                  "value": 0
                                                                },
                                                                {
                                                                  "type": "Literal",
                                                                  "value": 1
                                                                },
                                                                {
                                                                  "type": "Literal",
                                                                  "value": 2
                                                                }
                                                              ]
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "filter"
                                                            }
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "FunctionExpression",
                                                              "id": null,
                                                              "params": [
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "num"
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "i"
                                                                },
                                                                {
                                                                  "type": "Identifier",
                                                                  "name": "array"
                                                                }
                                                              ],
                                                              "defaults": [],
                                                              "body": {
                                                                "type": "BlockStatement",
                                                                "body": [
                                                                  {
                                                                    "type": "IfStatement",
                                                                    "test": {
                                                                      "type": "BinaryExpression",
                                                                      "operator": "==",
                                                                      "left": {
                                                                        "type": "Identifier",
                                                                        "name": "num"
                                                                      },
                                                                      "right": {
                                                                        "type": "Literal",
                                                                        "value": 1
                                                                      }
                                                                    },
                                                                    "consequent": {
                                                                      "type": "BlockStatement",
                                                                      "body": [
                                                                        {
                                                                          "type": "ExpressionStatement",
                                                                          "expression": {
                                                                            "type": "AssignmentExpression",
                                                                            "operator": "=",
                                                                            "left": {
                                                                              "type": "MemberExpression",
                                                                              "computed": true,
                                                                              "object": {
                                                                                "type": "Identifier",
                                                                                "name": "array"
                                                                              },
                                                                              "property": {
                                                                                "type": "Identifier",
                                                                                "name": "i"
                                                                              }
                                                                            },
                                                                            "right": {
                                                                              "type": "Literal",
                                                                              "value": "mutation"
                                                                            }
                                                                          }
                                                                        },
                                                                        {
                                                                          "type": "ReturnStatement",
                                                                          "argument": {
                                                                            "type": "Literal",
                                                                            "value": true
                                                                          }
                                                                        }
                                                                      ]
                                                                    },
                                                                    "alternate": null
                                                                  }
                                                                ]
                                                              },
                                                              "rest": null,
                                                              "generator": false,
                                                              "expression": false
                                                            }
                                                          ]
                                                        }
                                                      }
                                                    ],
                                                    "kind": "var"
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "Identifier",
                                                            "name": "expect"
                                                          },
                                                          "arguments": [
                                                            {
                                                              "type": "MemberExpression",
                                                              "computed": true,
                                                              "object": {
                                                                "type": "Identifier",
                                                                "name": "result"
                                                              },
                                                              "property": {
                                                                "type": "Literal",
                                                                "value": 0
                                                              }
                                                            }
                                                          ]
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "toEqual"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "Literal",
                                                          "value": 1
                                                        }
                                                      ]
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  ]
                }
              }
            ]
          },
          "rest": null,
          "generator": false,
          "expression": false
        },
        "arguments": []
      }
    }
  ]
}
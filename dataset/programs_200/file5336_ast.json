{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "MemberExpression",
          "computed": false,
          "object": {
            "type": "MemberExpression",
            "computed": false,
            "object": {
              "type": "Identifier",
              "name": "CKEDITOR"
            },
            "property": {
              "type": "Identifier",
              "name": "dialog"
            }
          },
          "property": {
            "type": "Identifier",
            "name": "add"
          }
        },
        "arguments": [
          {
            "type": "Literal",
            "value": "sourcedialog"
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [
              {
                "type": "Identifier",
                "name": "editor"
              }
            ],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "size"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "CallExpression",
                            "callee": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "CKEDITOR"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "document"
                                }
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "getWindow"
                              }
                            },
                            "arguments": []
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "getViewPaneSize"
                          }
                        },
                        "arguments": []
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "width"
                      },
                      "init": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "Math"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "min"
                          }
                        },
                        "arguments": [
                          {
                            "type": "BinaryExpression",
                            "operator": "-",
                            "left": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "size"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "width"
                              }
                            },
                            "right": {
                              "type": "Literal",
                              "value": 70
                            }
                          },
                          {
                            "type": "Literal",
                            "value": 800
                          }
                        ]
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "height"
                      },
                      "init": {
                        "type": "BinaryExpression",
                        "operator": "/",
                        "left": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "Identifier",
                            "name": "size"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "height"
                          }
                        },
                        "right": {
                          "type": "Literal",
                          "value": 1.5
                        }
                      }
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "oldData"
                      },
                      "init": null
                    }
                  ],
                  "kind": "var"
                },
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "ObjectExpression",
                    "properties": [
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "title"
                        },
                        "value": {
                          "type": "MemberExpression",
                          "computed": false,
                          "object": {
                            "type": "MemberExpression",
                            "computed": false,
                            "object": {
                              "type": "MemberExpression",
                              "computed": false,
                              "object": {
                                "type": "Identifier",
                                "name": "editor"
                              },
                              "property": {
                                "type": "Identifier",
                                "name": "lang"
                              }
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "sourcedialog"
                            }
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "title"
                          }
                        },
                        "kind": "init"
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "minWidth"
                        },
                        "value": {
                          "type": "Literal",
                          "value": 100
                        },
                        "kind": "init"
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "minHeight"
                        },
                        "value": {
                          "type": "Literal",
                          "value": 100
                        },
                        "kind": "init"
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "onShow"
                        },
                        "value": {
                          "type": "FunctionExpression",
                          "id": null,
                          "params": [],
                          "defaults": [],
                          "body": {
                            "type": "BlockStatement",
                            "body": [
                              {
                                "type": "ExpressionStatement",
                                "expression": {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "ThisExpression"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "setValueOf"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "Literal",
                                      "value": "main"
                                    },
                                    {
                                      "type": "Literal",
                                      "value": "data"
                                    },
                                    {
                                      "type": "AssignmentExpression",
                                      "operator": "=",
                                      "left": {
                                        "type": "Identifier",
                                        "name": "oldData"
                                      },
                                      "right": {
                                        "type": "CallExpression",
                                        "callee": {
                                          "type": "MemberExpression",
                                          "computed": false,
                                          "object": {
                                            "type": "Identifier",
                                            "name": "editor"
                                          },
                                          "property": {
                                            "type": "Identifier",
                                            "name": "getData"
                                          }
                                        },
                                        "arguments": []
                                      }
                                    }
                                  ]
                                }
                              }
                            ]
                          },
                          "rest": null,
                          "generator": false,
                          "expression": false
                        },
                        "kind": "init"
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "onOk"
                        },
                        "value": {
                          "type": "CallExpression",
                          "callee": {
                            "type": "FunctionExpression",
                            "id": null,
                            "params": [],
                            "defaults": [],
                            "body": {
                              "type": "BlockStatement",
                              "body": [
                                {
                                  "type": "FunctionDeclaration",
                                  "id": {
                                    "type": "Identifier",
                                    "name": "setData"
                                  },
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "dialog"
                                    },
                                    {
                                      "type": "Identifier",
                                      "name": "newData"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "editor"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "focus"
                                            }
                                          },
                                          "arguments": []
                                        }
                                      },
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "editor"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "setData"
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "type": "Identifier",
                                              "name": "newData"
                                            },
                                            {
                                              "type": "FunctionExpression",
                                              "id": null,
                                              "params": [],
                                              "defaults": [],
                                              "body": {
                                                "type": "BlockStatement",
                                                "body": [
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "dialog"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "hide"
                                                        }
                                                      },
                                                      "arguments": []
                                                    }
                                                  },
                                                  {
                                                    "type": "VariableDeclaration",
                                                    "declarations": [
                                                      {
                                                        "type": "VariableDeclarator",
                                                        "id": {
                                                          "type": "Identifier",
                                                          "name": "range"
                                                        },
                                                        "init": {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "editor"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "createRange"
                                                            }
                                                          },
                                                          "arguments": []
                                                        }
                                                      }
                                                    ],
                                                    "kind": "var"
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "range"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "moveToElementEditStart"
                                                        }
                                                      },
                                                      "arguments": [
                                                        {
                                                          "type": "CallExpression",
                                                          "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                              "type": "Identifier",
                                                              "name": "editor"
                                                            },
                                                            "property": {
                                                              "type": "Identifier",
                                                              "name": "editable"
                                                            }
                                                          },
                                                          "arguments": []
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  {
                                                    "type": "ExpressionStatement",
                                                    "expression": {
                                                      "type": "CallExpression",
                                                      "callee": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                          "type": "Identifier",
                                                          "name": "range"
                                                        },
                                                        "property": {
                                                          "type": "Identifier",
                                                          "name": "select"
                                                        }
                                                      },
                                                      "arguments": []
                                                    }
                                                  }
                                                ]
                                              },
                                              "rest": null,
                                              "generator": false,
                                              "expression": false
                                            }
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                },
                                {
                                  "type": "ReturnStatement",
                                  "argument": {
                                    "type": "FunctionExpression",
                                    "id": null,
                                    "params": [],
                                    "defaults": [],
                                    "body": {
                                      "type": "BlockStatement",
                                      "body": [
                                        {
                                          "type": "VariableDeclaration",
                                          "declarations": [
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "newData"
                                              },
                                              "init": {
                                                "type": "CallExpression",
                                                "callee": {
                                                  "type": "MemberExpression",
                                                  "computed": false,
                                                  "object": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                      "type": "MemberExpression",
                                                      "computed": false,
                                                      "object": {
                                                        "type": "ThisExpression"
                                                      },
                                                      "property": {
                                                        "type": "Identifier",
                                                        "name": "getValueOf"
                                                      }
                                                    },
                                                    "arguments": [
                                                      {
                                                        "type": "Literal",
                                                        "value": "main"
                                                      },
                                                      {
                                                        "type": "Literal",
                                                        "value": "data"
                                                      }
                                                    ]
                                                  },
                                                  "property": {
                                                    "type": "Identifier",
                                                    "name": "replace"
                                                  }
                                                },
                                                "arguments": [
                                                  {
                                                    "type": "Literal",
                                                    "value": {}
                                                  },
                                                  {
                                                    "type": "Literal",
                                                    "value": ""
                                                  }
                                                ]
                                              }
                                            },
                                            {
                                              "type": "VariableDeclarator",
                                              "id": {
                                                "type": "Identifier",
                                                "name": "that"
                                              },
                                              "init": {
                                                "type": "ThisExpression"
                                              }
                                            }
                                          ],
                                          "kind": "var"
                                        },
                                        {
                                          "type": "IfStatement",
                                          "test": {
                                            "type": "BinaryExpression",
                                            "operator": "===",
                                            "left": {
                                              "type": "Identifier",
                                              "name": "newData"
                                            },
                                            "right": {
                                              "type": "Identifier",
                                              "name": "oldData"
                                            }
                                          },
                                          "consequent": {
                                            "type": "ReturnStatement",
                                            "argument": {
                                              "type": "Literal",
                                              "value": true
                                            }
                                          },
                                          "alternate": null
                                        },
                                        {
                                          "type": "ExpressionStatement",
                                          "expression": {
                                            "type": "CallExpression",
                                            "callee": {
                                              "type": "Identifier",
                                              "name": "setTimeout"
                                            },
                                            "arguments": [
                                              {
                                                "type": "FunctionExpression",
                                                "id": null,
                                                "params": [],
                                                "defaults": [],
                                                "body": {
                                                  "type": "BlockStatement",
                                                  "body": [
                                                    {
                                                      "type": "ExpressionStatement",
                                                      "expression": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                          "type": "Identifier",
                                                          "name": "setData"
                                                        },
                                                        "arguments": [
                                                          {
                                                            "type": "Identifier",
                                                            "name": "that"
                                                          },
                                                          {
                                                            "type": "Identifier",
                                                            "name": "newData"
                                                          }
                                                        ]
                                                      }
                                                    }
                                                  ]
                                                },
                                                "rest": null,
                                                "generator": false,
                                                "expression": false
                                              }
                                            ]
                                          }
                                        },
                                        {
                                          "type": "ReturnStatement",
                                          "argument": {
                                            "type": "Literal",
                                            "value": false
                                          }
                                        }
                                      ]
                                    },
                                    "rest": null,
                                    "generator": false,
                                    "expression": false
                                  }
                                }
                              ]
                            },
                            "rest": null,
                            "generator": false,
                            "expression": false
                          },
                          "arguments": []
                        },
                        "kind": "init"
                      },
                      {
                        "type": "Property",
                        "key": {
                          "type": "Identifier",
                          "name": "contents"
                        },
                        "value": {
                          "type": "ArrayExpression",
                          "elements": [
                            {
                              "type": "ObjectExpression",
                              "properties": [
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "id"
                                  },
                                  "value": {
                                    "type": "Literal",
                                    "value": "main"
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "label"
                                  },
                                  "value": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "MemberExpression",
                                      "computed": false,
                                      "object": {
                                        "type": "MemberExpression",
                                        "computed": false,
                                        "object": {
                                          "type": "Identifier",
                                          "name": "editor"
                                        },
                                        "property": {
                                          "type": "Identifier",
                                          "name": "lang"
                                        }
                                      },
                                      "property": {
                                        "type": "Identifier",
                                        "name": "sourcedialog"
                                      }
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "title"
                                    }
                                  },
                                  "kind": "init"
                                },
                                {
                                  "type": "Property",
                                  "key": {
                                    "type": "Identifier",
                                    "name": "elements"
                                  },
                                  "value": {
                                    "type": "ArrayExpression",
                                    "elements": [
                                      {
                                        "type": "ObjectExpression",
                                        "properties": [
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "type"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "textarea"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "id"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "data"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "dir"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "ltr"
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Identifier",
                                              "name": "inputStyle"
                                            },
                                            "value": {
                                              "type": "BinaryExpression",
                                              "operator": "+",
                                              "left": {
                                                "type": "BinaryExpression",
                                                "operator": "+",
                                                "left": {
                                                  "type": "BinaryExpression",
                                                  "operator": "+",
                                                  "left": {
                                                    "type": "BinaryExpression",
                                                    "operator": "+",
                                                    "left": {
                                                      "type": "BinaryExpression",
                                                      "operator": "+",
                                                      "left": {
                                                        "type": "BinaryExpression",
                                                        "operator": "+",
                                                        "left": {
                                                          "type": "BinaryExpression",
                                                          "operator": "+",
                                                          "left": {
                                                            "type": "BinaryExpression",
                                                            "operator": "+",
                                                            "left": {
                                                              "type": "Literal",
                                                              "value": "cursor:auto;"
                                                            },
                                                            "right": {
                                                              "type": "Literal",
                                                              "value": "width:"
                                                            }
                                                          },
                                                          "right": {
                                                            "type": "Identifier",
                                                            "name": "width"
                                                          }
                                                        },
                                                        "right": {
                                                          "type": "Literal",
                                                          "value": "px;"
                                                        }
                                                      },
                                                      "right": {
                                                        "type": "Literal",
                                                        "value": "height:"
                                                      }
                                                    },
                                                    "right": {
                                                      "type": "Identifier",
                                                      "name": "height"
                                                    }
                                                  },
                                                  "right": {
                                                    "type": "Literal",
                                                    "value": "px;"
                                                  }
                                                },
                                                "right": {
                                                  "type": "Literal",
                                                  "value": "tab-size:4;"
                                                }
                                              },
                                              "right": {
                                                "type": "Literal",
                                                "value": "text-align:left;"
                                              }
                                            },
                                            "kind": "init"
                                          },
                                          {
                                            "type": "Property",
                                            "key": {
                                              "type": "Literal",
                                              "value": "class"
                                            },
                                            "value": {
                                              "type": "Literal",
                                              "value": "cke_source"
                                            },
                                            "kind": "init"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  "kind": "init"
                                }
                              ]
                            }
                          ]
                        },
                        "kind": "init"
                      }
                    ]
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    }
  ]
}
{
  "type": "Program",
  "body": [
    {
      "type": "ExpressionStatement",
      "expression": {
        "type": "CallExpression",
        "callee": {
          "type": "Identifier",
          "name": "define"
        },
        "arguments": [
          {
            "type": "ArrayExpression",
            "elements": []
          },
          {
            "type": "FunctionExpression",
            "id": null,
            "params": [],
            "defaults": [],
            "body": {
              "type": "BlockStatement",
              "body": [
                {
                  "type": "FunctionDeclaration",
                  "id": {
                    "type": "Identifier",
                    "name": "StopPropagation"
                  },
                  "params": [],
                  "defaults": [],
                  "body": {
                    "type": "BlockStatement",
                    "body": []
                  },
                  "rest": null,
                  "generator": false,
                  "expression": false
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "computed": false,
                      "object": {
                        "type": "MemberExpression",
                        "computed": false,
                        "object": {
                          "type": "Identifier",
                          "name": "StopPropagation"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "prototype"
                        }
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "bind"
                      }
                    },
                    "right": {
                      "type": "FunctionExpression",
                      "id": null,
                      "params": [
                        {
                          "type": "Identifier",
                          "name": "decorated"
                        },
                        {
                          "type": "Identifier",
                          "name": "container"
                        },
                        {
                          "type": "Identifier",
                          "name": "$container"
                        }
                      ],
                      "defaults": [],
                      "body": {
                        "type": "BlockStatement",
                        "body": [
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "Identifier",
                                  "name": "decorated"
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "call"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "ThisExpression"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "container"
                                },
                                {
                                  "type": "Identifier",
                                  "name": "$container"
                                }
                              ]
                            }
                          },
                          {
                            "type": "VariableDeclaration",
                            "declarations": [
                              {
                                "type": "VariableDeclarator",
                                "id": {
                                  "type": "Identifier",
                                  "name": "stoppedEvents"
                                },
                                "init": {
                                  "type": "ArrayExpression",
                                  "elements": [
                                    {
                                      "type": "Literal",
                                      "value": "blur"
                                    },
                                    {
                                      "type": "Literal",
                                      "value": "change"
                                    },
                                    {
                                      "type": "Literal",
                                      "value": "click"
                                    },
                                    {
                                      "type": "Literal",
                                      "value": "dblclick"
                                    },
                                    {
                                      "type": "Literal",
                                      "value": "focus"
                                    },
                                    {
                                      "type": "Literal",
                                      "value": "focusin"
                                    },
                                    {
                                      "type": "Literal",
                                      "value": "focusout"
                                    },
                                    {
                                      "type": "Literal",
                                      "value": "input"
                                    },
                                    {
                                      "type": "Literal",
                                      "value": "keydown"
                                    },
                                    {
                                      "type": "Literal",
                                      "value": "keyup"
                                    },
                                    {
                                      "type": "Literal",
                                      "value": "keypress"
                                    },
                                    {
                                      "type": "Literal",
                                      "value": "mousedown"
                                    },
                                    {
                                      "type": "Literal",
                                      "value": "mouseenter"
                                    },
                                    {
                                      "type": "Literal",
                                      "value": "mouseleave"
                                    },
                                    {
                                      "type": "Literal",
                                      "value": "mousemove"
                                    },
                                    {
                                      "type": "Literal",
                                      "value": "mouseover"
                                    },
                                    {
                                      "type": "Literal",
                                      "value": "mouseup"
                                    },
                                    {
                                      "type": "Literal",
                                      "value": "search"
                                    },
                                    {
                                      "type": "Literal",
                                      "value": "touchend"
                                    },
                                    {
                                      "type": "Literal",
                                      "value": "touchstart"
                                    }
                                  ]
                                }
                              }
                            ],
                            "kind": "var"
                          },
                          {
                            "type": "ExpressionStatement",
                            "expression": {
                              "type": "CallExpression",
                              "callee": {
                                "type": "MemberExpression",
                                "computed": false,
                                "object": {
                                  "type": "MemberExpression",
                                  "computed": false,
                                  "object": {
                                    "type": "ThisExpression"
                                  },
                                  "property": {
                                    "type": "Identifier",
                                    "name": "$selection"
                                  }
                                },
                                "property": {
                                  "type": "Identifier",
                                  "name": "on"
                                }
                              },
                              "arguments": [
                                {
                                  "type": "CallExpression",
                                  "callee": {
                                    "type": "MemberExpression",
                                    "computed": false,
                                    "object": {
                                      "type": "Identifier",
                                      "name": "stoppedEvents"
                                    },
                                    "property": {
                                      "type": "Identifier",
                                      "name": "join"
                                    }
                                  },
                                  "arguments": [
                                    {
                                      "type": "Literal",
                                      "value": " "
                                    }
                                  ]
                                },
                                {
                                  "type": "FunctionExpression",
                                  "id": null,
                                  "params": [
                                    {
                                      "type": "Identifier",
                                      "name": "evt"
                                    }
                                  ],
                                  "defaults": [],
                                  "body": {
                                    "type": "BlockStatement",
                                    "body": [
                                      {
                                        "type": "ExpressionStatement",
                                        "expression": {
                                          "type": "CallExpression",
                                          "callee": {
                                            "type": "MemberExpression",
                                            "computed": false,
                                            "object": {
                                              "type": "Identifier",
                                              "name": "evt"
                                            },
                                            "property": {
                                              "type": "Identifier",
                                              "name": "stopPropagation"
                                            }
                                          },
                                          "arguments": []
                                        }
                                      }
                                    ]
                                  },
                                  "rest": null,
                                  "generator": false,
                                  "expression": false
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "rest": null,
                      "generator": false,
                      "expression": false
                    }
                  }
                },
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "Identifier",
                    "name": "StopPropagation"
                  }
                }
              ]
            },
            "rest": null,
            "generator": false,
            "expression": false
          }
        ]
      }
    }
  ]
}